# Copyright 2022 Ericsson GmbH
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
{{- include "eric-vtaprecorder.labels" . | indent 4 }}
  annotations:
{{- include "eric-vtaprecorder.config-annotations" . | indent 4 }}
spec:
  {{- include "eric-vtaprecorder.ipfamilies" . | indent 2 }}
  ports:
  - name: sink-port
    protocol: UDP
    port: {{ .Values.spec.sinkPort }}
    targetPort: sink
  - name: dtls-port
    protocol: UDP
    port: {{ .Values.spec.dtlsPort }}
    targetPort: dtls
  - name: control-port
    protocol: TCP
    port: {{ .Values.spec.controlPort }}
    targetPort: control
  selector:
    app: {{ .Values.service.name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.service.name }}
  labels:
{{- include "eric-vtaprecorder.labels" . | indent 4 }}
    app: {{ .Values.service.name }}
  annotations:
{{- include "eric-vtaprecorder.config-annotations" . | indent 4 }}
spec:
  replicas: {{ .Values.spec.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  serviceName: {{ .Values.service.name }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.service.name }}-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.persistence.persistentVolumeClaim.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.persistentVolumeClaim.size }}
  template:
    metadata:
      labels:
{{- include "eric-vtaprecorder.labels" . | indent 8 }}
        app: {{ .Values.service.name }}
      annotations:
{{- include "eric-vtaprecorder.config-annotations" . | indent 8 }}
    spec:
      imagePullSecrets:
      - name: {{ template "eric-vtaprecorder.pullSecrets" . }}
      volumes:
      - name: secrets-volume
        projected:
          sources:
          - secret: 
              name: cert-probe-consumer
              optional: true
          - secret: 
              name: dtls-ca
              optional: true
      containers:
      - name: {{ .Values.service.name }}
        image: {{ template "eric-vtaprecorder.registryUrl" . }}/{{ .Values.imageCredentials.repoPath }}/{{ .Values.spec.image }}:{{ .Values.spec.tag }}
        workingDir: "/storage"
        imagePullPolicy:
          {{ .Values.imageCredentials.pullPolicy }}
        ports:
        - name: sink
          protocol: UDP
          containerPort: 4754
        - name: dtls
          protocol: UDP
          containerPort: 4755
        - name: control
          protocol: TCP
          containerPort: 9999
        env:
        - name: SINK_PORT
          value: {{ .Values.spec.sinkPort | quote }}
        - name: CONTROL_PORT
          value: "9999"
        - name: JVM_PARAMS
          value:  {{ .Values.jvm.parameters }}
        - name: PCAPNG_FILENAME
          value: /storage/capture.pcapng
        - name: SERVICE_ID
          value: {{ .Values.service.name }}
        - name: IP_VERSION
          value: {{ .Values.spec.ipVersion | quote}}
        livenessProbe:
          httpGet:
            path: /status
            port: 9999
          initialDelaySeconds: 4
          periodSeconds: 20
        volumeMounts:
          - mountPath: "/storage"
            name: {{ .Values.service.name }}-storage
          - mountPath: "/java-exec/certificates"
            name: secrets-volume
        resources:
          requests:
            memory: {{ .Values.spec.resources.requests.memory | quote }}
            cpu: {{ .Values.spec.resources.requests.cpu | quote }}
          limits:
            memory: {{ .Values.spec.resources.limits.memory | quote }}
            cpu: {{ .Values.spec.resources.limits.cpu | quote }}
      {{ if .Values.usage }}
      nodeSelector:
        usage: {{ .Values.usage }}
      tolerations:
      - key: usage
        operator: Equal
        value: {{ .Values.usage }}
        effect: "NoSchedule"
      {{ end }}
