################################################################################
# $Revision: 1.9 $                                                             #
#   $Author: EUSTONE $                                                         #
#     $Date: 2019-10-10 15:20:44 $                                             #
################################################################################
#                                                                              #
# (C) COPYRIGHT ERICSSON GMBH 2014-2019                                        #
#                                                                              #
# The copyright to the computer program(s) herein is the property of           #
# Ericsson GmbH, Germany.                                                      #
#                                                                              #
# The program(s) may be used and/or copied only with the written permission    #
# of Ericsson GmbH in accordance with the terms and conditions stipulated in   #
# the agreement/contract under which the program(s) have been supplied.        #
#                                                                              #
################################################################################

source [file join [file dirname [info script]] ../lib/_GEP_is_cliss_running.exp]

# -----------------------------------------------------------------------------
# Start the CLISS shell by first determening where it is running.
#
# This subroutine expects that it is already connected to the GEP Linux prompt.
#
# Input:
#  - root password
#
# Output:
#  -  0: Success, Connected to CLISS
#     1: Failure, Not able to connect to CLISS
#    -1: Timeout
#
proc GEP_start_cliss {root_password} {
    global spawn_id

    set connected 0
    set hostname "localhost"

    # Find out if CLISS is running here
    set result [GEP_is_cliss_running $hostname $root_password]
    if { $result == 0 } {

        # CLISS seems to be running on currently connected node

        # Connect to CLISS
        send -- "/opt/com/bin/cliss\r"

        expect {
            -re "command not found$" {
                # Some invalid command have been given
                exp_continue
            }
            -re "Connection to COM failed" {
                # For some reason CLISS is not responding
                exp_continue
            }
            "\n" {
                # New line received, continue waiting
                exp_continue
            }
            -re ">$" {
                # CLISS prompt
                set connected 1
            }
            -re "SC-\[12\]\[^\n\]+$" {
                # Ready for next command
            }
            -re "PL-\[0-9\]+\[^\n\]+$" {
                # Ready for next command
            }
            timeout {
                return -1
            }
        }

        # Read any pending output
        expect -re ".*"

    } elseif { $result == 1 } {

        # Cliss does not seem to be running on this node, try the peer node

        set found 0
        # Find the peer node
        send -- "cat /etc/cluster/nodes/peer/hostname\r"

        expect {
            -re "No such file or directory" {
                # Probably on a payload node, mark failure
                exp_continue
            }
            -re "(SC-\[12\])\r*\n" {
                # We found the peer node
                set hostname $expect_out(1,string);
                set found 1
                exp_continue
            }
            "\n" {
                # New line received, continue waiting
                exp_continue
            }
            -re "SC-\[12\]\[^\n\]+$" {
                # Prompt received
            }
            -re "PL-\[0-9\]+\[^\n\]+$" {
                # Prompt received
            }
            timeout {
                return -1
            }
        }

        # Read any pending output
        expect -re ".*"

        if { $found == 1 } {

            set connected_peer 0

            # Connect to the peer node
            send -- "ssh $hostname\r"

            # Wait for password request from GEP
            expect {
                "Connection closed by foreign host" {
                    # Login failed for some reason
                    return 1
                }
                "assword:" {
                    send "$root_password\r"
                    exp_continue
                }
                "\n" {
                    # New line received, continue waiting
                    exp_continue
                }
                -re "$hostname\[^\n\]+$" {
                    # We successfully logged in to the peer controller node
                    set connected_peer 1
                }
                -re "SC-\[12\]\[^\n\]+$" {
                    # Login failed for some reason
                    return 1
                }
                "(yes/no)?" {
                    send "yes\r"
                    exp_continue
                }
                timeout {
                    return -1
                }
            }

            # Read any pending output
            expect -re ".*"

            if { $connected_peer == 1 } {

                # Connected successfully to peer node

                # Connect to CLISS
                send -- "/opt/com/bin/cliss\r"

                expect {
                    -re "command not found$" {
                        # Some invalid command have been given
                        exp_continue
                    }
                    -re "Connection to COM failed" {
                        # For some reason CLISS is not responding
                        exp_continue
                    }
                    "\n" {
                        # New line received, continue waiting
                        exp_continue
                    }
                    -re ">$" {
                        # CLISS prompt
                        set connected 1
                    }
                    -re "SC-\[12\]\[^\n\]+$" {
                        # Ready for next command
                    }
                    -re "PL-\[0-9\]+\[^\n\]+$" {
                        # Ready for next command
                    }
                    timeout {
                        return -1
                    }
                }

                # Read any pending output
                expect -re ".*"

                if { $connected == 0 } {
                    # Something went wrong when connecting to CLISS
                    # We need to disconnec from the peer

                    # Send the command
                    send -- "exit\r"

                    expect {
                        "\n" {
                            # New line received, continue waiting
                            exp_continue
                        }
                        -re "SC-\[12\]\[^\n\]+$" {
                            # Prompt received
                        }
                        -re "PL-\[0-9\]+\[^\n\]+$" {
                            # Prompt received
                        }
                        timeout {
                            return -1
                        }
                    }

                    # Read any pending output
                    expect -re ".*"
                }
            }
        }

    } elseif { $result == -1 } {

        # Timeout occurred
        return -1
    }

    if { $connected == 1 } {
        return 0
    } else {
        return 1
    }
}
