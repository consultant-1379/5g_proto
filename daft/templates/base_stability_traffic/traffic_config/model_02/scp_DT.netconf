<hello xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
  <capabilities>
    <capability>urn:ietf:params:netconf:base:1.0</capability>
  </capabilities>
</hello>]]>]]>

<?xml version="1.0"?>
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:ns2="urn:com:ericsson:ecim:1.0" xmlns:ns3="http://tail-f.com/ns/netconf/actions/1.0" xmlns:ns4="urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring" xmlns:ns5="urn:ietf:params:xml:ns:netconf:notification:1.0" message-id="0">
  <edit-config>
    <target>
      <running/>
    </target>
    <config>
  <scp-function operation="replace" xmlns="urn:rdns:com:ericsson:oammodel:ericsson-scp">
    <nf-instance>
      <name>Scp-Instance-1</name>
      <nf-peer-info>
        <out-message-handling>on</out-message-handling>
      </nf-peer-info>
      <dns-profile>
        <name>dns_profile</name>
        <ip-family-resolution>ipv4</ip-family-resolution>
      </dns-profile>
      <dns-profile-ref>dns_profile</dns-profile-ref>
      <ingress-connection-profile>
        <name>default_ingress_connection_profile</name>
        <max-connection-duration>0</max-connection-duration>
        <max-concurrent-streams>2147483647</max-concurrent-streams>
        <connection-idle-timeout>3600</connection-idle-timeout>
      </ingress-connection-profile>
      <ingress-connection-profile>
        <name>default_profile</name>
        <max-connection-duration>30</max-connection-duration>
        <hpack-table-size>10000</hpack-table-size>
        <max-concurrent-streams>2147483647</max-concurrent-streams>
        <connection-idle-timeout>3600</connection-idle-timeout>
        <dscp-marking>46</dscp-marking>
      </ingress-connection-profile>
      <ingress-connection-profile-ref>default_profile</ingress-connection-profile-ref>
      <egress-connection-profile>
        <name>default_egress_connection_profile</name>
        <max-requests>16384</max-requests>
        <max-pending-requests>16384</max-pending-requests>
        <max-connections>16384</max-connections>
        <max-connection-duration>0</max-connection-duration>
        <max-concurrent-streams>2147483647</max-concurrent-streams>
        <tcp-connect-timeout>2</tcp-connect-timeout>
        <connection-idle-timeout>3600</connection-idle-timeout>
        <tcp-keepalive>
          <probes>6</probes>
          <time>5</time>
          <interval>5</interval>
        </tcp-keepalive>
        <enable-message-size-measurement>false</enable-message-size-measurement>
      </egress-connection-profile>
      <egress-connection-profile>
        <name>default_profile</name>
        <hpack-table-size>0</hpack-table-size>
        <max-requests>16384</max-requests>
        <max-pending-requests>16384</max-pending-requests>
        <max-connections>16384</max-connections>
        <max-connection-duration>0</max-connection-duration>
        <max-concurrent-streams>2147483647</max-concurrent-streams>
        <tcp-connect-timeout>2</tcp-connect-timeout>
        <connection-idle-timeout>3600</connection-idle-timeout>
        <tcp-keepalive>
          <probes>6</probes>
          <time>5</time>
          <interval>5</interval>
        </tcp-keepalive>
        <enable-message-size-measurement>true</enable-message-size-measurement>
        <dscp-marking>46</dscp-marking>
      </egress-connection-profile>
      <egress-connection-profile-ref>default_profile</egress-connection-profile-ref>
      <global-rate-limit-profile>
        <name>GRL_Profile</name>
        <sustainable-rate>9000</sustainable-rate>
        <max-burst-size>14000</max-burst-size>
        <action-reject-message>
          <status>429</status>
          <title>Limit for Own_network reached</title>
          <cause>NF_CONGESTION_RISK</cause>
          <detail>request_rate_limit</detail>
          <format>json</format>
          <retry-after-header>delay-seconds</retry-after-header>
        </action-reject-message>
      </global-rate-limit-profile>
      <message-body-limits>
        <max-bytes>16000</max-bytes>
        <max-leaves>5000</max-leaves>
        <max-nesting-depth>32</max-nesting-depth>
      </message-body-limits>
      <vtap>
        <enabled>true</enabled>
        <vtap-configuration>
          <proxy>
            <ingress>
              <name>vtapingress1</name>
              <own-network-ref>internalNetwork</own-network-ref>
              <enabled>true</enabled>
            </ingress>
            <egress>
              <name>vtapegress1</name>
              <nf-pool-ref>round_robin_nf_pool</nf-pool-ref>
              <enabled>true</enabled>
            </egress>
          </proxy>
        </vtap-configuration>
      </vtap>
      <slf-lookup-profile>
        <name>slf-lookup-profile1</name>
        <request-timeout>10000</request-timeout>
        <identity-type>supi</identity-type>
        <requester-nf-type>SMF</requester-nf-type>
        <target-nf-type>CHF</target-nf-type>
        <message-data-ref>message_data_slf</message-data-ref>
        <result-variable-name>region</result-variable-name>
        <routing-case-identity-not-found>failure-slf-cases</routing-case-identity-not-found>
        <routing-case-destination-unknown>failure-slf-cases</routing-case-destination-unknown>
        <routing-case-identity-missing>failure-slf-cases</routing-case-identity-missing>
        <routing-case-lookup-failure>failure-slf-cases</routing-case-lookup-failure>
      </slf-lookup-profile>
      <slf-lookup-profile>
        <name>slf-lookup-profile2</name>
        <request-timeout>10000</request-timeout>
        <identity-type>gpsi</identity-type>
        <requester-nf-type>AMF</requester-nf-type>
        <target-nf-type>UDM</target-nf-type>
        <message-data-ref>message_data_gpsi_slf</message-data-ref>
        <result-variable-name>region</result-variable-name>
        <routing-case-identity-not-found>failure-slf-cases</routing-case-identity-not-found>
        <routing-case-destination-unknown>failure-slf-cases</routing-case-destination-unknown>
        <routing-case-identity-missing>failure-slf-cases</routing-case-identity-missing>
        <routing-case-lookup-failure>failure-slf-cases</routing-case-lookup-failure>
      </slf-lookup-profile>
      <service-address>
        <name>internalAddress</name>
        <fqdn>scp.ericsson.se</fqdn>
        <port><SCP_WRKR_PORT></port>
        <tls-port><SCP_WRKR_TLS_PORT></tls-port>
        <ipv4-address><SCP_WRKR_IP></ipv4-address>
      </service-address>
      <own-network>
        <name>internalNetwork</name>
        <service-address-ref>internalAddress</service-address-ref>
        <in-request-screening-case-ref>caseReq</in-request-screening-case-ref>
        <out-response-screening-case-ref>caseRespOut</out-response-screening-case-ref>
        <routing-case-ref>default_routing</routing-case-ref>
        <ingress-connection-profile-ref>default_profile</ingress-connection-profile-ref>
        <global-ingress-rate-limit-profile-ref>GRL_Profile</global-ingress-rate-limit-profile-ref>
      </own-network>
      <message-data>
        <name>Discovery-nf-set-id_data</name>
        <header>3gpp-Sbi-Discovery-nf-set-id</header>
        <variable-name>setID</variable-name>
      </message-data>
      <message-data>
        <name>ServiceRequestType</name>
        <path/>
        <extractor-regex>(?P&lt;svc>nchf-convergedcharging|nchf-spendinglimitcontrol|nudm-uecm|nudm-sdm)</extractor-regex>
      </message-data>
      <message-data>
        <name>apiRoot_data</name>
        <header>3gpp-Sbi-target-apiRoot</header>
        <extractor-regex>.*</extractor-regex>
      </message-data>
      <message-data>
        <name>body_eutraLocation_ageOfLocationInformation</name>
        <body-json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/ageOfLocationInformation</body-json-pointer>
        <variable-name>ageOfLocationInformation</variable-name>
      </message-data>
      <message-data>
        <name>body_ncgi_nrCellId</name>
        <body-json-pointer>/pDUSessionChargingInformation/userLocationinfo/nrLocation/ncgi/nrCellId</body-json-pointer>
        <variable-name>nrCellId</variable-name>
      </message-data>
      <message-data>
        <name>body_nfConsumerIdentification_nodeFunctionality</name>
        <body-json-pointer>/nfConsumerIdentification/nodeFunctionality</body-json-pointer>
        <variable-name>nodeFunc</variable-name>
      </message-data>
      <message-data>
        <name>body_qoSInformation_5qi</name>
        <body-json-pointer>/pDUSessionChargingInformation/pduSessionInformation/qoSInformation/5qi</body-json-pointer>
        <variable-name>var5qi</variable-name>
      </message-data>
      <message-data>
        <name>body_serviceSpecificUnits</name>
        <body-json-pointer>/multipleUnitUsage/0/requestedUnit/serviceSpecificUnits</body-json-pointer>
        <variable-name>serviceSpecificUnits</variable-name>
      </message-data>
      <message-data>
        <name>body_servingNodeID_plmnId</name>
        <body-json-pointer>/pDUSessionChargingInformation/pduSessionInformation/servingNodeID/0/plmnId</body-json-pointer>
        <variable-name>plmnId</variable-name>
      </message-data>
      <message-data>
        <name>body_userInformation_servedGPSI</name>
        <body-json-pointer>/pDUSessionChargingInformation/userInformation/servedGPSI</body-json-pointer>
        <variable-name>servedGPSI</variable-name>
      </message-data>
      <message-data>
        <name>caf_partitionId</name>
        <path/>
        <extractor-regex>(?P&lt;pvalue>p\w\/)</extractor-regex>
      </message-data>
      <message-data>
        <name>disc_targetNfSetId_data</name>
        <header>3gpp-Sbi-Discovery-target-nf-set-id</header>
        <variable-name>DiscHeaderTargetNfSetId</variable-name>
      </message-data>
      <message-data>
        <name>disc_targetPlmn_data</name>
        <header>3gpp-sbi-discovery-target-plmn-list</header>
        <extractor-regex>({ *"mcc":"(?P&lt;mccD>\d+)" *, *"mnc":"(?P&lt;mncD>\d+)" *})</extractor-regex>
      </message-data>
      <message-data>
        <name>initialAuthority</name>
        <header>:authority</header>
        <variable-name>scpAddress</variable-name>
      </message-data>
      <message-data>
        <name>locationheader</name>
        <header>location</header>
        <extractor-regex>(?P&lt;pre>.+\/\/)([^\/]+)(?P&lt;post>\/.+\/.+)</extractor-regex>
      </message-data>
      <message-data>
        <name>message_data_gpsi_slf</name>
        <path/>
        <extractor-regex>/nudm-uecm/v1/(?P&lt;gpsi>msisdn-\d+)/.+</extractor-regex>
      </message-data>
      <message-data>
        <name>message_data_slf</name>
        <body-json-pointer>/subscriberIdentifier</body-json-pointer>
        <variable-name>supi</variable-name>
      </message-data>
      <message-data>
        <name>message_screening_data</name>
        <header>ms-header</header>
        <variable-name>ms</variable-name>
      </message-data>
      <message-data>
        <name>nf_seppsim_data</name>
        <header>3gpp-Sbi-target-apiRoot</header>
        <extractor-regex>eric-(?P&lt;nf>seppsim-p\d+?)-.+</extractor-regex>
      </message-data>
      <message-data>
        <name>operation</name>
        <path/>
        <extractor-regex>(?P&lt;operation>notify|terminate)</extractor-regex>
      </message-data>
      <message-data>
        <name>routing_binding_data</name>
        <header>3gpp-Sbi-Routing-Binding</header>
        <extractor-regex>nfset=(?P&lt;bindingNfSet>.*)</extractor-regex>
      </message-data>
      <message-data>
        <name>target-apiRoot_data</name>
        <header>3gpp-Sbi-target-apiRoot</header>
        <extractor-regex>(https?://)?eric-seppsim-p\d+-mcc-(?P&lt;mcc>\d+)-mnc-(?P&lt;mnc>\d+).*</extractor-regex>
      </message-data>
      <message-data>
        <name>target-apiRoot_data_interplmnfqdn</name>
        <header>3gpp-Sbi-target-apiRoot</header>
        <extractor-regex>^http(s?)://(?P&lt;nf>.+?).mnc(?P&lt;mnc>.+?)\.mcc(?P&lt;mcc>.+?)\.3gppnetwork\.org</extractor-regex>
      </message-data>
      <message-data>
        <name>target-apiRoot_data_tar</name>
        <header>3gpp-Sbi-target-apiRoot</header>
        <extractor-regex>(?P&lt;hostport_tar>(?P&lt;scheme_tar>.+)://(?P&lt;newAuthority_tar>[^/]+))(?P&lt;route_tar>.*)|(?P&lt;var_tar>.*)</extractor-regex>
      </message-data>
      <message-data>
        <name>x-notify_uri</name>
        <header>x-notify-uri</header>
        <extractor-regex>(?P&lt;hostport>(?P&lt;scheme>.+)://(?P&lt;newAuthority>[^/]+))(?P&lt;route>.*)|(?P&lt;notifyvar>.*)</extractor-regex>
      </message-data>
      <request-screening-case>
        <name>caseReq</name>
        <message-data-ref>Discovery-nf-set-id_data</message-data-ref>
        <message-data-ref>operation</message-data-ref>
        <message-data-ref>x-notify_uri</message-data-ref>
        <message-data-ref>target-apiRoot_data_tar</message-data-ref>
        <message-data-ref>initialAuthority</message-data-ref>
        <message-data-ref>message_screening_data</message-data-ref>
        <message-data-ref>body_nfConsumerIdentification_nodeFunctionality</message-data-ref>
        <message-data-ref>body_userInformation_servedGPSI</message-data-ref>
        <message-data-ref>body_serviceSpecificUnits</message-data-ref>
        <message-data-ref>body_qoSInformation_5qi</message-data-ref>
        <message-data-ref>body_servingNodeID_plmnId</message-data-ref>
        <message-data-ref>body_ncgi_nrCellId</message-data-ref>
        <message-data-ref>body_eutraLocation_ageOfLocationInformation</message-data-ref>
        <screening-rule>
          <name>reqInRule</name>
          <condition>not var.hostport isempty and not var.newAuthority isempty and (var.operation =='notify' or var.operation =='terminate') and var.scpAddress exists</condition>
          <screening-action>
            <name>replace_authority</name>
            <action-modify-header>
              <name>:authority</name>
              <replace-from-var-name>newAuthority</replace-from-var-name>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>replace_x-notify-uri</name>
            <action-modify-header>
              <name>x-notify-uri</name>
              <replace-from-var-name>hostport</replace-from-var-name>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>replace_path</name>
            <action-modify-header>
              <name>:path</name>
              <replace-from-var-name>route</replace-from-var-name>
            </action-modify-header>
          </screening-action>
        </screening-rule>
        <screening-rule>
          <name>reqInRule_TAR</name>
          <condition>not var.hostport_tar isempty and not var.newAuthority_tar isempty and (var.operation =='notify' or var.operation =='terminate') and var.scpAddress exists</condition>
          <screening-action>
            <name>replace_path</name>
            <action-modify-header>
              <name>:path</name>
              <replace-from-var-name>route_tar</replace-from-var-name>
            </action-modify-header>
          </screening-action>
        </screening-rule>
        <screening-rule>
          <name>rule_1</name>
          <condition>var.ms=='MS_IngressHeaders' or var.ms=='MS_Combined'</condition>
          <screening-action>
            <name>action_1</name>
            <action-add-header>
              <name>dummy-header-1</name>
              <if-exists>no-action</if-exists>
              <value>dummy-header-value-1</value>
            </action-add-header>
          </screening-action>
          <screening-action>
            <name>action_2</name>
            <action-add-header>
              <name>dummy-header-2</name>
              <if-exists>add</if-exists>
              <value>dummy-header-value-2</value>
            </action-add-header>
          </screening-action>
          <screening-action>
            <name>action_3</name>
            <action-modify-header>
              <name>dummy-header-1</name>
              <replace-value>dummy-header-value-1-appended</replace-value>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>action_4</name>
            <action-modify-header>
              <name>dummy-header-2</name>
              <append-value>-appended</append-value>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>action_5</name>
            <action-remove-header>
              <name>dummy-header-1</name>
            </action-remove-header>
          </screening-action>
        </screening-rule>
        <screening-rule>
          <name>rule_2</name>
          <condition>(var.ms=='MS_IngressBody' or var.ms=='MS_Combined') and var.nodeFunc=='SMF' and (var.servedGPSI=='msisdn-77117771' or var.servedGPSI=='msisdn-77117772' or var.servedGPSI=='msisdn-77117777' or var.servedGPSI=='msisdn-77117778')</condition>
          <screening-action>
            <name>body_action_1</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userInformation/new-key-1</json-pointer>
              <add-value>
                <value>"dummy-body-value-1"</value>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
              </add-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_2</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/pduSessionInformation/servingNodeID/0</json-pointer>
              <replace-value>
                <value>1129</value>
              </replace-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_3</name>
            <action-modify-json-body>
              <json-pointer>/nfConsumerIdentification/aRoot1/bRoot2/new-key-2</json-pointer>
              <add-value>
                <value>{"key1":"value1"}</value>
                <if-path-not-exists>no-action</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
              </add-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_4</name>
            <action-modify-json-body>
              <json-pointer>/nfConsumerIdentification/nodeFunctionality</json-pointer>
              <replace-value>
                <value>["dummy-body-value-1", "value2", 25]</value>
              </replace-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_5</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userInformation/unauthenticatedFlag</json-pointer>
              <replace-value>
                <value>false</value>
              </replace-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_7</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/globalNgenbId/n3IwfId</json-pointer>
              <append-value>
                <value>ABCD</value>
              </append-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_8</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/globalNgenbId/ngRanNodeId</json-pointer>
              <prepend-value>
                <value>Extra</value>
              </prepend-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_9</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/geographicalInformation</json-pointer>
              <append-from-var-name>
                <variable>servedGPSI</variable>
              </append-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_10</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/geodeticInformation</json-pointer>
              <prepend-from-var-name>
                <variable>servedGPSI</variable>
              </prepend-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_11</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/tai/tac</json-pointer>
              <search-replace-string>
                <search-value>ab01</search-value>
                <replace-value>ab02</replace-value>
                <case-sensitive>true</case-sensitive>
                <full-match>false</full-match>
                <search-backwards>false</search-backwards>
                <replace-all-occurrences>false</replace-all-occurrences>
              </search-replace-string>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_12</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/nrLocation/ncgi/nrCellId</json-pointer>
              <search-replace-string>
                <search-from-var-name>nrCellId</search-from-var-name>
                <replace-value>ABCabc124</replace-value>
                <case-sensitive>true</case-sensitive>
                <full-match>false</full-match>
                <search-backwards>false</search-backwards>
                <replace-all-occurrences>false</replace-all-occurrences>
              </search-replace-string>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_13</name>
            <action-modify-json-body>
              <json-pointer>/nfConsumerIdentification/nFName</json-pointer>
              <search-replace-regex>
                <search-regex>(?:[^-]+-)*([^\-]+)$</search-regex>
                <replace-value>423</replace-value>
                <replace-all-occurrences>false</replace-all-occurrences>
              </search-replace-regex>
            </action-modify-json-body>
          </screening-action>
        </screening-rule>
        <screening-rule>
          <name>rule_3</name>
          <condition>(var.ms=='MS_IngressBody' or var.ms=='MS_Combined') and var.serviceSpecificUnits==6543 and var.nrCellId=='ABCabc123'</condition>
          <screening-action>
            <name>body_action_1</name>
            <action-modify-json-body>
              <json-pointer>/new-key-1</json-pointer>
              <add-from-var-name>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
                <variable>var5qi</variable>
              </add-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_2</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/tai/plmnId</json-pointer>
              <add-from-var-name>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>replace</if-element-exists>
                <variable>plmnId</variable>
              </add-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_3</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userInformation/unauthenticatedFlag</json-pointer>
              <add-value>
                <value>true</value>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
              </add-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_4</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/ecgi/eutraCellId</json-pointer>
              <replace-from-var-name>
                <variable>nrCellId</variable>
              </replace-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_5</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/nrLocation/ageOfLocationInformation</json-pointer>
              <replace-from-var-name>
                <variable>ageOfLocationInformation</variable>
              </replace-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_6</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/unitCountInactivityTimer</json-pointer>
              <remove/>
            </action-modify-json-body>
          </screening-action>
        </screening-rule>
      </request-screening-case>
      <request-screening-case>
        <name>caseReqOut</name>
        <message-data-ref>Discovery-nf-set-id_data</message-data-ref>
        <message-data-ref>message_screening_data</message-data-ref>
        <message-data-ref>body_nfConsumerIdentification_nodeFunctionality</message-data-ref>
        <message-data-ref>body_userInformation_servedGPSI</message-data-ref>
        <message-data-ref>body_serviceSpecificUnits</message-data-ref>
        <message-data-ref>body_qoSInformation_5qi</message-data-ref>
        <message-data-ref>body_servingNodeID_plmnId</message-data-ref>
        <message-data-ref>body_ncgi_nrCellId</message-data-ref>
        <message-data-ref>body_eutraLocation_ageOfLocationInformation</message-data-ref>
        <screening-rule>
          <name>rule_1</name>
          <condition>var.ms=='MS_EgressHeaders' or var.ms=='MS_Combined'</condition>
          <screening-action>
            <name>action_1</name>
            <action-add-header>
              <name>dummy-header-1</name>
              <if-exists>no-action</if-exists>
              <value>dummy-header-value-1</value>
            </action-add-header>
          </screening-action>
          <screening-action>
            <name>action_2</name>
            <action-add-header>
              <name>dummy-header-2</name>
              <if-exists>add</if-exists>
              <value>dummy-header-value-2</value>
            </action-add-header>
          </screening-action>
          <screening-action>
            <name>action_3</name>
            <action-modify-header>
              <name>dummy-header-1</name>
              <replace-value>dummy-header-value-1-appended</replace-value>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>action_4</name>
            <action-modify-header>
              <name>dummy-header-2</name>
              <append-value>-appended</append-value>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>action_5</name>
            <action-remove-header>
              <name>dummy-header-1</name>
            </action-remove-header>
          </screening-action>
        </screening-rule>
        <screening-rule>
          <name>rule_2</name>
          <condition>(var.ms=='MS_EgressBody' or var.ms=='MS_Combined') and var.nodeFunc=='SMF' and (var.servedGPSI=='msisdn-77117771' or var.servedGPSI=='msisdn-77117772' or var.servedGPSI=='msisdn-77117777' or var.servedGPSI=='msisdn-77117778')</condition>
          <screening-action>
            <name>body_action_1</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userInformation/new-key-1</json-pointer>
              <add-value>
                <value>"dummy-body-value-1"</value>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
              </add-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_2</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/pduSessionInformation/servingNodeID/0</json-pointer>
              <replace-value>
                <value>1129</value>
              </replace-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_3</name>
            <action-modify-json-body>
              <json-pointer>/nfConsumerIdentification/aRoot1/bRoot2/new-key-2</json-pointer>
              <add-value>
                <value>{"key1":"value1"}</value>
                <if-path-not-exists>no-action</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
              </add-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_4</name>
            <action-modify-json-body>
              <json-pointer>/nfConsumerIdentification/nodeFunctionality</json-pointer>
              <replace-value>
                <value>["dummy-body-value-1", "value2", 25]</value>
              </replace-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_5</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userInformation/unauthenticatedFlag</json-pointer>
              <replace-value>
                <value>false</value>
              </replace-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_7</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/globalNgenbId/n3IwfId</json-pointer>
              <append-value>
                <value>ABCD</value>
              </append-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_8</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/globalNgenbId/ngRanNodeId</json-pointer>
              <prepend-value>
                <value>Extra</value>
              </prepend-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_9</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/geographicalInformation</json-pointer>
              <append-from-var-name>
                <variable>servedGPSI</variable>
              </append-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_10</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/geodeticInformation</json-pointer>
              <prepend-from-var-name>
                <variable>servedGPSI</variable>
              </prepend-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_11</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/tai/tac</json-pointer>
              <search-replace-string>
                <search-value>ab01</search-value>
                <replace-value>ab02</replace-value>
                <case-sensitive>true</case-sensitive>
                <full-match>false</full-match>
                <search-backwards>false</search-backwards>
                <replace-all-occurrences>false</replace-all-occurrences>
              </search-replace-string>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_12</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/nrLocation/ncgi/nrCellId</json-pointer>
              <search-replace-string>
                <search-from-var-name>nrCellId</search-from-var-name>
                <replace-value>ABCabc124</replace-value>
                <case-sensitive>true</case-sensitive>
                <full-match>false</full-match>
                <search-backwards>false</search-backwards>
                <replace-all-occurrences>false</replace-all-occurrences>
              </search-replace-string>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_13</name>
            <action-modify-json-body>
              <json-pointer>/nfConsumerIdentification/nFName</json-pointer>
              <search-replace-regex>
                <search-regex>(?:[^-]+-)*([^\-]+)$</search-regex>
                <replace-value>423</replace-value>
                <replace-all-occurrences>false</replace-all-occurrences>
              </search-replace-regex>
            </action-modify-json-body>
          </screening-action>
        </screening-rule>
        <screening-rule>
          <name>rule_3</name>
          <condition>(var.ms=='MS_EgressBody' or var.ms=='MS_Combined') and var.serviceSpecificUnits==6543 and var.nrCellId=='ABCabc123'</condition>
          <screening-action>
            <name>body_action_1</name>
            <action-modify-json-body>
              <json-pointer>/new-key-1</json-pointer>
              <add-from-var-name>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
                <variable>var5qi</variable>
              </add-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_2</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/tai/plmnId</json-pointer>
              <add-from-var-name>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>replace</if-element-exists>
                <variable>plmnId</variable>
              </add-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_3</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userInformation/unauthenticatedFlag</json-pointer>
              <add-value>
                <value>true</value>
                <if-path-not-exists>create</if-path-not-exists>
                <if-element-exists>no-action</if-element-exists>
              </add-value>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_4</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/eutraLocation/ecgi/eutraCellId</json-pointer>
              <replace-from-var-name>
                <variable>nrCellId</variable>
              </replace-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_5</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/userLocationinfo/nrLocation/ageOfLocationInformation</json-pointer>
              <replace-from-var-name>
                <variable>ageOfLocationInformation</variable>
              </replace-from-var-name>
            </action-modify-json-body>
          </screening-action>
          <screening-action>
            <name>body_action_6</name>
            <action-modify-json-body>
              <json-pointer>/pDUSessionChargingInformation/unitCountInactivityTimer</json-pointer>
              <remove/>
            </action-modify-json-body>
          </screening-action>
        </screening-rule>
      </request-screening-case>
      <response-screening-case>
        <name>caseRespOut</name>
        <message-data-ref>locationheader</message-data-ref>
        <message-data-ref>body_userInformation_servedGPSI</message-data-ref>
        <message-data-ref>body_ncgi_nrCellId</message-data-ref>
        <screening-rule>
          <name>respOutRule</name>
          <condition>not var.pre isempty and not var.post isempty</condition>
          <screening-action>
            <name>replace_location_header</name>
            <action-modify-header>
              <name>location</name>
              <replace-from-var-name>scpAddress</replace-from-var-name>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>prepend_new_location_header</name>
            <action-modify-header>
              <name>location</name>
              <prepend-from-var-name>pre</prepend-from-var-name>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>append_new_location_header</name>
            <action-modify-header>
              <name>location</name>
              <append-from-var-name>post</append-from-var-name>
            </action-modify-header>
          </screening-action>
          <screening-action>
            <name>body_action_4</name>
            <action-modify-json-body>
              <json-pointer>/defaultSingleNssais/0/sd</json-pointer>
              <prepend-value>
                <value>Extra</value>
              </prepend-value>
            </action-modify-json-body>
          </screening-action>
        </screening-rule>
      </response-screening-case>
      <routing-case>
        <name>default_routing</name>
        <message-data-ref>target-apiRoot_data</message-data-ref>
        <message-data-ref>nf_seppsim_data</message-data-ref>
        <message-data-ref>Discovery-nf-set-id_data</message-data-ref>
        <message-data-ref>message_data_gpsi_slf</message-data-ref>
        <message-data-ref>target-apiRoot_data_tar</message-data-ref>
        <message-data-ref>target-apiRoot_data_interplmnfqdn</message-data-ref>
        <message-data-ref>ServiceRequestType</message-data-ref>
        <message-data-ref>caf_partitionId</message-data-ref>
        <message-data-ref>initialAuthority</message-data-ref>
        <message-data-ref>locationheader</message-data-ref>
        <message-data-ref>operation</message-data-ref>
        <message-data-ref>x-notify_uri</message-data-ref>
        <message-data-ref>apiRoot_data</message-data-ref>
        <message-data-ref>message_data_slf</message-data-ref>
        <message-data-ref>routing_binding_data</message-data-ref>
        <message-data-ref>disc_targetPlmn_data</message-data-ref>
        <message-data-ref>disc_targetNfSetId_data</message-data-ref>
        <routing-rule>
          <name>10_option-d-initial-inter-plmn</name>
          <condition>not req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-sbi-discovery-target-plmn-list'] exists and var.mccD == '412' and var.mncD == '088'</condition>
          <routing-action>
            <name>perform_nf_discovery</name>
            <action-nf-discovery>
              <nrf-group-ref>West1</nrf-group-ref>
              <request-timeout>10000</request-timeout>
              <use-discovery-parameter>
                <use-selected>
                  <name>requester-nf-type</name>
                  <name>service-names</name>
                  <name>target-nf-set-id</name>
                  <name>target-nf-type</name>
                  <name>target-plmn-list</name>
                </use-selected>
              </use-discovery-parameter>
            </action-nf-discovery>
          </routing-action>
          <routing-action>
            <name>rr_sepp_optd</name>
            <action-route-remote-round-robin>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>sepp_optd</nf-pool-ref>
              </target-nf-pool>
            </action-route-remote-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>20_option-d-subsequent-inter-plmn-with-binding-info</name>
          <condition>req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Routing-Binding'] exists  and var.bindingNfSet == 'setD'</condition>
          <routing-action>
            <name>rr_sepp_optd</name>
            <action-route-round-robin>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>sepp_optd</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>30_option-d-subsequent-inter-plmn-no-binding-info</name>
          <condition>req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Discovery-target-nf-set-id'] exists and req.header['3gpp-Sbi-Discovery-target-nf-type'] exists and req.header['3gpp-Sbi-Discovery-requester-nf-type'] exists and var.DiscHeaderTargetNfSetId == 'setD'</condition>
          <routing-action>
            <name>rr_sepp_optd</name>
            <action-route-round-robin>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>sepp_optd</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>45_option-c-with delegated-discovery-initial-inter-plmn</name>
          <condition>req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Discovery-target-nf-set-id'] exists and req.header['3gpp-Sbi-Discovery-target-nf-type'] exists and req.header['3gpp-sbi-discovery-target-plmn-list'] exists and var.mccD == '412' and var.mncD == '088'</condition>
          <routing-action>
            <name>perform_nf_discovery</name>
            <action-nf-discovery>
              <nrf-group-ref>West1</nrf-group-ref>
              <request-timeout>10000</request-timeout>
              <use-discovery-parameter>
                <use-selected>
                  <name>requester-nf-type</name>
                  <name>target-nf-set-id</name>
                  <name>target-nf-type</name>
                </use-selected>
              </use-discovery-parameter>
            </action-nf-discovery>
          </routing-action>
          <routing-action>
            <name>pr_sepp_optd</name>
            <action-route-remote-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>sepp_optd</nf-pool-ref>
              </target-nf-pool>
            </action-route-remote-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>50_option_d_initial_intra_plmn_chf_convergedcharging</name>
          <condition>var.svc = 'nchf-convergedcharging' and not req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-sbi-discovery-target-nf-type'] == 'CUSTOM_CHF'</condition>
          <routing-action>
            <name>perform_nf_discovery</name>
            <action-nf-discovery>
              <nrf-group-ref>West1</nrf-group-ref>
              <request-timeout>10000</request-timeout>
              <use-discovery-parameter>
                <use-all/>
              </use-discovery-parameter>
              <add-discovery-parameter>
                <name>preferred-locality</name>
                <value>Canada</value>
              </add-discovery-parameter>
              <nf-selection-on-priority>
                <variable-name-selected-host>chf_pref_host</variable-name-selected-host>
                <variable-name-nfset>chf_nfSetId</variable-name-nfset>
              </nf-selection-on-priority>
            </action-nf-discovery>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>60_option_d_initial_intra_plmn_chf_spendinglimitcontrol</name>
          <condition>var.svc = 'nchf-spendinglimitcontrol' and not req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-sbi-discovery-target-nf-type'] == 'CUSTOM_CHF'</condition>
          <routing-action>
            <name>perform_nf_discovery</name>
            <action-nf-discovery>
              <nrf-group-ref>West1</nrf-group-ref>
              <request-timeout>10000</request-timeout>
              <use-discovery-parameter>
                <use-selected>
                  <name>requester-nf-type</name>
                  <name>service-names</name>
                  <name>target-nf-type</name>
                </use-selected>
              </use-discovery-parameter>
              <add-discovery-parameter>
                <name>preferred-locality</name>
                <value>Canada</value>
              </add-discovery-parameter>
              <nf-selection-on-priority>
                <variable-name-selected-host>chf_pref_host</variable-name-selected-host>
                <variable-name-nfset>chf_nfSetId</variable-name-nfset>
              </nf-selection-on-priority>
            </action-nf-discovery>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>90_option_d_initial_intra_plmn_chf_after_discovery</name>
          <condition>var.chf_nfSetId == 'setA'</condition>
          <routing-action>
            <name>initial_preferred</name>
            <action-route-preferred>
              <from-var-name>chf_pref_host</from-var-name>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>chf_setA</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>100_option_d_intra_plmn_chf_subsequent</name>
          <condition>(var.svc = 'nchf-convergedcharging' or var.svc = 'nchf-spendinglimitcontrol') and req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Routing-Binding'] exists  and var.bindingNfSet == 'setA'</condition>
          <routing-action>
            <name>SubsequentChf_prefferedRouting</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>chf_setA</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>110_option_d_intra_plmn_chf_subsequent_WithDiscoveryHeaders</name>
          <condition>(var.svc = 'nchf-convergedcharging' or var.svc = 'nchf-spendinglimitcontrol') and req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Discovery-target-nf-set-id'] exists and req.header['3gpp-Sbi-Discovery-target-nf-type'] exists and req.header['3gpp-Sbi-Discovery-requester-nf-type'] exists and var.DiscHeaderTargetNfSetId == 'setA'</condition>
          <routing-action>
            <name>subsequent_preferred</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>chf_setA</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>120_option_d_initial_intra_plmn_chf_after_discovery</name>
          <condition>var.chf_nfSetId == 'setB'</condition>
          <routing-action>
            <name>initial_preferred</name>
            <action-route-preferred>
              <from-var-name>chf_pref_host</from-var-name>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>chf_setB</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>130_option_d_intra_plmn_chf_subsequent</name>
          <condition>(var.svc = 'nchf-convergedcharging' or var.svc = 'nchf-spendinglimitcontrol') and req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Routing-Binding'] exists  and var.bindingNfSet == 'setB'</condition>
          <routing-action>
            <name>SubsequentChf_prefferedRouting</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>chf_setB</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>140_option_d_intra_plmn_chf_subsequent_WithDiscoveryHeaders</name>
          <condition>(var.svc = 'nchf-convergedcharging' or var.svc = 'nchf-spendinglimitcontrol') and req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Discovery-target-nf-set-id'] exists and req.header['3gpp-Sbi-Discovery-target-nf-type'] exists and req.header['3gpp-Sbi-Discovery-requester-nf-type'] exists and var.DiscHeaderTargetNfSetId == 'setB'</condition>
          <routing-action>
            <name>subsequent_preferred</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>chf_setB</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>150_option_d_initial_intra_plmn_udm_sdm</name>
          <condition>var.svc = 'nudm-sdm' and not req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-sbi-discovery-target-nf-type'] == 'UDM'</condition>
          <routing-action>
            <name>perform_nf_discovery</name>
            <action-nf-discovery>
              <nrf-group-ref>West1</nrf-group-ref>
              <request-timeout>10000</request-timeout>
              <use-discovery-parameter>
                <use-selected>
                  <name>requester-nf-type</name>
                  <name>requester-target-plmn-list</name>
                  <name>service-names</name>
                  <name>target-nf-set-id</name>
                  <name>target-nf-type</name>
                </use-selected>
              </use-discovery-parameter>
              <nf-selection-on-priority>
                <variable-name-selected-host>udm_pref_host</variable-name-selected-host>
                <variable-name-nfset>udm_nfSetId</variable-name-nfset>
              </nf-selection-on-priority>
            </action-nf-discovery>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>160_option_d_initial_intra_plmn_udm_after_discovery</name>
          <condition>not var.udm_nfSetId isempty</condition>
          <routing-action>
            <name>initial_preferred</name>
            <action-route-preferred>
              <from-var-name>udm_pref_host</from-var-name>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>udm_optd</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>170_option_d_intra_plmn_udm_subsequent</name>
          <condition>var.svc = 'nudm-sdm' and req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Routing-Binding'] exists  and not var.bindingNfSet isempty</condition>
          <routing-action>
            <name>SubsequentUdm_prefferedRouting</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>udm_optd</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>180_option_d_intra_plmn_udm_subsequent_WithDiscoveryHeaders</name>
          <condition>var.svc = 'nudm-sdm' and req.header['3gpp-sbi-target-apiroot'] exists and req.header['3gpp-Sbi-Discovery-target-nf-set-id'] exists and req.header['3gpp-Sbi-Discovery-target-nf-type'] exists and req.header['3gpp-Sbi-Discovery-requester-nf-type'] exists and not var.DiscHeaderTargetNfSetId isempty</condition>
          <routing-action>
            <name>subsequent_preferred</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>failoverProfOptionD</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>udm_optd</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>static_nf_instance_nffilter_rr</name>
          <condition>var.svc = 'nudm-sdm' and req.header['3gpp-sbi-target-apiroot'] exists and (var.nf=='seppsim-p5' or var.nf=='seppsim-p6')</condition>
          <routing-action>
            <name>static_nf_instance_round_robin_ra</name>
            <action-route-round-robin>
              <failover-profile-ref>failover_prof_nffilter</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>static_nf_instance_pool_prio_nffilter</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>static_scp_instance_indirect_nffilter_rr</name>
          <condition>var.svc = 'nudm-sdm' and req.header['3gpp-sbi-target-apiroot'] exists and (var.nf=='seppsim-p3' or var.nf=='seppsim-p4')</condition>
          <routing-action>
            <name>static_scp_instance_indirect_nffilter_ra</name>
            <action-route-round-robin>
              <failover-profile-ref>failover_prof_nffilter</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>static_scp_instance_indirect_pool_prio_nffilter</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>CC_SLC_Notify_and SLC_terminate</name>
          <condition>var.operation =='notify' or var.operation =='terminate' and (not var.notifyvar isempty or not var.hostport isempty)</condition>
          <routing-action>
            <name>CC_SLC_Notify_and SLC_terminate</name>
            <action-route-strict>
              <from-authority-header/>
              <failover-profile-ref>tmo_failover_profile_notify_and_slc_terminate</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>universal_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-strict>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>CC_SLC_Notify_and SLC_terminate with TaR</name>
          <condition>var.operation =='notify' or var.operation =='terminate' and (not var.var_tar isempty or not var.hostport_tar isempty)</condition>
          <routing-action>
            <name>CC_SLC_Notify_and SLC_terminate with TaR</name>
            <action-route-strict>
              <preserve-if-indirect-routing>target-api-root-header</preserve-if-indirect-routing>
              <from-target-api-root-header/>
              <failover-profile-ref>tmo_failover_profile_notify_and_slc_terminate</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>universal_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-strict>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>scp_to_nf_strict_target</name>
          <condition>var.mcc=='262' and var.mnc=='73' and (var.nf=='seppsim-p7' or var.nf=='seppsim-p8')</condition>
          <routing-action>
            <name>action-route-strict</name>
            <action-route-strict>
              <from-target-api-root-header/>
              <failover-profile-ref>fob1</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>strict_nf_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-strict>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>scp_to_nf_sr_interplmnfqdn_target</name>
          <condition>var.nf=='nfudm1' and var.mcc=='262' and var.mnc=='073'</condition>
          <routing-action>
            <name>action-route-strict-inter-plmn-fqdn</name>
            <action-route-strict>
              <from-target-api-root-header/>
              <failover-profile-ref>fob1</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>strict_nf_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-strict>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>scp_to_nf_preferred_target</name>
          <condition>var.mcc=='262' and var.mnc=='73' and (var.nf=='seppsim-p5' or var.nf=='seppsim-p6')</condition>
          <routing-action>
            <name>action-route-preferred</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>fob1</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>preferred_nf_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>scp_to_nf_pr_interplmnfqdn_target</name>
          <condition>var.nf=='nfudm2' and var.mcc=='262' and var.mnc=='073'</condition>
          <routing-action>
            <name>action-route-preferred-inter-plmn-fqdn</name>
            <action-route-preferred>
              <from-target-api-root-header/>
              <failover-profile-ref>fob1</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>preferred_nf_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-preferred>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>scp_to_nf_round_robin_target</name>
          <condition>var.setID=='nf-set_1' or var.setID=='MS_addHeader' or var.setID=='MS_modifyHeader' or var.setID=='MS_removeHeader' or var.setID=='MS_BodyModifications'</condition>
          <routing-action>
            <name>action-route-round-robin</name>
            <action-route-round-robin>
              <failover-profile-ref>fob1</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>round_robin_nf_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>routeGpsiCUD</name>
          <condition>var.gpsi exists</condition>
          <routing-action>
            <name>action_slf-lookup-profile2</name>
            <action-slf-lookup>
              <slf-lookup-profile-ref>slf-lookup-profile2</slf-lookup-profile-ref>
            </action-slf-lookup>
          </routing-action>
          <routing-action>
            <name>action-round-robin</name>
            <action-route-round-robin>
              <failover-profile-ref>fob1</failover-profile-ref>
              <target-nf-pool>
                <var-name>region</var-name>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>routeCUD</name>
          <condition>(req.header[':authority'] == '<SCP_WRKR_IP>:443' or req.header[':authority'] == '[null]:443') and var.supi exists and var.servedGPSI == 'msisdn-77117777'</condition>
          <routing-action>
            <name>action_slf-lookup-profile1</name>
            <action-slf-lookup>
              <slf-lookup-profile-ref>slf-lookup-profile1</slf-lookup-profile-ref>
            </action-slf-lookup>
          </routing-action>
          <routing-action>
            <name>action-round-robin</name>
            <action-route-round-robin>
              <failover-profile-ref>fob_default</failover-profile-ref>
              <target-nf-pool>
                <var-name>region</var-name>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>RegionA_SMF</name>
          <condition>req.header[':authority'] == '<SCP_WRKR_IP>:<CHFSIM_4_NODEPORT_HTTP>' or req.header[':authority'] == '[null]:<CHFSIM_4_NODEPORT_HTTP>'</condition>
          <routing-action>
            <name>action-round-robin</name>
            <action-route-round-robin>
              <keep-authority-header/>
              <preserve-if-indirect-routing>absolute-uri-path</preserve-if-indirect-routing>
              <failover-profile-ref>fob_default</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>RegionA_SMF</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>RegionB</name>
          <condition>req.header[':authority'] == '<SCP_WRKR_IP>:<CHFSIM_6_NODEPORT_HTTP>' or req.header[':authority'] == '[null]:<CHFSIM_6_NODEPORT_HTTP>'</condition>
          <routing-action>
            <name>action-round-robin</name>
            <action-route-round-robin>
              <keep-authority-header/>
              <preserve-if-indirect-routing>absolute-uri-path</preserve-if-indirect-routing>
              <failover-profile-ref>fob_default</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>RegionB</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>RegionC</name>
          <condition>req.header[':authority'] == '<SCP_WRKR_IP>:<CHFSIM_8_NODEPORT_HTTP>' or req.header[':authority'] == '[null]:<CHFSIM_8_NODEPORT_HTTP>'</condition>
          <routing-action>
            <name>action-round-robin</name>
            <action-route-round-robin>
              <keep-authority-header/>
              <preserve-if-indirect-routing>absolute-uri-path</preserve-if-indirect-routing>
              <failover-profile-ref>fob_default</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>RegionC</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>SLC_Req</name>
          <condition>var.svc =='nchf-spendinglimitcontrol'</condition>
          <routing-action>
            <name>SLC_Req_Routing</name>
            <action-route-round-robin>
              <target-nf-pool>
                <nf-pool-ref>caf_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>CC_Create</name>
          <condition>var.svc =='nchf-convergedcharging' and not var.pvalue exists and var.servedGPSI == 'msisdn-77117778'</condition>
          <routing-action>
            <name>CC_Create_routing</name>
            <action-route-round-robin>
              <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>caf_pool</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>CC_Update_Release_p1</name>
          <condition>var.svc =='nchf-convergedcharging' and var.pvalue=='p1/'</condition>
          <routing-action>
            <name>CC_Update_Release_p1_action</name>
            <action-route-round-robin>
              <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>caf_pool_cc_update_release_West_East</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>CC_Update_Release_p2</name>
          <condition>var.svc =='nchf-convergedcharging' and var.pvalue=='p2/'</condition>
          <routing-action>
            <name>CC_Update_Release_p2_action</name>
            <action-route-round-robin>
              <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>caf_pool_cc_update_release_East_North</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
        <routing-rule>
          <name>CC_Update_Release_p3</name>
          <condition>var.svc =='nchf-convergedcharging' and var.pvalue=='p3/'</condition>
          <routing-action>
            <name>CC_Update_Release_p3_action</name>
            <action-route-round-robin>
              <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
              <target-nf-pool>
                <nf-pool-ref>caf_pool_cc_update_release_North_West</nf-pool-ref>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
      </routing-case>
      <routing-case>
        <name>failure-slf-cases</name>
        <message-data-ref>message_data_slf</message-data-ref>
        <routing-rule>
          <name>dummy</name>
          <condition>true</condition>
          <routing-action>
            <name>dummy</name>
            <action-route-round-robin>
              <target-nf-pool>
                <var-name>supi</var-name>
              </target-nf-pool>
            </action-route-round-robin>
          </routing-action>
        </routing-rule>
      </routing-case>
      <static-nf-instance-data>
        <name>RegionA</name>
        <static-nf-instance>
          <name>GRL_Profile</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce3011</nf-instance-id>
          <nf-type>CHF</nf-type>
          <static-nf-service>
            <name>nchf-convergedcharging</name>
            <capacity>100</capacity>
            <priority>1</priority>
            <address>
              <scheme>http</scheme>
              <fqdn><NODE_TRAFFIC_IP_TOOLS></fqdn>
              <multiple-ip-endpoint>
                <name>mip1</name>
                <port><CHFSIM_7_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
                <ipv6-address><NODE_TRAFFIC_IPV6_TOOLS></ipv6-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
      </static-nf-instance-data>
      <static-nf-instance-data>
        <name>RegionA_SMF</name>
        <static-nf-instance>
          <name>GRL_Profile</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce312</nf-instance-id>
          <nf-type>SMF</nf-type>
          <static-nf-service>
            <name>nchf-convergedcharging</name>
            <capacity>100</capacity>
            <priority>1</priority>
            <address>
              <scheme>http</scheme>
              <fqdn><NODE_TRAFFIC_IP_TOOLS></fqdn>
              <multiple-ip-endpoint>
                <name>mip1</name>
                <port><CHFSIM_4_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
                <ipv6-address><NODE_TRAFFIC_IPV6_TOOLS></ipv6-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
      </static-nf-instance-data>
      <static-nf-instance-data>
        <name>preferred_nf_data</name>
        <static-nf-instance>
          <name>nf-seppsim-p5</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce395</nf-instance-id>
          <nf-type>SCP</nf-type>
          <locality>nf-seppsim-p5_locality</locality>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p5-mcc-262-mnc-73</fqdn>
              <inter-plmn-fqdn>nfudm2.mnc073.mcc262.3gppnetwork.org</inter-plmn-fqdn>
              <multiple-ip-endpoint>
                <name>mip</name>
                <port><SEPPSIM_P5_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
        <static-nf-instance>
          <name>nf-seppsim-p6</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce394</nf-instance-id>
          <nf-type>SCP</nf-type>
          <locality>nf-seppsim-p6_locality</locality>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p6-mcc-262-mnc-73</fqdn>
              <multiple-ip-endpoint>
                <name>mip</name>
                <port><SEPPSIM_P6_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
      </static-nf-instance-data>
      <static-nf-instance-data>
        <name>round_robin_nf_data</name>
        <static-nf-instance>
          <name>nf-seppsim-p3</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce397</nf-instance-id>
          <nf-type>SCP</nf-type>
          <locality>nf-seppsim-p3_locality</locality>
          <nf-set-id>MS_addHeader</nf-set-id>
          <nf-set-id>MS_modifyHeader</nf-set-id>
          <nf-set-id>MS_removeHeader</nf-set-id>
          <nf-set-id>nf-set_1</nf-set-id>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p3-mcc-262-mnc-73</fqdn>
               <multiple-ip-endpoint>
                 <name>seppsim-3-HTTP-IP4-IP6-EP</name>
                 <transport>tcp</transport>
                 <port><SEPPSIM_P3_NODEPORT_HTTP></port>
                 <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
               </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
        <static-nf-instance>
          <name>nf-seppsim-p4</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce396</nf-instance-id>
          <nf-type>SCP</nf-type>
          <locality>nf-seppsim-p4_locality</locality>
          <nf-set-id>MS_addHeader</nf-set-id>
          <nf-set-id>MS_modifyHeader</nf-set-id>
          <nf-set-id>MS_removeHeader</nf-set-id>
          <nf-set-id>nf-set_1</nf-set-id>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>https</scheme>
              <fqdn>eric-seppsim-p4-mcc-262-mnc-73</fqdn>
               <multiple-ip-endpoint>
                 <name>seppsim-4-HTTPS-IP4-EP</name>
                 <transport>tcp</transport>
                 <port><SEPPSIM_P4_NODEPORT_HTTPS></port>
                 <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
               </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
      </static-nf-instance-data>
      <static-nf-instance-data>
        <name>static_nf_instance_data_nffilter</name>
        <static-nf-instance>
          <name>sepp3</name>
          <nf-type>SEPP</nf-type>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>https</scheme>
              <fqdn>eric-seppsim-p3-mcc-262-mnc-73</fqdn>
              <multiple-ip-endpoint>
                <name>seppsim-3-HTTPS-IP4-IP6-EP</name>
                <transport>tcp</transport>
                <port><SEPPSIM_P3_NODEPORT_HTTPS></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
        <static-nf-instance>
          <name>sepp4</name>
          <nf-type>SEPP</nf-type>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>https</scheme>
              <fqdn>eric-seppsim-p4-mcc-262-mnc-73</fqdn>
              <multiple-ip-endpoint>
                <name>seppsim-4-HTTPS-IP4-EP</name>
                <transport>tcp</transport>
                <port><SEPPSIM_P4_NODEPORT_HTTPS></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
      </static-nf-instance-data>
      <static-nf-instance-data>
        <name>static_sepp</name>
        <static-nf-instance>
          <name>sepp1</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce391</nf-instance-id>
          <nf-type>SEPP</nf-type>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p3-mcc-262-mnc-73</fqdn>
               <multiple-ip-endpoint>
                 <name>seppsim-3-HTTPS-IP4-EP</name>
                 <transport>tcp</transport>
                 <port><SEPPSIM_P3_NODEPORT_HTTP></port>
                 <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
               </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
        <static-nf-instance>
          <name>sepp2</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce390</nf-instance-id>
          <nf-type>SEPP</nf-type>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p4-mcc-262-mnc-73</fqdn>
                <multiple-ip-endpoint>
                  <name>seppsim-4-HTTPS-IP4-EP</name>
                  <transport>tcp</transport>
                  <port><SEPPSIM_P4_NODEPORT_HTTP></port>
                  <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
                </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
      </static-nf-instance-data>
      <static-nf-instance-data>
        <name>strict_nf_data</name>
        <static-nf-instance>
          <name>nf-seppsim-p7</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce393</nf-instance-id>
          <nf-type>SCP</nf-type>
          <locality>nf-seppsim-p7_locality</locality>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p7-mcc-262-mnc-73</fqdn>
              <inter-plmn-fqdn>nfudm1.mnc073.mcc262.3gppnetwork.org</inter-plmn-fqdn>
              <multiple-ip-endpoint>
                <name>mip</name>
                <port><SEPPSIM_P7_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
        <static-nf-instance>
          <name>nf-seppsim-p8</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce392</nf-instance-id>
          <nf-type>SCP</nf-type>
          <locality>nf-seppsim-p8_locality</locality>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p8-mcc-262-mnc-73</fqdn>
              <multiple-ip-endpoint>
                <name>mip</name>
                <port><SEPPSIM_P8_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-nf-instance>
      </static-nf-instance-data>
      <static-scp-instance-data>
        <name>RegionB</name>
        <static-scp-instance>
          <name>RegionB</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce389</nf-instance-id>
          <nf-type>SCP</nf-type>
          <static-nf-service>
            <name>nchf-convergedcharging</name>
            <address>
              <scheme>http</scheme>
              <multiple-ip-endpoint>
                <name>mip</name>
                <port><CHFSIM_6_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
                <ipv6-address><NODE_TRAFFIC_IPV6_TOOLS></ipv6-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-scp-instance>
      </static-scp-instance-data>
      <static-scp-instance-data>
        <name>RegionC</name>
        <static-scp-instance>
          <name>RegionB</name>
          <nf-instance-id>2ec8ac0b-265e-4165-86e9-e0735e6ce388</nf-instance-id>
          <nf-type>SCP</nf-type>
          <static-nf-service>
            <name>nchf-convergedcharging</name>
            <address>
              <scheme>http</scheme>
              <multiple-ip-endpoint>
                <name>mip</name>
                <port><CHFSIM_8_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
                <ipv6-address><NODE_TRAFFIC_IPV6_TOOLS></ipv6-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-scp-instance>
      </static-scp-instance-data>
      <static-scp-instance-data>
        <name>static_scp_instance_data_indirect_nffilter</name>
        <static-scp-instance>
          <name>SCP-2</name>
          <nf-type>SCP</nf-type>
          <scp-domain></scp-domain>
          <static-nf-service>
            <name>default</name>
            <capacity>10</capacity>
            <priority>10</priority>
            <set-id></set-id>
            <address>
              <scheme>http</scheme>
              <fqdn>eric-seppsim-p2-mcc-206-mnc-33</fqdn>
              <multiple-ip-endpoint>
                <name>SCP-2-HTTP-IP4-EP</name>
                <transport>tcp</transport>
                <port><SEPPSIM_P2_NODEPORT_HTTP></port>
                <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
              </multiple-ip-endpoint>
            </address>
          </static-nf-service>
        </static-scp-instance>
      </static-scp-instance-data>
      <nf-pool>
        <name>RegionA</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>disc</name>
          <static-nf-instance-data-ref>RegionA</static-nf-instance-data-ref>
          <update-interval>30s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>sp1</name>
          <priority>1</priority>
          <nf-match-condition>true</nf-match-condition>
        </priority-group>
        <out-request-screening-case-ref>caseReqOut</out-request-screening-case-ref>
      </nf-pool>
      <nf-pool>
        <name>RegionA_SMF</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>disc</name>
          <static-nf-instance-data-ref>RegionA_SMF</static-nf-instance-data-ref>
          <update-interval>30s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>sp1</name>
          <priority>1</priority>
          <nf-match-condition>true</nf-match-condition>
        </priority-group>
      </nf-pool>
      <nf-pool>
        <name>RegionB</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <priority-group>
          <name>sp1</name>
          <priority>1</priority>
          <nf-match-condition>true</nf-match-condition>
        </priority-group>
        <static-scp-instance-data-ref>RegionB</static-scp-instance-data-ref>
      </nf-pool>
      <nf-pool>
        <name>RegionC</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <priority-group>
          <name>sp1</name>
          <priority>1</priority>
          <nf-match-condition>true</nf-match-condition>
        </priority-group>
        <static-scp-instance-data-ref>RegionC</static-scp-instance-data-ref>
      </nf-pool>
      <nf-pool>
        <name>caf_pool</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-match-condition>nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'</nf-match-condition>
        <nf-pool-discovery>
          <name>caf_pool_create</name>
          <nrf-query>
            <name>caf_region_East</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>EastRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_North</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>NorthRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_West</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>WestRegion</preferred-locality>
          </nrf-query>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>locality-West</name>
          <priority>1</priority>
          <nf-match-condition>nfdata.locality == 'WestRegion'</nf-match-condition>
        </priority-group>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>caf_pool_cc_update_release_East_North</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-match-condition>nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'</nf-match-condition>
        <nf-pool-discovery>
          <name>caf_pool_cc_update_release_East_North</name>
          <nrf-query>
            <name>caf_region_East</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>EastRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_North</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>NorthRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_West</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>WestRegion</preferred-locality>
          </nrf-query>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>locality-East</name>
          <priority>1</priority>
          <nf-match-condition>nfdata.locality == 'EastRegion'</nf-match-condition>
        </priority-group>
        <priority-group>
          <name>locality-North</name>
          <priority>2</priority>
          <nf-match-condition>nfdata.locality == 'NorthRegion'</nf-match-condition>
        </priority-group>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>caf_pool_cc_update_release_North_West</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-match-condition>nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'</nf-match-condition>
        <nf-pool-discovery>
          <name>caf_pool_cc_update_release_North_West</name>
          <nrf-query>
            <name>caf_region_East</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>EastRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_North</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>NorthRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_West</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>WestRegion</preferred-locality>
          </nrf-query>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>locality-North</name>
          <priority>1</priority>
          <nf-match-condition>nfdata.locality == 'NorthRegion'</nf-match-condition>
        </priority-group>
        <priority-group>
          <name>locality-West</name>
          <priority>2</priority>
          <nf-match-condition>nfdata.locality == 'WestRegion'</nf-match-condition>
        </priority-group>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>caf_pool_cc_update_release_West_East</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-match-condition>nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'</nf-match-condition>
        <nf-pool-discovery>
          <name>caf_pool_cc_update_release_West_East</name>
          <nrf-query>
            <name>caf_region_East</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>EastRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_North</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>NorthRegion</preferred-locality>
          </nrf-query>
          <nrf-query>
            <name>caf_region_West</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CAF</nf-type>
            <preferred-locality>WestRegion</preferred-locality>
          </nrf-query>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>locality-East</name>
          <priority>2</priority>
          <nf-match-condition>nfdata.locality == 'EastRegion'</nf-match-condition>
        </priority-group>
        <priority-group>
          <name>locality-West</name>
          <priority>1</priority>
          <nf-match-condition>nfdata.locality == 'WestRegion'</nf-match-condition>
        </priority-group>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>chf_setA</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>static_chf_pool</name>
          <nrf-query>
            <name>chf_setA</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CHF</nf-type>
            <nf-set-id>setA</nf-set-id>
            <preferred-locality>Canada</preferred-locality>
          </nrf-query>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>chf_setB</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>static_chf_pool</name>
          <nrf-query>
            <name>chf_setB</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>CUSTOM_CHF</nf-type>
            <nf-set-id>setB</nf-set-id>
            <preferred-locality>Canada</preferred-locality>
          </nrf-query>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>preferred_nf_pool</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>preferred_nf_pool_discovery</name>
          <static-nf-instance-data-ref>preferred_nf_data</static-nf-instance-data-ref>
          <update-interval>30s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>preferred_nf</name>
          <priority>1</priority>
          <nf-match-condition></nf-match-condition>
        </priority-group>
        <out-request-screening-case-ref>caseReqOut</out-request-screening-case-ref>
      </nf-pool>
      <nf-pool>
        <name>round_robin_nf_pool</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>round_robin_nf_pool_discovery</name>
          <static-nf-instance-data-ref>round_robin_nf_data</static-nf-instance-data-ref>
          <update-interval>30s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>round_robin</name>
          <priority>1</priority>
          <nf-match-condition></nf-match-condition>
        </priority-group>
        <out-request-screening-case-ref>caseReqOut</out-request-screening-case-ref>
      </nf-pool>
      <nf-pool>
        <name>sepp_optd</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>static_sepp_pool</name>
          <static-nf-instance-data-ref>static_sepp</static-nf-instance-data-ref>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>static_nf_instance_pool_prio_nffilter</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>static_nf_instance_pool_disc_nffilter</name>
          <static-nf-instance-data-ref>static_nf_instance_data_nffilter</static-nf-instance-data-ref>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>prio-1</name>
          <priority>1</priority>
          <nf-match-condition>nfdata.service.scheme == 'https' and nfdata.ipendpoint.ipv6-address exists</nf-match-condition>
        </priority-group>
        <priority-group>
          <name>prio-2</name>
          <priority>2</priority>
          <nf-match-condition>nfdata.service.scheme == 'https' and nfdata.ipendpoint.ipv4-address exists</nf-match-condition>
        </priority-group>
        <priority-group>
          <name>prio-3</name>
          <priority>3</priority>
          <nf-match-condition>nfdata.service.scheme == 'http' and nfdata.ipendpoint.ipv6-address exists</nf-match-condition>
        </priority-group>
        <priority-group>
          <name>prio-4</name>
          <priority>4</priority>
          <nf-match-condition>nfdata.service.scheme == 'http' and nfdata.ipendpoint.ipv4-address exists</nf-match-condition>
        </priority-group>
      </nf-pool>
      <nf-pool>
        <name>static_scp_instance_indirect_pool_prio_nffilter</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>static_scp_instance_indirect_pool_disc_nffilter</name>
          <static-nf-instance-data-ref>static_nf_instance_data_nffilter</static-nf-instance-data-ref>
          <update-interval>5s</update-interval>
        </nf-pool-discovery>
        <priority-group>
          <name>prio-1</name>
          <priority>1</priority>
          <static-scp-instance-data-ref>static_scp_instance_data_indirect_nffilter</static-scp-instance-data-ref>
          <nf-match-condition>nfdata.service.scheme == 'https'</nf-match-condition>
          <scp-match-condition>nfdata.scpdomaininfo.scheme == 'https'</scp-match-condition>
        </priority-group>
        <priority-group>
          <name>prio-2</name>
          <priority>2</priority>
          <static-scp-instance-data-ref>static_scp_instance_data_indirect_nffilter</static-scp-instance-data-ref>
          <nf-match-condition>nfdata.service.scheme == 'http'</nf-match-condition>
          <scp-match-condition>nfdata.scpdomaininfo.scheme == 'http'</scp-match-condition>
        </priority-group>
      </nf-pool>
      <nf-pool>
        <name>strict_nf_pool</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>strict_nf_pool_discovery</name>
          <static-nf-instance-data-ref>strict_nf_data</static-nf-instance-data-ref>
          <update-interval>30s</update-interval>
        </nf-pool-discovery>
        <out-request-screening-case-ref>caseReqOut</out-request-screening-case-ref>
      </nf-pool>
      <nf-pool>
        <name>udm_optd</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
        <nf-pool-discovery>
          <name>static_udm_pool</name>
          <nrf-query>
            <name>udm_optd</name>
            <requester-nf-type>SCP</requester-nf-type>
            <nf-type>UDM</nf-type>
            <nf-set-id>setC</nf-set-id>
            <preferred-locality>Canada</preferred-locality>
          </nrf-query>
          <update-interval>30s</update-interval>
        </nf-pool-discovery>
        <temporary-blocking>
          <blocking-time>5</blocking-time>
          <consecutive-failures>3</consecutive-failures>
        </temporary-blocking>
      </nf-pool>
      <nf-pool>
        <name>universal_pool</name>
        <enable-stats-per-nf-instance>true</enable-stats-per-nf-instance>
        <add-non-matching-as-lowest-priority>true</add-non-matching-as-lowest-priority>
      </nf-pool>
      <failover-profile>
        <name>failoverProfOptionD</name>
        <request-time-budget>10000</request-time-budget>
        <retry-condition>
          <http-status>502</http-status>
          <http-status>503</http-status>
          <http-status>504</http-status>
          <reset>false</reset>
          <connect-failure>true</connect-failure>
          <refused-stream>false</refused-stream>
        </retry-condition>
        <target-timeout>2000</target-timeout>
        <preferred-host-retries-max>1</preferred-host-retries-max>
        <preferred-host-retry-multiple-addresses>true</preferred-host-retry-multiple-addresses>
        <target-nf-pool-reselects-max>1</target-nf-pool-reselects-max>
        <last-resort-nf-pool-reselects-max>3</last-resort-nf-pool-reselects-max>
      </failover-profile>
      <failover-profile>
        <name>failover_prof_nffilter</name>
        <request-time-budget>10000</request-time-budget>
        <retry-condition>
          <http-status>502</http-status>
          <http-status>503</http-status>
          <http-status>504</http-status>
          <reset>false</reset>
          <connect-failure>true</connect-failure>
          <refused-stream>false</refused-stream>
        </retry-condition>
        <target-timeout>2000</target-timeout>
        <preferred-host-retries-max>1</preferred-host-retries-max>
        <preferred-host-retry-multiple-addresses>true</preferred-host-retry-multiple-addresses>
        <target-nf-pool-reselects-max>1</target-nf-pool-reselects-max>
        <last-resort-nf-pool-reselects-max>3</last-resort-nf-pool-reselects-max>
      </failover-profile>
      <failover-profile>
        <name>fob1</name>
        <request-time-budget>3456</request-time-budget>
        <retry-condition>
          <http-status>500</http-status>
          <http-status>501</http-status>
          <http-status>502</http-status>
          <http-status>503</http-status>
          <http-status>504</http-status>
          <reset>false</reset>
          <connect-failure>false</connect-failure>
          <refused-stream>false</refused-stream>
        </retry-condition>
        <target-timeout>2345</target-timeout>
        <preferred-host-retries-max>3</preferred-host-retries-max>
        <preferred-host-retry-multiple-addresses>true</preferred-host-retry-multiple-addresses>
        <target-nf-pool-reselects-max>1</target-nf-pool-reselects-max>
        <last-resort-nf-pool-reselects-max>1</last-resort-nf-pool-reselects-max>
      </failover-profile>
      <failover-profile>
        <name>fob_default</name>
        <request-time-budget>5000</request-time-budget>
        <retry-condition>
          <http-status>500</http-status>
          <http-status>501</http-status>
          <http-status>502</http-status>
          <http-status>503</http-status>
          <reset>true</reset>
          <connect-failure>true</connect-failure>
          <refused-stream>true</refused-stream>
        </retry-condition>
        <target-timeout>3000</target-timeout>
        <preferred-host-retries-max>3</preferred-host-retries-max>
        <preferred-host-retry-multiple-addresses>true</preferred-host-retry-multiple-addresses>
        <target-nf-pool-reselects-max>1</target-nf-pool-reselects-max>
        <last-resort-nf-pool-reselects-max>1</last-resort-nf-pool-reselects-max>
      </failover-profile>
      <failover-profile>
        <name>tmo_failover_profile_all_but_notify_and_slc_terminate</name>
        <request-time-budget>10000</request-time-budget>
        <retry-condition>
          <http-status>502</http-status>
          <http-status>503</http-status>
          <http-status>504</http-status>
          <reset>false</reset>
          <connect-failure>true</connect-failure>
          <refused-stream>false</refused-stream>
        </retry-condition>
        <target-timeout>2000</target-timeout>
        <preferred-host-retries-max>1</preferred-host-retries-max>
        <preferred-host-retry-multiple-addresses>true</preferred-host-retry-multiple-addresses>
        <target-nf-pool-reselects-max>3</target-nf-pool-reselects-max>
        <last-resort-nf-pool-reselects-max>3</last-resort-nf-pool-reselects-max>
      </failover-profile>
      <failover-profile>
        <name>tmo_failover_profile_notify_and_slc_terminate</name>
        <request-time-budget>10000</request-time-budget>
        <retry-condition>
          <http-status>500</http-status>
          <http-status>501</http-status>
          <http-status>502</http-status>
          <http-status>503</http-status>
          <http-status>504</http-status>
          <reset>true</reset>
          <connect-failure>true</connect-failure>
          <refused-stream>false</refused-stream>
        </retry-condition>
        <target-timeout>2345</target-timeout>
        <preferred-host-retries-max>3</preferred-host-retries-max>
        <preferred-host-retry-multiple-addresses>true</preferred-host-retry-multiple-addresses>
        <target-nf-pool-reselects-max>3</target-nf-pool-reselects-max>
        <last-resort-nf-pool-reselects-max>3</last-resort-nf-pool-reselects-max>
      </failover-profile>
      <nf-profile>
        <name>NF_Profile_1</name>
        <nf-type>CHF</nf-type>
        <admin-state>active</admin-state>
        <requested-heartbeat-timer>20</requested-heartbeat-timer>
        <plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </plmn>
        <snssai>
          <sst>150</sst>
          <sd>Aab109</sd>
        </snssai>
        <allowed-plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </allowed-plmn>
        <allowed-nf-type>NRF</allowed-nf-type>
        <allowed-nf-type>PCF</allowed-nf-type>
        <allowed-nf-type>SCP</allowed-nf-type>
        <allowed-nf-type>SMF</allowed-nf-type>
        <allowed-nf-type>UDM</allowed-nf-type>
        <allowed-nf-domain>ericsson.se</allowed-nf-domain>
        <service-priority>1</service-priority>
        <capacity>100</capacity>
        <locality>ericsson.se</locality>
        <service-address-ref>internalAddress</service-address-ref>
        <associated-nf-pool-ref>caf_pool</associated-nf-pool-ref>
        <nf-service>
          <service-instance-id>nchf-convergedcharging-no-tls</service-instance-id>
          <service-name>nchf-convergedcharging</service-name>
          <scheme>http</scheme>
          <admin-state>active</admin-state>
          <api-prefix>chf-</api-prefix>
          <allowed-plmn>
            <mcc>262</mcc>
            <mnc>200</mnc>
          </allowed-plmn>
          <allowed-nf-domain>Domain1</allowed-nf-domain>
          <service-priority>1</service-priority>
          <service-address-ref>internalAddress</service-address-ref>
        </nf-service>
      </nf-profile>
      <nf-profile>
        <name>NF_Profile_2</name>
        <nf-type>CHF</nf-type>
        <admin-state>active</admin-state>
        <requested-heartbeat-timer>30</requested-heartbeat-timer>
        <plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </plmn>
        <snssai>
          <sst>150</sst>
          <sd>Aab109</sd>
        </snssai>
        <allowed-plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </allowed-plmn>
        <allowed-nf-type>NRF</allowed-nf-type>
        <allowed-nf-type>PCF</allowed-nf-type>
        <allowed-nf-type>SCP</allowed-nf-type>
        <allowed-nf-type>SMF</allowed-nf-type>
        <allowed-nf-type>UDM</allowed-nf-type>
        <allowed-nf-domain>ericsson.se</allowed-nf-domain>
        <service-priority>1</service-priority>
        <capacity>100</capacity>
        <locality>ericsson.se</locality>
        <service-address-ref>internalAddress</service-address-ref>
        <associated-nf-pool-ref>caf_pool</associated-nf-pool-ref>
        <nf-service>
          <service-instance-id>nchf-spendinglimitcontrol-no-tls</service-instance-id>
          <service-name>nchf-spendinglimitcontrol</service-name>
          <scheme>http</scheme>
          <admin-state>active</admin-state>
          <api-prefix>chf-</api-prefix>
          <allowed-plmn>
            <mcc>262</mcc>
            <mnc>200</mnc>
          </allowed-plmn>
          <allowed-nf-domain>Domain1</allowed-nf-domain>
          <service-priority>1</service-priority>
          <service-address-ref>internalAddress</service-address-ref>
        </nf-service>
      </nf-profile>
      <nf-profile>
        <name>NF_Profile_3</name>
        <nf-type>CHF</nf-type>
        <admin-state>active</admin-state>
        <requested-heartbeat-timer>30</requested-heartbeat-timer>
        <plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </plmn>
        <snssai>
          <sst>150</sst>
          <sd>Aab109</sd>
        </snssai>
        <allowed-plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </allowed-plmn>
        <allowed-nf-type>NRF</allowed-nf-type>
        <allowed-nf-type>PCF</allowed-nf-type>
        <allowed-nf-type>SCP</allowed-nf-type>
        <allowed-nf-type>SMF</allowed-nf-type>
        <allowed-nf-type>UDM</allowed-nf-type>
        <allowed-nf-domain>ericsson.se</allowed-nf-domain>
        <service-priority>2</service-priority>
        <capacity>100</capacity>
        <locality>ericsson.se</locality>
        <service-address-ref>internalAddress</service-address-ref>
        <associated-nf-pool-ref>caf_pool</associated-nf-pool-ref>
        <nf-service>
          <service-instance-id>nchf-spendinglimitcontrol-no-tls</service-instance-id>
          <service-name>nchf-spendinglimitcontrol</service-name>
          <scheme>http</scheme>
          <admin-state>active</admin-state>
          <api-prefix>chf-</api-prefix>
          <allowed-plmn>
            <mcc>262</mcc>
            <mnc>200</mnc>
          </allowed-plmn>
          <allowed-nf-domain>Domain1</allowed-nf-domain>
          <service-priority>1</service-priority>
          <service-address-ref>internalAddress</service-address-ref>
        </nf-service>
      </nf-profile>
      <nf-profile>
        <name>NF_Profile_RCC</name>
        <nf-type>CHF</nf-type>
        <nf-specific-info>
          <chf-info>
            <supi-range>
              <id>1</id>
              <supi-start>460000000000000</supi-start>
              <supi-end>460000999999999</supi-end>
            </supi-range>
            <gpsi-range>
              <id>1</id>
              <pattern>55</pattern>
            </gpsi-range>
            <plmn-range>
              <id>1</id>
              <pattern>44</pattern>
            </plmn-range>
          </chf-info>
        </nf-specific-info>
        <requested-heartbeat-timer>30</requested-heartbeat-timer>
        <plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </plmn>
        <snssai>
          <sst>150</sst>
          <sd>Aab109</sd>
        </snssai>
        <allowed-plmn>
          <mcc>262</mcc>
          <mnc>72</mnc>
        </allowed-plmn>
        <allowed-nf-type>NRF</allowed-nf-type>
        <allowed-nf-type>SCP</allowed-nf-type>
        <allowed-nf-type>SMF</allowed-nf-type>
        <allowed-nf-type>UDM</allowed-nf-type>
        <service-priority>1</service-priority>
        <capacity>100</capacity>
        <service-address-ref>internalAddress</service-address-ref>
        <nf-service>
          <service-instance-id>nchf-convergedcharginghttp</service-instance-id>
          <service-name>nchf-convergedcharging</service-name>
          <scheme>http</scheme>
          <service-priority>1</service-priority>
          <capacity>100</capacity>
        </nf-service>
      </nf-profile>
      <nrf-group>
        <name>West1</name>
        <nf-profile-ref>NF_Profile_1</nf-profile-ref>
        <nrf>
          <name>nrf_Canada_Option_D</name>
          <priority>2</priority>
          <fqdn>eric-nrfsim</fqdn>
          <scheme>http</scheme>
          <ip-endpoint>
            <name>IpEp1</name>
            <port><NRFSIM_NODEPORT_HTTP></port>
            <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
          </ip-endpoint>
          <retry-timeout>1500</retry-timeout>
          <max-retries>0</max-retries>
        </nrf>
        <nrf>
          <name>nrf_North1</name>
          <priority>3</priority>
          <fqdn>eric-nrfsim</fqdn>
          <scheme>http</scheme>
          <ip-endpoint>
            <name>IpEp1</name>
            <port><NRFSIM_NODEPORT_HTTP></port>
            <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
          </ip-endpoint>
          <retry-timeout>2000</retry-timeout>
          <max-retries>3</max-retries>
          <nf-profile-ref>NF_Profile_RCC</nf-profile-ref>
        </nrf>
        <nrf>
          <name>nrf_West1</name>
          <priority>1</priority>
          <fqdn>eric-nrfsim</fqdn>
          <scheme>http</scheme>
          <ip-endpoint>
            <name>IpEp1</name>
            <port><NRFSIM_NODEPORT_HTTP></port>
            <ipv4-address><NODE_TRAFFIC_IP_TOOLS></ipv4-address>
          </ip-endpoint>
          <retry-timeout>1500</retry-timeout>
          <max-retries>0</max-retries>
          <nf-profile-ref>NF_Profile_1</nf-profile-ref>
        </nrf>
      </nrf-group>
      <nrf-service>
        <nf-management>
          <nrf-group-ref>West1</nrf-group-ref>
        </nf-management>
        <nf-discovery>
          <nrf-group-ref>West1</nrf-group-ref>
        </nf-discovery>
      </nrf-service>
    </nf-instance>
  </scp-function>
</config>
</edit-config>
</rpc>
  ]]>]]>
