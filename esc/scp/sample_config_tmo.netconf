<hello xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <capabilities>
        <capability>urn:ietf:params:netconf:base:1.0</capability>
    </capabilities>
</hello>]]>]]>
<?xml version="1.0"?>
<rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:ns2="urn:com:ericsson:ecim:1.0" xmlns:ns3="http://tail-f.com/ns/netconf/actions/1.0" xmlns:ns4="urn:ietf:params:xml:ns:yang:ietf-netconf-monitoring" xmlns:ns5="urn:ietf:params:xml:ns:netconf:notification:1.0" message-id="0">
  <edit-config>
    <target>
      <running/>
    </target>
    <config>
            <scp-function operation="replace" xmlns="urn:rdns:com:ericsson:oammodel:ericsson-scp">
                <nf-instance xmlns="urn:rdns:com:ericsson:oammodel:ericsson-scp">
                    <name>instance_1</name>
                    <service-address>
                        <name>internalAddress</name>
                        <!-- change based on your deployment -->
                        <port>31209</port>
                        <tls-port>32296</tls-port>
                        <fqdn>scp.ericsson.se</fqdn>
                        <!-- change based on your deployment -->
                        <ipv4-address>10.111.196.228</ipv4-address>
                    </service-address>
                    <own-network>
                        <name>internalNetwork</name>
                        <service-address-ref>internalAddress</service-address-ref>
                                                <ingress-connection-profile-ref>default_profile</ingress-connection-profile-ref>
                        <routing-case-ref>caf_routing</routing-case-ref>
                                                <in-request-screening-case-ref>caseReqIn</in-request-screening-case-ref>
                        <out-response-screening-case-ref>caseRespOut</out-response-screening-case-ref>
                    </own-network>
                    <ingress-connection-profile>
                        <name>default_profile</name>
                                                <max-connection-duration>0</max-connection-duration>
                                                <hpack-table-size>0</hpack-table-size>
                    </ingress-connection-profile>
                    <ingress-connection-profile-ref>default_profile</ingress-connection-profile-ref>
                    <egress-connection-profile>
                        <name>default_profile</name>
                                                <hpack-table-size>0</hpack-table-size>
                    </egress-connection-profile>
                    <egress-connection-profile-ref>default_profile</egress-connection-profile-ref>
                    <failover-profile>
                                            <name>tmo_failover_profile_all_but_notify_and_slc_terminate</name>
                                                <request-time-budget>10000</request-time-budget>
                        <retry-condition>
                            <http-status>502</http-status>
                            <http-status>503</http-status>
                            <http-status>504</http-status>
                            <reset>false</reset>
                            <connect-failure>true</connect-failure>
                            <refused-stream>false</refused-stream>
                        </retry-condition>
                        <preferred-host-retries-max>1</preferred-host-retries-max>
                        <target-nf-pool-reselects-max>3</target-nf-pool-reselects-max>
                        <target-timeout>2000</target-timeout>
                    </failover-profile>
                    <failover-profile>
                        <name>tmo_failover_profile_notify_and_slc_terminate</name>
                        <request-time-budget>10000</request-time-budget>
                        <retry-condition>
                            <http-status>500</http-status>
                            <http-status>501</http-status>
                            <http-status>502</http-status>
                            <http-status>503</http-status>
                            <http-status>504</http-status>
                            <reset>true</reset>
                            <connect-failure>true</connect-failure>
                            <refused-stream>false</refused-stream>
                        </retry-condition>
                        <preferred-host-retries-max>3</preferred-host-retries-max>
                        <target-timeout>2345</target-timeout>
                    </failover-profile>
                                        <nf-pool>
                        <name>caf_pool</name>
                        <nf-match-condition>
                             nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'
                        </nf-match-condition>
                                                <temporary-blocking>
                                                   <blocking-time>5</blocking-time>
                                                   <consecutive-failures>3</consecutive-failures>
                                                </temporary-blocking>
                        <nf-pool-discovery>
                           <name>caf_pool_create</name>
                                       <update-interval>5s</update-interval>
                           <nrf-query>
                              <name>caf_region_West</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>WestRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_East</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>EastRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_North</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>NorthRegion</preferred-locality>
                           </nrf-query>
                        </nf-pool-discovery>
                        <priority-group>
                           <name>locality-West</name>
                                       <priority>1</priority>
                           <nf-match-condition>
                             nfdata.locality == 'WestRegion'
                           </nf-match-condition>
                        </priority-group>
                    </nf-pool>
                                        <nf-pool>
                        <name>caf_pool_cc_update_release_West_East</name>
                        <nf-match-condition>
                             nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'
                        </nf-match-condition>
                                                <temporary-blocking>
                                                   <blocking-time>5</blocking-time>
                                                   <consecutive-failures>3</consecutive-failures>
                                                </temporary-blocking>
                        <nf-pool-discovery>
                           <name>caf_pool_cc_update_release_West_East</name>
                                       <update-interval>5s</update-interval>
                           <nrf-query>
                              <name>caf_region_West</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>WestRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_East</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>EastRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_North</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>NorthRegion</preferred-locality>
                           </nrf-query>
                        </nf-pool-discovery>
                        <priority-group>
                           <name>locality-West</name>
                                       <priority>1</priority>
                           <nf-match-condition>
                             nfdata.locality == 'WestRegion'
                           </nf-match-condition>
                        </priority-group>
                                                <priority-group>
                           <name>locality-East</name>
                                       <priority>2</priority>
                           <nf-match-condition>
                             nfdata.locality == 'EastRegion'
                           </nf-match-condition>
                        </priority-group>
                    </nf-pool>
                                        <nf-pool>
                        <name>caf_pool_cc_update_release_East_North</name>
                        <nf-match-condition>
                             nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'
                        </nf-match-condition>
                                                <temporary-blocking>
                                                   <blocking-time>5</blocking-time>
                                                   <consecutive-failures>3</consecutive-failures>
                                                </temporary-blocking>
                        <nf-pool-discovery>
                           <name>caf_pool_cc_update_release_East_North</name>
                                       <update-interval>5s</update-interval>
                           <nrf-query>
                              <name>caf_region_West</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>WestRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_East</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>EastRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_North</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>NorthRegion</preferred-locality>
                           </nrf-query>
                        </nf-pool-discovery>
                        <priority-group>
                           <name>locality-East</name>
                                       <priority>1</priority>
                           <nf-match-condition>
                             nfdata.locality == 'EastRegion'
                           </nf-match-condition>
                        </priority-group>
                                                <priority-group>
                           <name>locality-North</name>
                                       <priority>2</priority>
                           <nf-match-condition>
                             nfdata.locality == 'NorthRegion'
                           </nf-match-condition>
                        </priority-group>
                    </nf-pool>
                                        <nf-pool>
                        <name>caf_pool_cc_update_release_North_West</name>
                        <nf-match-condition>
                             nfdata.locality == 'WestRegion' or nfdata.locality == 'EastRegion' or nfdata.locality == 'NorthRegion'
                        </nf-match-condition>
                                                <temporary-blocking>
                                                   <blocking-time>5</blocking-time>
                                                   <consecutive-failures>3</consecutive-failures>
                                                </temporary-blocking>
                        <nf-pool-discovery>
                           <name>caf_pool_cc_update_release_North_West</name>
                                       <update-interval>5s</update-interval>
                           <nrf-query>
                              <name>caf_region_West</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>WestRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_East</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>EastRegion</preferred-locality>
                           </nrf-query>
                           <nrf-query>
                              <name>caf_region_North</name>
                              <nf-type>CUSTOM_CAF</nf-type>
                              <preferred-locality>NorthRegion</preferred-locality>
                           </nrf-query>
                        </nf-pool-discovery>
                        <priority-group>
                           <name>locality-West</name>
                                       <priority>1</priority>
                           <nf-match-condition>
                             nfdata.locality == 'NorthRegion'
                           </nf-match-condition>
                        </priority-group>
                                                <priority-group>
                           <name>locality-East</name>
                                       <priority>2</priority>
                           <nf-match-condition>
                             nfdata.locality == 'WestRegion'
                           </nf-match-condition>
                        </priority-group>
                    </nf-pool>
                                        <nf-pool>
                        <name>universal</name>
                    </nf-pool>
                    <nf-profile>
                        <name>scp_profile1</name>
                        <associated-nf-pool-ref>caf_pool</associated-nf-pool-ref>
                        <nf-type>chf</nf-type>
                        <admin-state>active</admin-state>
                        <service-address-ref>internalAddress</service-address-ref>
                        <requested-heartbeat-timer>20</requested-heartbeat-timer>
                        <locality>ericsson.se</locality>
                        <allowed-nf-domain>ericsson.se</allowed-nf-domain>
                        <allowed-nf-type>smf</allowed-nf-type>
                        <allowed-nf-type>pcf</allowed-nf-type>
                        <snssai-1>
                            <name>NetworkSlice2</name>
                            <sst>150</sst>
                            <sd>AbB109</sd>
                        </snssai-1>
                        <allowed-plmn>
                            <mcc>262</mcc>
                            <mnc>72</mnc>
                        </allowed-plmn>
                        <plmn>
                            <mcc>262</mcc>
                            <mnc>72</mnc>
                        </plmn>
                        <chf-info>
                            <plmn-range>
                                <id>50</id>
                                <plmn-start>10015</plmn-start>
                                <plmn-end>600999</plmn-end>
                            </plmn-range>
                            <gpsi-range>
                                <id>11445</id>
                                <identity-start>20</identity-start>
                                <identity-end>10000</identity-end>
                            </gpsi-range>
                        </chf-info>
                        <nf-service>
                            <service-instance-id>nchf-convergedcharging-no-tls</service-instance-id>
                            <service-name>nchf-convergedcharging</service-name>
                            <admin-state>active</admin-state>
                            <scheme>http</scheme>
                            <allowed-plmn>
                                <mcc>262</mcc>
                                <mnc>200</mnc>
                            </allowed-plmn>
                            <service-version>
                                <api-version-in-uri>"v2"</api-version-in-uri>
                                <api-full-version>"2.0.1"</api-full-version>
                            </service-version>
                            <service-version>
                                <api-version-in-uri>"v3"</api-version-in-uri>
                                <api-full-version>"3.0.1"</api-full-version>
                            </service-version>
                            <api-prefix>chf-</api-prefix>
                            <service-priority>1</service-priority>
                            <service-address-ref>internalAddress</service-address-ref>
                        </nf-service>
                        <nf-service>
                            <service-instance-id>nchf-spendinglimitcontrol-no-tls</service-instance-id>
                            <service-name>nchf-spendinglimitcontrol</service-name>
                            <admin-state>active</admin-state>
                            <scheme>http</scheme>
                            <allowed-plmn>
                                <mcc>262</mcc>
                                <mnc>200</mnc>
                            </allowed-plmn>
                            <service-version>
                                <api-version-in-uri>"v1"</api-version-in-uri>
                                <api-full-version>"1.0.1"</api-full-version>
                            </service-version>
                            <api-prefix>chf-</api-prefix>
                            <service-priority>1</service-priority>
                            <service-address-ref>internalAddress</service-address-ref>
                        </nf-service>
                        <service-priority>1</service-priority>
                    </nf-profile>
                    <nrf-group>
                        <name>West</name>
                        <nf-profile-ref>scp_profile1</nf-profile-ref>
                        <nrf>
                            <name>nrf_West1</name>
                            <fqdn>eric-nrfsim</fqdn>
                            <scheme>http</scheme>
                            <ip-endpoint>
                                <name>nrf_West1_ep</name>
                                <!-- Update the address to match your nrfsim address -->
                                <ipv4-address>10.105.40.62</ipv4-address>
                                <port>80</port>
                            </ip-endpoint>
                            <priority>1</priority>
                            <nf-profile-ref>scp_profile1</nf-profile-ref>
                        </nrf>
                    </nrf-group>
                    <nrf-service>
                        <nf-discovery>
                            <nrf-group-ref>West</nrf-group-ref>
                        </nf-discovery>
                        <nf-management>
                            <nrf-group-ref>West</nrf-group-ref>
                        </nf-management>
                    </nrf-service>
                    <message-data>
                        <name>ServiceRequestType</name>
                                                <path></path>
                        <extractor-regex>(?P&lt;svc&gt;nchf-convergedcharging|nchf-spendinglimitcontrol)</extractor-regex>
                    </message-data>
                    <message-data>
                        <name>caf_partitionId</name>
                                                <path></path>
                        <extractor-regex>(?P&lt;pvalue&gt;p\w\/)</extractor-regex>
                    </message-data>
                    <!-- Location header -->
                    <message-data>
                        <name>initialAuthority</name>
                                                <header>:authority</header>
                        <variable-name>scpAddress</variable-name>
                    </message-data>
                   <message-data>
                        <name>locationheader</name>
                                                <header>location</header>
                        <extractor-regex>(?P&lt;pre&gt;.+\/\/)([^\/]+)(?P&lt;post&gt;\/.+\/.+)</extractor-regex>
                    </message-data>
                   <!-- CC/SLC Notify and SLC Terminate handling -->
                                        <message-data>
                        <name>operation</name>
                                                <path></path>
                        <extractor-regex>(?P&lt;operation&gt;notify|terminate)</extractor-regex>
                    </message-data>
                    <message-data>
                        <name>xNotifyUri</name>
                                                <header>x-notify-uri</header>
                                                <extractor-regex>(?P&lt;hostport&gt;(?P&lt;scheme&gt;.+)://(?P&lt;newAuthority&gt;[^/]+))(?P&lt;route&gt;.*)|(?P&lt;notifyvar&gt;.*)</extractor-regex>
                    </message-data>
                    <message-data>
                        <name>targetApiRoot</name>
                                                <header>3gpp-Sbi-Target-apiRoot</header>
                                                <extractor-regex>(?P&lt;hostporttar&gt;(?P&lt;scheme&gt;.+)://(?P&lt;newAuthoritytar&gt;[^/]+))(?P&lt;routetar&gt;.*)|(?P&lt;tarvar&gt;.*)</extractor-regex>
                    </message-data>
                                        <request-screening-case>
                        <name>caseReqIn</name>
                                    <message-data-ref>operation</message-data-ref>
                        <message-data-ref>xNotifyUri</message-data-ref>
                        <message-data-ref>targetApiRoot</message-data-ref>
                        <message-data-ref>initialAuthority</message-data-ref>
                        <screening-rule>
                            <name>reqInRule</name>
                            <condition>not var.hostport isempty and not var.newAuthority isempty and (var.operation =='notify' or var.operation =='terminate') and var.scpAddress exists</condition>
                            <screening-action>
                                <name>replace_authority</name>
                                <action-modify-header>
                                    <name>:authority</name>
                                                                        <replace-from-var-name>newAuthority</replace-from-var-name>
                                </action-modify-header>
                            </screening-action>
                                                        <screening-action>
                                <name>replace_x-notify-uri</name>
                                <action-modify-header>
                                    <name>x-notify-uri</name>
                                                                        <replace-from-var-name>hostport</replace-from-var-name>
                                </action-modify-header>
                            </screening-action>
                                                        <screening-action>
                                <name>replace_path</name>
                                <action-modify-header>
                                    <name>:path</name>
                                                                        <replace-from-var-name>route</replace-from-var-name>
                                </action-modify-header>
                            </screening-action>
                        </screening-rule>
                        <screening-rule>
                            <name>reqInRuleTar</name>
                            <condition>not var.hostporttar isempty and not var.newAuthoritytar isempty and (var.operation =='notify' or var.operation =='terminate') and var.scpAddress exists</condition>
                            <screening-action>
                                <name>replace_pathtar</name>
                                <action-modify-header>
                                    <name>:path</name>
                                                                        <replace-from-var-name>routetar</replace-from-var-name>
                                </action-modify-header>
                            </screening-action>
                        </screening-rule>
                    </request-screening-case>
                    <response-screening-case>
                        <name>caseRespOut</name>
                                <message-data-ref>locationheader</message-data-ref>
                        <screening-rule>
                            <name>respOutRule</name>
                            <condition>not var.pre isempty and not var.post isempty </condition>
                            <screening-action>
                                <name>replace_location_header</name>
                                <action-modify-header>
                                    <name>location</name>
                                                                        <replace-from-var-name>scpAddress</replace-from-var-name>
                                </action-modify-header>
                            </screening-action>
                                                        <screening-action>
                                <name>prepend_new_location_header</name>
                                <action-modify-header>
                                    <name>location</name>
                                                                        <prepend-from-var-name>pre</prepend-from-var-name>
                                </action-modify-header>
                            </screening-action>
                                                        <screening-action>
                                <name>append_new_location_header</name>
                                <action-modify-header>
                                    <name>location</name>
                                                                        <append-from-var-name>post</append-from-var-name>
                                </action-modify-header>
                            </screening-action>
                        </screening-rule>
                    </response-screening-case>
                    <routing-case>
                        <name>caf_routing</name>
                        <message-data-ref>ServiceRequestType</message-data-ref>
                        <message-data-ref>caf_partitionId</message-data-ref>
                                                <message-data-ref>operation</message-data-ref>
                        <routing-rule>
                            <name>CC_SLC_Notify_and SLC_terminate</name>
                            <condition>(var.operation =='notify' or var.operation =='terminate') and (not var.notifyvar isempty or not var.hostport isempty)</condition>
                            <routing-action>
                                <name>CC_SLC_Notify_and SLC_terminate</name>
                                <action-route-strict>
                                     <from-authority-header></from-authority-header>
                                     <target-nf-pool>
                                        <nf-pool-ref>universal</nf-pool-ref>
                                     </target-nf-pool>
                                                 <failover-profile-ref>tmo_failover_profile_notify_and_slc_terminate</failover-profile-ref>
                                </action-route-strict>
                            </routing-action>
                        </routing-rule>
                        <routing-rule>
                            <name>CC_SLC_Notify_and SLC_terminate with TaR</name>
                            <condition>(var.operation =='notify' or var.operation =='terminate') and (not var.tarvar isempty or not var.hostporttar isempty)</condition>
                            <routing-action>
                                <name>CC_SLC_Notify_and SLC_terminate with TaR</name>
                                 <action-route-strict>
                                     <preserve-if-indirect-routing>target-api-root-header</preserve-if-indirect-routing>
                                     <from-target-api-root-header></from-target-api-root-header>
                                     <target-nf-pool>
                                        <nf-pool-ref>universal</nf-pool-ref>
                                     </target-nf-pool>
                                                 <failover-profile-ref>tmo_failover_profile_notify_and_slc_terminate</failover-profile-ref>
                                </action-route-strict>
                            </routing-action>
                        </routing-rule>
                        <routing-rule>
                            <name>CC_Create</name>
                            <condition>var.svc =='nchf-convergedcharging' and var.pvalue=='' </condition>
                            <routing-action>
                                <name>CC_Create_routing</name>
                                <action-route-round-robin>
                                    <target-nf-pool>
                                        <nf-pool-ref>caf_pool</nf-pool-ref>
                                    </target-nf-pool>
                                    <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
                                </action-route-round-robin>
                            </routing-action>
                        </routing-rule>
                        <routing-rule>
                            <name>SLC_subscribe_unsubscribe_modify</name>
                            <condition>var.svc =='nchf-spendinglimitcontrol'</condition>
                            <routing-action>
                                <name>SLC_subscribe_unsubscribe_modify_action</name>
                                <action-route-round-robin>
                                    <target-nf-pool>
                                        <nf-pool-ref>caf_pool</nf-pool-ref>
                                    </target-nf-pool>
                                    <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
                                </action-route-round-robin>
                            </routing-action>
                        </routing-rule>
                                                <routing-rule>
                            <name>CC_Update_Release_p1</name>
                            <condition>var.svc =='nchf-convergedcharging' and var.pvalue=='p1/'</condition>
                            <routing-action>
                                <name>CC_Update_Release_p1_action</name>
                                <action-route-round-robin>
                                    <target-nf-pool>
                                        <nf-pool-ref>caf_pool_cc_update_release_West_East</nf-pool-ref>
                                    </target-nf-pool>
                                    <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
                                </action-route-round-robin>
                            </routing-action>
                        </routing-rule>
                                                <routing-rule>
                            <name>CC_Update_Release_p2</name>
                            <condition>var.svc =='nchf-convergedcharging' and var.pvalue=='p2/'</condition>
                            <routing-action>
                                <name>CC_Update_Release_p2_action</name>
                                <action-route-round-robin>
                                    <target-nf-pool>
                                        <nf-pool-ref>caf_pool_cc_update_release_East_North</nf-pool-ref>
                                    </target-nf-pool>
                                    <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
                                </action-route-round-robin>
                            </routing-action>
                        </routing-rule>
                                    <routing-rule>
                            <name>CC_Update_Release_p3</name>
                            <condition>var.svc =='nchf-convergedcharging' and var.pvalue=='p3/'</condition>
                            <routing-action>
                                <name>CC_Update_Release_p3_action</name>
                                <action-route-round-robin>
                                    <target-nf-pool>
                                        <nf-pool-ref>caf_pool_cc_update_release_North_West</nf-pool-ref>
                                    </target-nf-pool>
                                                    <failover-profile-ref>tmo_failover_profile_all_but_notify_and_slc_terminate</failover-profile-ref>
                                </action-route-round-robin>
                            </routing-action>
                        </routing-rule>
                            </routing-case>
                </nf-instance>
            </scp-function>
        </config>
    </edit-config>
</rpc>
]]>]]>

