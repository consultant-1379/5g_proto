
package com.ericsson.sc.sepp.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyDescription;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Output schema for action
 * ericsson-sepp:sepp-function::nf-instance::fqdn-scrambling-command::scramble-fqdn
 * <p>
 * Generated by jsonschema-generator (1.28.0-5 2023-07-07 11:30:07 CEST) from
 * Yang module ericsson-sepp (3.3.16) on Oct 12, 2023, 10:48:42 AM. Features:
 * []. Deviations/extensions: []
 * 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({ "ericsson-sepp:scrambled-fqdn", "ericsson-sepp:key-id" })
public class EricssonSeppSeppFunctionNfInstanceFqdnScramblingCommandScrambleFqdnOutput
{

    /**
     * The scrambled FQDN (Required)
     * 
     */
    @JsonProperty("ericsson-sepp:scrambled-fqdn")
    @JsonPropertyDescription("The scrambled FQDN")
    private String ericssonSeppScrambledFqdn;
    /**
     * The encryption identifier of the key that was used for scrambling the FQDN
     * (Required)
     * 
     */
    @JsonProperty("ericsson-sepp:key-id")
    @JsonPropertyDescription("The encryption identifier of the key that was used for scrambling the FQDN")
    private String ericssonSeppKeyId;

    /**
     * The scrambled FQDN (Required)
     * 
     */
    @JsonProperty("ericsson-sepp:scrambled-fqdn")
    public String getEricssonSeppScrambledFqdn()
    {
        return ericssonSeppScrambledFqdn;
    }

    /**
     * The scrambled FQDN (Required)
     * 
     */
    @JsonProperty("ericsson-sepp:scrambled-fqdn")
    public void setEricssonSeppScrambledFqdn(String ericssonSeppScrambledFqdn)
    {
        this.ericssonSeppScrambledFqdn = ericssonSeppScrambledFqdn;
    }

    public EricssonSeppSeppFunctionNfInstanceFqdnScramblingCommandScrambleFqdnOutput withEricssonSeppScrambledFqdn(String ericssonSeppScrambledFqdn)
    {
        this.ericssonSeppScrambledFqdn = ericssonSeppScrambledFqdn;
        return this;
    }

    /**
     * The encryption identifier of the key that was used for scrambling the FQDN
     * (Required)
     * 
     */
    @JsonProperty("ericsson-sepp:key-id")
    public String getEricssonSeppKeyId()
    {
        return ericssonSeppKeyId;
    }

    /**
     * The encryption identifier of the key that was used for scrambling the FQDN
     * (Required)
     * 
     */
    @JsonProperty("ericsson-sepp:key-id")
    public void setEricssonSeppKeyId(String ericssonSeppKeyId)
    {
        this.ericssonSeppKeyId = ericssonSeppKeyId;
    }

    public EricssonSeppSeppFunctionNfInstanceFqdnScramblingCommandScrambleFqdnOutput withEricssonSeppKeyId(String ericssonSeppKeyId)
    {
        this.ericssonSeppKeyId = ericssonSeppKeyId;
        return this;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append(EricssonSeppSeppFunctionNfInstanceFqdnScramblingCommandScrambleFqdnOutput.class.getName())
          .append('@')
          .append(Integer.toHexString(System.identityHashCode(this)))
          .append('[');
        sb.append("ericssonSeppScrambledFqdn");
        sb.append('=');
        sb.append(((this.ericssonSeppScrambledFqdn == null) ? "<null>" : this.ericssonSeppScrambledFqdn));
        sb.append(',');
        sb.append("ericssonSeppKeyId");
        sb.append('=');
        sb.append(((this.ericssonSeppKeyId == null) ? "<null>" : this.ericssonSeppKeyId));
        sb.append(',');
        if (sb.charAt((sb.length() - 1)) == ',')
        {
            sb.setCharAt((sb.length() - 1), ']');
        }
        else
        {
            sb.append(']');
        }
        return sb.toString();
    }

    @Override
    public int hashCode()
    {
        int result = 1;
        result = ((result * 31) + ((this.ericssonSeppKeyId == null) ? 0 : this.ericssonSeppKeyId.hashCode()));
        result = ((result * 31) + ((this.ericssonSeppScrambledFqdn == null) ? 0 : this.ericssonSeppScrambledFqdn.hashCode()));
        return result;
    }

    @Override
    public boolean equals(Object other)
    {
        if (other == this)
        {
            return true;
        }
        if ((other instanceof EricssonSeppSeppFunctionNfInstanceFqdnScramblingCommandScrambleFqdnOutput) == false)
        {
            return false;
        }
        EricssonSeppSeppFunctionNfInstanceFqdnScramblingCommandScrambleFqdnOutput rhs = ((EricssonSeppSeppFunctionNfInstanceFqdnScramblingCommandScrambleFqdnOutput) other);
        return (((this.ericssonSeppKeyId == rhs.ericssonSeppKeyId)
                 || ((this.ericssonSeppKeyId != null) && this.ericssonSeppKeyId.equals(rhs.ericssonSeppKeyId)))
                && ((this.ericssonSeppScrambledFqdn == rhs.ericssonSeppScrambledFqdn)
                    || ((this.ericssonSeppScrambledFqdn != null) && this.ericssonSeppScrambledFqdn.equals(rhs.ericssonSeppScrambledFqdn))));
    }

}
