apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "eric-sc-nlf.name" . }}
  labels:
{{- include "eric-sc-nlf.labels" . | indent 4 }}
    app: {{ .Values.service.nlf.name | quote }}
  annotations:
{{- include "eric-sc-nlf.helm-annotations" . | indent 4 }}
{{- include "eric-sc-nlf.config-annotations" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.nlf.name | quote }}
  strategy:
    type: {{ .Values.updateStrategy.type | quote }}
    {{- if eq .Values.updateStrategy.type "RollingUpdate" }}
    {{- if or .Values.updateStrategy.rollingUpdate.maxUnavailable .Values.updateStrategy.rollingUpdate.maxSurge }}
    rollingUpdate:
    {{- end }}
      {{- if .Values.updateStrategy.rollingUpdate.maxUnavailable }}
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable }}
      {{- end }}
      {{- if .Values.updateStrategy.rollingUpdate.maxSurge }}
      maxSurge: {{ .Values.updateStrategy.rollingUpdate.maxSurge }}
      {{- end }}
    {{- end }}
  template:
    metadata:
      labels:
{{- include "eric-sc-nlf.pod.labels" . | nindent 8 }}
        app: {{ .Values.service.nlf.name | quote }}
      annotations:
{{- include "eric-sc-nlf.helm-annotations" . | indent 8 }}
{{- include "eric-sc-nlf.config-annotations" . | indent 8 }}
        evnfm.eo.ericsson.com/post-instantiate-status: "[]"
    spec:
      {{- if eq .Values.affinity.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.service.nlf.name }}
              topologyKey: "kubernetes.io/hostname"
      {{- else if eq .Values.affinity.podAntiAffinity  "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.service.nlf.name }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- if include "eric-sc-nlf.nodeSelector" . }}
      nodeSelector:
        {{ template "eric-sc-nlf.nodeSelector" . }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if include "eric-sc-nlf.pullSecrets" . }}
      imagePullSecrets:
      - name: {{ template "eric-sc-nlf.pullSecrets" . }}
      {{- end }}
      serviceAccountName: eric-sc-nlf
      containers:
{{- if eq (include "eric-sc-nlf.tapagent.enabled" .) "true" }}
      - name: {{ .Values.tapagent.name | quote }}
        image: {{ template "eric-sc-nlf.tapagent.registryUrl" . }}/{{ template "eric-sc-nlf.tapagent.repoPath" . }}/{{ template "eric-sc-nlf.tapagent.image" . }}:{{ template "eric-sc-nlf.tapagent.tag" . }}
        imagePullPolicy: {{ template "eric-sc-nlf.tapagent.imagePullPolicy" . }}
        resources:
          requests:
            cpu: {{ .Values.resources.tapagent.requests.cpu | quote }}
            memory: {{ .Values.resources.tapagent.requests.memory | quote }}
            {{- if index .Values.resources.tapagent.requests "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.resources.tapagent.requests "ephemeral-storage" | quote }}
            {{- end }}
          limits:
            cpu: {{ .Values.resources.tapagent.limits.cpu | quote }}
            memory: {{ .Values.resources.tapagent.limits.memory | quote }}
            {{- if index .Values.resources.tapagent.limits "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.resources.tapagent.limits "ephemeral-storage" | quote }}
            {{- end }}
        securityContext:
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
            add:
              - NET_ADMIN
              - NET_RAW
        volumeMounts:
          - name: eric-sc-{{ .Values.tapagent.configmap.name }}-volume
            mountPath: {{ .Values.tapagent.configmap.mountpath }}
          - name: {{ .Values.service.nlf.name }}-{{ .Values.tapagent.secret.name }}-volume
            mountPath: {{ .Values.tapagent.secret.mountpath }}
        env:
          - name: CM_CONFIG_FILE_PATH
            value: {{ .Values.tapagent.configmap.mountpath }}
          - name: CM_CONFIG_FILE_NAME
            value: {{ .Values.tapagent.configmap.fileName }}
          - name: SERVICE_NAME
            value: {{ .Values.service.nlf.name }}
          - name: TZ
            value: {{ include "eric-sc-nlf.timezone" . }}
          - name: SERVICE_ID
            value: {{ include "eric-sc-nlf.name" . }}
      - name: {{ .Values.tlskeylogagent.name | quote }}
        image: {{ template "eric-sc-nlf.tlskeylogagent.registryUrl" . }}/{{ template "eric-sc-nlf.tlskeylogagent.repoPath" . }}/{{ template "eric-sc-nlf.tlskeylogagent.image" . }}:{{ template "eric-sc-nlf.tlskeylogagent.tag" . }}
        imagePullPolicy: {{ template "eric-sc-nlf.tlskeylogagent.imagePullPolicy" . }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
              - ALL
          runAsGroup: {{ .Values.tlskeylogagent.mgid }}
          runAsUser: {{ .Values.tlskeylogagent.uid }}
        resources:
          requests:
            cpu: {{ .Values.resources.tlskeylogagent.requests.cpu | quote }}
            memory: {{ .Values.resources.tlskeylogagent.requests.memory | quote }}
          limits:
            cpu: {{ .Values.resources.tlskeylogagent.limits.cpu | quote }}
            memory: {{ .Values.resources.tlskeylogagent.limits.memory | quote }}
        volumeMounts:
          - name: eric-sc-{{ .Values.tapagent.configmap.name }}-volume
            mountPath: {{ .Values.tlskeylogagent.configmap.mountpath }}
          - name: {{ .Values.service.nlf.name }}-{{ .Values.tlskeylogagent.secret.name }}-volume
            mountPath: {{ .Values.tlskeylogagent.secret.mountpath }}
          - name: custom
            mountPath: /mnt
          - name: loglevel-volume
            mountPath: /logcontrol/config
{{- if eq (include "eric-sc-nlf.logshipper-enabled" . ) "true" }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-mounts" . | indent 10 }}
{{- end }}
        env:
          - name: VTAP_CONFIG_DIR
            value: /etc/cm-config/
          - name: VTAP_SFTP_CONFIG_DIR
            value: /etc/ftpserver/
          - name: TLS_KEYLOGGER_FIFO_PATH
            value: /mnt/tlskeylogger.fifo
          - name: JVM_PARAMS
            value: {{ .Values.jvm.parameters.tlskeylogagent | quote }}
          - name: SERVICE_NAME
            value: {{ .Values.service.nlf.name }}
          - name: TZ
            value: {{ include "eric-sc-nlf.timezone" . }}
          - name: FILE_SIZE_LIMIT
            value: {{ .Values.tlskeylogagent.fileSizeLimit | quote }}
          - name: SERVICE_ID
            value: {{ include "eric-sc-nlf.name" . }}
          - name: CONTAINER_NAME
            value: {{ .Values.tlskeylogagent.name | quote }}
          - name: LOG_PATH
            value: {{ .Values.logShipper.storage.path | quote }}
          - name: LOGBACK_FILENAME
            value: {{ include "eric-sc-nlf.logbackFileName" . | quote }}
{{- end }}
      - name: {{ .Values.service.nlf.name | quote }}
        image: {{ template "eric-sc-nlf.nlf.registryUrl" . }}/{{ template "eric-sc-nlf.nlf.repoPath" . }}/{{ template "eric-sc-nlf.nlf.image" . }}:{{ template "eric-sc-nlf.nlf.tag" . }}
        imagePullPolicy: {{ template "eric-sc-nlf.nlf.imagePullPolicy" . }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
              - ALL
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
{{- if eq (include "eric-sc-nlf.tapagent.enabled" .) "true" }}
        - name: TLS_KEYLOGGER_FIFO_PATH
          value: /mnt/tlskeylogger.fifo
        - name: TLS_KEYLOGGER_FIFO_UID
          value: {{ .Values.tlskeylogagent.mgid | quote }}
{{- end }}
        - name: ALARM_HANDLER_HOSTNAME
          value: {{ .Values.adp.fh.alarmHandler.hostname | quote }}
        - name: ALARM_HANDLER_PORT
          value: {{ .Values.adp.fh.alarmHandler.port | quote }}
        - name: CM_MEDIATOR
          value: {{ .Values.adp.cm.mediator.hostname | quote }}
        - name: CM_MEDIATOR_PORT
          value: {{ .Values.adp.cm.mediator.port | quote }}
        - name: CONCURRENT_STREAMS_MAX
          value: {{ .Values.concurrentStreamsMax | quote }}
        - name: NRF_WAIT_QUEUE_SIZE_MAX
          value: {{ .Values.nrf_wait_queue_size_max | quote }}
        - name: DATA_MESSAGE_BUS_KF
          value: {{ .Values.adp.data_message_bus_kf | quote }}
        - name: EGRESS_NRF_DSCP
{{- if lt (int .Values.egress.nrf.dscp) 0}}
          value: 0
{{- else if gt (int .Values.egress.nrf.dscp) 63}}
          value: 63
{{- else }}
          value: {{ int .Values.egress.nrf.dscp | quote }}
{{- end }}
        - name: GLOBAL_TLS_ENABLED
          value: {{ include "eric-sc-nlf.tls" . | quote }}
{{- if .Values.global }}
{{- if .Values.global.internalIPFamily }}
        - name: IP_FAMILY
          value: {{ .Values.global.internalIPFamily | quote }}
{{- end }}
{{- end }}
        - name: JVM_PARAMS
          value: {{ .Values.jvm.parameters.nlf | quote }}
        - name: NAMESPACE
          value: {{ .Release.Namespace }}
        - name: SERVICE_HOST
          value: {{ .Values.service.nlf.name | quote }}
        - name: SERVICE_ID
          value: {{ include "eric-sc-nlf.name" . }}
        - name: SERVICE_TARGET_PORT_INTERNAL
          value: {{ .Values.service.nlf.internal.targetPort | quote }}
        - name: SERVICE_TARGET_PORT_REST
          value: {{ .Values.service.nlf.rest.targetPort | quote }}
        - name: SERVICE_TARGET_PORT_REST_OAM
          value: {{ .Values.service.nlf.restOam.targetPort | quote }}
        - name: TZ
          value: {{ include "eric-sc-nlf.timezone" . }}
        - name: SERVICE_OAM_PORT
          value: {{ .Values.service.nlf.metrics.port | quote }}
        - name: SERVICE_OAM_TARGET_PORT
          value: {{ .Values.service.nlf.metrics.targetPort | quote }}
{{- if eq (include "eric-sc-nlf.tls" .) "true" }}
        - name: DCED_TLS_ENABLED
          value: {{ include "eric-sc-nlf.dcedsc.tls" .  | quote }}
{{- end }}
        - name: ETCD_ENDPOINT
          value: {{ .Values.etcd.endpoint | quote }}
{{- if eq (include "eric-sc-nlf.dcedsc.tls" .) "false" }}
        - name: ETCD_USERNAME
          value: {{ .Values.etcd.username | quote }}
        - name: ETCD_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.etcd.secretName | quote }}
              key: {{ .Values.etcd.passwordKey | quote }}
{{- end }}
        - name: LEADER_ELECTION_ENABLED
          value: {{ .Values.leaderElection.enabled | quote }}
        - name: CONTAINER_NAME
          value: {{ include "eric-sc-nlf.name" . | quote }}
        - name: LOG_PATH
          value: {{ .Values.logShipper.storage.path | quote }}
        - name: LOGBACK_FILENAME
          value: {{ include "eric-sc-nlf.logbackFileName" . | quote }}
        ports:
{{- if eq (include "eric-sc-nlf.tls" .) "true" }}
        - name: "metrics-tls"
{{- else }}
        - name: "metrics"
{{- end }}
          protocol: TCP
          containerPort: {{ .Values.service.nlf.metrics.targetPort }}
        - name: {{ .Values.service.nlf.restOam.targetPortName }}
          containerPort: {{ .Values.service.nlf.restOam.targetPort }}
          protocol: TCP
        - name: {{ .Values.service.nlf.rest.targetPortName }}
          containerPort: {{ .Values.service.nlf.rest.targetPort }}
          protocol: TCP
        volumeMounts:
        - name: loglevel-volume
          mountPath: /nlf/config/logcontrol
{{- if eq (include "eric-sc-nlf.logshipper-enabled" . ) "true" }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-mounts" . | indent 8 }}
{{- end }}
{{- if eq (include "eric-sc-nlf.fileCollector.enabled" .) "true" }}
        - name: coredump-storage
          mountPath: /var/lib/systemd/coredump
          subPath: coredump/nlf/{{ .Values.service.nlf.name}}
{{- end }}
        - name: custom
          mountPath: /mnt
        - name: secrets
          mountPath: {{ .Values.service.nlf.certs }}
          readOnly: true
        - name: trustca
          mountPath: {{ .Values.service.nlf.trustCA }}
          readOnly: true
        - name: nlf-server-certificates
          mountPath: /run/secrets/nlf-server-cert
        - name: mediator-if-client-internal-cert
          mountPath: /run/secrets/mediator/certificates
          readOnly: true
        - name: mediator-if-client-ca
          mountPath: /run/secrets/mediator/ca
        - name: pm-cacert
          mountPath: /run/secrets/pm/ca
          readOnly: true
        - name: client-ca-volume
          mountPath: /run/secrets/client-ca
        - name: manager-fhah-client-cert
          mountPath: /run/secrets/fhah/certificates
        - name: siptls-trusted-root-cacert
          mountPath: /run/secrets/siptls/ca
          readOnly: true
        - name: vertx
          mountPath: "/vertx"
{{- if eq (include "eric-sc-nlf.dcedsc.tls" .) "true" }}
        - name: nlf-dcedsc-client-cert
          mountPath: /run/secrets/dcedsc/certificates
          readOnly: true
{{- end }}
        livenessProbe:
          httpGet:
            path: /probes/liveness
            port: {{ .Values.probes.nlf.livenessProbe.port }} # No quotes should be used!
          initialDelaySeconds: {{ .Values.probes.nlf.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.nlf.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.nlf.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.probes.nlf.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.nlf.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /probes/readiness
            port: {{ .Values.probes.nlf.readinessProbe.port }} # No quotes should be used!
          initialDelaySeconds: {{ .Values.probes.nlf.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.nlf.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.nlf.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.probes.nlf.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.nlf.readinessProbe.failureThreshold }}
        {{- if .Values.resources.nlf }}
        resources:
          requests:
            memory: {{ .Values.resources.nlf.requests.memory | quote }}
            cpu: {{ .Values.resources.nlf.requests.cpu | quote }}
            {{- if index .Values.resources.nlf.requests "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.resources.nlf.requests "ephemeral-storage" | quote }}
            {{- end }}
          limits:
            memory: {{ .Values.resources.nlf.limits.memory | quote }}
            cpu: {{ .Values.resources.nlf.limits.cpu | quote }}
            {{- if index .Values.resources.nlf.limits "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.resources.nlf.limits "ephemeral-storage" | quote }}
            {{- end }}
        {{ end }}
{{- if eq (include "eric-sc-nlf.logshipper-enabled" . ) "true" }}
      {{- $logshipperImageDict := dict "logshipperSidecarImage" ((((.Values).global).logShipper).config).image -}}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-container" (mergeOverwrite . $logshipperImageDict ) | indent 6 }}
{{- end }}
      volumes:
      - name: loglevel-volume
        configMap:
          name: {{ template "eric-sc-nlf.name" . }}-loglevel-config
{{- if eq (include "eric-sc-nlf.tapagent.enabled" .) "true" }}
      - name: {{ .Values.service.nlf.name }}-{{ .Values.tapagent.secret.name }}-volume
        secret:
          secretName: {{ .Values.tapagent.secret.name }}
      - name: eric-sc-{{ .Values.tapagent.configmap.name }}-volume
        configMap:
          name: eric-sc-{{ .Values.tapagent.configmap.name }}
{{- end }}
{{- if eq (include "eric-sc-nlf.fileCollector.enabled" .) "true" }}
      - name: coredump-storage
        persistentVolumeClaim:
          claimName: eric-sc-core-dumps
{{- end }}
      - name: custom
        emptyDir: {}
      - name: vertx
        emptyDir:
          medium: Memory
      - name: secrets
        secret:
          secretName: {{ .Values.certificates.nrf.secret | quote }}
          items:
            - key: tls.crt
              path: certificate.pem
            - key: tls.key
              path: key.pem
      - name: trustca
        secret:
          secretName: {{ .Values.certificates.nrf.caSecret | quote }}
      - name: nlf-server-certificates
        secret:
          secretName: eric-sc-nlf-server-certificate
          items:
          - key: cert.pem
            path: cert.pem
          - key: key.pem
            path: key.pem
      - name: mediator-if-server-ca
        secret:
          secretName: eric-cm-mediator-tls-client-ca-secret
          items:
          - key: client-cacertbundle.pem
            path: cacertbundle.pem
      - name: mediator-if-client-internal-cert
        secret:
          secretName: nlf-mediator-client-if-certificate-secret
          items:
          - key: tls.crt
            path: cert.pem
          - key: tls.key
            path: key.pem
      - name: mediator-if-client-ca
        secret:
          secretName: eric-sec-sip-tls-trusted-root-cert
          items:
          - key: ca.crt
            path: ca.crt
          - key: cacertbundle.pem
            path: cacertbundle.pem
      - name: pm-cacert
        secret:
          secretName: eric-pm-server-ca
          items:
          - key: client-cacertbundle.pem
            path: cacertbundle.pem
      - name: client-ca-volume
        secret:
          secretName: eric-sc-nlf-tls-client-ca-secret
          items:
          - key: cacertbundle.pem
            path: cacertbundle.pem
      - name: siptls-trusted-root-cacert
        secret:
          secretName: eric-sec-sip-tls-trusted-root-cert
      - name: manager-fhah-client-cert
        secret:
          secretName: nlf-fhah-client-if-certificate-secret
{{- if eq (include "eric-sc-nlf.dcedsc.tls" .) "true" }}
      - name: nlf-dcedsc-client-cert
        secret:
          secretName: eric-sc-nlf-dced-client-cert
{{- end }}
{{- if eq (include "eric-sc-nlf.logshipper-enabled" . ) "true" }}
     {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-volumes" . | indent 6 }}
{{- end }}
