# Copyright 2019 Ericsson GmbH
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.worker.name }}
  labels:
{{- include "eric-bsf.labels" . | indent 4 }}
    app: {{ .Values.service.worker.name | quote }}
  annotations:
{{- include "eric-bsf.helm-annotations" . | indent 4 }}
{{- include "eric-bsf.config-annotations" . | indent 4 }}
spec:
  replicas: {{ .Values.spec.worker.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy.type | quote }}
    rollingUpdate:
      maxUnavailable: {{ .Values.updateStrategy.rollingUpdate.maxUnavailable | quote }}
  selector:
    matchLabels:
      app: {{ .Values.service.worker.name | quote }}
  template:
    metadata:
      labels:
        {{- include "eric-bsf-worker.pod.labels" . | nindent 8 }}
        app: {{ .Values.service.worker.name | quote }}
      annotations:
{{- include "eric-bsf.helm-annotations" . | indent 8 }}
{{- include "eric-bsf.config-annotations" . | indent 8 }}
        evnfm.eo.ericsson.com/post-instantiate-status: "[{'containerName': '{{ .Values.service.cddjmxexporter.name }}', 'state': 'Running', 'ready': 'true'}, {'containerName': '{{ .Values.service.certnotifier.name }}', 'state': 'Running', 'ready': 'true'}]"
    spec:
      serviceAccountName: {{ .Values.service.worker.name }}-cm-key
      {{- if eq .Values.spec.worker.affinity.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.service.worker.name }}
              topologyKey: "kubernetes.io/hostname"
      {{- else if eq .Values.spec.worker.affinity.podAntiAffinity  "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Values.service.worker.name }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
      {{- if include "eric-bsf-worker.nodeSelector" . }}
      nodeSelector:
        {{ template "eric-bsf-worker.nodeSelector" . }}
      {{- end }}
      {{- if .Values.spec.worker.tolerations }}
      tolerations:
{{ toYaml .Values.spec.worker.tolerations | indent 8 }}
      {{- end }}
      {{- if include "eric-bsf.pullSecrets" . }}
      imagePullSecrets:
      - name: {{ template "eric-bsf.pullSecrets" . }}
      {{- end }}
      containers:
{{- if eq (include "eric-bsf.logshipper-enabled" . ) "true" }}
{{- $logshipperImageDict := dict "logshipperSidecarImage" ((((.Values).global).logShipper).config).image -}}
{{- include "eric-log-shipper-sidecar.log-shipper-sidecar-container" (mergeOverwrite . $logshipperImageDict ) | indent 6 }}
{{- end }}
{{- if eq (include "eric-bsf.tapagent.worker.enabled" .) "true" }}
      - name: {{ .Values.tapagent.name | quote }}
        image: {{ template "eric-bsf.tapagent.registryUrl" . }}/{{ template "eric-bsf.tapagent.repoPath" . }}/{{ template "eric-bsf.tapagent.image" . }}:{{ template "eric-bsf.tapagent.tag" . }}
        imagePullPolicy: {{ template "eric-bsf.tapagent.imagePullPolicy" . }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
              - all
            add: 
              - NET_ADMIN
              - NET_RAW
        resources:
          requests:
            cpu: {{ .Values.spec.tapagent.resources.requests.cpu | quote }}
            memory: {{ .Values.spec.tapagent.resources.requests.memory | quote }}
            {{- if index .Values.spec.tapagent.resources.requests "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.tapagent.resources.requests "ephemeral-storage" | quote }}
            {{- end }}
          limits:
            cpu: {{ .Values.spec.tapagent.resources.limits.cpu | quote }}
            memory: {{ .Values.spec.tapagent.resources.limits.memory | quote }}
            {{- if index .Values.spec.tapagent.resources.limits "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.tapagent.resources.limits "ephemeral-storage" | quote }}
            {{- end }}
        volumeMounts:
          - name: eric-sc-{{ .Values.spec.tapagent.configmap.name }}-volume
            mountPath: {{ .Values.spec.tapagent.configmap.mountpath }}
          - name: {{ .Values.service.worker.name }}-{{ .Values.spec.tapagent.secret.name }}-volume
            mountPath: {{ .Values.spec.tapagent.secret.mountpath }}
        env:
          - name: CM_CONFIG_FILE_PATH
            value: {{ .Values.spec.tapagent.configmap.mountpath }}
          - name: CM_CONFIG_FILE_NAME
            value: {{ .Values.spec.tapagent.configmap.fileName }}
          - name: SERVICE_NAME
            value: {{ .Values.service.worker.name }}
          - name: TZ
            value: {{ include "eric-bsf.timezone" . }}
          - name: SERVICE_ID
            value: {{ include "eric-bsf.name" . }}-worker
      - name: {{ .Values.tlskeylogagent.name | quote }}
        image: {{ template "eric-bsf.tlskeylogagent.registryUrl" . }}/{{ template "eric-bsf.tlskeylogagent.repoPath" . }}/{{ template "eric-bsf.tlskeylogagent.image" . }}:{{ template "eric-bsf.tlskeylogagent.tag" . }}
        imagePullPolicy: {{ template "eric-bsf.tlskeylogagent.imagePullPolicy" . }}
        securityContext:
          runAsGroup: {{ .Values.spec.tlskeylogagent.wgid }}
          runAsUser: {{ .Values.spec.tlskeylogagent.uid }}
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
              - all
        resources:
          requests:
            cpu: {{ .Values.spec.tlskeylogagent.resources.requests.cpu | quote }}
            memory: {{ .Values.spec.tlskeylogagent.resources.requests.memory | quote }}
          limits:
            cpu: {{ .Values.spec.tlskeylogagent.resources.limits.cpu | quote }}
            memory: {{ .Values.spec.tlskeylogagent.resources.limits.memory | quote }}
        volumeMounts:
          - mountPath: "/logcontrol/config/"
            name: logctrl-volume
          - name: eric-sc-{{ .Values.spec.tapagent.configmap.name }}-volume
            mountPath: {{ .Values.spec.tlskeylogagent.configmap.mountpath }}
          - name: {{ .Values.service.worker.name }}-{{ .Values.spec.tlskeylogagent.secret.name }}-volume
            mountPath: {{ .Values.spec.tlskeylogagent.secret.mountpath }}
          - name: custom
            mountPath: /mnt
{{- if eq (include "eric-bsf.logshipper-enabled" . ) "true" }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-mounts" . | indent 10 }}
{{- end }}
        env:
          - name: CONTAINER_NAME
            value: {{ .Values.tlskeylogagent.name }}
          - name: VTAP_CONFIG_DIR
            value: /etc/cm-config/
          - name: VTAP_SFTP_CONFIG_DIR
            value: /etc/ftpserver/
          - name: TLS_KEYLOGGER_FIFO_PATH
            value: /mnt/tlskeylogger.fifo
          - name: JVM_PARAMS
            value: {{ .Values.jvm.parameters.tlskeylogagent | quote }}
          - name: SERVICE_NAME
            value: {{ .Values.service.worker.name }}
          - name: TZ
            value: {{ include "eric-bsf.timezone" . }}
          - name: FILE_SIZE_LIMIT
            value: {{ .Values.tlskeylogagent.fileSizeLimit | quote }}
          - name: SERVICE_ID
            value: {{ include "eric-bsf.name" . }}-worker
          - name: LOG_PATH
            value: {{ .Values.logShipper.storage.path | quote }}
          - name: LOGBACK_FILENAME
            value: {{ include "eric-bsf.logbackFileName" . | quote }}
{{- end }}
      - name: {{ .Values.service.certnotifier.name | quote }}
        image: {{ template "eric-bsf.certnotifier.registryUrl" . }}/{{ template "eric-bsf.certnotifier.repoPath" . }}/{{ template "eric-bsf.certnotifier.image" . }}:{{ template "eric-bsf.certnotifier.tag" . }}
        imagePullPolicy: {{ template "eric-bsf.certnotifier.imagePullPolicy" . }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
              - all
        {{- if .Values.spec.certnotifier.resources }}
        resources:
          requests:
            memory: {{ .Values.spec.certnotifier.resources.requests.memory | quote }}
            cpu: {{ .Values.spec.certnotifier.resources.requests.cpu | quote }}
            {{- if index .Values.spec.certnotifier.resources.requests "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.certnotifier.resources.requests "ephemeral-storage" | quote }}
            {{- end }}
          limits:
            memory: {{ .Values.spec.certnotifier.resources.limits.memory | quote }}
            cpu: {{ .Values.spec.certnotifier.resources.limits.cpu | quote }}
            {{- if index .Values.spec.certnotifier.resources.limits "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.certnotifier.resources.limits "ephemeral-storage" | quote }}
            {{- end }}
        {{- end }}
        ports:
          - name: port-cert
            containerPort: {{ .Values.spec.certnotifier.port }}
        volumeMounts:
{{- if eq (include "eric-bsf.fileCollector.enabled" .) "true" }}
        - name: coredump-storage
          mountPath: /var/lib/systemd/coredump
          subPath: coredump/bsfWorker/{{ .Values.service.certnotifier.name}}
{{- end }}
        - name: secrets
          mountPath: {{ .Values.service.certnotifier.certs | quote }}
          readOnly: true
        - name: trustca
          mountPath: {{ .Values.service.certnotifier.trustCA | quote }}
          readOnly: true
        - name: custom
          mountPath: /mnt
        {{- if .Values.spec.certnotifier.nf }}
        - mountPath: "/worker/config/logcontrol"
          name: logctrl-volume
{{- if eq (include "eric-bsf.logshipper-enabled" . ) "true" }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-mounts" . | indent 8 }}
{{- end }}
        - name: vertx
          mountPath: "/vertx"
        env:
        - name: NF
          value: {{ .Values.spec.certnotifier.nf.name | quote }}
        {{- end }}
        - name: TZ
          value: {{ include "eric-bsf.timezone" . }}
        - name: SERVICE_ID
          value: {{ include "eric-bsf.name" . }}-worker
        - name: CONTAINER_NAME
          value: {{ .Values.service.certnotifier.name | quote }}
# STOP. Addition of env var for DND34555
        - name: DEFAULT_CERTIFICATE_PATH
          value: {{ .Values.service.certnotifier.certs | quote }}
        - name: DEFAULT_ROOT_CA_PATH
          value: {{ .Values.service.certnotifier.trustCA | quote }}
        - name: LOG_PATH
          value: {{ .Values.logShipper.storage.path | quote }}
        - name: LOGBACK_FILENAME
          value: {{ include "eric-bsf.logbackFileName" . | quote }}
      - name: {{ .Values.service.cddjmxexporter.name | quote }}
        image: {{ template "eric-bsf.cddjmxexporter.registryUrl" . }}/{{ template "eric-bsf.cddjmxexporter.repoPath" . }}/{{ template "eric-bsf.cddjmxexporter.image" . }}:{{ template "eric-bsf.cddjmxexporter.tag" . }}
        imagePullPolicy: {{ template "eric-bsf.cddjmxexporter.imagePullPolicy" . }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
              - all
        {{ if .Values.spec.cddjmxexporter.resources }}
        resources:
          requests:
            memory: {{ .Values.spec.cddjmxexporter.resources.requests.memory | quote }}
            cpu: {{ .Values.spec.cddjmxexporter.resources.requests.cpu | quote }}
            {{- if index .Values.spec.cddjmxexporter.resources.requests "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.cddjmxexporter.resources.requests "ephemeral-storage" | quote }}
            {{- end }}
          limits:
            memory: {{ .Values.spec.cddjmxexporter.resources.limits.memory | quote }}
            cpu: {{ .Values.spec.cddjmxexporter.resources.limits.cpu | quote }}
            {{- if index .Values.spec.cddjmxexporter.resources.limits "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.cddjmxexporter.resources.limits "ephemeral-storage" | quote }}
            {{- end }}
{{- end }}
        env:
        - name: CONFIG_YML
          value: {{ .Values.spec.cddjmxexporter.volumeMount.mountpath }}/{{ .Values.spec.cddjmxexporter.volumeMount.configfile }}
        - name: TZ
          value: {{ include "eric-bsf.timezone" . }}
        - name: SERVICE_ID
          value: {{ include "eric-bsf.name" . }}-worker
        volumeMounts:
{{- if eq (include "eric-bsf.fileCollector.enabled" .) "true" }}
        - name: coredump-storage
          mountPath: /var/lib/systemd/coredump
          subPath: coredump/bsfWorker/{{ .Values.service.cddjmxexporter.name}}
{{- end }}
        - name: {{ .Values.spec.cddjmxexporter.volumeMount.name | quote }}
          mountPath: {{ .Values.spec.cddjmxexporter.volumeMount.mountpath | quote }}
        ports:
        - containerPort: {{ .Values.spec.cddjmxexporter.port }}
          name: "metrics"
{{- if eq (include "eric-bsf.tapcollector.worker.enabled" .) "true" }}
      - name: {{ .Values.tapcollector.name | quote }}
        image: {{ template "eric-bsf.tapcollector.registryUrl" . }}/{{ template "eric-bsf.tapcollector.repoPath" . }}/{{ template "eric-bsf.tapcollector.image" . }}:{{ template "eric-bsf.tapcollector.tag" . }}
        imagePullPolicy: {{ template "eric-bsf.tapcollector.imagePullPolicy" . }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
              - all
        resources:
          requests:
            cpu: {{ .Values.spec.tapcollector.resources.requests.cpu | quote }}
            memory: {{ .Values.spec.tapcollector.resources.requests.memory | quote }}
          limits:
            cpu: {{ .Values.spec.tapcollector.resources.limits.cpu | quote }}
            memory: {{ .Values.spec.tapcollector.resources.limits.memory | quote }}
        volumeMounts:
          - name: custom
            mountPath: /mnt
          - name: logctrl-volume
            mountPath: /worker/config/logcontrol
{{- if eq (include "eric-bsf.logshipper-enabled" . ) "true" }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-mounts" . | indent 10 }}
{{- end }}
        ports:
        - name: metrics
          {{- if .Values.tapcollector.worker.pmClientPort }}
          containerPort: {{ .Values.tapcollector.worker.pmClientPort }}
          {{- else }}
          containerPort: 9091
          {{- end }}
          protocol: TCP
        env:
          - name: JVM_PARAMS
            value: {{ .Values.jvm.parameters.tapcollector | quote }}
          - name: TZ
            value: {{ include "eric-bsf.timezone" . }}
          - name: SERVICE_ID
            value: {{ include "eric-bsf.name" . }}-worker
          - name: PVTB_DOMAIN
            value: {{ .Values.vtap.domain}}
          - name: PVTB_PROTOCOL
            value: {{ .Values.vtap.protocol}}
          - name: PVTB_HOST
            value: {{ .Values.adp.probe.virtualTapBroker.hostname | quote }}
          - name: PVTB_PORT
            value: {{ .Values.adp.probe.virtualTapBroker.tcpPort | quote }}
          - name: LISTENING_PORT
            value: {{ .Values.tapcollector.worker.port | quote }}
          - name: DIVISION_METHOD
            value: {{ .Values.tapcollector.tappedData.divisionMethod | quote }}
          - name: CHUNK_SIZE_LIMIT
            value: {{ .Values.tapcollector.tappedData.chunkSizeLimit | quote }}
          - name: MAX_BUFFERED_PACKETS_PER_CONNECTION
            value: {{ .Values.tapcollector.worker.maxBufferedPacketsPerConnection | quote }}
          {{- if .Values.tapcollector.worker.pmClientPort }}
          - name: PM_CLIENT_PORT
            value: {{ .Values.tapcollector.worker.pmClientPort | quote }}
          {{- end }}
          {{- if .Values.tapcollector.worker.pmPath }}
          - name: PM_PATH
            value: {{ .Values.tapcollector.worker.pmPath | quote }}
          {{- end }}
          - name: REPLACE_LOCAL_SOCKET_ADDRESS
            value: {{ .Values.tapcollector.worker.replaceLocalSocketAddress | quote }}
          - name: REPLACE_LOCAL_SOCKET_ADDRESS_SERVICE_LABEL_KEY
            value: "ericsson.com/tapcollector-traffic-service"
          - name: REPLACE_LOCAL_SOCKET_ADDRESS_SERVICE_LABEL_VALUE
            value: {{ .Values.service.worker.name | quote }}
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CONTAINER_NAME
            value: {{ .Values.tapcollector.name | quote }}
          - name: LOG_PATH
            value: {{ .Values.logShipper.storage.path | quote }}
          - name: LOGBACK_FILENAME
            value: {{ include "eric-bsf.logbackFileName" . | quote }}
{{- end }}
      - name: {{ .Values.service.worker.name | quote }}
        image: {{ template "eric-bsf.worker.registryUrl" . }}/{{ template "eric-bsf.worker.repoPath" . }}/{{ template "eric-bsf.worker.image" . }}:{{ template "eric-bsf.worker.tag" . }}
        imagePullPolicy: {{ template "eric-bsf.worker.imagePullPolicy" . }}
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
        resources:
        {{ if .Values.spec.worker.resources }}
        resources:
          requests:
            memory: {{ .Values.spec.worker.resources.requests.memory | quote }}
            cpu: {{ .Values.spec.worker.resources.requests.cpu | quote }}
            {{- if index .Values.spec.worker.resources.requests "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.worker.resources.requests "ephemeral-storage" | quote }}
            {{- end }}
          limits:
            memory: {{ .Values.spec.worker.resources.limits.memory | quote }}
            cpu: {{ .Values.spec.worker.resources.limits.cpu | quote }}
            {{- if index .Values.spec.worker.resources.limits "ephemeral-storage" }}
            ephemeral-storage: {{ index .Values.spec.worker.resources.limits "ephemeral-storage" | quote }}
            {{- end }}
{{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
{{- if eq (include "eric-bsf.tapagent.worker.enabled" .) "true" }}
        - name: TLS_KEYLOGGER_FIFO_PATH
          value: /mnt/tlskeylogger.fifo
        - name: TLS_KEYLOGGER_FIFO_UID
          value: {{ .Values.spec.tlskeylogagent.wgid | quote }}
{{- end }}
        - name: CM_MEDIATOR
          value: {{ .Values.adp.cm.mediator.hostname | quote }}
        - name: SUBSCRIBE_VALIDITY
          value: {{ int .Values.adp.cm.mediator.subscription.validity | quote }}
        - name: SUBSCRIBE_RENEWAL
          value: {{ float64 .Values.adp.cm.mediator.subscription.renewal | quote }}
        - name: SUBSCRIBE_HEARTBEAT
          value: {{ int .Values.adp.cm.mediator.subscription.heartbeat | quote }}
        - name: GLOBAL_TLS_ENABLED
          value: {{ include "eric-bsf.tls" . | quote }}
        - name: DSCP_MARKING
{{ if lt (int .Values.worker.dscp) 0}}
          value: 0
{{ else if gt (int .Values.worker.dscp) 63}}
          value: 63
{{ else }}
          value: {{ int .Values.worker.dscp | quote }}
{{ end }}
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: CM_MEDIATOR_PORT
          value: {{ .Values.adp.cm.mediator.port | quote }}
        - name: SERVICE_HOST
          value: {{ .Values.service.worker.name | quote }}
        - name: SERVICE_PORT
          value: {{ .Values.service.worker.port | quote }}
        - name: IP_FAMILY
          value: {{ template "eric-bsf.ipfamily" . }}
        - name: MAX_CONCURRENT_STREAMS
          value: {{ .Values.worker.maxConcurrentStreams | quote }}
        - name: DEFAULT_ZERO_BINDING_TIMEOUT
          value: {{ .Values.cassandra.defaultZeroBindingTimeout | quote }}
        - name: SERVICE_OAM_TARGET_PORT
          value: {{ .Values.service.worker.server.oam.targetPort | quote }}
        - name: SERVICE_PROBE_PORT
          value: {{ .Values.probes.worker.port | quote }}
{{- if eq (include "eric-bsf.tls" .) "true" }}
        - name: WORKER_SERVER_CERT_PATH
          value: {{ .Values.service.worker.server.oam.tls.server.certPath | quote }}
        - name: MEDIATOR_SERVER_CA_PATH
          value: {{ .Values.service.worker.server.oam.tls.mediator.caPath | quote }}
        - name: PM_SERVER_CA_PATH
          value: {{ .Values.service.worker.server.oam.tls.pm.caPath | quote }}
        - name: WORKER_MEDIATOR_CLIENT_CERT_PATH
          value: {{ .Values.service.worker.client.mediator.tls.certPath | quote }}
        - name: WORKER_WCDBCD_CLIENT_CERT_PATH
          value: {{ .Values.service.worker.client.wcdbcd.tls.certPath | quote }}
        - name: SIP_TLS_TRUSTED_ROOT_CA_PATH
          value: {{ .Values.service.worker.client.siptls.caPath | quote }}
        - name: WORKER_TRAFFIC_CERTIFICATE
          value: {{ .Values.service.worker.certs | quote }}
        - name: WORKER_TRAFFIC_ROOT_CA_PATH
          value: {{ .Values.service.worker.trustCA | quote }}
{{- if eq (include "eric-bsf.worker.dcedsc.tls" .) "true" }}
        - name: WORKER_DCEDSC_CLIENT_CERT_PATH
          value: {{ .Values.service.worker.client.dcedsc.tls.certPath | quote }}
{{- end }}
{{- end }}
        - name: WEBSERVER_POOL_SIZE
          value: {{ .Values.worker.webserverPoolSize | quote }}
        - name: PCFRT_TTL_SEC
          value: {{ .Values.worker.pcfRecoveryTimeTTL  | quote }}
        - name: CHECK_RECOVERY_TIME
          value: {{ .Values.worker.checkRecoveryTime  | quote }}
{{- if eq (include "eric-bsf.tls" .) "true" }}
        - name: DCED_TLS_ENABLED
          value: {{ include "eric-bsf.worker.dcedsc.tls" . | quote }}
{{- end }}
        - name: TLS_PORT
          value: {{ .Values.spec.worker.tlsport | quote }}
        - name: NON_TLS_PORT
          value: {{ .Values.spec.worker.port | quote }}
        - name: JVM_PARAMS
          value: {{ .Values.jvm.parameters.worker | quote }}
        - name: ETCD_ENDPOINT
          value: {{ .Values.etcd.endpoint | quote }}
{{- if eq (include "eric-bsf.worker.dcedsc.tls" .) "false" }}
        - name: ETCD_USERNAME
          value: {{ .Values.etcd.username | quote }}
        - name: ETCD_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.etcd.secretName | quote }}
              key: {{ .Values.etcd.passwordKey | quote }}
{{- end }}
        - name: CASSANDRA_TLS_ENABLED
          value: {{ .Values.cassandra.tls.enabled | quote }}
        - name: CASSANDRA_TLS_HOSTNAME_VERIFICATION
          value: {{ .Values.cassandra.tls.hostnameVerification | quote }}
        - name: CASSANDRA_CONTACT_POINT
          value: {{ .Values.cassandra.contact_point | quote }}
        - name: CASSANDRA_CONTACT_POINT_REPLICAS
          value: {{ .Values.cassandra.contact_point_replicas | quote }}
        - name: CASSANDRA_KEYSPACE
          value: {{ .Values.cassandra.keyspace | quote }}
        - name:  CASSANDRA_LOCAL_DATACENTER
          value: {{ .Values.cassandra.datacenter | quote }}
        - name: CASSANDRA_THROTTLER_CLASS
          value: {{ .Values.cassandra.throttler.class | quote }}
        - name: CASSANDRA_THROTTLER_MAX_QUEUE_SIZE
          value: {{ .Values.cassandra.throttler.max_queue_size | quote }}
        - name: CASSANDRA_THROTTLER_MAX_CONCURRENT_REQUESTS
          value: {{ .Values.cassandra.throttler.max_concurrent_requests | quote }}
        - name: CASSANDRA_CONSISTENCY
{{- if .Values.cassandra.consistency }}
          value: {{ .Values.cassandra.consistency | quote }}
{{ else }}
          value: "ONE"
{{- end }}
        - name: CASSANDRA_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cassandra.auth.userSecret | quote }}
              key: "bsf_user"
        - name: CASSANDRA_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cassandra.auth.userSecret | quote }}
              key: "bsf_password"
        - name: METRICS_JMX_EXPORTER_SESSION
          value: {{ .Values.cassandra.metrics.sessionName  | quote }}
        - name: METRICS_JMX_EXPORTER_DOMAIN
          value: {{ .Values.cassandra.metrics.domainName  | quote }}
        - name: METRICS_SESSION_CQL_REQUESTS_HIGHEST
          value: {{ .Values.cassandra.metrics.cqlRequests.highestLatency | quote }}
        - name: METRICS_SESSION_CQL_REQUESTS_DIGITS
          value: {{ .Values.cassandra.metrics.cqlRequests.significantDigits | quote }}
        - name: METRICS_SESSION_CQL_REQUESTS_INTERVAL
          value: {{ .Values.cassandra.metrics.cqlRequests.refreshInterval | quote }}
        - name: METRICS_SESSION_THROTTLING_HIGHEST
          value: {{ .Values.cassandra.metrics.throttling.highestLatency | quote }}
        - name: METRICS_SESSION_THROTTLING_DIGITS
          value: {{ .Values.cassandra.metrics.throttling.significantDigits | quote }}
        - name: METRICS_SESSION_THROTTLING_INTERVAL
          value: {{ .Values.cassandra.metrics.throttling.refreshInterval | quote }}
        - name: METRICS_NODE_CQL_MESSAGES_HIGHEST
          value: {{ .Values.cassandra.metrics.cqlMessages.highestLatency | quote }}
        - name: METRICS_NODE_CQL_MESSAGES_DIGITS
          value: {{ .Values.cassandra.metrics.cqlMessages.significantDigits  | quote }}
        - name: METRICS_NODE_CQL_MESSAGES_INTERVAL
          value: {{ .Values.cassandra.metrics.cqlMessages.refreshInterval  | quote }}
        - name: TZ
          value: {{ include "eric-bsf.timezone" . }}
        - name: SERVICE_ID
          value: {{ include "eric-bsf.name" . }}-worker
        - name: BSFWORKER_CONTAINER_NAME
          value: {{ .Values.service.worker.name | quote }}
        - name: VTAP_ENABLED
          value: {{ include "eric-bsf-worker.vtap.enabled" . | quote}}
{{- if eq (include "eric-bsf-worker.vtap.enabled" .) "true" }}
        - name: VTAP_DOMAIN
          value: {{ .Values.vtap.domain}}
        - name: VTAP_PROTOCOL
          value: {{ .Values.vtap.protocol}}
        - name: PVTB_HOST
          value: {{ .Values.adp.probe.virtualTapBroker.hostname | quote }}
        - name: PVTB_API_PORT
          value: {{ .Values.adp.probe.virtualTapBroker.apiPort | quote }}
        - name: PVTB_POLLING_INTERVAL_SECONDS
          value: {{ .Values.vtap.pvtbPollingIntervalSeconds | quote }}
        - name: TRACE_SINK_PORT
          value: {{ .Values.tapcollector.worker.port | quote }}
        - name: TRACE_SINK_PACKET_BUFFER_SIZE
          value: {{ .Values.worker.traceSinkPacketBufferSize | quote }}
        - name: TRACE_SINK_SEGMENT_LIMIT_BYTES
          value: {{ .Values.worker.traceSinkSegmentLimitBytes | quote }}
{{- end }}
        - name: LOG_PATH
          value: {{ .Values.logShipper.storage.path | quote }}
        - name: LOGBACK_FILENAME
          value: {{ include "eric-bsf.logbackFileName" . | quote }}
        - name: OAUTH2_VALIDATE_OPTIONAL_PARAMETERS
          value: {{ .Values.worker.oAuth2.validateOptionalParameters | quote }}
        - name: OAUTH2_TOKEN_CACHE_LENGHT
          value: {{ .Values.worker.oAuth2.tokenCacheLenght | quote }}          
        - name: VAULT_HOST
          value: eric-sec-key-management
        - name: VAULT_PORT
          value: "8200"
        - name: VAULT_KEY_NAME
          value: eric-cm-key-v1
        - name: ACCOUNT_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        ports:
        - name: {{ .Values.service.worker.portName }}
          containerPort: {{ .Values.spec.worker.port }}
        - name: {{ .Values.service.worker.tlsPortName }}
          containerPort: {{ .Values.spec.worker.tlsport }}
{{- if eq (include "eric-bsf.tls" .) "true" }}
        - name: "metrics-tls"
{{- else }}
        - name: "metrics"
{{- end }}
          containerPort: {{ .Values.service.worker.server.oam.targetPort }}
        livenessProbe:
          httpGet:
            path: /probes/liveness
            port: {{ .Values.probes.worker.port }} # No quotes should be used!
          initialDelaySeconds: {{ .Values.probes.worker.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.worker.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.worker.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.probes.worker.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.worker.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /probes/readiness
            port: {{ .Values.probes.worker.port }} # No quotes should be used!
          initialDelaySeconds: {{ .Values.probes.worker.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.worker.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.worker.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.probes.worker.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.probes.worker.readinessProbe.failureThreshold }}
        volumeMounts:
{{- if eq (include "eric-bsf.tls" .) "true" }}
        - name: worker-oam-server-cert
          mountPath: {{ .Values.service.worker.server.oam.tls.server.certPath | quote }}
          readOnly: true
        - name: mediator-cacert
          mountPath: {{ .Values.service.worker.server.oam.tls.mediator.caPath | quote }}
          readOnly: true
        - name: pm-cacert
          mountPath: {{ .Values.service.worker.server.oam.tls.pm.caPath | quote }}
          readOnly: true
        - name: worker-mediator-client-cert
          mountPath: {{ .Values.service.worker.client.mediator.tls.certPath | quote }}
          readOnly: true
        - name: siptls-trusted-root-cacert
          mountPath: {{ .Values.service.worker.client.siptls.caPath | quote }}
          readOnly: true
        - name: worker-wcdb-client-cert
          mountPath: {{ .Values.service.worker.client.wcdbcd.tls.certPath | quote }}
          readOnly: true
        - name: secrets
          mountPath: {{ .Values.service.worker.certs | quote }}
          readOnly: true
        - name: trustca
          mountPath: {{ .Values.service.worker.trustCA | quote }}
          readOnly: true
{{- if eq (include "eric-bsf.worker.dcedsc.tls" .) "true" }}
        - name: worker-dcedsc-client-cert
          mountPath: {{ .Values.service.worker.client.dcedsc.tls.certPath | quote }}
          readOnly: true
{{- end }}
{{- end }}
{{- if eq (include "eric-bsf.fileCollector.enabled" .) "true" }}
        - name: coredump-storage
          mountPath: /var/lib/systemd/coredump
          subPath: coredump/bsfWorker/{{ .Values.service.worker.name}}
{{- end }}
        - name: custom
          mountPath: /mnt
        - mountPath: "/worker/config/logcontrol"
          name: logctrl-volume
{{- if eq (include "eric-bsf.logshipper-enabled" . ) "true" }}
      {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-mounts" . | indent 8 }}
{{- end }}
        - name: vertx
          mountPath: "/vertx"
      volumes:
{{- if eq (include "eric-bsf.tls" .) "true" }}
      - name: worker-oam-server-cert
        secret:
          secretName: {{ template "eric-bsf.name" . }}-worker-oam-server-certificate
      - name: mediator-cacert
        secret:
          secretName: eric-cm-mediator-tls-client-ca-secret
          items:
          - key: client-cacertbundle.pem
            path: cacertbundle.pem
      - name: pm-cacert
        secret:
          secretName: eric-pm-server-ca
          items:
          - key: client-cacertbundle.pem
            path: cacertbundle.pem
      - name: worker-mediator-client-cert
        secret:
          secretName: bsf-worker-mediator-client-if-certificate-secret
      - name: siptls-trusted-root-cacert
        secret:
          secretName: eric-sec-sip-tls-trusted-root-cert
      - name: worker-wcdb-client-cert
        secret:
          secretName: eric-bsf-wcdb-client-cert
{{- if eq (include "eric-bsf.worker.dcedsc.tls" .) "true" }}
      - name: worker-dcedsc-client-cert
        secret:
          secretName: eric-bsf-dced-client-cert
{{- end }}
{{- end }}
      - name: secrets
        secret:
          secretName: {{ .Values.certificates.traf.secret | quote }}
          items:
          - key: {{ .Values.worker.certificates.certificate | quote }}
            path: certificate.pem
          - key: {{ .Values.worker.certificates.key | quote }}
            path: key.pem
      - name: trustca
        secret:
          secretName: {{ .Values.certificates.traf.caSecret | quote }}
{{- if eq (include "eric-bsf.tapagent.worker.enabled" .) "true" }}
      - name: {{ .Values.service.worker.name }}-{{ .Values.spec.tapagent.secret.name }}-volume
        secret:
          secretName: {{ .Values.spec.tapagent.secret.name }}
      - name: eric-sc-{{ .Values.spec.tapagent.configmap.name }}-volume
        configMap:
          name: eric-sc-{{ .Values.spec.tapagent.configmap.name }}
{{- end }}
{{- if eq (include "eric-bsf.fileCollector.enabled" .) "true" }}
      - name: coredump-storage
        persistentVolumeClaim:
          claimName: eric-sc-core-dumps
{{- end }}
      - name: {{ .Values.spec.cddjmxexporter.volumeMount.name | quote }}
        configMap:
          name: {{ .Values.spec.cddjmxexporter.volumeMount.cmname | quote }}
      - name: custom
        emptyDir: {}
      - name: vertx
        emptyDir:
          medium: Memory
      - name: logctrl-volume
        configMap:
          name: {{ .Values.service.worker.name }}-configmap-log-ctrl
{{- if eq (include "eric-bsf.logshipper-enabled" . ) "true" }}
     {{- include "eric-log-shipper-sidecar.log-shipper-sidecar-volumes" . | indent 6 }}
{{- end }}
