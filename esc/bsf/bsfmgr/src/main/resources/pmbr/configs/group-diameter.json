[
  {
    "measurement-type": [
      {
        "measurement-name": "bsf_fe_diameter_load",
        "description": "BSF frontend diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_fe_diameter_load",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_fe_diameter_load",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_fe_diameter_load_avg",
        "description": "Average BSF frontend diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_fe_diameter_load",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_fe_diameter_load_avg",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_fe_diameter_load_max",
        "description": "Maximum BSF frontend diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_fe_diameter_load",
        "multiplicity": 1,
        "aggregation": "max",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_fe_diameter_load_max",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_proxy_grpc_diameter_load",
        "description": "BSF proxy grpc diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_proxy_grpc_diameter_load",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_proxy_grpc_diameter_load",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_proxy_grpc_diameter_load_avg",
        "description": "Average BSF proxy grpc diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_proxy_grpc_diameter_load",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_proxy_grpc_diameter_load_avg",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_proxy_grpc_diameter_load_max",
        "description": "Maximum BSF proxy grpc diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_proxy_grpc_diameter_load",
        "multiplicity": 1,
        "aggregation": "max",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_proxy_grpc_diameter_load_max",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_load",
        "description": "BSF diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_diameter_load",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_load",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_load_avg",
        "description": "Average BSF diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_diameter_load",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_load_avg",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_load_max",
        "description": "Maximum BSF diameter load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_diameter_load",
        "multiplicity": 1,
        "aggregation": "max",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_load_max",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_dsl_load",
        "description": "BSF dsl load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_dsl_load",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_dsl_load",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_dsl_load_avg",
        "description": "Average BSF dsl load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_dsl_load",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_dsl_load_avg",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_dsl_load_max",
        "description": "Maximum BSF dsl load in percent",
        "collection-method": "gauge",
        "internal-metric-name": "bsf_dsl_load",
        "multiplicity": 1,
        "aggregation": "max",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_dsl_load_max",
        "internal-instrumentation-label": {
          "nf": "bsf",
          "nf_instance": "",
          "app": "eric-bsf-manager"
        },
        "internal-target-pattern": "nf=[nf],nf_instance=[nf_instance]",
        "condition": "CPU Load increased. CPU Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_container_memory_usage_bytes",
        "description": "Memory usage per bsf diameter container in bytes",
        "collection-method": "gauge",
        "internal-metric-name": "container_memory_usage_bytes",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_container_memory_usage_bytes",
        "internal-instrumentation-label": {
          "container": "bsfdiameter",
          "pod": "",
          "instance": ""
        },
        "internal-target-pattern": "container=[container],pod=[pod],k8snode=[instance]",
        "condition": "Memory usage increased. Memory usage decreased.",
        "size": 8
      },
      {
        "measurement-name": "stm_diameter_container_memory_usage_bytes",
        "description": "Memory usage per stm diameter container in bytes",
        "collection-method": "gauge",
        "internal-metric-name": "container_memory_usage_bytes",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "stm_diameter_container_memory_usage_bytes",
        "internal-instrumentation-label": {
          "container": "diameter",
          "pod": "",
          "instance": ""
        },
        "internal-target-pattern": "container=[container],pod=[pod],k8snode=[instance]",
        "condition": "Memory usage increased. Memory usage decreased.",
        "size": 8
      },
      {
        "measurement-name": "stm_diameter_proxy_grpc_container_memory_usage_bytes",
        "description": "Memory usage per stm diameter proxy grpc container in bytes",
        "collection-method": "gauge",
        "internal-metric-name": "container_memory_usage_bytes",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "stm_diameter_proxy_grpc_container_memory_usage_bytes",
        "internal-instrumentation-label": {
          "container": "diameterproxygrpc",
          "pod": "",
          "instance": ""
        },
        "internal-target-pattern": "container=[container],pod=[pod],k8snode=[instance]",
        "condition": "Memory usage increased. Memory usage decreased.",
        "size": 8
      }
    ],
    "version": "1.0.0",
    "name": "bsf_system_metrics"
  },
  {
    "measurement-type": [
      {
        "measurement-name": "Diameter_IngressReqMsg_TotalCount",
        "description": "Measures the number of ingress request messages captured by Diameter Stack. That is, all the ingress request messages received by the Diameter Stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsg_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsg_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgResent_TotalCount",
        "description": "Measures the number of ingress request messages resent (message with T flag set).",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgResent_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgResent_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgDelivered_TotalCount",
        "description": "Measures the number of ingress request messages passed/delivered to AAA Services. That is, all the ingress request messages that are finally passed/delivered by the Diameter Stack for processing towards the relevant Diameter User Application implemented AAA Services.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgDelivered_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgDelivered_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgConnectionMgmt_TotalCount",
        "description": "Measures the number ingress connection management related request messages. That is, messages handled by Diameter Stack without application involvement (for instance: DWR, DPR).",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgConnectionMgmt_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgConnectionMgmt_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgDiscarded_TotalCount",
        "description": "Measures the number of ingress request messages dropped.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgDiscarded_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgDiscarded_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgDiscarded_ConnectionLost",
        "description": "Measures the number of ingress request messages dropped/discarded due to connection loss. That is, the ingress request message is discarded because the connectivity to related AAA Service instance the request message is to be forwarded is lost.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgDiscarded_ConnectionLost",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgDiscarded_ConnectionLost",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgDiscarded_Congestion",
        "description": "Measures the number of ingress request messages dropped/discarded due to congestion.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgDiscarded_Congestion",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgDiscarded_Congestion",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgDiscarded_Malformation",
        "description": "Measures the number of ingress request messages dropped/discarded due to message malformation. That is, the ingress request message is malformed to such a level that even an answer message cannot be created and sent towards origin host.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgDiscarded_Malformation",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgDiscarded_Malformation",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgDiscarded_Routing",
        "description": "Measures the number of ingress request messages dropped/discarded due to routing. That is, there is no routing rule fired for the received message (that is no service determined). Therefore, it is discarded by the diameter stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgDiscarded_Routing",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgDiscarded_Routing",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsg_TotalCount",
        "description": "Measures the number of ingress answer messages captured by the Diameter Stack. That is, all the ingress answer messages received by the stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsg_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsg_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsg_Info",
        "description": "Measures the number of ingress answer messages with result code: Informational.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsg_Info",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsg_Info",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsg_Success",
        "description": "Measures the number of ingress answer messages with result code: Success.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsg_Success",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsg_Success",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsg_ProtocolError",
        "description": "Measures the number of ingress answer messages with result code: Protocol Error (error answer message with E bit set).",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsg_ProtocolError",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsg_ProtocolError",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsg_TransientFailure",
        "description": "Measures the number of ingress answer messages with result code: Transient Failure.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsg_TransientFailure",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsg_TransientFailure",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsg_PermanentFailure",
        "description": "Measures the number of ingress answer messages with result code: Permanent Failure.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsg_PermanentFailure",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsg_PermanentFailure",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsg_Malformation",
        "description": "Measures the number of malformed ingress answer messages.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsg_Malformation",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsg_Malformation",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsgDelivered_TotalCount",
        "description": "Measures the number of ingress answer messages passed/delivered to AAA Services. That is, all the ingress answer messages that are finally passed/delivered by the Diameter Stack for processing to the relevant AAA Service.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsgDelivered_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsgDelivered_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsgConnectionMgmt_TotalCount",
        "description": "Measures the number ingress connection management related answer messages. That is, messages handled by Diameter Stack without application involvement (for instance: DWA, DPA).",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsgConnectionMgmt_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsgConnectionMgmt_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsgDiscarded_TotalCount",
        "description": "Measures the number of ingress answer messages dropped.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsgDiscarded_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsgDiscarded_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsgDiscarded_ConnectionLost",
        "description": "Measures the number of ingress answer messages dropped/discarded due to connection loss.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsgDiscarded_ConnectionLost",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsgDiscarded_ConnectionLost",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsgDiscarded_Congestion",
        "description": "Measures the number of ingress answer messages dropped/discarded due to congestion.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsgDiscarded_Congestion",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsgDiscarded_Congestion",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressAnswMsgDiscarded_Malformation",
        "description": "Measures the number of ingress answer messages dropped/discarded due to message malformation.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressAnswMsgDiscarded_Malformation",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressAnswMsgDiscarded_Malformation",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_IngressReqMsgDiscarded_LoopDetected",
        "description": "Measures the number of ingress request messages dropped/discarded when loop is detected by an agent.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_IngressReqMsgDiscarded_LoopDetected",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_IngressReqMsgDiscarded_LoopDetected",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_RxBytes_Total",
        "description": "Measures the number of received diameter message bytes.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_RxBytes_Total",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_RxBytes_Total",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      }
    ],
    "version": "1.0.0",
    "name": "diameter_ingress"
  },
  {
    "measurement-type": [
      {
        "measurement-name": "Diameter_EgressReqMsg_TotalCount",
        "description": "Measures the number of egress request messages issued by the Diameter Stack. That is, all the egress request messages sent out by Diameter.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsg_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsg_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgPosted_TotalCount",
        "description": "Measures the number of egress request messages posted by Diameter Applications towards the Diameter Stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgPosted_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgPosted_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgConnectionMgmt_TotalCount",
        "description": "Measures the number egress connection management related request messages. That is, messages handled by Diameter Stack without application involvement (for instance DWR, DPR).",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgConnectionMgmt_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgConnectionMgmt_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgResent_TotalCount",
        "description": "Measures the number of egress request messages resent.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgResent_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgResent_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgResent_ProtocolError",
        "description": "Measures the number of egress request messages resent due to Diameter Protocol Errors indicated by Diameter Peer Node.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgResent_ProtocolError",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgResent_ProtocolError",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgResent_TransientFailure",
        "description": "Measures the number of egress request messages resent due to Transient Failures indicated by Diameter Peer Node.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgResent_TransientFailure",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgResent_TransientFailure",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgResent_ConnectionLost",
        "description": "Measures the number of egress request messages resent due to peer connection loss. ",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgResent_ConnectionLost",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgResent_ConnectionLost",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgResent_TimeOut",
        "description": "Measures the number of egress request messages resent due to time-out.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgResent_TimeOut",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgResent_TimeOut",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgDiscarded_TotalCount",
        "description": "Measures the number of egress request messages dropped/discarded.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgDiscarded_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgDiscarded_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgDiscarded_ConnectionLost",
        "description": "Measures the number of egress request messages dropped/discarded due to connection loss.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgDiscarded_ConnectionLost",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgDiscarded_ConnectionLost",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgDiscarded_Routing",
        "description": "Measures the number of egress request messages dropped/discarded due to routing. That is, there is no routing rule fired for the message to be sent. Therefore, it is discarded by stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgDiscarded_Routing",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgDiscarded_Routing",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgDiscarded_TimeOut",
        "description": "Measures the number of egress request messages dropped/discarded due to time-out.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgDiscarded_TimeOut",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgDiscarded_TimeOut",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressReqMsgDiscarded_Congestion",
        "description": "Measures the number of egress request messages dropped/discarded due to congestion. That is, the egress request message is discarded because the message delivery was not possible due to congestion.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressReqMsgDiscarded_Congestion",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressReqMsgDiscarded_Congestion",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsg_TotalCount",
        "description": "Measures the number of egress answer messages issued by the Diameter Stack. That is, all the egress answer messages sent out by the stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsg_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsg_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsgPosted_TotalCount",
        "description": "Measures the number of egress answer messages posted by AAA Services towards the Diameter Stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsgPosted_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsgPosted_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsg_Info",
        "description": "Measures the number of egress answer messages handled by Diameter Server with result code: Informational.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsg_Info",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsg_Info",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsg_Success",
        "description": "Measures the number of egress answer messages handled by Diameter Server with result code: Success.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsg_Success",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsg_Success",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsg_ProtocolError",
        "description": "Measures the number of egress answer messages handled by Diameter Server with result code: Protocol Error (error answer message with E bit set).",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsg_ProtocolError",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsg_ProtocolError",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsg_TransientFailure",
        "description": "Measures the number of egress answer messages handled by Diameter Server with result code: Transient Failure.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsg_TransientFailure",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsg_TransientFailure",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsg_PermanentFailure",
        "description": "Measures the number of egress answer messages handled by Diameter Server with result code: Permanent Failure.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsg_PermanentFailure",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsg_PermanentFailure",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsgConnectionMgmt_TotalCount",
        "description": "Measures the number egress connection management related answer messages. That is, messages handled by Diameter Stack without application involvement (for instance: DWA, DPA).",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsgConnectionMgmt_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsgConnectionMgmt_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsgDiscarded_TotalCount",
        "description": "Measures the number of egress answer messages dropped.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsgDiscarded_TotalCount",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsgDiscarded_TotalCount",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsgDiscarded_ConnectionLost",
        "description": " Measures the number of egress answer messages dropped/discarded due to connection loss. That is, the egress answer message is discarded because the connectivity to related Diameter Peer or Diameter endpoint handler is lost.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsgDiscarded_ConnectionLost",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsgDiscarded_ConnectionLost",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsgDiscarded_Congestion",
        "description": " Measures the number of egress answer messages dropped/discarded due to congestion.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsgDiscarded_Congestion",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsgDiscarded_Congestion",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_EgressAnswMsgDiscarded_TimeOut",
        "description": " Measures the number of egress answer messages dropped/discarded due to time-out. That is, the time the Diameter stack waits for answering a message on user application level expires. Time-out is configurable.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_EgressAnswMsgDiscarded_TimeOut",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_EgressAnswMsgDiscarded_TimeOut",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TxBytes_Total",
        "description": "Measures the number of transmitted diameter message bytes.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TxBytes_Total",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TxBytes_Total",
        "internal-instrumentation-label": {
          "DiaNode": "",
          "DiaPeer": "",
          "DiaPeerConn": "",
          "dsl_class": "DiaPeerConn"
        },
        "internal-target-pattern": "DiaNode=[DiaNode],DiaPeer=[DiaPeer],DiaPeerConn=[DiaPeerConn]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      }
    ],
    "version": "1.0.0",
    "name": "diameter_egress"
  },
  {
    "measurement-type": [
      {
        "measurement-name": "Diameter_TransTerm_Ordered",
        "description": "Measures, on Diameter Stack level, the number of Transaction Termination orders received.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransTerm_Ordered",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransTerm_Ordered",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTerm_Succeeded",
        "description": "Measures, on Diameter Stack level, the number of Transaction Termination orders completed successfully.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransTerm_Succeeded",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransTerm_Succeeded",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTerm_Handled",
        "description": "Measures, on Diameter Stack level, the number of Transaction Termination orders handled.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransTerm_Handled",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransTerm_Handled",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransInit_Issued",
        "description": "Measures, on Diameter Stack level, the Transaction Termination success rate using a granularity period of one second. Issued Transaction Initiations are reflected by egress request messages counted.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransInit_Issued",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransInit_Issued",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransInit_Succeeded",
        "description": "Measures, on Diameter Stack level, the number of Transaction Initiations completed successfully. Completed Transaction Initiations are reflected by ingress answer messages, with success result-code.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransInit_Succeeded",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransInit_Succeeded",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransInit_Handled",
        "description": "Measures, on Diameter Stack level, the number of Transaction Initiation issues handled. Handled Transaction Initiation issues are reflected by the sum of ingress answer messages and dropped or timed-out egress request messages counted.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransInit_Handled",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransInit_Handled",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTerm_SuccessRate",
        "description": "Measures, on Diameter Stack level, the Transaction Termination success rate using a granularity period of one second. The measurement value is calculated using the following formula: Diameter_TransTerm_SuccessRate = (Diameter_TransTerm_Succeeded / Diameter_TransTerm_Handled) * 100 [%]",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransTerm_SuccessRate",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransTerm_SuccessRate",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransInit_SuccessRate",
        "description": "Measures, on Diameter Stack level, the Transaction Initiation success rate using a granularity period of one second. The measurement value is calculated using the following formula: Diameter_TransInit_SuccessRate = (Diameter_TransInit_Succeeded / Diameter_TransInit_Handled) * 100 [%]",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransInit_SuccessRate",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransInit_SuccessRate",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTermEP_MaxLatency",
        "description": "Measures, on external endpoint level, the maximum transaction termination latency. Latency is measured in Diameter Server as the time interval between the incoming request from a Peer Node that is received by the external endpoint and its related answer sent back by the user application that is received by the external endpoint for delivery to the Peer.",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransTermEP_MaxLatency",
        "multiplicity": 1,
        "aggregation": "max",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransTermEP_MaxLatency",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTermEP_MinLatency",
        "description": "Measures, on external endpoint level, the minimum transaction termination latency. Latency is measured in Diameter Server as the time interval between the incoming request from a Peer Node that is received by the external endpoint and its related answer sent back by the user application that is received by the external endpoint for delivery to the Peer.",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransTermEP_MinLatency",
        "multiplicity": 1,
        "aggregation": "min",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransTermEP_MinLatency",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTermEP_AvgLatency",
        "description": "Measures, on external endpoint level, the average transaction termination latency. Latency is measured in Diameter Server as the time interval between the incoming request from a Peer Node that is received by the external endpoint and its related answer sent back by the user application that is received by the external endpoint for delivery to the Peer.",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransTermEP_AvgLatency",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransTermEP_AvgLatency",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTermUI_MaxLatency",
        "description": "Measures, on diameter user interface level, the maximum transaction termination latency. Latency is measured in Diameter User Library instances as the time interval between the incoming request that is received by the Diameter User Library instance and its related answer sent back by the user application that is received by the Diameter User Library.",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransTermUI_MaxLatency",
        "multiplicity": 1,
        "aggregation": "max",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransTermUI_MaxLatency",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTermUI_MinLatency",
        "description": "Measures, on diameter user interface level, the minimum transaction termination latency. Latency is measured in Diameter User Library instances as the time interval between the incoming request that is received by the Diameter User Library instance and its related answer sent back by the user application that is received by the Diameter User Library.",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransTermUI_MinLatency",
        "multiplicity": 1,
        "aggregation": "min",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransTermUI_MinLatency",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTermUI_AvgLatency",
        "description": "Measures, on diameter user interface level, the average transaction termination latency. Latency is measured in Diameter User Library instances as the time interval between the incoming request that is received by the Diameter User Library instance and its related answer sent back by the user application that is received by the Diameter User Library.",
        "collection-method": "gauge",
        "internal-metric-name": "Diameter_TransTermUI_AvgLatency",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "Diameter_TransTermUI_AvgLatency",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransInit_Failed",
        "description": "Measures, on Diameter Stack level, the number of Transaction Initiation orders that are failed when expired outgoing request is removed from queue or incoming answer with result code other than success is processed by the stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransInit_Failed",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransInit_Failed",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      },
      {
        "measurement-name": "Diameter_TransTerm_Failed",
        "description": "Measures, on Diameter Stack level, the number of Transaction Termination orders that are failed when expired incoming request is removed from queue or outgoing answer with result code other than success is processed by the stack.",
        "collection-method": "cc",
        "internal-metric-name": "Diameter_TransTerm_Failed",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "used",
        "internal-metric-type": "Counter",
        "reset-at-gran-period": true,
        "id": "Diameter_TransTerm_Failed",
        "internal-instrumentation-label": {
          "dsl_class": "DiaApp",
          "DiaApp": "",
          "instance": ""
        },
        "internal-target-pattern": "DiaApp=[DiaApp],instance=[instance]",
        "condition": "Incremented: None Decremented: N/A",
        "size": 8
      }
    ],
    "version": "1.0.0",
    "name": "diameter_kpis"
  },
  {
    "measurement-type": [
      {
        "measurement-name": "bsf_diameter_tps",
        "description": "The sum of ingress request messages counted in Diameter Application context",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_tps",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_tps",
        "internal-target-pattern": "nf=bsf",
        "condition": "Diameter offered traffic increased. Diameter offered traffic decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_tps_avg",
        "description": "The average of ingress request messages counted in Diameter Application context",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_tps",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_tps_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "Diameter offered traffic increased. Diameter offered traffic decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_tps_max",
        "description": "The maximum of ingress request messages counted in Diameter Application context",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_tps",
        "multiplicity": 1,
        "aggregation": "max",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_tps_max",
        "internal-target-pattern": "nf=bsf",
        "condition": "Diameter offered traffic increased. Diameter offered traffic decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_tps_min",
        "description": "The minimum of ingress request messages counted in Diameter Application context",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_tps",
        "multiplicity": 1,
        "aggregation": "min",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_tps_min",
        "internal-target-pattern": "nf=bsf",
        "condition": "Diameter offered traffic increased. Diameter offered traffic decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_success_rate",
        "description": "Successful Transaction Rate on Diameter stack level",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_success_rate",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_success_rate",
        "internal-target-pattern": "nf=bsf",
        "condition": "Diameter success rate increased. Diameter success rate decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_success_rate_avg",
        "description": "Average successful Transaction Rate on Diameter stack level",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_success_rate",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_success_rate_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "Diameter success rate increased. Diameter success rate decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_success_rate_min",
        "description": "Minimum successful Transaction Rate on Diameter stack level",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_success_rate",
        "multiplicity": 1,
        "aggregation": "min",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_success_rate_min",
        "internal-target-pattern": "nf=bsf",
        "condition": "Diameter success rate increased. Diameter success rate decreased.",
        "size": 8
      }
    ],
    "name": "bsf_traffic_kpis",
    "description": "Group that monitors the BSF traffic KPIs",
    "version": "1.0.0"
  },
  {
    "measurement-type": [
      {
        "measurement-name": "bsf_diameter_avg_cpu_load_millicores",
        "description": "Average CPU usage of BSF Diameter Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_avg_cpu_load_millicores",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Load increased. BSF Diameter Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_avg_cpu_load_millicores_avg",
        "description": "Average over-time, of the average CPU usage of BSF Diameter Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_avg_cpu_load_millicores_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Load increased. BSF Diameter Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_fe_avg_cpu_load_millicores",
        "description": "Average CPU usage of Diameter Frontend Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:stm_diameter_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_fe_avg_cpu_load_millicores",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter FE Load increased. BSF Diameter FE Load decreased",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_fe_avg_cpu_load_millicores_avg",
        "description": "Average over-time, of the average CPU usage of Diameter Frontend Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:stm_diameter_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_fe_avg_cpu_load_millicores_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter FE Load increased. BSF Diameter FE Load decreased",
        "size": 8
      },
      {
        "measurement-name": "bsf_dsl_avg_cpu_load_millicores",
        "description": "Average CPU usage of BSF DSL Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_dsl_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_dsl_avg_cpu_load_millicores",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF DSL Load increased. BSF DSL Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_dsl_avg_cpu_load_millicores_avg",
        "description": "Average over-time, of the average CPU usage of BSF DSL Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_dsl_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_dsl_avg_cpu_load_millicores_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF DSL Load increased. BSF DSL Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_proxy_grpc_avg_cpu_load_millicores",
        "description": "Average CPU usage of BSF Diameter Proxy gRPC Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_grpc_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_proxy_grpc_avg_cpu_load_millicores",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Proxy gRPC Load increased. BSF Diameter Proxy gRPC Load decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_proxy_grpc_avg_cpu_load_millicores_avg",
        "description": "Average over-time, of the average CPU usage of BSF Diameter Proxy gRPC Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_grpc_avg_cpu_load_millicores",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_proxy_grpc_avg_cpu_load_millicores_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Proxy gRPC Load increased. BSF Diameter Proxy gRPC Load decreased.",
        "size": 8
      }, 
      {
        "measurement-name": "bsf_diameter_avg_memory_mb",
        "description": "Average Memory Usage of all the BSF Diameter Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_avg_memory_mb",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Memory increased. BSF Diameter Memory decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_avg_memory_mb_avg",
        "description": "Average over-time, of the average Memory Usage of all the BSF Diameter Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_avg_memory_mb_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Memory increased. BSF Diameter Memory decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_fe_avg_memory_mb",
        "description": "Average Memory Usage of all the BSF Diameter Frontend Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:stm_diameter_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_fe_avg_memory_mb",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter FE Memory increased. BSF Diameter FE Memory decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_fe_avg_memory_mb_avg",
        "description": "Average over-time, of the average Memory Usage of all the BSF Diameter Frontend Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:stm_diameter_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_fe_avg_memory_mb_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter FE Memory increased. BSF Diameter FE Memory decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_dsl_avg_memory_mb",
        "description": "Average Memory Usage of all the BSF DSL Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_dsl_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_dsl_avg_memory_mb",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF DSL Memory increased. BSF DSL Memory decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_dsl_avg_memory_mb_avg",
        "description": "Average over-time, of the average Memory Usage of all the BSF DSL Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_dsl_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_dsl_avg_memory_mb_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF DSL Memory increased. BSF DSL Memory decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_proxy_grpc_avg_memory_mb",
        "description": "Average Memory Usage of all the BSF Diameter Proxy gRPC Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_grpc_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "sum",
        "measurement-status": "deprecated",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_proxy_grpc_avg_memory_mb",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Proxy gRPC Memory increased. BSF Diameter Proxy gRPC Memory decreased.",
        "size": 8
      },
      {
        "measurement-name": "bsf_diameter_proxy_grpc_avg_memory_mb_avg",
        "description": "Average over-time, of the average Memory Usage of all the BSF Diameter Proxy gRPC Kubernetes containers",
        "collection-method": "gauge",
        "internal-metric-name": "job:bsf_diameter_grpc_avg_memory_mb",
        "multiplicity": 1,
        "aggregation": "avg",
        "measurement-status": "used",
        "internal-metric-type": "Gauge",
        "reset-at-gran-period": false,
        "id": "bsf_diameter_proxy_grpc_avg_memory_mb_avg",
        "internal-target-pattern": "nf=bsf",
        "condition": "BSF Diameter Proxy gRPC Memory increased. BSF Diameter Proxy gRPC Memory decreased.",
        "size": 8
      }
    ],
    "name": "bsf_system_kpis",
    "description": "Group that monitors the BSF system KPIs",
    "version": "1.0.0"
  }
]
