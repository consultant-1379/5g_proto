{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by jsonschema-generator (1.27.0-124 2023-06-15 16:50:09 CEST) from Yang module ietf-yang-library (2019-01-04) on Mar 5, 2024, 3:56:52 PM. Features: [ericsson-brm:failsafe-backups, ericsson-brm:housekeeping, ericsson-brm:label-store, ericsson-brm:rollback-at-restore, ericsson-brm:scheduler, ericsson-brm:sftp-client-authentication, ericsson-fm:alert, ericsson-keystore-ext:cmp, ericsson-keystore-ext:manual-renewal, ericsson-keystore-ext:pkcs10, ericsson-keystore-ext:pkcs12, ericsson-keystore-ext:pkcs8, ericsson-keystore-ext:scep, ericsson-notifications:netconf-state-change, ericsson-pm:measurement-jobs, ericsson-pm:realtime-jobs, ericsson-pm:threshold-jobs, ericsson-snmp:dtls, ericsson-snmp:network-prefix-validation, ericsson-snmp:no-auth-no-priv-feature, ericsson-system-ext:authentication-failure-alarm, ericsson-system-ext:ldap, ericsson-system-ext:ldap-authentication, ericsson-system-ext:ldap-clear, ericsson-system-ext:ldap-custom-filter, ericsson-system-ext:ldap-posix-filter, ericsson-system-ext:ldap-sasl-external, ericsson-system-ext:local-target-classes, ericsson-system-ext:ntp-security, ericsson-system-ext:oauth2-client-authentication, iana-crypt-hash:crypt-hash-md5, iana-crypt-hash:crypt-hash-sha-256, iana-crypt-hash:crypt-hash-sha-512, ietf-crypto-types:one-asymmetric-key-format, ietf-crypto-types:one-symmetric-key-format, ietf-crypto-types:encrypted-one-symmetric-key-format, ietf-crypto-types:encrypted-one-asymmetric-key-format, ietf-interfaces:arbitrary-names, ietf-interfaces:if-mib, ietf-interfaces:pre-provisioning, ietf-ip:ipv4-non-contiguous-netmasks, ietf-ip:ipv6-privacy-autoconf, ietf-keystore:key-generation, ietf-keystore:keystore-supported, ietf-keystore:local-definitions-supported, ietf-keystore:keystore-supported, ietf-netconf:candidate, ietf-netconf:confirmed-commit, ietf-netconf:rollback-on-error, ietf-netconf:startup, ietf-netconf:url, ietf-netconf:validate, ietf-netconf:writable-running, ietf-netconf:xpath, ietf-ssh-client:ssh-client-transport-params-config, ietf-ssh-client:ssh-client-keepalives, ietf-ssh-common:ssh-ctr, ietf-ssh-common:ssh-dh-group-exchange, ietf-ssh-common:ssh-ecc, ietf-ssh-common:ssh-sha2, ietf-ssh-common:ssh-x509-certs, ietf-system:authentication, ietf-system:dns-udp-tcp-port, ietf-system:local-users, ietf-system:ntp, ietf-system:ntp-udp-port, ietf-system:radius, ietf-system:radius-authentication, ietf-system:timezone-name, ietf-system:authentication, ietf-system:local-users, ietf-system:ntp, ietf-tls-client:tls-client-hello-params-config, ietf-tls-client:tls-client-keepalives, ietf-tls-client:x509-certificate-auth, ietf-tls-client:raw-public-key-auth, ietf-tls-client:psk-auth, ietf-tls-common:tls-1_0, ietf-tls-common:tls-1_1, ietf-tls-common:tls-1_2, ietf-tls-common:tls-1_3, ietf-tls-common:tls-3des, ietf-tls-common:tls-dhe, ietf-tls-common:tls-ecc, ietf-tls-common:tls-gcm, ietf-tls-common:tls-sha2, ietf-tls-server:tls-server-hello-params-config, ietf-tls-server:tls-server-keepalives, ietf-tls-server:client-auth-config-supported, ietf-tls-server:external-client-auth-supported, ietf-tls-server:x509-certificate-auth, ietf-tls-server:raw-public-key-auth, ietf-tls-server:psk-auth, ietf-truststore:local-definitions-supported, ietf-truststore:raw-public-keys, ietf-truststore:ssh-host-keys, ietf-truststore:truststore-supported, ietf-truststore:x509-certificates, ietf-truststore:truststore-supported, ietf-truststore:ssh-host-keys, ietf-truststore:x509-certificates]. Deviations/extensions: [ericsson-brm-ext-adp, ericsson-data-collector-ext-adp, ericsson-fm-ext-adp, ericsson-keystore-ext, ericsson-netconf-acm-ext, ericsson-pm-dev-adp, ericsson-system-ext-aum, ericsson-system-ext, ericsson-truststore-ext, ericsson-yang-library-ext, ietf-ip, ietf-netconf-with-defaults, ietf-network-instance, tailf-acm]",
  "title": "ietf-yang-library",
  "type": "object",
  "properties": {
    "ietf-yang-library:yang-library": {
      "type": "object",
      "description": "Container holding the entire YANG library of this server.",
      "readOnly": true,
      "properties": {
        "content-id": {
          "type": "string",
          "description": "A server-generated identifier of the contents of the '/yang-library' tree. The server MUST change the value of this leaf if the information represented by the '/yang-library' tree, except '/yang-library/content-id', has changed."
        },
        "module-set": {
          "type": "array",
          "uniqueItems": true,
          "description": "A set of modules that may be used by one or more schemas. A module set does not have to be referentially complete, i.e., it may define modules that contain import statements for other modules not included in the module set.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "An arbitrary name of the module set."
              },
              "module": {
                "type": "array",
                "uniqueItems": true,
                "description": "An entry in this list represents a module implemented by the server, as per Section 5.6.5 of RFC 7950, with a particular set of supported features and deviations.",
                "items": {
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "type": "string",
                      "format": "uri",
                      "description": "The XML namespace identifier for this module."
                    },
                    "submodule": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "Each entry represents one submodule within the parent module.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "allOf": [
                              {
                                "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                              },
                              {
                                "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                              }
                            ],
                            "description": "The YANG module or submodule name."
                          },
                          "revision": {
                            "type": "string",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                            "description": "The YANG module or submodule revision date. If no revision statement is present in the YANG module or submodule, this leaf is not instantiated."
                          },
                          "location": {
                            "type": "array",
                            "description": "Contains a URL that represents the YANG schema resource for this module or submodule. This leaf will only be present if there is a URL available for retrieval of the schema for this entry.",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "name": {
                      "type": "string",
                      "allOf": [
                        {
                          "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                        },
                        {
                          "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                        }
                      ],
                      "description": "The YANG module or submodule name."
                    },
                    "revision": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                      "description": "The YANG module or submodule revision date. If no revision statement is present in the YANG module or submodule, this leaf is not instantiated."
                    },
                    "location": {
                      "type": "array",
                      "description": "Contains a URL that represents the YANG schema resource for this module or submodule. This leaf will only be present if there is a URL available for retrieval of the schema for this entry.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "feature": {
                      "type": "array",
                      "description": "List of all YANG feature names from this module that are supported by the server, regardless whether they are defined in the module or any included submodule.",
                      "items": {
                        "type": "string",
                        "allOf": [
                          {
                            "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                          },
                          {
                            "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                          }
                        ]
                      }
                    },
                    "deviation": {
                      "type": "array",
                      "description": "List of all YANG deviation modules used by this server to modify the conformance of the module associated with this entry. Note that the same module can be used for deviations for multiple modules, so the same entry MAY appear within multiple 'module' entries. This reference MUST NOT (directly or indirectly) refer to the module being deviated. Robust clients may want to make sure that they handle a situation where a module deviates itself (directly or indirectly) gracefully.",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "name",
                    "namespace"
                  ]
                }
              },
              "import-only-module": {
                "type": "array",
                "uniqueItems": true,
                "description": "An entry in this list indicates that the server imports reusable definitions from the specified revision of the module but does not implement any protocol-accessible objects from this revision. Multiple entries for the same module name MAY exist. This can occur if multiple modules import the same module but specify different revision dates in the import statements.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "allOf": [
                        {
                          "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                        },
                        {
                          "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                        }
                      ],
                      "description": "The YANG module name."
                    },
                    "revision": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "The YANG module revision date. A zero-length string is used if no revision statement is present in the YANG module."
                    },
                    "namespace": {
                      "type": "string",
                      "format": "uri",
                      "description": "The XML namespace identifier for this module."
                    },
                    "submodule": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "Each entry represents one submodule within the parent module.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "allOf": [
                              {
                                "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                              },
                              {
                                "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                              }
                            ],
                            "description": "The YANG module or submodule name."
                          },
                          "revision": {
                            "type": "string",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                            "description": "The YANG module or submodule revision date. If no revision statement is present in the YANG module or submodule, this leaf is not instantiated."
                          },
                          "location": {
                            "type": "array",
                            "description": "Contains a URL that represents the YANG schema resource for this module or submodule. This leaf will only be present if there is a URL available for retrieval of the schema for this entry.",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "location": {
                      "type": "array",
                      "description": "Contains a URL that represents the YANG schema resource for this module or submodule. This leaf will only be present if there is a URL available for retrieval of the schema for this entry.",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "name",
                    "namespace",
                    "revision"
                  ]
                }
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "schema": {
          "type": "array",
          "uniqueItems": true,
          "description": "A datastore schema that may be used by one or more datastores. The schema must be valid and referentially complete, i.e., it must contain modules to satisfy all used import statements for all modules specified in the schema.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "An arbitrary name of the schema."
              },
              "module-set": {
                "type": "array",
                "description": "A set of module-sets that are included in this schema. If a non-import-only module appears in multiple module sets, then the module revision and the associated features and deviations must be identical.",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "datastore": {
          "type": "array",
          "uniqueItems": true,
          "description": "A datastore supported by this server. Each datastore indicates which schema it supports. The server MUST instantiate one entry in this list per specific datastore it supports. Each datastore entry with the same datastore schema SHOULD reference the same schema.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The identity of the datastore."
              },
              "schema": {
                "type": "string",
                "description": "A reference to the schema supported by this datastore. All non-import-only modules of the schema are implemented with their associated features and deviations."
              }
            },
            "required": [
              "name",
              "schema"
            ]
          }
        }
      }
    },
    "ietf-yang-library:modules-state": {
      "type": "object",
      "description": "Contains YANG module monitoring information.",
      "readOnly": true,
      "properties": {
        "module-set-id": {
          "type": "string",
          "description": "Contains a server-specific identifier representing the current set of modules and submodules. The server MUST change the value of this leaf if the information represented by the 'module' list instances has changed."
        },
        "module": {
          "type": "array",
          "uniqueItems": true,
          "description": "Each entry represents one revision of one module currently supported by the server.",
          "items": {
            "type": "object",
            "properties": {
              "namespace": {
                "type": "string",
                "format": "uri",
                "description": "The XML namespace identifier for this module."
              },
              "feature": {
                "type": "array",
                "description": "List of YANG feature names from this module that are supported by the server, regardless of whether they are defined in the module or any included submodule.",
                "items": {
                  "type": "string",
                  "allOf": [
                    {
                      "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                    },
                    {
                      "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                    }
                  ]
                }
              },
              "deviation": {
                "type": "array",
                "uniqueItems": true,
                "description": "List of YANG deviation module names and revisions used by this server to modify the conformance of the module associated with this entry. Note that the same module can be used for deviations for multiple modules, so the same entry MAY appear within multiple 'module' entries. The deviation module MUST be present in the 'module' list, with the same name and revision values. The 'conformance-type' value will be 'implement' for the deviation module.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "allOf": [
                        {
                          "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                        },
                        {
                          "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                        }
                      ],
                      "description": "The YANG module or submodule name."
                    },
                    "revision": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "The YANG module or submodule revision date. A zero-length string is used if no revision statement is present in the YANG module or submodule."
                    }
                  },
                  "required": [
                    "name",
                    "revision"
                  ]
                }
              },
              "conformance-type": {
                "enum": [
                  "implement",
                  "import"
                ],
                "description": "Indicates the type of conformance the server is claiming for the YANG module identified by this entry."
              },
              "submodule": {
                "type": "array",
                "uniqueItems": true,
                "description": "Each entry represents one submodule within the parent module.",
                "items": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "description": "The version number of the module/submodule, will be stepped when the module/submodule is changed in a backward incompatible way."
                    },
                    "release": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "description": "The release number of the module/submodule, will be stepped for each backward compatible change. When the version is stepped, the release is reset to 0."
                    },
                    "correction": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 4294967295,
                      "description": "The correction number of the module/submodule, will be stepped for each backward compatible correction, when a later release already exists. When release is stepped or reset, correction is reset to 0."
                    },
                    "name": {
                      "type": "string",
                      "allOf": [
                        {
                          "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                        },
                        {
                          "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                        }
                      ],
                      "description": "The YANG module or submodule name."
                    },
                    "revision": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "The YANG module or submodule revision date. A zero-length string is used if no revision statement is present in the YANG module or submodule."
                    },
                    "schema": {
                      "type": "string",
                      "format": "uri",
                      "description": "Contains a URL that represents the YANG schema resource for this module or submodule. This leaf will only be present if there is a URL available for retrieval of the schema for this entry."
                    }
                  },
                  "required": [
                    "name",
                    "revision"
                  ]
                }
              },
              "version": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0,
                "maximum": 4294967295,
                "description": "The version number of the module/submodule, will be stepped when the module/submodule is changed in a backward incompatible way."
              },
              "release": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0,
                "maximum": 4294967295,
                "description": "The release number of the module/submodule, will be stepped for each backward compatible change. When the version is stepped, the release is reset to 0."
              },
              "correction": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0,
                "maximum": 4294967295,
                "description": "The correction number of the module/submodule, will be stepped for each backward compatible correction, when a later release already exists. When release is stepped or reset, correction is reset to 0."
              },
              "name": {
                "type": "string",
                "allOf": [
                  {
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9\\-_.]*$"
                  },
                  {
                    "pattern": "^.|..|[^xX].*|.[^mM].*|..[^lL].*$"
                  }
                ],
                "description": "The YANG module or submodule name."
              },
              "revision": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The YANG module or submodule revision date. A zero-length string is used if no revision statement is present in the YANG module or submodule."
              },
              "schema": {
                "type": "string",
                "format": "uri",
                "description": "Contains a URL that represents the YANG schema resource for this module or submodule. This leaf will only be present if there is a URL available for retrieval of the schema for this entry."
              }
            },
            "required": [
              "conformance-type",
              "name",
              "namespace",
              "revision"
            ]
          }
        }
      }
    }
  },
  "eric-adp-genoptions": [
    {
      "module-prefixing": false
    },
    {
      "encoding-format": "eric-rfc7951-json"
    },
    {
      "generate-submodule-jsonschema": false
    },
    {
      "additional-properties": true
    }
  ],
  "eric-adp-encoding-format": "eric-rfc7951-json",
  "eric-adp-yang-module": "ietf-yang-library"
}