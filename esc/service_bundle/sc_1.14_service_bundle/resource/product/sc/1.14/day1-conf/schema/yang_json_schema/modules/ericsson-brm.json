{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by jsonschema-generator (1.27.0-124 2023-06-15 16:50:09 CEST) from Yang module ericsson-brm (4.5.0) on Mar 5, 2024, 3:56:51 PM. Features: [ericsson-brm:failsafe-backups, ericsson-brm:housekeeping, ericsson-brm:label-store, ericsson-brm:rollback-at-restore, ericsson-brm:scheduler, ericsson-brm:sftp-client-authentication, ericsson-fm:alert, ericsson-keystore-ext:cmp, ericsson-keystore-ext:manual-renewal, ericsson-keystore-ext:pkcs10, ericsson-keystore-ext:pkcs12, ericsson-keystore-ext:pkcs8, ericsson-keystore-ext:scep, ericsson-notifications:netconf-state-change, ericsson-pm:measurement-jobs, ericsson-pm:realtime-jobs, ericsson-pm:threshold-jobs, ericsson-snmp:dtls, ericsson-snmp:network-prefix-validation, ericsson-snmp:no-auth-no-priv-feature, ericsson-system-ext:authentication-failure-alarm, ericsson-system-ext:ldap, ericsson-system-ext:ldap-authentication, ericsson-system-ext:ldap-clear, ericsson-system-ext:ldap-custom-filter, ericsson-system-ext:ldap-posix-filter, ericsson-system-ext:ldap-sasl-external, ericsson-system-ext:local-target-classes, ericsson-system-ext:ntp-security, ericsson-system-ext:oauth2-client-authentication, iana-crypt-hash:crypt-hash-md5, iana-crypt-hash:crypt-hash-sha-256, iana-crypt-hash:crypt-hash-sha-512, ietf-crypto-types:one-asymmetric-key-format, ietf-crypto-types:one-symmetric-key-format, ietf-crypto-types:encrypted-one-symmetric-key-format, ietf-crypto-types:encrypted-one-asymmetric-key-format, ietf-interfaces:arbitrary-names, ietf-interfaces:if-mib, ietf-interfaces:pre-provisioning, ietf-ip:ipv4-non-contiguous-netmasks, ietf-ip:ipv6-privacy-autoconf, ietf-keystore:key-generation, ietf-keystore:keystore-supported, ietf-keystore:local-definitions-supported, ietf-keystore:keystore-supported, ietf-netconf:candidate, ietf-netconf:confirmed-commit, ietf-netconf:rollback-on-error, ietf-netconf:startup, ietf-netconf:url, ietf-netconf:validate, ietf-netconf:writable-running, ietf-netconf:xpath, ietf-ssh-client:ssh-client-transport-params-config, ietf-ssh-client:ssh-client-keepalives, ietf-ssh-common:ssh-ctr, ietf-ssh-common:ssh-dh-group-exchange, ietf-ssh-common:ssh-ecc, ietf-ssh-common:ssh-sha2, ietf-ssh-common:ssh-x509-certs, ietf-system:authentication, ietf-system:dns-udp-tcp-port, ietf-system:local-users, ietf-system:ntp, ietf-system:ntp-udp-port, ietf-system:radius, ietf-system:radius-authentication, ietf-system:timezone-name, ietf-system:authentication, ietf-system:local-users, ietf-system:ntp, ietf-tls-client:tls-client-hello-params-config, ietf-tls-client:tls-client-keepalives, ietf-tls-client:x509-certificate-auth, ietf-tls-client:raw-public-key-auth, ietf-tls-client:psk-auth, ietf-tls-common:tls-1_0, ietf-tls-common:tls-1_1, ietf-tls-common:tls-1_2, ietf-tls-common:tls-1_3, ietf-tls-common:tls-3des, ietf-tls-common:tls-dhe, ietf-tls-common:tls-ecc, ietf-tls-common:tls-gcm, ietf-tls-common:tls-sha2, ietf-tls-server:tls-server-hello-params-config, ietf-tls-server:tls-server-keepalives, ietf-tls-server:client-auth-config-supported, ietf-tls-server:external-client-auth-supported, ietf-tls-server:x509-certificate-auth, ietf-tls-server:raw-public-key-auth, ietf-tls-server:psk-auth, ietf-truststore:local-definitions-supported, ietf-truststore:raw-public-keys, ietf-truststore:ssh-host-keys, ietf-truststore:truststore-supported, ietf-truststore:x509-certificates, ietf-truststore:truststore-supported, ietf-truststore:ssh-host-keys, ietf-truststore:x509-certificates]. Deviations/extensions: [ericsson-brm-ext-adp, ericsson-data-collector-ext-adp, ericsson-fm-ext-adp, ericsson-keystore-ext, ericsson-netconf-acm-ext, ericsson-pm-dev-adp, ericsson-system-ext-aum, ericsson-system-ext, ericsson-truststore-ext, ericsson-yang-library-ext, ietf-ip, ietf-netconf-with-defaults, ietf-network-instance, tailf-acm]",
  "title": "ericsson-brm",
  "type": "object",
  "properties": {
    "ericsson-brm:brm": {
      "type": "object",
      "description": "Backup and Restore Management.",
      "properties": {
        "backup-manager": {
          "type": "array",
          "uniqueItems": true,
          "description": "Top node for a backup-domain/type.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Identity of the backup-manager."
              },
              "backup-type": {
                "type": "string",
                "readOnly": true,
                "description": "Type of backup, for example System Data or User Data."
              },
              "backup-domain": {
                "type": "string",
                "readOnly": true,
                "description": "Backup domain, for example System."
              },
              "progress-report": {
                "type": "array",
                "readOnly": true,
                "uniqueItems": true,
                "maxItems": 1,
                "description": "Represents the progress report and final result of the ongoing (asynchronous) action, for example create-backup. Supports only one action to be executed at a time.",
                "items": {
                  "type": "object",
                  "properties": {
                    "action-name": {
                      "type": "string",
                      "description": "Name of the invoked asynchronous action."
                    },
                    "additional-info": {
                      "type": "array",
                      "description": "Used for logging significant messages during execution of an action.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "progress-info": {
                      "type": "string",
                      "description": "Textual information that describes the actual state of the action execution."
                    },
                    "progress-percentage": {
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0,
                      "maximum": 100,
                      "description": "Progress of the action."
                    },
                    "result": {
                      "enum": [
                        "success",
                        "failure",
                        "not-available"
                      ],
                      "description": "Result state of a completed action. This field has value not-available if the action is not finished."
                    },
                    "result-info": {
                      "type": "string",
                      "description": "Textual description of the outcome/result of the action containing useful information for the NMS. If the action failed, it can contain an error message."
                    },
                    "state": {
                      "enum": [
                        "cancelling",
                        "running",
                        "finished",
                        "cancelled"
                      ],
                      "description": "Current state of the action."
                    },
                    "action-id": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Uniquely identifies the invocation of an action. Identifies the invocation of an action when the managed object allows invocation of more than one action at a time."
                    },
                    "time-action-started": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the current action was started."
                    },
                    "time-action-completed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the action was completed (successfully or unsuccessfully)."
                    },
                    "time-of-last-status-update": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the struct member state was last updated."
                    }
                  },
                  "required": [
                    "time-action-started",
                    "time-of-last-status-update"
                  ]
                }
              },
              "backup": {
                "type": "array",
                "readOnly": true,
                "uniqueItems": true,
                "description": "Represents one backup of the type and domain specified by the backup-manager in which it is contained.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Identity of the backup."
                    },
                    "backup-name": {
                      "type": "string",
                      "description": "Backup name, provided by the operator."
                    },
                    "creation-time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the backup was created, i.e., start time of backup procedure."
                    },
                    "status": {
                      "enum": [
                        "backup-complete",
                        "backup-incomplete",
                        "backup-corrupted"
                      ],
                      "description": "Status of the backup."
                    },
                    "progress-report": {
                      "type": "array",
                      "uniqueItems": true,
                      "maxItems": 1,
                      "description": "Represents the progress report and final result of the ongoing (asynchronous) action in this backup, for example restore. Backup supports only one action to be executed at a time.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action-name": {
                            "type": "string",
                            "description": "Name of the invoked asynchronous action."
                          },
                          "additional-info": {
                            "type": "array",
                            "description": "Used for logging significant messages during execution of an action.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "progress-info": {
                            "type": "string",
                            "description": "Textual information that describes the actual state of the action execution."
                          },
                          "progress-percentage": {
                            "type": "integer",
                            "format": "uint8",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Progress of the action."
                          },
                          "result": {
                            "enum": [
                              "success",
                              "failure",
                              "not-available"
                            ],
                            "description": "Result state of a completed action. This field has value not-available if the action is not finished."
                          },
                          "result-info": {
                            "type": "string",
                            "description": "Textual description of the outcome/result of the action containing useful information for the NMS. If the action failed, it can contain an error message."
                          },
                          "state": {
                            "enum": [
                              "cancelling",
                              "running",
                              "finished",
                              "cancelled"
                            ],
                            "description": "Current state of the action."
                          },
                          "action-id": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0,
                            "maximum": 65535,
                            "description": "Uniquely identifies the invocation of an action. Identifies the invocation of an action when the managed object allows invocation of more than one action at a time."
                          },
                          "time-action-started": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the current action was started."
                          },
                          "time-action-completed": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the action was completed (successfully or unsuccessfully)."
                          },
                          "time-of-last-status-update": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the struct member state was last updated."
                          }
                        },
                        "required": [
                          "time-action-started",
                          "time-of-last-status-update"
                        ]
                      }
                    },
                    "creation-type": {
                      "enum": [
                        "manual",
                        "scheduled",
                        "system-created"
                      ],
                      "description": "Creation type; whether manually created or automatically via scheduler."
                    },
                    "sw-version": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "The administrative data portion of active software versions as specified in the software inventory management, when the backup is created.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product-name": {
                            "type": "string",
                            "description": "Name of the product."
                          },
                          "product-number": {
                            "type": "string",
                            "description": "Product number of the product."
                          },
                          "product-revision": {
                            "type": "string",
                            "description": "Revision state of the product."
                          },
                          "semantic-version": {
                            "type": "string",
                            "pattern": "^\\d+[.]\\d+[.]\\d+(-[\\w\\d.]+)?([+][\\w\\d\\.]+)?$",
                            "description": "Semantic version of the product. semantic-version will change to a new value whenever product-revision changes. A specific product-version will always be acompanied by the same semantic-version."
                          },
                          "commercial-version": {
                            "type": "string",
                            "description": "Commercial version of the product. commercial-version will change to a new value whenever product-revision changes. A specific product-version will always be acompanied by the same commercial-version."
                          },
                          "production-date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Production date of the product."
                          },
                          "description": {
                            "type": "string",
                            "description": "Free text description of the product."
                          },
                          "type": {
                            "type": "string",
                            "description": "Free text description of the product type."
                          }
                        },
                        "required": [
                          "description",
                          "product-name",
                          "product-number",
                          "product-revision",
                          "production-date",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "backup-name",
                    "creation-time",
                    "creation-type",
                    "id",
                    "status"
                  ]
                }
              },
              "housekeeping": {
                "type": "object",
                "description": "Provides optional support for automated housekeeping of manually created backups. If auto-delete is set to ENABLED before creating a new manual backup, BRM first checks the number of manual backups, and if the limit specified by the value of max-stored-manual-backups is reached, BRM removes the oldest manual backup before creating a new one.",
                "properties": {
                  "max-stored-manual-backups": {
                    "type": "integer",
                    "format": "uint16",
                    "minimum": 0,
                    "maximum": 65535,
                    "description": "Maximum number of manual backups, per backup type, to store in the ME. When this limit is reached, if auto-delete=ENABLED, BRM removes the oldest manual backup before creating a new one. Otherwise an error is returned when create-backup() is invoked and the NMS must perform the required housekeeping activity before attempting to create a new backup.",
                    "default": "1"
                  },
                  "auto-delete": {
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "description": "Determines whether automated housekeeping of manual backups is enabled. If ENABLED and the number of backups already stored on the ME is equal to the value of max-stored-manual-backups, the oldest backup is removed before creating a new one. If set to DISABLED, no backup is removed. Instead, when action create-backup() is invoked, it returns a failure parameter.",
                    "default": "enabled"
                  }
                }
              },
              "scheduler": {
                "type": "object",
                "description": "Provides optional support for scheduling backup creation for the parent backup-manager. The scheduled backup events can be Single Events, Calendar Based Periodic Events, or Periodic Events as defined by the child lists.",
                "properties": {
                  "scheduled-backup-name": {
                    "type": "string",
                    "description": "The configurable portion of the scheduled backup name. The scheduled backups are named <scheduled-backup-name>-<creation date and time>, where creation date and time is of type yang:date-and-time.",
                    "default": "SCHEDULED_BACKUP"
                  },
                  "progress-report": {
                    "type": "array",
                    "readOnly": true,
                    "uniqueItems": true,
                    "maxItems": 1,
                    "description": "Reports the progress and final result of the ongoing (asynchronous) scheduled backup operation.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action-name": {
                          "type": "string",
                          "description": "Name of the invoked asynchronous action."
                        },
                        "additional-info": {
                          "type": "array",
                          "description": "Used for logging significant messages during execution of an action.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "progress-info": {
                          "type": "string",
                          "description": "Textual information that describes the actual state of the action execution."
                        },
                        "progress-percentage": {
                          "type": "integer",
                          "format": "uint8",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "Progress of the action."
                        },
                        "result": {
                          "enum": [
                            "success",
                            "failure",
                            "not-available"
                          ],
                          "description": "Result state of a completed action. This field has value not-available if the action is not finished."
                        },
                        "result-info": {
                          "type": "string",
                          "description": "Textual description of the outcome/result of the action containing useful information for the NMS. If the action failed, it can contain an error message."
                        },
                        "state": {
                          "enum": [
                            "cancelling",
                            "running",
                            "finished",
                            "cancelled"
                          ],
                          "description": "Current state of the action."
                        },
                        "action-id": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "Uniquely identifies the invocation of an action. Identifies the invocation of an action when the managed object allows invocation of more than one action at a time."
                        },
                        "time-action-started": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the current action was started."
                        },
                        "time-action-completed": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the action was completed (successfully or unsuccessfully)."
                        },
                        "time-of-last-status-update": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the struct member state was last updated."
                        }
                      },
                      "required": [
                        "time-action-started",
                        "time-of-last-status-update"
                      ]
                    }
                  },
                  "most-recently-created-auto-backup": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the scheduled backup created most recently by the backup scheduler."
                  },
                  "auto-export": {
                    "enum": [
                      "enabled",
                      "disabled"
                    ],
                    "description": "Determines whether a scheduled backup is to be automatically exported at successful creation. If set to ENABLED, the scheduled backup specified by the leaf most-recently-created-auto-backup is exported to the location specified by either leaf auto-export-uri or leafref sftp-server-name after it is successfully created. Note that the automatic export is only triggered if creation of the scheduled backup was successful. Otherwise, no export operation is triggered, even if this leaf is set to ENABLED. Also, note that setting this leaf to ENABLED has no impact on the scheduled backups that were already created and stored prior to the new configuration.",
                    "default": "disabled"
                  },
                  "admin-state": {
                    "enum": [
                      "locked",
                      "unlocked"
                    ],
                    "description": "Administrative state of the scheduler.",
                    "default": "unlocked"
                  },
                  "next-scheduled-time": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The date and time when the next scheduled event is triggered. This is the earliest scheduled event from the set of configured events, i.e. single, periodic, and calendar-based periodic events."
                  },
                  "periodic-event": {
                    "type": "array",
                    "uniqueItems": true,
                    "description": "Periodic backup event. This construct can be used to configure a periodic scheduled backup event by specifying the number of months, weeks, days, hours, or minutes. For instance, in order to configure a scheduled backup event to occur every 12 hours, the following setup must be done: hours = 12. If more than one leaf is set, the values are added when calculating the next scheduled event. For example, if hours = 6 and minutes = 30, the scheduled backup event occurs every 6 hour and 30 minutes. The start time for calculating scheduled events is assumed to be the current system time by default, unless explicitly set using the start-time leaf. Furthermore, if the configured event is to stop at a specific date, leaf stop-time must be set accordingly. Daylight saving adjustments in Spring and Fall are addressed in such a way that the affected scheduled backup events are triggered exactly once only",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Identity of the periodic-event."
                        },
                        "weeks": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The number of weeks.",
                          "default": "0"
                        },
                        "days": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The number of days.",
                          "default": "0"
                        },
                        "hours": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The number of hours."
                        },
                        "minutes": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The number of minutes.",
                          "default": "0"
                        },
                        "start-time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start time. If not specified, the implementation uses the current system time as the default value."
                        },
                        "stop-time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Stop time. If no stop-time present the event continues indefinitely."
                        }
                      },
                      "required": [
                        "hours",
                        "id"
                      ]
                    }
                  },
                  "auto-export-uri": {
                    "type": "string",
                    "format": "uri",
                    "description": "Uri used by the backup scheduler when automatically exporting a scheduled backup. If leaf auto-export is set to ENABLED, this uri specifies the location to which the scheduled backup is automatically exported."
                  },
                  "auto-export-password": {
                    "type": "string",
                    "description": "Password used by the backup scheduler when automatically exporting a scheduled backup. If leaf auto-export is set to ENABLED, this password is used for authentication when automatically exporting the scheduled backup. No need to specify this leaf if no password is required for accessing auto-export-uri.",
                    "eric-adp-is-passphrase": "true",
                    "format": "eric-adp-cm-secret"
                  },
                  "sftp-server-name": {
                    "type": "string",
                    "description": "Name of the defined SFTP Server to which the backup is to be exported."
                  }
                }
              },
              "label-store": {
                "type": "object",
                "description": "A set of labels that help distinguish certain backups such as the last restored backup, primary restore candidate, and so on.",
                "readOnly": true,
                "properties": {
                  "last-restored-backup": {
                    "type": "string",
                    "description": "The name of the backup that was last used to restore the ME. This does not imply that the currently running version of the system is the same as this backup, but instead shows which one of the backups was last used to restore the ME. In a system that has never been restored using a backup, this leaf is empty."
                  },
                  "last-created-backup": {
                    "type": "string",
                    "description": "The name of the last backup created. This backup can be MANUAL or SCHEDULED. Not updated in the case of a failed attempt to create a backup, which would result in an INCOMPLETE backup."
                  },
                  "last-imported-backup": {
                    "type": "string",
                    "description": "The name of the last backup imported to the ME. Not updated in the case of a failed attempt to import a backup."
                  },
                  "last-exported-backup": {
                    "type": "string",
                    "description": "The name of the last backup exported from the ME. Not updated in the case of a failed attempt to export a backup."
                  },
                  "restore-escalation-list": {
                    "type": "array",
                    "description": "Specifies a list of backups by name, in the order that is to be used to restore the ME when needed. Specifically, the first element of this ordered list identifies the primary restore candidate. If the attempt to restore the ME with a given backup fails, the next backup in the list must be tried.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "failsafe-backup": {
                "type": "object",
                "description": "Failsafe backups can be used when making changes to sensitive parts of the model, in which an error in configuration can lead to lost OAM connectivity or other failures from which the system can recover by a restore from a backup. When activated the failsafe backup function will automatically restore the system from a backup if the configuration as not been confirmed within a defined time period.",
                "properties": {
                  "backup-name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Name of the backup that will be restored in case the failsafe function is activated."
                  },
                  "time-remaining": {
                    "type": "string",
                    "readOnly": true,
                    "format": "uint64",
                    "description": "The number of seconds that remains before the system is restored from the selected backup."
                  },
                  "usage-state": {
                    "enum": [
                      "idle",
                      "active",
                      "busy"
                    ],
                    "readOnly": true,
                    "description": "Shows if the failsafe function is activated or not. Multiple failsafe points is not possible, therefore this state is either idle or busy"
                  },
                  "progress-report": {
                    "type": "array",
                    "readOnly": true,
                    "uniqueItems": true,
                    "maxItems": 1,
                    "description": "Represents the progress report and final result of creating backup for failsafe configuration. It will return the same information as the progress-report list of the backup-manager list entry.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action-name": {
                          "type": "string",
                          "description": "Name of the invoked asynchronous action."
                        },
                        "additional-info": {
                          "type": "array",
                          "description": "Used for logging significant messages during execution of an action.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "progress-info": {
                          "type": "string",
                          "description": "Textual information that describes the actual state of the action execution."
                        },
                        "progress-percentage": {
                          "type": "integer",
                          "format": "uint8",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "Progress of the action."
                        },
                        "result": {
                          "enum": [
                            "success",
                            "failure",
                            "not-available"
                          ],
                          "description": "Result state of a completed action. This field has value not-available if the action is not finished."
                        },
                        "result-info": {
                          "type": "string",
                          "description": "Textual description of the outcome/result of the action containing useful information for the NMS. If the action failed, it can contain an error message."
                        },
                        "state": {
                          "enum": [
                            "cancelling",
                            "running",
                            "finished",
                            "cancelled"
                          ],
                          "description": "Current state of the action."
                        },
                        "action-id": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "Uniquely identifies the invocation of an action. Identifies the invocation of an action when the managed object allows invocation of more than one action at a time."
                        },
                        "time-action-started": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the current action was started."
                        },
                        "time-action-completed": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the action was completed (successfully or unsuccessfully)."
                        },
                        "time-of-last-status-update": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the struct member state was last updated."
                        }
                      },
                      "required": [
                        "time-action-started",
                        "time-of-last-status-update"
                      ]
                    }
                  },
                  "timeout-length": {
                    "type": "string",
                    "format": "uint64",
                    "description": "The number of seconds the system waits before activating the failsafe function. If the value is set while the function is active the time-remaining will be changed to that time instead.",
                    "default": "1200"
                  }
                },
                "required": [
                  "usage-state"
                ]
              },
              "sftp-server": {
                "type": "array",
                "uniqueItems": true,
                "description": "List of SFTP servers the SFTP client is to initiate connections to in parallel.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "An arbitrary name for the SFTP server."
                    },
                    "endpoints": {
                      "type": "object",
                      "description": "Container for the list of endpoints.",
                      "properties": {
                        "endpoint": {
                          "type": "array",
                          "uniqueItems": true,
                          "minItems": 1,
                          "maxItems": 1,
                          "description": "A user-ordered list of endpoints that the SFTP client may attempt to connect to (one at a time) swithcing to the next in case the connection failed. Each endpoint has its own security configuration.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "remote-address": {
                                "type": "string",
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "format": "ipv4"
                                      },
                                      {
                                        "format": "ipv6"
                                      }
                                    ]
                                  },
                                  {
                                    "format": "hostname"
                                  }
                                ],
                                "description": "The IP address or hostname of the endpoint. If a domain name is configured, then the DNS resolution should happen on each usage attempt. If the DNS resolution results in multiple IP addresses, the IP addresses will be tried according to local preference order until a connection has been established or until all IP addresses have failed."
                              },
                              "remote-port": {
                                "type": "integer",
                                "format": "uint16",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The IP port for this endpoint. The NETCONF client will use the IANA-assigned well-known port for 'sftp' (22) if no value is specified.",
                                "default": "22"
                              },
                              "remote-path": {
                                "type": "string",
                                "description": "Specifies the location or path where the file(s) will be stored."
                              },
                              "client-identity": {
                                "type": "object",
                                "description": "The credentials used by the client to authenticate to the SSH server.",
                                "properties": {
                                  "username": {
                                    "type": "string",
                                    "description": "The username of this user. This will be the username used, for instance, to log into an SSH server."
                                  },
                                  "public-key": {
                                    "type": "object",
                                    "description": "A locally-defined or referenced asymmetric key pair to be used for client authentication.",
                                    "properties": {
                                      "local-definition": {
                                        "type": "object",
                                        "description": "Container to hold the local key definition.",
                                        "properties": {
                                          "public-key": {
                                            "type": "string",
                                            "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                          },
                                          "private-key": {
                                            "type": "string",
                                            "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                            "eric-adp-is-passphrase": "true",
                                            "format": "eric-adp-cm-secret"
                                          }
                                        },
                                        "required": [
                                          "public-key"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "local-definition"
                                    ]
                                  }
                                }
                              },
                              "server-authentication": {
                                "type": "object",
                                "description": "Specifies how the SSH client can authenticate SSH servers. Any combination of credentials is additive and unordered.",
                                "properties": {
                                  "ssh-host-keys": {
                                    "type": "object",
                                    "description": "A list of SSH host keys used by the SSH client to authenticate SSH server host keys. A server host key is authenticated if it is an exact match to a configured SSH host key.",
                                    "properties": {
                                      "local-definition": {
                                        "type": "object",
                                        "description": "Container to hold local host key definitions.",
                                        "properties": {
                                          "host-key": {
                                            "type": "array",
                                            "description": "The binary public key data for this host key.",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "name",
                              "remote-address"
                            ]
                          }
                        }
                      },
                      "required": [
                        "endpoint"
                      ]
                    }
                  },
                  "required": [
                    "endpoints",
                    "name"
                  ]
                }
              },
              "sftp-server-name": {
                "type": "string",
                "description": "Name of the defined SFTP Server to which the backup is to be exported."
              }
            },
            "required": [
              "backup-domain",
              "backup-type",
              "id"
            ]
          }
        },
        "rollback-at-restore": {
          "type": "object",
          "description": "Provides optional support for confirmation of a restore action or automatic rollback after an unconfirmed restore operation was executed.",
          "properties": {
            "time-allowed-before-rollback": {
              "type": "integer",
              "format": "uint16",
              "minimum": 1,
              "maximum": 65535,
              "description": "Number of seconds to wait for action confirm-restore to invoke before performing the rollback to the state before restore.",
              "default": "3600"
            },
            "time-remaining-before-rollback": {
              "type": "integer",
              "readOnly": true,
              "format": "uint16",
              "minimum": 0,
              "maximum": 65535,
              "description": "The remaining number of seconds before performing the rollback to the state before restore. The countdown stops after confirm-restore action is invoked on the backup, representing the restored backup. If action confirm-restore is not invoked before the expiration of the rollback timer, an automatic rollback is triggered. Countdown starts at restore, and stops when confirm-restore() is invoked."
            }
          }
        }
      }
    }
  },
  "eric-adp-genoptions": [
    {
      "module-prefixing": false
    },
    {
      "encoding-format": "eric-rfc7951-json"
    },
    {
      "generate-submodule-jsonschema": false
    },
    {
      "additional-properties": true
    }
  ],
  "eric-adp-encoding-format": "eric-rfc7951-json",
  "eric-adp-yang-module": "ericsson-brm"
}