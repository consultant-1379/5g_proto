{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by jsonschema-generator (1.27.0-124 2023-06-15 16:50:09 CEST) from Yang module ietf-keystore (2019-11-20) on Mar 5, 2024, 3:56:52 PM. Features: [ericsson-brm:failsafe-backups, ericsson-brm:housekeeping, ericsson-brm:label-store, ericsson-brm:rollback-at-restore, ericsson-brm:scheduler, ericsson-brm:sftp-client-authentication, ericsson-fm:alert, ericsson-keystore-ext:cmp, ericsson-keystore-ext:manual-renewal, ericsson-keystore-ext:pkcs10, ericsson-keystore-ext:pkcs12, ericsson-keystore-ext:pkcs8, ericsson-keystore-ext:scep, ericsson-notifications:netconf-state-change, ericsson-pm:measurement-jobs, ericsson-pm:realtime-jobs, ericsson-pm:threshold-jobs, ericsson-snmp:dtls, ericsson-snmp:network-prefix-validation, ericsson-snmp:no-auth-no-priv-feature, ericsson-system-ext:authentication-failure-alarm, ericsson-system-ext:ldap, ericsson-system-ext:ldap-authentication, ericsson-system-ext:ldap-clear, ericsson-system-ext:ldap-custom-filter, ericsson-system-ext:ldap-posix-filter, ericsson-system-ext:ldap-sasl-external, ericsson-system-ext:local-target-classes, ericsson-system-ext:ntp-security, ericsson-system-ext:oauth2-client-authentication, iana-crypt-hash:crypt-hash-md5, iana-crypt-hash:crypt-hash-sha-256, iana-crypt-hash:crypt-hash-sha-512, ietf-crypto-types:one-asymmetric-key-format, ietf-crypto-types:one-symmetric-key-format, ietf-crypto-types:encrypted-one-symmetric-key-format, ietf-crypto-types:encrypted-one-asymmetric-key-format, ietf-interfaces:arbitrary-names, ietf-interfaces:if-mib, ietf-interfaces:pre-provisioning, ietf-ip:ipv4-non-contiguous-netmasks, ietf-ip:ipv6-privacy-autoconf, ietf-keystore:key-generation, ietf-keystore:keystore-supported, ietf-keystore:local-definitions-supported, ietf-keystore:keystore-supported, ietf-netconf:candidate, ietf-netconf:confirmed-commit, ietf-netconf:rollback-on-error, ietf-netconf:startup, ietf-netconf:url, ietf-netconf:validate, ietf-netconf:writable-running, ietf-netconf:xpath, ietf-ssh-client:ssh-client-transport-params-config, ietf-ssh-client:ssh-client-keepalives, ietf-ssh-common:ssh-ctr, ietf-ssh-common:ssh-dh-group-exchange, ietf-ssh-common:ssh-ecc, ietf-ssh-common:ssh-sha2, ietf-ssh-common:ssh-x509-certs, ietf-system:authentication, ietf-system:dns-udp-tcp-port, ietf-system:local-users, ietf-system:ntp, ietf-system:ntp-udp-port, ietf-system:radius, ietf-system:radius-authentication, ietf-system:timezone-name, ietf-system:authentication, ietf-system:local-users, ietf-system:ntp, ietf-tls-client:tls-client-hello-params-config, ietf-tls-client:tls-client-keepalives, ietf-tls-client:x509-certificate-auth, ietf-tls-client:raw-public-key-auth, ietf-tls-client:psk-auth, ietf-tls-common:tls-1_0, ietf-tls-common:tls-1_1, ietf-tls-common:tls-1_2, ietf-tls-common:tls-1_3, ietf-tls-common:tls-3des, ietf-tls-common:tls-dhe, ietf-tls-common:tls-ecc, ietf-tls-common:tls-gcm, ietf-tls-common:tls-sha2, ietf-tls-server:tls-server-hello-params-config, ietf-tls-server:tls-server-keepalives, ietf-tls-server:client-auth-config-supported, ietf-tls-server:external-client-auth-supported, ietf-tls-server:x509-certificate-auth, ietf-tls-server:raw-public-key-auth, ietf-tls-server:psk-auth, ietf-truststore:local-definitions-supported, ietf-truststore:raw-public-keys, ietf-truststore:ssh-host-keys, ietf-truststore:truststore-supported, ietf-truststore:x509-certificates, ietf-truststore:truststore-supported, ietf-truststore:ssh-host-keys, ietf-truststore:x509-certificates]. Deviations/extensions: [ericsson-brm-ext-adp, ericsson-data-collector-ext-adp, ericsson-fm-ext-adp, ericsson-keystore-ext, ericsson-netconf-acm-ext, ericsson-pm-dev-adp, ericsson-system-ext-aum, ericsson-system-ext, ericsson-truststore-ext, ericsson-yang-library-ext, ietf-ip, ietf-netconf-with-defaults, ietf-network-instance, tailf-acm]",
  "title": "ietf-keystore",
  "type": "object",
  "properties": {
    "ietf-keystore:keystore": {
      "type": "object",
      "description": "The keystore contains a list of keys.",
      "properties": {
        "cmp": {
          "type": "object",
          "description": "Configuration of CMPv2 servers and authorities.",
          "properties": {
            "certificate-authorities": {
              "type": "object",
              "description": "A list of Certificate Authorities.",
              "properties": {
                "certificate-authority": {
                  "type": "array",
                  "uniqueItems": true,
                  "description": "A Certificate Authority.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                        "description": "Specifies the name of the issuing CA. The X.501 distinguished name of the issuing CA used for addressing and reference identity."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              }
            },
            "cmp-server-groups": {
              "type": "object",
              "description": "A list of CMPv2 server groups.",
              "properties": {
                "cmp-server-group": {
                  "type": "array",
                  "uniqueItems": true,
                  "description": "A CMPv2 server group.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the CMPv2 server group."
                      },
                      "cmp-server": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "description": "A CMPv2 server, which can be implemented by either a Registration Authority or a Certificate Authority.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the CMPv2 server."
                            },
                            "uri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The URI of the CMPv2 server. Example: http://192.168.33.27:8080 or cmp://192.168.33.27"
                            },
                            "ca-certs": {
                              "type": "string",
                              "description": "A reference to a list of certificate authority (CA) certificates used by the CMPv2 client to authenticate the CMPv2 server certificates. A CMPv2 server certificate is authenticated if it has a valid chain of trust to a configured CA certificate."
                            },
                            "certificate-authority": {
                              "type": "string",
                              "description": "The Certificate Authority used by this CMPv2 server."
                            },
                            "priority": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 1,
                              "maximum": 255,
                              "description": "A priority assigned to a CMPv2 server. A smaller number signifies higher priority. A server with a lower priority is chosen when servers with higher priority are not accessible. In the case when CMPv2 servers have the same priority, then the server is chosen with round robin.",
                              "default": "1"
                            },
                            "ra-mode-enabled": {
                              "type": "boolean",
                              "description": "If set to true, RA mode is used when performing CMPv2 online enrollment towards this CMP server. Requires that ra-client-identity is configured with key and certificate or password.",
                              "default": "false"
                            },
                            "ra-client-identity": {
                              "type": "object",
                              "description": "Reference to credentials to be used when authenticating as Registration Authority (RA).",
                              "properties": {
                                "certificate": {
                                  "type": "object",
                                  "description": "References to RA private key and certificate.",
                                  "properties": {
                                    "asymmetric-key": {
                                      "type": "string",
                                      "description": "A reference to an asymmetric key in the keystore."
                                    },
                                    "certificate": {
                                      "type": "string",
                                      "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                    }
                                  }
                                },
                                "ra-password": {
                                  "type": "string",
                                  "description": "RA password.",
                                  "eric-adp-is-passphrase": "true",
                                  "format": "eric-adp-cm-secret"
                                }
                              }
                            }
                          },
                          "required": [
                            "ca-certs",
                            "certificate-authority",
                            "name",
                            "uri"
                          ]
                        }
                      }
                    },
                    "required": [
                      "cmp-server",
                      "name"
                    ]
                  }
                }
              }
            }
          }
        },
        "scep": {
          "type": "object",
          "description": "Configuration of SCEP servers",
          "properties": {
            "scep-server-groups": {
              "type": "object",
              "description": "A list of SCEP server groups.",
              "properties": {
                "scep-server-group": {
                  "type": "array",
                  "uniqueItems": true,
                  "description": "A SCEP server group.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the SCEP server group."
                      },
                      "scep-server": {
                        "type": "array",
                        "uniqueItems": true,
                        "minItems": 1,
                        "description": "A SCEP server, which can be implemented by either a Registration Authority or a Certificate Authority.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of the SCEP server."
                            },
                            "uri": {
                              "type": "string",
                              "format": "uri",
                              "description": "The URI of the SCEP server. Example: http://scep.groob.io:2016/scep"
                            },
                            "ca-certs": {
                              "type": "string",
                              "description": "A reference to a list of certificate authority (CA) certificates used by the SCEP client to authenticate the SCEP server certificates. A SCEP server certificate is authenticated if it has a valid chain of trust to a configured CA certificate."
                            },
                            "certificate-authority": {
                              "type": "string",
                              "description": "The Certificate Authority used by this SCEP server. If not set, the SCEP server must be able to handle GetCACert and GetCACaps requests with empty message"
                            },
                            "priority": {
                              "type": "integer",
                              "format": "uint8",
                              "minimum": 1,
                              "maximum": 255,
                              "description": "A priority assigned to a SCEP server. A smaller number signifies higher priority. A server with a lower priority is chosen when servers with higher priority are not accessible. In the case when SCEP servers have the same priority, then the server is chosen with round robin.",
                              "default": "1"
                            },
                            "ra-mode-enabled": {
                              "type": "boolean",
                              "description": "If set to true, RA mode is used when performing SCEP online enrollment towards this SCEP server. Requires that ra-client-identity is configured with key and certificate or password.",
                              "default": "false"
                            },
                            "ra-client-identity": {
                              "type": "object",
                              "description": "Reference to credentials to be used when authenticating as Registration Authority (RA).",
                              "properties": {
                                "certificate": {
                                  "type": "object",
                                  "description": "References to RA private key and certificate.",
                                  "properties": {
                                    "asymmetric-key": {
                                      "type": "string",
                                      "description": "A reference to an asymmetric key in the keystore."
                                    },
                                    "certificate": {
                                      "type": "string",
                                      "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                    }
                                  }
                                },
                                "ra-password": {
                                  "type": "string",
                                  "description": "RA password.",
                                  "eric-adp-is-passphrase": "true",
                                  "format": "eric-adp-cm-secret"
                                }
                              }
                            }
                          },
                          "required": [
                            "ca-certs",
                            "name",
                            "uri"
                          ]
                        }
                      }
                    },
                    "required": [
                      "name",
                      "scep-server"
                    ]
                  }
                }
              }
            }
          }
        },
        "thresholds": {
          "type": "object",
          "description": "Expiration threshold configuration",
          "properties": {
            "expiration-threshold": {
              "type": "integer",
              "format": "uint32",
              "minimum": 3,
              "maximum": 4294967295,
              "description": "The threshold specifies the number of days before the certificate expires to start sending expiration alarms. The alarm severity increases closer to expiration: WARNING when the certificate expires within the threshold MINOR when the certificate expires within 1/3 of the threshold MAJOR when the certificate expires within 1/6 of the threshold CRITICAL when the certificate expires within 1/30 of the threshold or 3 days, whichever is largest. This severity is used also after certificate expiration.",
              "default": "90"
            }
          }
        },
        "asymmetric-keys": {
          "type": "object",
          "description": "A list of asymmetric keys.",
          "properties": {
            "asymmetric-key": {
              "type": "array",
              "uniqueItems": true,
              "description": "An asymmetric key.",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "An arbitrary name for the asymmetric key."
                  },
                  "cmp": {
                    "type": "object",
                    "description": "CMPv2 configuration and actions for an asymmetric key.",
                    "properties": {
                      "cmp-server-group": {
                        "type": "string",
                        "description": "A CMPv2 server group used for CMPv2 enrollment."
                      },
                      "renewal-time": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "description": "The scheduled automatic renewal time of the asymmetric key and its certificate when automatic renewal is enabled."
                      },
                      "trusted-certs": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A reference to a list of certificate authority (CA) certificates updated by the CMPv2 client after completing the CMPv2 enrollment if the CMPv2 server provided CA certificates. Updated by start-cmp."
                      },
                      "renewal-mode": {
                        "enum": [
                          "manual",
                          "automatic"
                        ],
                        "description": "Sets renewal mode to manual or automatic. In automatic case the device attempts to renew the certificate before expiration by authenticating to the CMPv2 server with the current certificate and keeping the current key algorithm for the new certificate. If a change in the algorithm or subject alternative name is needed then renew-cmp action can be used.",
                        "default": "manual"
                      }
                    },
                    "required": [
                      "cmp-server-group"
                    ]
                  },
                  "scep": {
                    "type": "object",
                    "description": "SCEP configuration and actions for an asymmetric key.",
                    "properties": {
                      "scep-server-group": {
                        "type": "string",
                        "description": "A SCEP server group used for SCEP enrollment."
                      },
                      "renewal-time": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "description": "The scheduled automatic renewal time of the asymmetric key and its certificate when automatic renewal is enabled."
                      },
                      "renewal-mode": {
                        "enum": [
                          "manual",
                          "automatic"
                        ],
                        "description": "Sets renewal mode to manual or automatic. In automatic case the device attempts to renew the certificate before expiration by authenticating to the SCEP server with the current certificate and keeping the current key algorithm for the new certificate. If a change in the algorithm or subject alternative name is needed then renew-scep action can be used.",
                        "default": "manual"
                      }
                    },
                    "required": [
                      "scep-server-group"
                    ]
                  },
                  "cert-manager": {
                    "type": "object",
                    "description": "cert-manager enrollment data and action for manual renewal.",
                    "properties": {
                      "issuer-name": {
                        "type": "string",
                        "description": "The issuer name to use in the CertificateRequest"
                      },
                      "issuer-kind": {
                        "type": "string",
                        "description": "The issuer kind to use in the CertificateRequest"
                      },
                      "issuer-group": {
                        "type": "string",
                        "description": "The issuer group to use in the CertificateRequest"
                      },
                      "renewal-time": {
                        "type": "string",
                        "readOnly": true,
                        "format": "date-time",
                        "description": "The scheduled automatic renewal time of the asymmetric key and its certificate"
                      }
                    },
                    "required": [
                      "issuer-group",
                      "issuer-kind",
                      "issuer-name"
                    ]
                  },
                  "certificates": {
                    "type": "object",
                    "description": "Certificates associated with this asymmetric key. More than one certificate supports, for instance, a TPM-protected asymmetric key that has both IDevID and LDevID certificates associated.",
                    "properties": {
                      "certificate": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "A certificate for this asymmetric key.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "An arbitrary name for the certificate. If the name matches the name of a certificate that exists independently in <operational> (i.e., an IDevID), then the 'cert' node MUST NOT be configured."
                            },
                            "cert": {
                              "type": "string",
                              "description": "The binary certificate data for this certificate."
                            }
                          },
                          "required": [
                            "name"
                          ]
                        }
                      },
                      "expiration-threshold": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 3,
                        "maximum": 4294967295,
                        "description": "The threshold specifies the number of days before the certificate expires to start sending expiration alarms. The alarm severity increases closer to expiration: WARNING when the certificate expires within the threshold MINOR when the certificate expires within 1/3 of the threshold MAJOR when the certificate expires within 1/6 of the threshold CRITICAL when the certificate expires within 1/30 of the threshold or 3 days, whichever is largest. This severity is used also after certificate expiration. This leaf takes precedence over /keystore/thresholds/expiration-threshold"
                      }
                    }
                  },
                  "private-key-format": {
                    "type": "string",
                    "description": "Identifies the key's format."
                  },
                  "algorithm": {
                    "enum": [
                      "rsa1024",
                      "rsa2048",
                      "rsa3072",
                      "rsa4096",
                      "rsa7680",
                      "rsa15360",
                      "secp192r1",
                      "secp224r1",
                      "secp256r1",
                      "secp384r1",
                      "secp521r1",
                      "x25519",
                      "x448"
                    ],
                    "description": "Identifies the key's algorithm."
                  },
                  "public-key-format": {
                    "type": "string",
                    "description": "Identifies the key's format."
                  },
                  "public-key": {
                    "type": "string",
                    "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                  },
                  "private-key": {
                    "type": "string",
                    "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                    "eric-adp-is-passphrase": "true",
                    "format": "eric-adp-cm-secret"
                  },
                  "hidden-private-key": {
                    "type": "array",
                    "items": {
                      "type": "null"
                    },
                    "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                  }
                },
                "required": [
                  "algorithm",
                  "name",
                  "public-key"
                ]
              }
            },
            "cmp": {
              "type": "object",
              "properties": {}
            },
            "scep": {
              "type": "object",
              "properties": {}
            },
            "cert-manager": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "symmetric-keys": {
          "type": "object",
          "description": "A list of symmetric keys.",
          "properties": {
            "symmetric-key": {
              "type": "array",
              "uniqueItems": true,
              "description": "A symmetric key.",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "An arbitrary name for the symmetric key."
                  },
                  "algorithm": {
                    "enum": [
                      "aes-128-cbc",
                      "aes-192-cbc",
                      "aes-256-cbc",
                      "aes-128-ctr",
                      "aes-192-ctr",
                      "aes-256-ctr",
                      "des3-cbc-sha1-kd",
                      "rc4-hmac",
                      "rc4-hmac-exp"
                    ],
                    "description": "The algorithm to be used when generating the key."
                  },
                  "key-format": {
                    "type": "string",
                    "description": "Identifies the symmetric key's format."
                  },
                  "encrypted-key": {
                    "type": "object",
                    "description": "A container for the encrypted symmetric key value.",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                      },
                      "symmetric-key-ref": {
                        "type": "string",
                        "description": "Identifies a symmetric key used to encrypt this key."
                      },
                      "asymmetric-key-ref": {
                        "type": "string",
                        "description": "Identifies an asymmetric key used to encrypt this key."
                      }
                    }
                  },
                  "key": {
                    "type": "string",
                    "description": "The binary value of the key. The interpretation of the value is defined by 'key-format'. For example, FIXME."
                  },
                  "hidden-key": {
                    "type": "array",
                    "items": {
                      "type": "null"
                    },
                    "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                  }
                },
                "required": [
                  "algorithm",
                  "name"
                ]
              }
            }
          }
        }
      }
    }
  },
  "eric-adp-genoptions": [
    {
      "module-prefixing": false
    },
    {
      "encoding-format": "eric-rfc7951-json"
    },
    {
      "generate-submodule-jsonschema": false
    },
    {
      "additional-properties": true
    }
  ],
  "eric-adp-encoding-format": "eric-rfc7951-json",
  "eric-adp-yang-module": "ietf-keystore"
}