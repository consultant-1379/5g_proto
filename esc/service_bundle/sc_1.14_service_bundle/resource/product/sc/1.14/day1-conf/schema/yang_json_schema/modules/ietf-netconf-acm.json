{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by jsonschema-generator (1.27.0-124 2023-06-15 16:50:09 CEST) from Yang module ietf-netconf-acm (2018-02-14) on Mar 5, 2024, 3:56:52 PM. Features: [ericsson-brm:failsafe-backups, ericsson-brm:housekeeping, ericsson-brm:label-store, ericsson-brm:rollback-at-restore, ericsson-brm:scheduler, ericsson-brm:sftp-client-authentication, ericsson-fm:alert, ericsson-keystore-ext:cmp, ericsson-keystore-ext:manual-renewal, ericsson-keystore-ext:pkcs10, ericsson-keystore-ext:pkcs12, ericsson-keystore-ext:pkcs8, ericsson-keystore-ext:scep, ericsson-notifications:netconf-state-change, ericsson-pm:measurement-jobs, ericsson-pm:realtime-jobs, ericsson-pm:threshold-jobs, ericsson-snmp:dtls, ericsson-snmp:network-prefix-validation, ericsson-snmp:no-auth-no-priv-feature, ericsson-system-ext:authentication-failure-alarm, ericsson-system-ext:ldap, ericsson-system-ext:ldap-authentication, ericsson-system-ext:ldap-clear, ericsson-system-ext:ldap-custom-filter, ericsson-system-ext:ldap-posix-filter, ericsson-system-ext:ldap-sasl-external, ericsson-system-ext:local-target-classes, ericsson-system-ext:ntp-security, ericsson-system-ext:oauth2-client-authentication, iana-crypt-hash:crypt-hash-md5, iana-crypt-hash:crypt-hash-sha-256, iana-crypt-hash:crypt-hash-sha-512, ietf-crypto-types:one-asymmetric-key-format, ietf-crypto-types:one-symmetric-key-format, ietf-crypto-types:encrypted-one-symmetric-key-format, ietf-crypto-types:encrypted-one-asymmetric-key-format, ietf-interfaces:arbitrary-names, ietf-interfaces:if-mib, ietf-interfaces:pre-provisioning, ietf-ip:ipv4-non-contiguous-netmasks, ietf-ip:ipv6-privacy-autoconf, ietf-keystore:key-generation, ietf-keystore:keystore-supported, ietf-keystore:local-definitions-supported, ietf-keystore:keystore-supported, ietf-netconf:candidate, ietf-netconf:confirmed-commit, ietf-netconf:rollback-on-error, ietf-netconf:startup, ietf-netconf:url, ietf-netconf:validate, ietf-netconf:writable-running, ietf-netconf:xpath, ietf-ssh-client:ssh-client-transport-params-config, ietf-ssh-client:ssh-client-keepalives, ietf-ssh-common:ssh-ctr, ietf-ssh-common:ssh-dh-group-exchange, ietf-ssh-common:ssh-ecc, ietf-ssh-common:ssh-sha2, ietf-ssh-common:ssh-x509-certs, ietf-system:authentication, ietf-system:dns-udp-tcp-port, ietf-system:local-users, ietf-system:ntp, ietf-system:ntp-udp-port, ietf-system:radius, ietf-system:radius-authentication, ietf-system:timezone-name, ietf-system:authentication, ietf-system:local-users, ietf-system:ntp, ietf-tls-client:tls-client-hello-params-config, ietf-tls-client:tls-client-keepalives, ietf-tls-client:x509-certificate-auth, ietf-tls-client:raw-public-key-auth, ietf-tls-client:psk-auth, ietf-tls-common:tls-1_0, ietf-tls-common:tls-1_1, ietf-tls-common:tls-1_2, ietf-tls-common:tls-1_3, ietf-tls-common:tls-3des, ietf-tls-common:tls-dhe, ietf-tls-common:tls-ecc, ietf-tls-common:tls-gcm, ietf-tls-common:tls-sha2, ietf-tls-server:tls-server-hello-params-config, ietf-tls-server:tls-server-keepalives, ietf-tls-server:client-auth-config-supported, ietf-tls-server:external-client-auth-supported, ietf-tls-server:x509-certificate-auth, ietf-tls-server:raw-public-key-auth, ietf-tls-server:psk-auth, ietf-truststore:local-definitions-supported, ietf-truststore:raw-public-keys, ietf-truststore:ssh-host-keys, ietf-truststore:truststore-supported, ietf-truststore:x509-certificates, ietf-truststore:truststore-supported, ietf-truststore:ssh-host-keys, ietf-truststore:x509-certificates]. Deviations/extensions: [ericsson-brm-ext-adp, ericsson-data-collector-ext-adp, ericsson-fm-ext-adp, ericsson-keystore-ext, ericsson-netconf-acm-ext, ericsson-pm-dev-adp, ericsson-system-ext-aum, ericsson-system-ext, ericsson-truststore-ext, ericsson-yang-library-ext, ietf-ip, ietf-netconf-with-defaults, ietf-network-instance, tailf-acm]",
  "title": "ietf-netconf-acm",
  "type": "object",
  "properties": {
    "ietf-netconf-acm:nacm": {
      "type": "object",
      "description": "Parameters for NETCONF access control model.",
      "properties": {
        "enable-nacm": {
          "type": "boolean",
          "readOnly": true,
          "description": "Enables or disables all NETCONF access control enforcement. If 'true', then enforcement is enabled. If 'false', then enforcement is disabled.",
          "default": "true"
        },
        "read-default": {
          "enum": [
            "permit",
            "deny"
          ],
          "readOnly": true,
          "description": "Controls whether read access is granted if no appropriate rule is found for a particular read request.",
          "default": "deny"
        },
        "write-default": {
          "enum": [
            "permit",
            "deny"
          ],
          "readOnly": true,
          "description": "Controls whether create, update, or delete access is granted if no appropriate rule is found for a particular write request.",
          "default": "deny"
        },
        "exec-default": {
          "enum": [
            "permit",
            "deny"
          ],
          "readOnly": true,
          "description": "Controls whether exec access is granted if no appropriate rule is found for a particular protocol operation request.",
          "default": "deny"
        },
        "enable-external-groups": {
          "type": "boolean",
          "readOnly": true,
          "description": "Controls whether the server uses the groups reported by the NETCONF transport layer when it assigns the user to a set of NACM groups. If this leaf has the value 'false', any group names reported by the transport layer are ignored by the server.",
          "default": "true"
        },
        "denied-operations": {
          "type": "integer",
          "readOnly": true,
          "format": "uint32",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Number of times since the server last restarted that a protocol operation request was denied."
        },
        "denied-data-writes": {
          "type": "integer",
          "readOnly": true,
          "format": "uint32",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Number of times since the server last restarted that a protocol operation request to alter a configuration datastore was denied."
        },
        "denied-notifications": {
          "type": "integer",
          "readOnly": true,
          "format": "uint32",
          "minimum": 0,
          "maximum": 4294967295,
          "description": "Number of times since the server last restarted that a notification was dropped for a subscription because access to the event type was denied."
        },
        "groups": {
          "type": "object",
          "description": "NETCONF access control groups.",
          "properties": {
            "group": {
              "type": "array",
              "uniqueItems": true,
              "description": "One NACM group entry. This list will only contain configured entries, not any entries learned from any transport protocols.",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "pattern": "^[^\\*].*$",
                    "description": "Group name associated with this entry."
                  },
                  "user-name": {
                    "type": "array",
                    "description": "Each entry identifies the username of a member of the group associated with this entry.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "gid": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "description": "This leaf associates a numerical group ID with the group. When a OS command is executed on behalf of a user, supplementary group IDs are assigned based on 'gid' values for the groups that the use is a member of."
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "rule-list": {
          "type": "array",
          "uniqueItems": true,
          "description": "An ordered collection of access control rules.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Arbitrary name assigned to the rule-list."
              },
              "group": {
                "type": "array",
                "description": "List of administrative groups that will be assigned the associated access rights defined by the 'rule' list. The string '*' indicates that all groups apply to the entry.",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "pattern": "^\\*$"
                    },
                    {
                      "type": "string",
                      "pattern": "^[^\\*].*$"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              },
              "rule": {
                "type": "array",
                "uniqueItems": true,
                "description": "One access control rule. Rules are processed in user-defined order until a match is found. A rule matches if 'module-name', 'rule-type', and 'access-operations' match the request. If a rule matches, the 'action' leaf determines whether or not access is granted.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Arbitrary name assigned to the rule."
                    },
                    "module-name": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\*$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "Name of the module associated with this rule. This leaf matches if it has the value '*' or if the object being accessed is defined in the module with the specified module name.",
                      "default": "*"
                    },
                    "access-operations": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\*$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "Access operations associated with this rule. This leaf matches if it has the value '*' or if the bit corresponding to the requested operation is set.",
                      "default": "*"
                    },
                    "action": {
                      "enum": [
                        "permit",
                        "deny"
                      ],
                      "description": "The access control action associated with the rule. If a rule has been determined to match a particular request, then this object is used to determine whether to permit or deny the request."
                    },
                    "comment": {
                      "type": "string",
                      "description": "A textual description of the access rule."
                    },
                    "context": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\*$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "This leaf matches if it has the value '*' or if its value identifies the agent that is requesting access, e.g. 'netconf' for NETCONF, 'cli' for CLI, or 'webui' for Web UI.",
                      "default": "*"
                    },
                    "log-if-permit": {
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "description": "If this leaf is present, access granted due to this rule is logged in the developer log. Otherwise, only denied access is logged. Mainly intended for debugging of rules."
                    },
                    "rpc-name": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\*$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "This leaf matches if it has the value '*' or if its value equals the requested protocol operation name."
                    },
                    "notification-name": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\*$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "This leaf matches if it has the value '*' or if its value equals the requested notification name."
                    },
                    "path": {
                      "type": "string",
                      "description": "Data node instance-identifier associated with the data node, action, or notification controlled by this rule. Configuration data or state data instance-identifiers start with a top-level data node. A complete instance-identifier is required for this type of path value. The special value '/' refers to all possible datastore contents."
                    }
                  },
                  "required": [
                    "action",
                    "name"
                  ]
                }
              },
              "cmdrule": {
                "type": "array",
                "uniqueItems": true,
                "description": "One command access control rule. Command rules control access to CLI commands and Web UI functions. Rules are processed in user-defined order until a match is found. A rule matches if 'context', 'command', and 'access-operations' match the request. If a rule matches, the 'action' leaf determines if access is granted or not.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Arbitrary name assigned to the rule."
                    },
                    "context": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\*$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "This leaf matches if it has the value '*' or if its value identifies the agent that is requesting access, i.e. 'cli' for CLI or 'webui' for Web UI.",
                      "default": "*"
                    },
                    "command": {
                      "type": "string",
                      "description": "Space-separated tokens representing the command. Refer to the Tail-f AAA documentation for further details.",
                      "default": "*"
                    },
                    "access-operations": {
                      "anyOf": [
                        {
                          "type": "string",
                          "pattern": "^\\*$"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "description": "Access operations associated with this rule. This leaf matches if it has the value '*' or if the bit corresponding to the requested operation is set.",
                      "default": "*"
                    },
                    "action": {
                      "enum": [
                        "permit",
                        "deny"
                      ],
                      "description": "The access control action associated with the rule. If a rule is determined to match a particular request, then this object is used to determine whether to permit or deny the request."
                    },
                    "log-if-permit": {
                      "type": "array",
                      "items": {
                        "type": "null"
                      },
                      "description": "If this leaf is present, access granted due to this rule is logged in the developer log. Otherwise, only denied access is logged. Mainly intended for debugging of rules."
                    },
                    "comment": {
                      "type": "string",
                      "description": "A textual description of the access rule."
                    }
                  },
                  "required": [
                    "action",
                    "name"
                  ]
                }
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "cmd-read-default": {
          "enum": [
            "permit",
            "deny"
          ],
          "description": "Controls whether command read access is granted if no appropriate cmdrule is found for a particular command read request.",
          "default": "permit"
        },
        "cmd-exec-default": {
          "enum": [
            "permit",
            "deny"
          ],
          "description": "Controls whether command exec access is granted if no appropriate cmdrule is found for a particular command exec request.",
          "default": "permit"
        },
        "log-if-default-permit": {
          "type": "array",
          "items": {
            "type": "null"
          },
          "description": "If this leaf is present, access granted due to one of /nacm/read-default, /nacm/write-default, /nacm/exec-default /nacm/cmd-read-default, or /nacm/cmd-exec-default being set to 'permit' is logged in the developer log. Otherwise, only denied access is logged. Mainly intended for debugging of rules."
        }
      }
    }
  },
  "eric-adp-genoptions": [
    {
      "module-prefixing": false
    },
    {
      "encoding-format": "eric-rfc7951-json"
    },
    {
      "generate-submodule-jsonschema": false
    },
    {
      "additional-properties": true
    }
  ],
  "eric-adp-encoding-format": "eric-rfc7951-json",
  "eric-adp-yang-module": "ietf-netconf-acm"
}