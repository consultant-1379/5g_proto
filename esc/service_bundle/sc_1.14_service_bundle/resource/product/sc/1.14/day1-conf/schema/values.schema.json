{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://cfg.ericsson.com/schemas/sc/1.14/day1-conf",
  "type": "object",
  "properties": {
    "content": {
      "type": "object",
      "properties": {
        "section": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "hello": {
                "type": "object",
                "properties": {
                  "capabilities": {
                    "type": "object",
                    "properties": {
                      "capability": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "rpc": {
                "type": "object",
                "properties": {
                  "@message-id": {
                    "type": "integer"
                  },
                  "close-session":{
                    "type": "null"
                  },
                  "action": {
                    "type": "object",
                    "properties": {
                      "keystore": {
                        "type": "object",
                        "properties": {
                          "asymmetric-keys": {
                            "type": "object",
                            "properties": {
                              "asymmetric-key": {
                                "type": "object",
                                "properties": {
                                  "cert-manager": {
                                    "type": "object",
                                    "properties": {
                                      "renew": {
                                        "type": "object",
                                        "properties": {
                                          "algorithm": {
                                            "enum": [
                                              "rsa1024",
                                              "rsa2048",
                                              "rsa3072",
                                              "rsa4096",
                                              "rsa7680",
                                              "rsa15360",
                                              "secp192r1",
                                              "secp224r1",
                                              "secp256r1",
                                              "secp384r1",
                                              "secp521r1",
                                              "x25519",
                                              "x448"
                                            ],
                                            "description": "The algorithm to be used when generating the asymmetric key."
                                          },
                                          "subject-alternative-names": {
                                            "type": "array",
                                            "description": "The subjectAltName can be specified either as an IP address, FQDN or URI. Format is <type>:<value>, where <type> is either 'IP' (for IP address), 'DNS' (for FQDN) or 'URI'. For 'IP' type the <value> is an IPv4 address in dotted decimal notation, or an IPv6 address in colon decimal notation. For 'DNS' type the <value> is an FQDN. A 'URI' can be either a URL (uniform resource locator) or a URN (uniform resource name). Examples: DNS:someserialnumber.ericsson.com IP:145.34.23.123 IP:2001:DB8::8:800:200C:417A URI:http://my.url.here/ URI:urn:uuid:f81d4fae-7feb-11d0-a765-00bd0c92f7cf7",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "certificates": {
                                    "type": "object",
                                    "properties": {
                                      "install-certificate-pem": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The name the certificate chain will have when stored in /keystore/asymmetric-keys/asymmetric-key/certificates/certificate"
                                          },
                                          "pem": {
                                            "type": "string",
                                            "description": "A binary that contains the PEM encoded textual value of the end-entity and its intermediate certificates."
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cmp": {
                                    "type": "object",
                                    "properties": {
                                      "renew-cmp": {
                                        "type": "object",
                                        "properties": {
                                          "algorithm": {
                                            "enum": [
                                              "rsa1024",
                                              "rsa2048",
                                              "rsa3072",
                                              "rsa4096",
                                              "rsa7680",
                                              "rsa15360",
                                              "secp192r1",
                                              "secp224r1",
                                              "secp256r1",
                                              "secp384r1",
                                              "secp521r1",
                                              "x25519",
                                              "x448"
                                            ],
                                            "description": "The algorithm to be used when generating the asymmetric key."
                                          },
                                          "subject-alternative-names": {
                                            "type": "array",
                                            "description": "The subjectAltName can be specified either as an IP address, FQDN or URI. Format is <type>:<value>, where <type> is either 'IP' (for IP address), 'DNS' (for FQDN) or 'URI'. For 'IP' type the <value> is an IPv4 address in dotted decimal notation, or an IPv6 address in colon decimal notation. For 'DNS' type the <value> is an FQDN. A 'URI' can be either a URL (uniform resource locator) or a URN (uniform resource name). Examples: DNS:someserialnumber.ericsson.com IP:145.34.23.123 IP:2001:DB8::8:800:200C:417A URI:http://my.url.here/ URI:urn:uuid:f81d4fae-7feb-11d0-a765-00bd0c92f7cf7",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "generate-csr": {
                                    "type": "object",
                                    "properties": {
                                      "subject": {
                                        "type": "string",
                                        "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                                        "description": "The X.501 DN to be used in the subject field of the requested certificate, for instance: 'C=SE,O=Ericsson,CN=someserialnumber.ericsson.com'"
                                      },
                                      "subject-alternative-names": {
                                        "type": "array",
                                        "description": "The subjectAltName can be specified either as an IP address, FQDN or URI. Format is <type>:<value>, where <type> is either 'IP' (for IP address), 'DNS' (for FQDN) or 'URI'. For 'IP' type the <value> is an IPv4 address in dotted decimal notation, or an IPv6 address in colon decimal notation. For 'DNS' type the <value> is an FQDN. A 'URI' can be either a URL (uniform resource locator) or a URN (uniform resource name). Examples: DNS:someserialnumber.ericsson.com IP:145.34.23.123 IP:2001:DB8::8:800:200C:417A URI:http://my.url.here/ URI:urn:uuid:f81d4fae-7feb-11d0-a765-00bd0c92f7cf7",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "scep": {
                                    "type": "object",
                                    "properties": {
                                      "renew-scep": {
                                        "type": "object",
                                        "properties": {
                                          "algorithm": {
                                            "enum": [
                                              "rsa1024",
                                              "rsa2048",
                                              "rsa3072",
                                              "rsa4096",
                                              "rsa7680",
                                              "rsa15360",
                                              "secp192r1",
                                              "secp224r1",
                                              "secp256r1",
                                              "secp384r1",
                                              "secp521r1",
                                              "x25519",
                                              "x448"
                                            ],
                                            "description": "The algorithm to be used when generating the asymmetric key."
                                          },
                                          "subject-alternative-names": {
                                            "type": "array",
                                            "description": "The subjectAltName can be specified either as an IP address, FQDN or URI. Format is <type>:<value>, where <type> is either 'IP' (for IP address), 'DNS' (for FQDN) or 'URI'. For 'IP' type the <value> is an IPv4 address in dotted decimal notation, or an IPv6 address in colon decimal notation. For 'DNS' type the <value> is an FQDN. A 'URI' can be either a URL (uniform resource locator) or a URN (uniform resource name). Examples: DNS:someserialnumber.ericsson.com IP:145.34.23.123 IP:2001:DB8::8:800:200C:417A URI:http://my.url.here/ URI:urn:uuid:f81d4fae-7feb-11d0-a765-00bd0c92f7cf7",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "cert-manager": {
                                "type": "object",
                                "properties": {
                                  "enroll": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name the asymmetric key will have when stored in /keystore/asymmetric-keys/asymmetric-key/"
                                      },
                                      "certificate-name": {
                                        "type": "string",
                                        "description": "The name the certificate chain will have when stored in /keystore/asymmetric-keys/asymmetric-key/certificates/certificate"
                                      },
                                      "algorithm": {
                                        "enum": [
                                          "rsa1024",
                                          "rsa2048",
                                          "rsa3072",
                                          "rsa4096",
                                          "rsa7680",
                                          "rsa15360",
                                          "secp192r1",
                                          "secp224r1",
                                          "secp256r1",
                                          "secp384r1",
                                          "secp521r1",
                                          "x25519",
                                          "x448"
                                        ],
                                        "description": "The algorithm to be used when generating the asymmetric key."
                                      },
                                      "subject": {
                                        "type": "string",
                                        "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                                        "description": "The X.501 DN to be used in the subject field of the requested certificate, for instance: 'C=SE,O=Ericsson,CN=someserialnumber.ericsson.com'"
                                      },
                                      "subject-alternative-names": {
                                        "type": "array",
                                        "description": "The subjectAltName can be specified either as an IP address, FQDN or URI. Format is <type>:<value>, where <type> is either 'IP' (for IP address), 'DNS' (for FQDN) or 'URI'. For 'IP' type the <value> is an IPv4 address in dotted decimal notation, or an IPv6 address in colon decimal notation. For 'DNS' type the <value> is an FQDN. A 'URI' can be either a URL (uniform resource locator) or a URN (uniform resource name). Examples: DNS:someserialnumber.ericsson.com IP:145.34.23.123 IP:2001:DB8::8:800:200C:417A URI:http://my.url.here/ URI:urn:uuid:f81d4fae-7feb-11d0-a765-00bd0c92f7cf7",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "issuer-name": {
                                        "type": "string",
                                        "description": "The issuer name to use when enrolling the certificate. This maps to the issuerRef.name property in the cert-manager CertificateRequest custom resource"
                                      },
                                      "issuer-kind": {
                                        "type": "string",
                                        "description": "The issuer kind to use when enrolling the certificate. This maps to the issuerRef.kind property in the cert-manager CertificateRequest custom resource.",
                                        "default": "Issuer"
                                      },
                                      "issuer-group": {
                                        "type": "string",
                                        "description": "The issuer group to use when enrolling the certificate. This maps to the issuerRef.group property in the cert-manager CertificateRequest custom resource.",
                                        "default": "cert-manager.io"
                                      }
                                    }
                                  }
                                }
                              },
                              "cmp": {
                                "type": "object",
                                "properties": {
                                  "start-cmp": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name the asymmetric key will have when stored in /keystore/asymmetric-keys/asymmetric-key/"
                                      },
                                      "certificate-name": {
                                        "type": "string",
                                        "description": "The name the certificate chain will have when stored in /keystore/asymmetric-keys/asymmetric-key/certificates/certificate"
                                      },
                                      "algorithm": {
                                        "enum": [
                                          "rsa1024",
                                          "rsa2048",
                                          "rsa3072",
                                          "rsa4096",
                                          "rsa7680",
                                          "rsa15360",
                                          "secp192r1",
                                          "secp224r1",
                                          "secp256r1",
                                          "secp384r1",
                                          "secp521r1",
                                          "x25519",
                                          "x448"
                                        ],
                                        "description": "The algorithm to be used when generating the asymmetric key."
                                      },
                                      "subject": {
                                        "type": "string",
                                        "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                                        "description": "The X.501 DN to be used in the subject field of the requested certificate, for instance: 'C=SE,O=Ericsson,CN=someserialnumber.ericsson.com'"
                                      },
                                      "subject-alternative-names": {
                                        "type": "array",
                                        "description": "The subjectAltName can be specified either as an IP address, FQDN or URI. Format is <type>:<value>, where <type> is either 'IP' (for IP address), 'DNS' (for FQDN) or 'URI'. For 'IP' type the <value> is an IPv4 address in dotted decimal notation, or an IPv6 address in colon decimal notation. For 'DNS' type the <value> is an FQDN. A 'URI' can be either a URL (uniform resource locator) or a URN (uniform resource name). Examples: DNS:someserialnumber.ericsson.com IP:145.34.23.123 IP:2001:DB8::8:800:200C:417A URI:http://my.url.here/ URI:urn:uuid:f81d4fae-7feb-11d0-a765-00bd0c92f7cf7",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "password": {
                                        "type": "string",
                                        "description": "The CMPv2 challenge password. Must be provided unless RA mode is used.",
                                        "eric-adp-is-passphrase": "true",
                                        "format": "eric-adp-cm-secret"
                                      },
                                      "cmp-server-group": {
                                        "type": "string",
                                        "description": "A CMPv2 server group used for CMPv2 enrollment."
                                      },
                                      "trusted-certs": {
                                        "type": "string",
                                        "description": "A reference to a list of certificate authority (CA) certificates updated by the CMPv2 client after completing the CMPv2 enrollment if the CMPv2 server provided CA certificates."
                                      },
                                      "key-identifier": {
                                        "type": "string",
                                        "description": "A reference value to use as fallback senderKID. This is used to inform the CMPv2 server which shared secret to use for verification if sender name cannot be determined from subject."
                                      }
                                    }
                                  }
                                }
                              },
                              "generate-asymmetric-key": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name the asymmetric key will have when stored in /keystore/asymmetric-keys/asymmetric-key/"
                                  },
                                  "algorithm": {
                                    "enum": [
                                      "rsa1024",
                                      "rsa2048",
                                      "rsa3072",
                                      "rsa4096",
                                      "rsa7680",
                                      "rsa15360",
                                      "secp192r1",
                                      "secp224r1",
                                      "secp256r1",
                                      "secp384r1",
                                      "secp521r1",
                                      "x25519",
                                      "x448"
                                    ],
                                    "description": "The algorithm to be used when generating the asymmetric key."
                                  }
                                }
                              },
                              "install-asymmetric-key-pkcs12": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name the asymmetric key will have when stored in /keystore/asymmetric-keys/asymmetric-key/"
                                  },
                                  "certificate-name": {
                                    "type": "string",
                                    "description": "The name the certificate chain will have when stored in /keystore/asymmetric-keys/asymmetric-key/certificates/certificate"
                                  },
                                  "p12": {
                                    "type": "string",
                                    "description": "A binary that contains the pkcs12 encoded value of the private key and the corresponding certificate chain.",
                                    "eric-adp-is-passphrase": "true",
                                    "format": "eric-adp-cm-secret"
                                  },
                                  "p12-password": {
                                    "type": "string",
                                    "description": "The password to decrypt an encrypted pkcs12 container.",
                                    "eric-adp-is-passphrase": "true",
                                    "format": "eric-adp-cm-secret"
                                  }
                                }
                              },
                              "install-asymmetric-key-pkcs8": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name the asymmetric key will have when stored in /keystore/asymmetric-keys/asymmetric-key/"
                                  },
                                  "p8": {
                                    "type": "string",
                                    "description": "A binary that contains the pkcs8 encoded value of the private key.",
                                    "eric-adp-is-passphrase": "true",
                                    "format": "eric-adp-cm-secret"
                                  },
                                  "p8-password": {
                                    "type": "string",
                                    "description": "The password to decrypt an encrypted pkcs8 container.",
                                    "eric-adp-is-passphrase": "true",
                                    "format": "eric-adp-cm-secret"
                                  }
                                }
                              },
                              "scep": {
                                "type": "object",
                                "properties": {
                                  "start-scep": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name the asymmetric key will have when stored in /keystore/asymmetric-keys/asymmetric-key/"
                                      },
                                      "certificate-name": {
                                        "type": "string",
                                        "description": "The name the certificate chain will have when stored in /keystore/asymmetric-keys/asymmetric-key/certificates/certificate"
                                      },
                                      "algorithm": {
                                        "enum": [
                                          "rsa1024",
                                          "rsa2048",
                                          "rsa3072",
                                          "rsa4096",
                                          "rsa7680",
                                          "rsa15360",
                                          "secp192r1",
                                          "secp224r1",
                                          "secp256r1",
                                          "secp384r1",
                                          "secp521r1",
                                          "x25519",
                                          "x448"
                                        ],
                                        "description": "The algorithm to be used when generating the asymmetric key."
                                      },
                                      "subject": {
                                        "type": "string",
                                        "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                                        "description": "The X.501 DN to be used in the subject field of the requested certificate, for instance: 'C=SE,O=Ericsson,CN=someserialnumber.ericsson.com'"
                                      },
                                      "subject-alternative-names": {
                                        "type": "array",
                                        "description": "The subjectAltName can be specified either as an IP address, FQDN or URI. Format is <type>:<value>, where <type> is either 'IP' (for IP address), 'DNS' (for FQDN) or 'URI'. For 'IP' type the <value> is an IPv4 address in dotted decimal notation, or an IPv6 address in colon decimal notation. For 'DNS' type the <value> is an FQDN. A 'URI' can be either a URL (uniform resource locator) or a URN (uniform resource name). Examples: DNS:someserialnumber.ericsson.com IP:145.34.23.123 IP:2001:DB8::8:800:200C:417A URI:http://my.url.here/ URI:urn:uuid:f81d4fae-7feb-11d0-a765-00bd0c92f7cf7",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "password": {
                                        "type": "string",
                                        "description": "The SCEP challenge password. Must be provided unless RA mode is used.",
                                        "eric-adp-is-passphrase": "true",
                                        "format": "eric-adp-cm-secret"
                                      },
                                      "scep-server-group": {
                                        "type": "string",
                                        "description": "A SCEP server group used for SCEP enrollment."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "symmetric-keys": {
                            "type": "object",
                            "properties": {
                              "generate-symmetric-key": {
                                "type": "object",
                                "properties": {
                                  "algorithm": {
                                    "enum": [
                                      "aes-128-cbc",
                                      "aes-192-cbc",
                                      "aes-256-cbc",
                                      "aes-128-ctr",
                                      "aes-192-ctr",
                                      "aes-256-ctr",
                                      "des3-cbc-sha1-kd",
                                      "rc4-hmac",
                                      "rc4-hmac-exp"
                                    ],
                                    "description": "The algorithm to be used when generating the key."
                                  },
                                  "encrypt-with": {
                                    "type": "object",
                                    "description": "A container for the 'key-type' choice.",
                                    "properties": {
                                      "symmetric-key-ref": {
                                        "type": "string",
                                        "description": "Identifies a symmetric key used to encrypt this key."
                                      },
                                      "asymmetric-key-ref": {
                                        "type": "string",
                                        "description": "Identifies an asymmetric key used to encrypt this key."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "truststore": {
                        "type": "object",
                        "properties": {
                          "certificates": {
                            "type": "object",
                            "description": "Adds an action to import a PEM certificate chain.",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "install-certificate-pem": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name the certificate should have when listed in /truststore/certificates/certificate"
                                  },
                                  "pem": {
                                    "type": "string",
                                    "description": "A binary that contains the PEM encoded textual value of the self-signed root certificate."
                                  }
                                }
                              }
                            }
                          },
                          "certificate-revocations": {
                            "type": "object",
                            "properties": {
                              "refresh-crls": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          },
                          "host-keys": {
                            "type": "object",
                            "properties": {
                              "install-host-key-pem": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name the host-key should have when listed in /truststore/host-keys/host-key"
                                  },
                                  "pem": {
                                    "type": "string",
                                    "description": "A binary that contains the PEM encoded textual value of the host-key."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "brm": {
                        "type": "object",
                        "properties": {
                          "backup-manager": {
                            "type": "object",
                            "properties": {
                              "backup": {
                                "type": "object",
                                "properties": {
                                  "export": {
                                    "type": "object",
                                    "properties": {
                                      "uri": {
                                        "type": "string",
                                        "format": "uri",
                                        "description": "Specifies the location (url) where the backup is to be exported or the resource name (urn) that encapsulates the backup export procedure"
                                      },
                                      "password": {
                                        "type": "string",
                                        "description": "The password required to access the location specified by the uri. If no password is required, this parameter may be omitted.",
                                        "eric-adp-is-passphrase": "true",
                                        "format": "eric-adp-cm-secret"
                                      },
                                      "sftp-server-name": {
                                        "type": "string",
                                        "description": "Name of the defined SFTP Server to which the backup is to be exported."
                                      }
                                    }
                                  },
                                  "restore": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              },
                              "create-backup": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the backup to create. If specified, input name validation is done by the implementation to forbid illegal names. Backup name validation rules are defined by the implementation and include duplicate backup names, names exceeding maximum allowed length, etc. If not specified, the implementation will generate a backup name automatically with format defined by the implementation, example: <hostname>_<YYYY-MM-DDThh-mm-ss>."
                                  }
                                }
                              },
                              "delete-backup": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The backup-name of the backup to delete."
                                  }
                                }
                              },
                              "failsafe-backup": {
                                "type": "object",
                                "properties": {
                                  "activate": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "deactivate": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              },
                              "import-backup": {
                                "type": "object",
                                "properties": {
                                  "uri": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "Specifies the location (url) of the backup to import or the resource name (urn) that encapsulates the backup import procedure."
                                  },
                                  "password": {
                                    "type": "string",
                                    "description": "The password required to access the location specified by the uri. If no password is required, this parameter may be omitted.",
                                    "eric-adp-is-passphrase": "true",
                                    "format": "eric-adp-cm-secret"
                                  },
                                  "backup-path": {
                                    "type": "string",
                                    "description": "The path of the backup to be imported. This includes the backup name and it can include sub-directories. This is concatenated with the sftp-server remote-path at ../../sftp-server/endpoints/endpoint/remote-path to provide the full path to the backup e.g. full path = <remote-path>/<backup-path>"
                                  },
                                  "sftp-server-name": {
                                    "type": "string",
                                    "description": "Name of the defined SFTP Server from which the backup is to be imported."
                                  }
                                }
                              }
                            }
                          },
                          "rollback-at-restore": {
                            "type": "object",
                            "properties": {
                              "confirm-restore": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        }
                      },
                      "bsf-function": {
                        "type": "object",
                        "properties": {
                          "nf-instance": {
                            "type": "object",
                            "properties": {
                              "bsf-service": {
                                "type": "object",
                                "properties": {
                                  "binding-database": {
                                    "type": "object",
                                    "properties": {
                                      "check-db-schema": {
                                        "type": "object",
                                        "properties": {}
                                      },
                                      "initialize-db": {
                                        "type": "object",
                                        "properties": {
                                          "datacenter": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Replication strategy related properties",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name uniquely identifying the datacenter"
                                                },
                                                "replication-factor": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 2,
                                                  "maximum": 65535,
                                                  "description": "Cassandra replication factor for the specific datacenter",
                                                  "default": 2
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "update-db-topology": {
                                        "type": "object",
                                        "properties": {
                                          "datacenter": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Replication strategy related properties",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name uniquely identifying the datacenter"
                                                },
                                                "replication-factor": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 2,
                                                  "maximum": 65535,
                                                  "description": "Cassandra replication factor for the specific datacenter",
                                                  "default": 2
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "pcf-recovery-time": {
                                    "type": "object",
                                    "properties": {
                                      "binding-database-scan": {
                                        "type": "object",
                                        "properties": {
                                          "check-scan-status": {
                                            "type": "object",
                                            "properties": {}
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "diagnostic-data-collection": {
                        "type": "object",
                        "properties": {
                          "collect-ddb": {
                            "type": "object",
                            "properties": {
                              "profile": {
                                "type": "string",
                                "description": "A reference to a defined collector profile."
                              },
                              "end-time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End date and time of the time range of data to collect. Applicable only to data types that support time range filtering."
                              },
                              "start-time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start date and time of the time range of data to collect. Applicable only to data types that support time range filtering."
                              }
                            }
                          }
                        }
                      },
                      "diameter": {
                        "type": "object",
                        "properties": {
                          "dictionary": {
                            "type": "object",
                            "properties": {
                              "dump-dictionary": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          },
                          "load-control": {
                            "type": "object",
                            "properties": {
                              "load-regulation": {
                                "type": "object",
                                "properties": {
                                  "dump-history": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          },
                          "peer-table": {
                            "type": "object",
                            "properties": {
                              "dynamic-peer-acceptor": {
                                "type": "object",
                                "properties": {
                                  "kill-all-connections-of-peer": {
                                    "type": "object",
                                    "properties": {
                                      "peer-origin-host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "description": "Used to indicate the peer OriginHost towards which established connections should be killed."
                                      }
                                    }
                                  },
                                  "kill-all-connections": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "kill-connection": {
                                    "type": "object",
                                    "properties": {
                                      "connection-id": {
                                        "type": "string",
                                        "description": "Used to indicate the identity of the connection to be killed. The identity of a connection towards a Peer can be obtained with show-peer action performed for relevant peer."
                                      }
                                    }
                                  },
                                  "list-connections": {
                                    "type": "object",
                                    "properties": {
                                      "peer-origin-host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "description": "Used to set the peer OriginHost information. Should refer to a Diameter Node which is a peer of the own Diameter Node and accepted by this acceptor."
                                      }
                                    }
                                  },
                                  "list-peers": {
                                    "type": "object",
                                    "properties": {
                                      "host-filter": {
                                        "type": "string",
                                        "description": "Used to express a filter over the Origin-Host of the Diameter Peer. By default all hosts are listed. It should be expressed as a regular expression (eg: node1\\\\.operator1\\\\.com, .*\\\\.operator1\\\\.com). The provided regular expression will be used to search for Diameter Peers, with matching Origin-Host, accepted by current dynamic-peer-acceptor.",
                                        "default": ".*"
                                      }
                                    }
                                  },
                                  "show-connection": {
                                    "type": "object",
                                    "properties": {
                                      "connection-id": {
                                        "type": "string",
                                        "description": "Used to indicate the identity of the relevant Diameter Peer connection."
                                      }
                                    }
                                  },
                                  "show-peer": {
                                    "type": "object",
                                    "properties": {
                                      "peer-origin-host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "description": "Used to set the peer OriginHost information. Should refer to a Diameter Node accepted by this acceptor"
                                      }
                                    }
                                  }
                                }
                              },
                              "kill-all-connections-of-peer": {
                                "type": "object",
                                "properties": {
                                  "peer-origin-host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "description": "Holds the Origin-Host of the Diameter Peer which connections should be killed. Typically, one of the Diameter Peers listed with list-peers action."
                                  }
                                }
                              },
                              "kill-all-connections": {
                                "type": "object",
                                "properties": {}
                              },
                              "kill-connection": {
                                "type": "object",
                                "properties": {
                                  "connection-id": {
                                    "type": "string",
                                    "description": "Holds the identity of the Diameter Peer connection to be killed. Should hold a connection identity in the format returned by the list-connections action."
                                  }
                                }
                              },
                              "list-connections": {
                                "type": "object",
                                "properties": {
                                  "peer-origin-host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "description": "Holds the Origin-Host of the Diameter Peer. Typically, one of the Diameter Peers listed with list-peers action."
                                  }
                                }
                              },
                              "list-peers": {
                                "type": "object",
                                "properties": {
                                  "host-filter": {
                                    "type": "string",
                                    "description": "Used to express a filter over the Origin-Host of the Diameter Peer. By default all hosts are listed. It should be expressed as a regular expression (eg: node1\\\\.operator1\\\\.com, .*\\\\.operator1\\\\.com). The provided regular expression will be used to search for Diameter Peers, with matching Origin-Host, connected to the AAA Service.",
                                    "default": ".*"
                                  },
                                  "type": {
                                    "enum": [
                                      "all",
                                      "static",
                                      "dynamic"
                                    ],
                                    "description": "Used to scope on the local representation of the Diameter Peer."
                                  },
                                  "state": {
                                    "enum": [
                                      "all",
                                      "available",
                                      "unavailable"
                                    ],
                                    "description": "Used to scope on the availability of the Diameter Peer (presence state)."
                                  }
                                }
                              },
                              "show-connection": {
                                "type": "object",
                                "properties": {
                                  "connection-id": {
                                    "type": "string",
                                    "description": "Holds the identity of the Diameter Peer connection information is to be provided about. Should hold a connection identity in the format returned by the list-connections action."
                                  }
                                }
                              },
                              "show-peer": {
                                "type": "object",
                                "properties": {
                                  "peer-origin-host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "description": "Holds the Origin-Host of the Diameter Peer. Typically, one of the Diameter Peers listed with list-peers action."
                                  }
                                }
                              },
                              "static-peer": {
                                "type": "object",
                                "properties": {
                                  "kill-all-connections": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "kill-connection": {
                                    "type": "object",
                                    "properties": {
                                      "connection-id": {
                                        "type": "string",
                                        "description": "Holds the identity of the Diameter Peer connection to be killed. Should hold a connection identity in the format returned by the list-connections action."
                                      }
                                    }
                                  },
                                  "list-connections": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "show-connection": {
                                    "type": "object",
                                    "properties": {
                                      "connection-id": {
                                        "type": "string",
                                        "description": "Holds the identity of the Diameter Peer connection information is to be provided about. Should hold a connection identity in the format returned by the list-connections action."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "routing-table": {
                            "type": "object",
                            "properties": {
                              "dump-routing-table": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          },
                          "service": {
                            "type": "object",
                            "properties": {
                              "dump-routing-table": {
                                "type": "object",
                                "properties": {}
                              },
                              "kill-all-connections-of-peer": {
                                "type": "object",
                                "properties": {
                                  "peer-origin-host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "description": "Holds the Origin-Host of the Diameter Peer which connections should be killed. Typically, one of the Diameter Peers listed with list-peers action."
                                  }
                                }
                              },
                              "kill-all-connections": {
                                "type": "object",
                                "properties": {}
                              },
                              "kill-connection": {
                                "type": "object",
                                "properties": {
                                  "connection-id": {
                                    "type": "string",
                                    "description": "Used to indicate the identity of the connection to be killed. Should hold a connection identity in the format returned by the list-connections action."
                                  }
                                }
                              },
                              "list-connections": {
                                "type": "object",
                                "properties": {
                                  "peer-origin-host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "description": "Holds the Origin-Host of the Diameter Peer information should be exposed about. Typically, one of the Diameter Peers listed with list-peers action."
                                  }
                                }
                              },
                              "list-peers": {
                                "type": "object",
                                "properties": {
                                  "host-filter": {
                                    "type": "string",
                                    "description": "Used to express a filter over the Origin-Host of the Diameter Peer. By default all hosts are listed. It should be expressed as a regular expression (eg: node1\\\\.operator1\\\\.com, .*\\\\.operator1\\\\.com). The provided regular expression will be used to search for Diameter Peers, with matching Origin-Host, accepted by current dynamic-peer-acceptor.",
                                    "default": ".*"
                                  },
                                  "type": {
                                    "enum": [
                                      "all",
                                      "static",
                                      "dynamic"
                                    ],
                                    "description": "Used to scope on the local representation of the Diameter Peer."
                                  },
                                  "state": {
                                    "enum": [
                                      "all",
                                      "available",
                                      "unavailable"
                                    ],
                                    "description": "Used to scope on the availability of the Diameter Peer (presence state)."
                                  }
                                }
                              },
                              "show-connection": {
                                "type": "object",
                                "properties": {
                                  "connection-id": {
                                    "type": "string",
                                    "description": "Holds the identity of the Diameter Peer connection information is to be provided about. Should hold a connection identity in the format returned by the list-connections action."
                                  }
                                }
                              },
                              "show-peer": {
                                "type": "object",
                                "properties": {
                                  "peer-origin-host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "description": "Holds the Origin-Host of the Diameter Peer. Typically, one of the Diameter Peers listed with list-peers action."
                                  }
                                }
                              }
                            }
                          },
                          "transport": {
                            "type": "object",
                            "properties": {
                              "dump-transport-data": {
                                "type": "object",
                                "properties": {}
                              },
                              "node": {
                                "type": "object",
                                "properties": {
                                  "kill-all-connections-of-peer": {
                                    "type": "object",
                                    "properties": {
                                      "peer-origin-host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "description": "Used to indicate the peer OriginHost towards which established connections should be killed."
                                      }
                                    }
                                  },
                                  "kill-all-connections": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "kill-connection": {
                                    "type": "object",
                                    "properties": {
                                      "connection-id": {
                                        "type": "string",
                                        "description": "Used to indicate the identity of the connection to be killed. The identity of a connection towards a Peer can be obtained with show-peer action performed for relevant peer."
                                      }
                                    }
                                  },
                                  "list-attached-services": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "list-connections": {
                                    "type": "object",
                                    "properties": {
                                      "peer-origin-host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "description": "Holds the Origin-Host of the Diameter Peers connection information should be exposed about. Typically, one of the Peers listed with list-peers action."
                                      }
                                    }
                                  },
                                  "list-peers": {
                                    "type": "object",
                                    "properties": {
                                      "host-filter": {
                                        "type": "string",
                                        "description": "Used to express a filter over the Origin-Host of the Diameter Peer. By default all hosts are listed. It should be expressed as a regular expression (eg: node1\\\\.operator1\\\\.com, .*\\\\.operator1\\\\.com). The provided regular expression will be used to search for Diameter Peers, with matching Origin-Host, connected to the own Diameter Nodes.",
                                        "default": ".*"
                                      },
                                      "type": {
                                        "enum": [
                                          "all",
                                          "static",
                                          "dynamic"
                                        ],
                                        "description": "Used to scope on the local representation of the Diameter Peer."
                                      },
                                      "state": {
                                        "enum": [
                                          "all",
                                          "available",
                                          "unavailable"
                                        ],
                                        "description": "Used to scope on the availability of the Diameter Peer (presence state)."
                                      }
                                    }
                                  },
                                  "show-connection": {
                                    "type": "object",
                                    "properties": {
                                      "connection-id": {
                                        "type": "string",
                                        "description": "Used to indicate the identity of the relevant Diameter Peer connection."
                                      }
                                    }
                                  },
                                  "show-deployed-certificates": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "show-peer": {
                                    "type": "object",
                                    "properties": {
                                      "peer-origin-host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "description": "Used to set the peer OriginHost information. Should refer to the Diameter Peer of the own Diameter Node"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "sepp-function": {
                        "type": "object",
                        "properties": {
                          "nf-instance": {
                            "type": "object",
                            "properties": {
                              "fqdn-scrambling-command": {
                                "type": "object",
                                "properties": {
                                  "descramble-fqdn": {
                                    "type": "object",
                                    "properties": {
                                      "scrambled-fqdn": {
                                        "type": "string",
                                        "pattern": "^.*_.*$",
                                        "description": "The scrambled FQDN"
                                      },
                                      "descrambling-key": {
                                        "type": "string",
                                        "description": "The key to be used for descrambling the FQDN. A plain text string of 32 characters is expected."
                                      },
                                      "initial-vector": {
                                        "type": "string",
                                        "description": "The initial vector to be used in AES GCM algorithm. A plain text string of 12 characters is expected."
                                      }
                                    }
                                  },
                                  "scramble-fqdn": {
                                    "type": "object",
                                    "properties": {
                                      "fqdn": {
                                        "type": "string",
                                        "format": "hostname",
                                        "description": "The original FQDN to be scrambled"
                                      },
                                      "key-id": {
                                        "type": "string",
                                        "pattern": "^[A-Z0-9]{4}$",
                                        "description": "The encryption identifier of the configured key and initial vector to be used for scrambling the FQDN"
                                      },
                                      "roaming-partner-ref": {
                                        "type": "string",
                                        "description": "The roaming partner which the FQDN is scrambled for. The active key and the initial vector of the given roaming-partner shall be used for the scrambling process"
                                      },
                                      "key-plain-text": {
                                        "type": "object",
                                        "description": "The key and the corresponding encryption identifier and initial vector to be used for scrambling the given FQDN",
                                        "properties": {
                                          "key": {
                                            "type": "string",
                                            "description": "The scrambling key to be used in AES GCM algorithm. A plain text string of 32 characters is expected."
                                          },
                                          "initial-vector": {
                                            "type": "string",
                                            "description": "The initial vector to be used in AES GCM algorithm. A plain text string of 12 characters is expected."
                                          },
                                          "id": {
                                            "type": "string",
                                            "pattern": "^[A-Z0-9]{4}$",
                                            "description": "The encryption identifier of the given scrambling key"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "snmp": {
                        "type": "object",
                        "properties": {
                          "node-credential": {
                            "type": "object",
                            "properties": {
                              "server-identity": {
                                "type": "object",
                                "properties": {
                                  "certificate": {
                                    "type": "object",
                                    "properties": {
                                      "local-definition": {
                                        "type": "object",
                                        "properties": {
                                          "generate-certificate-signing-request": {
                                            "type": "object",
                                            "properties": {
                                              "subject": {
                                                "type": "string",
                                                "description": "The 'subject' field per the CertificationRequestInfo structure as specified by RFC 2986, Section 4.1 encoded using the ASN.1 distinguished encoding rules (DER), as specified in ITU-T X.690."
                                              },
                                              "attributes": {
                                                "type": "string",
                                                "description": "The 'attributes' field from the structure CertificationRequestInfo as specified by RFC 2986, Section 4.1 encoded using the ASN.1 distinguished encoding rules (DER), as specified in ITU-T X.690."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "trust-category": {
                            "type": "object",
                            "properties": {
                              "server-identity": {
                                "type": "object",
                                "properties": {
                                  "certificate": {
                                    "type": "object",
                                    "properties": {
                                      "local-definition": {
                                        "type": "object",
                                        "properties": {
                                          "generate-certificate-signing-request": {
                                            "type": "object",
                                            "properties": {
                                              "subject": {
                                                "type": "string",
                                                "description": "The 'subject' field per the CertificationRequestInfo structure as specified by RFC 2986, Section 4.1 encoded using the ASN.1 distinguished encoding rules (DER), as specified in ITU-T X.690."
                                              },
                                              "attributes": {
                                                "type": "string",
                                                "description": "The 'attributes' field from the structure CertificationRequestInfo as specified by RFC 2986, Section 4.1 encoded using the ASN.1 distinguished encoding rules (DER), as specified in ITU-T X.690."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "system": {
                        "type": "object",
                        "properties": {
                          "authentication": {
                            "type": "object",
                            "properties": {
                              "user": {
                                "type": "object",
                                "properties": {
                                  "unlock-operational-lock": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "edit-config": {
                    "type": "object",
                    "properties": {
                      "target": {
                        "type": "object",
                        "properties": {
                          "running": {
                            "type": "string",
                            "description": "The running configuration is the config source."
                          },
                          "candidate": {
                            "type": "string",
                            "description": "The candidate configuration is the config target."
                          }
                        },
                        "description": "Particular configuration to edit."
                      },
                      "config": {
                        "type": "object",
                        "properties": {
                          "brm": {
                            "type": "object",
                            "description": "Backup and Restore Management.",
                            "properties": {
                              "backup-manager": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "Top node for a backup-domain/type.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Identity of the backup-manager."
                                    },
                                    "housekeeping": {
                                      "type": "object",
                                      "description": "Provides optional support for automated housekeeping of manually created backups. If auto-delete is set to ENABLED before creating a new manual backup, BRM first checks the number of manual backups, and if the limit specified by the value of max-stored-manual-backups is reached, BRM removes the oldest manual backup before creating a new one.",
                                      "properties": {
                                        "max-stored-manual-backups": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 65535,
                                          "description": "Maximum number of manual backups, per backup type, to store in the ME. When this limit is reached, if auto-delete=ENABLED, BRM removes the oldest manual backup before creating a new one. Otherwise an error is returned when create-backup() is invoked and the NMS must perform the required housekeeping activity before attempting to create a new backup.",
                                          "default": 1
                                        },
                                        "auto-delete": {
                                          "enum": [
                                            "enabled",
                                            "disabled"
                                          ],
                                          "description": "Determines whether automated housekeeping of manual backups is enabled. If ENABLED and the number of backups already stored on the ME is equal to the value of max-stored-manual-backups, the oldest backup is removed before creating a new one. If set to DISABLED, no backup is removed. Instead, when action create-backup() is invoked, it returns a failure parameter.",
                                          "default": "enabled"
                                        }
                                      }
                                    },
                                    "scheduler": {
                                      "type": "object",
                                      "description": "Provides optional support for scheduling backup creation for the parent backup-manager. The scheduled backup events can be Single Events, Calendar Based Periodic Events, or Periodic Events as defined by the child lists.",
                                      "properties": {
                                        "scheduled-backup-name": {
                                          "type": "string",
                                          "description": "The configurable portion of the scheduled backup name. The scheduled backups are named <scheduled-backup-name>-<creation date and time>, where creation date and time is of type yang:date-and-time.",
                                          "default": "SCHEDULED_BACKUP"
                                        },
                                        "auto-export": {
                                          "enum": [
                                            "enabled",
                                            "disabled"
                                          ],
                                          "description": "Determines whether a scheduled backup is to be automatically exported at successful creation. If set to ENABLED, the scheduled backup specified by the leaf most-recently-created-auto-backup is exported to the location specified by either leaf auto-export-uri or leafref sftp-server-name after it is successfully created. Note that the automatic export is only triggered if creation of the scheduled backup was successful. Otherwise, no export operation is triggered, even if this leaf is set to ENABLED. Also, note that setting this leaf to ENABLED has no impact on the scheduled backups that were already created and stored prior to the new configuration.",
                                          "default": "disabled"
                                        },
                                        "admin-state": {
                                          "enum": [
                                            "locked",
                                            "unlocked"
                                          ],
                                          "description": "Administrative state of the scheduler.",
                                          "default": "unlocked"
                                        },
                                        "periodic-event": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "Periodic backup event. This construct can be used to configure a periodic scheduled backup event by specifying the number of months, weeks, days, hours, or minutes. For instance, in order to configure a scheduled backup event to occur every 12 hours, the following setup must be done: hours = 12. If more than one leaf is set, the values are added when calculating the next scheduled event. For example, if hours = 6 and minutes = 30, the scheduled backup event occurs every 6 hour and 30 minutes. The start time for calculating scheduled events is assumed to be the current system time by default, unless explicitly set using the start-time leaf. Furthermore, if the configured event is to stop at a specific date, leaf stop-time must be set accordingly. Daylight saving adjustments in Spring and Fall are addressed in such a way that the affected scheduled backup events are triggered exactly once only",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Identity of the periodic-event."
                                              },
                                              "weeks": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of weeks.",
                                                "default": 0
                                              },
                                              "days": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of days.",
                                                "default": 0
                                              },
                                              "hours": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of hours."
                                              },
                                              "minutes": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of minutes.",
                                                "default": 0
                                              },
                                              "start-time": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Start time. If not specified, the implementation uses the current system time as the default value."
                                              },
                                              "stop-time": {
                                                "type": "string",
                                                "format": "date-time",
                                                "description": "Stop time. If no stop-time present the event continues indefinitely."
                                              }
                                            },
                                            "required": [
                                              "hours",
                                              "id"
                                            ]
                                          }
                                        },
                                        "auto-export-uri": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "Uri used by the backup scheduler when automatically exporting a scheduled backup. If leaf auto-export is set to ENABLED, this uri specifies the location to which the scheduled backup is automatically exported."
                                        },
                                        "auto-export-password": {
                                          "type": "string",
                                          "description": "Password used by the backup scheduler when automatically exporting a scheduled backup. If leaf auto-export is set to ENABLED, this password is used for authentication when automatically exporting the scheduled backup. No need to specify this leaf if no password is required for accessing auto-export-uri.",
                                          "eric-adp-is-passphrase": "true",
                                          "format": "eric-adp-cm-secret"
                                        },
                                        "sftp-server-name": {
                                          "type": "string",
                                          "description": "Name of the defined SFTP Server to which the backup is to be exported."
                                        }
                                      }
                                    },
                                    "failsafe-backup": {
                                      "type": "object",
                                      "description": "Failsafe backups can be used when making changes to sensitive parts of the model, in which an error in configuration can lead to lost OAM connectivity or other failures from which the system can recover by a restore from a backup. When activated the failsafe backup function will automatically restore the system from a backup if the configuration as not been confirmed within a defined time period.",
                                      "properties": {
                                        "timeout-length": {
                                          "type": "string",
                                          "format": "uint64",
                                          "description": "The number of seconds the system waits before activating the failsafe function. If the value is set while the function is active the time-remaining will be changed to that time instead.",
                                          "default": "1200"
                                        }
                                      }
                                    },
                                    "sftp-server": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "List of SFTP servers the SFTP client is to initiate connections to in parallel.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "An arbitrary name for the SFTP server."
                                          },
                                          "endpoints": {
                                            "type": "object",
                                            "description": "Container for the list of endpoints.",
                                            "properties": {
                                              "endpoint": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "maxItems": 1,
                                                "description": "A user-ordered list of endpoints that the SFTP client may attempt to connect to (one at a time) swithcing to the next in case the connection failed. Each endpoint has its own security configuration.",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "remote-address": {
                                                      "type": "string",
                                                      "anyOf": [
                                                        {
                                                          "format": "ipv4"
                                                        },
                                                        {
                                                          "format": "ipv6"
                                                        },
                                                        {
                                                          "format": "hostname"
                                                        }
                                                      ],
                                                      "description": "The IP address or hostname of the endpoint. If a domain name is configured, then the DNS resolution should happen on each usage attempt. If the DNS resolution results in multiple IP addresses, the IP addresses will be tried according to local preference order until a connection has been established or until all IP addresses have failed."
                                                    },
                                                    "remote-port": {
                                                      "type": "integer",
                                                      "format": "uint16",
                                                      "minimum": 0,
                                                      "maximum": 65535,
                                                      "description": "The IP port for this endpoint. The NETCONF client will use the IANA-assigned well-known port for 'sftp' (22) if no value is specified.",
                                                      "default": 22
                                                    },
                                                    "remote-path": {
                                                      "type": "string",
                                                      "description": "Specifies the location or path where the file(s) will be stored."
                                                    },
                                                    "client-identity": {
                                                      "type": "object",
                                                      "description": "The credentials used by the client to authenticate to the SSH server.",
                                                      "properties": {
                                                        "username": {
                                                          "type": "string",
                                                          "description": "The username of this user. This will be the username used, for instance, to log into an SSH server."
                                                        },
                                                        "public-key": {
                                                          "type": "object",
                                                          "description": "A locally-defined or referenced asymmetric key pair to be used for client authentication.",
                                                          "properties": {
                                                            "local-definition": {
                                                              "type": "object",
                                                              "description": "Container to hold the local key definition.",
                                                              "properties": {
                                                                "public-key": {
                                                                  "type": "string",
                                                                  "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                                                },
                                                                "private-key": {
                                                                  "type": "string",
                                                                  "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                                                  "eric-adp-is-passphrase": "true",
                                                                  "format": "eric-adp-cm-secret"
                                                                }
                                                              },
                                                              "required": [
                                                                "public-key"
                                                              ]
                                                            }
                                                          },
                                                          "required": [
                                                            "local-definition"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "server-authentication": {
                                                      "type": "object",
                                                      "description": "Specifies how the SSH client can authenticate SSH servers. Any combination of credentials is additive and unordered.",
                                                      "properties": {
                                                        "ssh-host-keys": {
                                                          "type": "object",
                                                          "description": "A list of SSH host keys used by the SSH client to authenticate SSH server host keys. A server host key is authenticated if it is an exact match to a configured SSH host key.",
                                                          "properties": {
                                                            "local-definition": {
                                                              "type": "object",
                                                              "description": "Container to hold local host key definitions.",
                                                              "properties": {
                                                                "host-key": {
                                                                  "type": "array",
                                                                  "description": "The binary public key data for this host key.",
                                                                  "items": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "required": [
                                                    "name",
                                                    "remote-address"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "endpoint"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "endpoints",
                                          "name"
                                        ]
                                      }
                                    },
                                    "sftp-server-name": {
                                      "type": "string",
                                      "description": "Name of the defined SFTP Server to which the backup is to be exported."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "rollback-at-restore": {
                                "type": "object",
                                "description": "Provides optional support for confirmation of a restore action or automatic rollback after an unconfirmed restore operation was executed.",
                                "properties": {
                                  "time-allowed-before-rollback": {
                                    "type": "integer",
                                    "format": "uint16",
                                    "minimum": 1,
                                    "maximum": 65535,
                                    "description": "Number of seconds to wait for action confirm-restore to invoke before performing the rollback to the state before restore.",
                                    "default": 3600
                                  }
                                }
                              }
                            }
                          },
                          "bsf-function": {
                            "type": "object",
                            "description": "Configuration settings for the Binding Support Function",
                            "properties": {
                              "nf-instance": {
                                "type": "array",
                                "uniqueItems": true,
                                "maxItems": 1,
                                "description": "The BSF instance defines the behavior of the BSF NF as well as the NRF registration behavior",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name uniquely identifying the BSF instance"
                                    },
                                    "nf-peer-info": {
                                      "type": "object",
                                      "description": "Defines the required data for 3gpp-Sbi-NF-Peer-Info header in a global level",
                                      "properties": {
                                        "out-message-handling": {
                                          "enum": [
                                            "on",
                                            "off"
                                          ],
                                          "description": "A switch to define the header handling in a global level",
                                          "default": "off"
                                        }
                                      }
                                    },
                                    "nf-instance-id": {
                                      "type": "string",
                                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                      "description": "A Universally Unique IDentifier in the string representation defined in RFC 4122. The canonical representation uses lower case characters. The following is an example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 Setting this property is optional. It has a meaning for how the BSF registers in its NRF(s): If not set, an automatically generated NF instance ID (a different one for each NRF group) is used for the registration. If set, this is used for the registration rather than the automatically generated NF instance IDs of the NRF groups."
                                    },
                                    "dns-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Settings for DNS resolution.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the dns-profile"
                                          },
                                          "ip-family-resolution": {
                                            "type": "array",
                                            "minItems": 1,
                                            "maxItems": 2,
                                            "description": "IP family for the DNS resolution of an FQDN",
                                            "items": {
                                              "enum": [
                                                "ipv4",
                                                "ipv6"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "ip-family-resolution",
                                          "name"
                                        ]
                                      }
                                    },
                                    "nf-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Profile consisting of general parameters of the BSF instance and the services provided by it, sent to the NRF at registration",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name uniquely identifying the NF profile"
                                          },
                                          "service-address-ref": {
                                            "type": "string",
                                            "description": "Service address of the BSF"
                                          },
                                          "bsf-info": {
                                            "type": "object",
                                            "description": "Specific data for the BSF NF",
                                            "properties": {
                                              "dnn": {
                                                "type": "array",
                                                "description": "DNN(s) handled by the BSF. If not provided, the BSF can serve any DNN",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "ip-domain": {
                                                "type": "array",
                                                "description": "IPv4 address domain(s) handled by the BSF. If not provided, the BSF can serve any IP domain",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "ipv4-addr-range": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Range(s) of IPv4 addresses handled by BSF. If not provided, the BSF can serve any IPv4 address",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ipv4-addr-start": {
                                                      "type": "string",
                                                      "format": "ipv4"
                                                    },
                                                    "ipv4-addr-end": {
                                                      "type": "string",
                                                      "format": "ipv4"
                                                    }
                                                  }
                                                }
                                              },
                                              "ipv6-prefix-range": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Range(s) of IPv6 prefixes handled by the BSF. If not provided, the BSF can serve any IPv6 prefix",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ipv6-prefix-start": {
                                                      "type": "string",
                                                      "allOf": [
                                                        {
                                                          "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                        },
                                                        {
                                                          "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                        }
                                                      ]
                                                    },
                                                    "ipv6-prefix-end": {
                                                      "type": "string",
                                                      "allOf": [
                                                        {
                                                          "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                        },
                                                        {
                                                          "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "nf-service": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "The configuration of NF services provided by the BSF which can be discovered by other NFs",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "service-address-ref": {
                                                  "type": "array",
                                                  "maxItems": 1,
                                                  "description": "Service address of the BSF service",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "oauth2-required": {
                                                  "type": "boolean",
                                                  "description": "Flag indicating whether the NF instance requires OAuth2-based authorization"
                                                },
                                                "service-instance-id": {
                                                  "type": "string",
                                                  "description": "Name uniquely identifying this service instance."
                                                },
                                                "service-name": {
                                                  "enum": [
                                                    "default",
                                                    "nnrf-nfm",
                                                    "nnrf-disc",
                                                    "nnrf-oauth2",
                                                    "nudm-sdm",
                                                    "nudm-uecm",
                                                    "nudm-ueau",
                                                    "nudm-ee",
                                                    "nudm-pp",
                                                    "nudm-niddau",
                                                    "nudm-mt",
                                                    "namf-comm",
                                                    "namf-evts",
                                                    "namf-mt",
                                                    "namf-loc",
                                                    "nsmf-pdusession",
                                                    "nsmf-event-exposure",
                                                    "nsmf-nidd",
                                                    "nausf-auth",
                                                    "nausf-sorprotection",
                                                    "nausf-upuprotection",
                                                    "nnef-pfdmanagement",
                                                    "nnef-smcontext",
                                                    "nnef-eventexposure",
                                                    "npcf-am-policy-control",
                                                    "npcf-smpolicycontrol",
                                                    "npcf-policyauthorization",
                                                    "npcf-bdtpolicycontrol",
                                                    "npcf-eventexposure",
                                                    "npcf-ue-policy-control",
                                                    "nsmsf-sms",
                                                    "nnssf-nsselection",
                                                    "nnssf-nssaiavailability",
                                                    "nudr-dr",
                                                    "nudr-group-id-map",
                                                    "nlmf-loc",
                                                    "n5g-eir-eic",
                                                    "nbsf-management",
                                                    "nchf-spendinglimitcontrol",
                                                    "nchf-convergedcharging",
                                                    "nchf-offlineonlycharging",
                                                    "nnwdaf-eventssubscription",
                                                    "nnwdaf-analyticsinfo",
                                                    "ngmlc-loc",
                                                    "nucmf-provisioning",
                                                    "nucmf-uecapabilitymanagement",
                                                    "nhss-sdm",
                                                    "nhss-uecm",
                                                    "nhss-ueau",
                                                    "nhss-ee",
                                                    "nhss-ims-sdm",
                                                    "nhss-ims-uecm",
                                                    "nhss-ims-ueau",
                                                    "nsepp-telescopic",
                                                    "nsoraf-sor",
                                                    "nspaf-secured-packet",
                                                    "nudsf-dr",
                                                    "nnssaaf-nssaa"
                                                  ],
                                                  "description": "Name identifying the type of NF service."
                                                },
                                                "scheme": {
                                                  "enum": [
                                                    "http",
                                                    "https"
                                                  ],
                                                  "description": "Specifies the URI scheme"
                                                },
                                                "admin-state": {
                                                  "enum": [
                                                    "active",
                                                    "undiscoverable"
                                                  ],
                                                  "description": "Administrative state on NFService level"
                                                },
                                                "api-prefix": {
                                                  "type": "string",
                                                  "description": "Optional path used to construct the API URI for this service"
                                                },
                                                "allowed-plmn": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "mcc": {
                                                        "type": "string",
                                                        "pattern": "^[0-9]{3}$",
                                                        "description": "Specifies the mobile country code of the PLMN"
                                                      },
                                                      "mnc": {
                                                        "type": "string",
                                                        "pattern": "^[0-9]{2,3}$",
                                                        "description": "Specifies the mobile network code of the PLMN"
                                                      }
                                                    }
                                                  }
                                                },
                                                "allowed-nf-type": {
                                                  "type": "array",
                                                  "description": "NF types (according to TS 29.510) which are allowed to access the NF service. If not specified, NFs of any type are allowed to access the NF service.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "allowed-nf-domain": {
                                                  "type": "array",
                                                  "description": "NF domain names which are allowed to access the NF service. If not specified, If not specified, NFs in any domain are allowed to access the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "allowed-nssai": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sst": {
                                                        "type": "integer",
                                                        "format": "uint8",
                                                        "minimum": 0,
                                                        "maximum": 255,
                                                        "description": "Specifies the slice service type of the S-NSSAI"
                                                      },
                                                      "sd": {
                                                        "type": "string",
                                                        "pattern": "^[A-Fa-f0-9]{6}$",
                                                        "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                      }
                                                    },
                                                    "required": [
                                                      "sst"
                                                    ]
                                                  }
                                                },
                                                "allowed-nssai-1": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "sst": {
                                                        "type": "integer",
                                                        "format": "uint8",
                                                        "minimum": 0,
                                                        "maximum": 255,
                                                        "description": "Specifies the slice service type of the S-NSSAI"
                                                      },
                                                      "sd": {
                                                        "type": "string",
                                                        "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                        "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                        "default": "-"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "sst"
                                                    ]
                                                  }
                                                },
                                                "service-priority": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1,
                                                  "maximum": 65535,
                                                  "description": "Service priority of this NF service relative to other NF services of the same type, to be used for NF service selection. Lower values indicate a higher priority"
                                                },
                                                "capacity": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1,
                                                  "maximum": 65535,
                                                  "description": "Static capacity information of this NF service expressed as a weight relative to other services of the same type, to be used for NF selection"
                                                }
                                              },
                                              "required": [
                                                "scheme",
                                                "service-instance-id",
                                                "service-name"
                                              ]
                                            }
                                          },
                                          "nf-instance-name": {
                                            "type": "string",
                                            "description": "Human readable name of the NF instance"
                                          },
                                          "nf-type": {
                                            "type": "string",
                                            "description": "The type of the NF instance (according to TS 29.510)"
                                          },
                                          "admin-state": {
                                            "enum": [
                                              "active",
                                              "undiscoverable"
                                            ],
                                            "description": "Administrative state on NF level"
                                          },
                                          "nf-specific-info": {
                                            "type": "object",
                                            "description": "Deprecated, use nf-profile->chf-info and nf-profile->bsf-info instead, specific data for the NF instance type",
                                            "properties": {
                                              "chf-info": {
                                                "type": "object",
                                                "description": "Specific data for the CHF NF",
                                                "properties": {
                                                  "supi-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of SUPIs that can be served by the CHF instance. If not specified, the CHF can serve any SUPI",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295,
                                                          "description": "ID uniquely identifying the SUPI range"
                                                        },
                                                        "supi-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "First value identifying the start of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                        },
                                                        "supi-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "Last value identifying the end of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of SUPIs belonging to this range. A SUPI value is considered part of the range if, and only if, the SUPI string fully matches the regular expression."
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "gpsi-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of GPSIs that can be served by the CHF instance. If not specified, the CHF can serve any GPSI",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295
                                                        },
                                                        "identity-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "First value identifying the start of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                        },
                                                        "identity-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "Last value identifying the end of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of identities belonging to this range. An identity value is considered part of the range if and only if the identity string fully matches the regular expression. To be used when identity is External Identifier or External Group Identifier or MSISDN."
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "plmn-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of PLMNs that can be served by the CHF instance. If not specified, the CHF can serve any PLMN",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295
                                                        },
                                                        "plmn-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                          "description": "First value identifying the start of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12340'."
                                                        },
                                                        "plmn-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                          "description": "Last value identifying the end of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12349'."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of PLMNs belonging to this range. A PLMN value is considered part of the range if and only if the PLMN string, formatted as <MCC><MNC>, fully matches the regular expression. For example '^1234[0-9]$'"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "bsf-info": {
                                                "type": "object",
                                                "description": "Specific data for the BSF NF",
                                                "properties": {
                                                  "dnn": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "ip-domain": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "ipv4-addr-range": {
                                                    "type": "object",
                                                    "properties": {
                                                      "ipv4-addr-start": {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      },
                                                      "ipv4-addr-end": {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      }
                                                    }
                                                  },
                                                  "ipv6-prefix-range": {
                                                    "type": "object",
                                                    "properties": {
                                                      "ipv6-prefix-start": {
                                                        "type": "string",
                                                        "allOf": [
                                                          {
                                                            "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                          },
                                                          {
                                                            "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                          }
                                                        ]
                                                      },
                                                      "ipv6-prefix-end": {
                                                        "type": "string",
                                                        "allOf": [
                                                          {
                                                            "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                          },
                                                          {
                                                            "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "requested-heartbeat-timer": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Requested time, in seconds, expected between two heart-beat messages from the NF instance to the NRF"
                                          },
                                          "plmn": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "PLMN(s) of the NF instance. If not provided, the PLMN ID(s) of the PLMN of the NRF are assumed for this NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "mcc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{3}$",
                                                  "description": "Specifies the mobile country code of the PLMN"
                                                },
                                                "mnc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{2,3}$",
                                                  "description": "Specifies the mobile network code of the PLMN"
                                                }
                                              }
                                            }
                                          },
                                          "snssai": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Deprecated, use snssai-1 instead. S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                }
                                              },
                                              "required": [
                                                "sst"
                                              ]
                                            }
                                          },
                                          "snssai-1": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                  "default": "-"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "sst"
                                              ]
                                            }
                                          },
                                          "allowed-plmn": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "mcc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{3}$",
                                                  "description": "Specifies the mobile country code of the PLMN"
                                                },
                                                "mnc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{2,3}$",
                                                  "description": "Specifies the mobile network code of the PLMN"
                                                }
                                              }
                                            }
                                          },
                                          "allowed-nf-type": {
                                            "type": "array",
                                            "description": "NF types (according to TS 29.510) which are allowed to access the NF instance. If not specified, NFs of any type are allowed to access the NF",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "allowed-nf-domain": {
                                            "type": "array",
                                            "description": "NF domain names which are allowed to access the NF instance. If not specified, NFs in any domain are allowed to access the NF",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "allowed-nssai": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                }
                                              },
                                              "required": [
                                                "sst"
                                              ]
                                            }
                                          },
                                          "allowed-nssai-1": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                  "default": "-"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "sst"
                                              ]
                                            }
                                          },
                                          "nf-set-id": {
                                            "type": "array",
                                            "description": "NF Set Identifiers for this NF used for NF registration",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "nsi": {
                                            "type": "array",
                                            "description": "NSI identities of the Network Function. If not provided, the NF can serve any NSI",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "service-priority": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Service priority of this NF instance, in the range of 0-65535, relative to other NF instances of the same type, to be used for NF selection. Lower values indicate a higher priority"
                                          },
                                          "capacity": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Static capacity information of this NF instance, in the range of 0-65535, expressed as a weight relative to other NF instances of the same type"
                                          },
                                          "locality": {
                                            "type": "string",
                                            "description": "Operator defined information about the location of the NF instance. This information can be used by requesting NFs which prefer services of those NFs in the same geographical location or data center"
                                          },
                                          "scp-domain": {
                                            "type": "array",
                                            "description": "The SCP domain(s) the SCP belongs to or the SCP domain the NF (other than SCP) belongs to",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "nf-type",
                                          "service-address-ref"
                                        ]
                                      }
                                    },
                                    "service-address": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "maxItems": 1,
                                      "description": "Address of the BSF, referenced in the nf-profile sent to the NRF",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ipv4-address": {
                                            "type": "string",
                                            "pattern": "^[0-9\\.]*$",
                                            "description": "IPv4 address of the BSF service"
                                          },
                                          "ipv6-address": {
                                            "type": "string",
                                            "pattern": "^[0-9a-fA-F:\\.]*$",
                                            "description": "IPv6 address of the BSF service"
                                          },
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name uniquely identifying the service address."
                                          },
                                          "fqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "FQDN of the nf-service, for example chf.op.com"
                                          },
                                          "port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "This port is used to receive non-TLS traffic."
                                          },
                                          "tls-port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "This port is used to receive TLS traffic."
                                          }
                                        }
                                      }
                                    },
                                    "oauth2-key-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "The oAuth2 key profile of the BSF",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "key-id": {
                                            "type": "string",
                                            "description": "The identifier of the oAuth2 key"
                                          },
                                          "type": {
                                            "enum": [
                                              "jwk",
                                              "pem"
                                            ],
                                            "description": "The type of the oAuth2 key profile"
                                          },
                                          "alg": {
                                            "enum": [
                                              "HS256",
                                              "HS384",
                                              "HS512",
                                              "RS256",
                                              "RS384",
                                              "RS512",
                                              "ES256",
                                              "ES384",
                                              "ES512",
                                              "PS256",
                                              "PS384",
                                              "PS512",
                                              "EdDSA"
                                            ],
                                            "description": "The encryption algorithm of the oAuth2 key profile. This parameter is necessary for JWK transformation"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The value of the oAuth2 key profile",
                                            "eric-adp-is-passphrase": "true",
                                            "format": "eric-adp-cm-secret"
                                          },
                                          "json-body": {
                                            "type": "string",
                                            "description": "The json body of the oAuth2 key profile",
                                            "eric-adp-is-passphrase": "true",
                                            "format": "eric-adp-cm-secret"
                                          }
                                        }
                                      }
                                    },
                                    "ingress-connection-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Connection profile for ingress traffic cases",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the ingress-connection-profile"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "hpack-table-size": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 4294967295,
                                            "description": "Maximum table size (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values range from 0 to 4294967295 (2^32 - 1). 0 effectively disables header compression.",
                                            "default": 4096
                                          },
                                          "dscp-marking": {
                                            "type": "integer",
                                            "format": "uint8",
                                            "minimum": 0,
                                            "maximum": 63,
                                            "description": "DSCP value used for IP packets sent over this connection",
                                            "default": 0
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "ingress-connection-profile-ref": {
                                      "type": "string",
                                      "description": "Reference to a defined ingress-connection-profile"
                                    },
                                    "nrf-group": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "The NRF group specifies all relevant information of NRFs that are available to this BSF instance. Regarding the Nnrf_NFManagement interface, it determines the NRF registration behavior and triggers the NRF registration for the NF instance specified in the nf-profile.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name uniquely identifying the NRF group"
                                          },
                                          "dns-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined dns-profile that will be used for DNS resolution of the FQDN of the NRFs in the NRF group"
                                          },
                                          "nf-profile-ref": {
                                            "type": "string",
                                            "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on the individual NRF level will override the corresponding attributes of the NF profile on the NRF group level."
                                          },
                                          "nrf": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "The configuration for a single NRF within this NRF group",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name uniquely identifying the NRF"
                                                },
                                                "nf-profile-ref": {
                                                  "type": "string",
                                                  "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on the individual NRF level will override the corresponding attributes of the NF profile on the NRF group level."
                                                },
                                                "oauth2-key-profile-ref": {
                                                  "type": "array",
                                                  "description": "The oAuth2 key profile for a specific NRF instance id",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "priority": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 99,
                                                  "description": "Priority of this NRF for NF registration and other NRF service requests, relative to other NRFs in the same NRF group. In regard to the Nnrf_NFManagement service, the NRF with the highest priority is the primary NRF to which the NF instance will register. The remaining NRFs are used in case of failover, in order of priority. Lower values indicate a higher priority."
                                                },
                                                "fqdn": {
                                                  "type": "string",
                                                  "format": "hostname",
                                                  "description": "FQDN of the NRF"
                                                },
                                                "scheme": {
                                                  "enum": [
                                                    "http",
                                                    "https"
                                                  ],
                                                  "description": "Specifies the URI scheme to be used when contacting this NRF"
                                                },
                                                "ip-endpoint": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "IP endpoint of the NRF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name uniquely identifying the ip-endpoint."
                                                      },
                                                      "port": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Port number"
                                                      },
                                                      "ipv4-address": {
                                                        "type": "string",
                                                        "pattern": "^[0-9\\.]*$",
                                                        "description": "IPv4 address"
                                                      },
                                                      "ipv6-address": {
                                                        "type": "string",
                                                        "pattern": "^[0-9a-fA-F:\\.]*$",
                                                        "description": "IPv6 address"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "port"
                                                    ]
                                                  }
                                                },
                                                "retry-timeout": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1000,
                                                  "maximum": 65535,
                                                  "description": "The time duration in milliseconds after which a request is considered unsuccessful and a retry to the same NRF is sent.",
                                                  "default": 1500
                                                },
                                                "max-retries": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 100,
                                                  "description": "The number of retries sent to the same NRF before failover to another NRF.",
                                                  "default": 0
                                                },
                                                "nrf-instance-id": {
                                                  "type": "string",
                                                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                                  "description": "NRF instance id uniquely identifying the NRF"
                                                }
                                              },
                                              "required": [
                                                "ip-endpoint",
                                                "name",
                                                "priority",
                                                "scheme"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "nrf"
                                        ]
                                      }
                                    },
                                    "nrf-service": {
                                      "type": "object",
                                      "description": "Defines which NRF services are used by this NF instance, referencing groups of NRFs that provide the respective service.",
                                      "properties": {
                                        "nf-management": {
                                          "type": "object",
                                          "properties": {
                                            "nrf-group-ref": {
                                              "type": "array",
                                              "minItems": 1,
                                              "maxItems": 4,
                                              "description": "The groups of NRFs providing the Nnrf_NFManagement service",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "nrf-group-ref"
                                          ]
                                        },
                                        "nf-discovery": {
                                          "type": "object",
                                          "properties": {
                                            "nrf-group-ref": {
                                              "type": "string",
                                              "description": "The group of NRFs providing the Nnrf_NFDiscovery service"
                                            }
                                          },
                                          "required": [
                                            "nrf-group-ref"
                                          ]
                                        }
                                      }
                                    },
                                    "bsf-service": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "maxItems": 1,
                                      "description": "BSF service related properties.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name uniquely identifying the BSF service"
                                          },
                                          "binding-timeout": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 1440,
                                            "description": "Obsolete, Session binding expiration timer in hours",
                                            "default": 720
                                          },
                                          "binding-database": {
                                            "type": "object",
                                            "description": "Database related properties and actions",
                                            "properties": {
                                              "binding-timeout": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "Session binding expiration timer in hours. Valid values range from 0 to 65535 (2^16 - 1). 0 effectively uses the default value.",
                                                "default": 2160
                                              }
                                            }
                                          },
                                          "diameter-routing": {
                                            "type": "object",
                                            "description": "Configuration settings for routing of diameter messages.",
                                            "properties": {
                                              "lookup-profile": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "The profile used by BSF for routing diameter messages that invoke database lookups.",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Name of a lookup-profile instance."
                                                    },
                                                    "user-label": {
                                                      "type": "string",
                                                      "description": "Label for free use"
                                                    },
                                                    "fallback-destination-realm": {
                                                      "type": "string",
                                                      "description": "Destination realm where a diameter message will be routed if the binding database lookup yields no result."
                                                    },
                                                    "fallback-destination-host": {
                                                      "type": "string",
                                                      "description": "Destination host where a diameter message will be routed if the binding database lookup yields no result."
                                                    }
                                                  },
                                                  "required": [
                                                    "fallback-destination-realm",
                                                    "name"
                                                  ]
                                                }
                                              },
                                              "route": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "maxItems": 1,
                                                "description": "Route that will be used in forwarded diameter messages.",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "The name of route"
                                                    },
                                                    "user-label": {
                                                      "type": "string",
                                                      "description": "Label for free use"
                                                    },
                                                    "lookup-profile-ref": {
                                                      "type": "string",
                                                      "description": "Reference of a defined lookup profile."
                                                    },
                                                    "route-type": {
                                                      "enum": [
                                                        "default"
                                                      ],
                                                      "description": "The type of the route to configure."
                                                    }
                                                  },
                                                  "required": [
                                                    "lookup-profile-ref",
                                                    "name",
                                                    "route-type"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "multiple-binding-resolution": {
                                            "type": "object",
                                            "description": "Configuration settings for multiple bindings handling.",
                                            "properties": {
                                              "http-lookup": {
                                                "type": "object",
                                                "description": "Configuration dedicated for multiple binding handling on http-lookup.",
                                                "properties": {
                                                  "user-label": {
                                                    "type": "string",
                                                    "description": "Label for free use"
                                                  },
                                                  "deletion-upon-lookup": {
                                                    "type": "boolean",
                                                    "description": "Deletion based on multiple-binding-resolution for http-lookup.",
                                                    "default": true
                                                  },
                                                  "resolution-type": {
                                                    "enum": [
                                                      "reject",
                                                      "most-recent",
                                                      "most-recent-conditional"
                                                    ],
                                                    "default": "most-recent"
                                                  },
                                                  "query-parameter-combination": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Configured query-parameter-combination for http-lookup.",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name uniquely identifying the query-parameter-combination"
                                                        },
                                                        "combination": {
                                                          "type": "array",
                                                          "maxItems": 5,
                                                          "items": {
                                                            "enum": [
                                                              "IPV4_ADDR",
                                                              "IPV6_PREFIX",
                                                              "MAC_ADDR48",
                                                              "IP_DOMAIN",
                                                              "DNN",
                                                              "SNSSAI",
                                                              "GPSI",
                                                              "SUPI"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "diameter-lookup": {
                                                "type": "object",
                                                "description": "Configuration dedicated for multiple binding handling on diameter-lookup.",
                                                "properties": {
                                                  "user-label": {
                                                    "type": "string",
                                                    "description": "Label for free use"
                                                  },
                                                  "deletion-upon-lookup": {
                                                    "type": "boolean",
                                                    "description": "Deletion based on multiple-binding-resolution for diameter-lookup.",
                                                    "default": true
                                                  },
                                                  "resolution-type": {
                                                    "enum": [
                                                      "reject",
                                                      "most-recent",
                                                      "most-recent-conditional"
                                                    ],
                                                    "default": "most-recent"
                                                  },
                                                  "avp-combination": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Configured avp-combination for diameter-lookup.",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "name": {
                                                          "type": "string",
                                                          "description": "Name uniquely identifying the avp-combination."
                                                        },
                                                        "combination": {
                                                          "type": "array",
                                                          "maxItems": 2,
                                                          "items": {
                                                            "enum": [
                                                              "IPV4",
                                                              "IPV6",
                                                              "IP_DOMAIN"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "pcf-recovery-time": {
                                            "type": "object",
                                            "description": "Configuration settings for cleanups based on pcf recovery time feature.",
                                            "properties": {
                                              "check-upon-lookup": {
                                                "type": "object",
                                                "description": "Configuration regarding pcf recovery time during traffic.",
                                                "properties": {
                                                  "enabled": {
                                                    "type": "boolean",
                                                    "description": "Enable or disable pcf recovery-time.",
                                                    "default": true
                                                  },
                                                  "deletion-upon-lookup": {
                                                    "type": "boolean",
                                                    "description": "Enable or disable deletion-upon-lookup based on recovery-time.",
                                                    "default": true
                                                  }
                                                }
                                              },
                                              "binding-database-scan": {
                                                "type": "object",
                                                "description": "Configuration for full table scan feature.",
                                                "properties": {
                                                  "configuration": {
                                                    "enum": [
                                                      "auto",
                                                      "scheduled",
                                                      "disabled"
                                                    ],
                                                    "description": "Configuration for table scan triggering.",
                                                    "default": "auto"
                                                  },
                                                  "schedule": {
                                                    "type": "string",
                                                    "description": "Cron format used to specify schedule time only when configuration is set to scheduled."
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "vtap": {
                                      "type": "object",
                                      "description": "Defines the required data for traffic tapping",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "A switch that allows the operator to enable or disable traffic tapping in a global level",
                                          "default": true
                                        },
                                        "vtap-configuration": {
                                          "type": "object",
                                          "properties": {
                                            "bsf-service-tap": {
                                              "type": "object",
                                              "properties": {
                                                "ingress": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "maxItems": 1,
                                                  "description": "Defines the configuration data required for tapping the BSF service",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "service-address-ref": {
                                                        "type": "array",
                                                        "maxItems": 1,
                                                        "description": "Reference to the service-address the traffic of which is taken into account for tapping",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              }
                            }
                          },
                          "diagnostic-data-collection": {
                            "type": "object",
                            "description": "Configuration of the DDC service. Data collection can be done periodically or immediately triggered by an action",
                            "properties": {
                              "collector-profile": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "Properties of a DDB to be collected. The profile can be created by the system or the operator. System created profiles should not be removed.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "profile-id": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z0-9]+$"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "A name for the collector profile."
                                    },
                                    "profile-type": {
                                      "enum": [
                                        "collection-profile",
                                        "action-profile"
                                      ]
                                    },
                                    "data-to-collect": {
                                      "type": "array",
                                      "minItems": 1,
                                      "description": "One or more data types to collect.",
                                      "items": {
                                        "enum": [
                                          "logs",
                                          "metrics",
                                          "files",
                                          "software-information",
                                          "fixed-files",
                                          "kubernetes-information",
                                          "extended-logs"
                                        ]
                                      }
                                    },
                                    "export-ddb-to": {
                                      "type": "array",
                                      "description": "Zero or more destinations where to send the DDB.",
                                      "items": {
                                        "enum": [
                                          "sftp",
                                          "persistent-storage"
                                        ]
                                      }
                                    },
                                    "persistent-storage-maximum-size": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 0,
                                      "maximum": 4294967295,
                                      "description": "Maximum size that all DDBs based on this profile can occupy in persistent storage in gigabytes. If limit is exceeded the oldest DDB will be deleted. 0 means no limit.",
                                      "default": 100
                                    },
                                    "files-to-collect": {
                                      "type": "array",
                                      "minItems": 1,
                                      "description": "Files to be collected. The list can contain individual files or directories.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "fixed-files-to-collect": {
                                      "type": "array",
                                      "minItems": 1,
                                      "description": "Files to be always collected regardless of the time stamp. The list can contain individual files or directories.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "log-plane": {
                                      "type": "array",
                                      "minItems": 1,
                                      "description": "Log planes from which the log records are collected.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "extended-log-plane": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "List of logplanes from which the log records are collected for an extended time period beyond profile's 'collection-window'.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Logplane to collect."
                                          },
                                          "window": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Time period of log entries which will be collected from the specified logplane.",
                                            "default": 7
                                          },
                                          "limit": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 4294967295,
                                            "description": "Maximum amount of log entries which will be collected from the specified logplane.",
                                            "default": 100000
                                          }
                                        }
                                      }
                                    },
                                    "sftp": {
                                      "type": "string",
                                      "description": "A reference to a defined SFTP server."
                                    },
                                    "log-filter": {
                                      "type": "string",
                                      "description": "A filter to apply when collecting logs. Must be formatted according to Elasticsearch query string syntax."
                                    },
                                    "collection-window": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 1,
                                      "maximum": 4294967295,
                                      "description": "When a DDB is created, it contains data about the previous period of collection-window minutes. If collection-window is greater than collection-interval, some data can be included in multiple DDBs. The system may not support huge collection windows.",
                                      "default": 15
                                    }
                                  },
                                  "required": [
                                    "data-to-collect",
                                    "profile-id"
                                  ]
                                }
                              },
                              "data-collector": {
                                "type": "object",
                                "description": "Configuration and state data for periodic data-collection.",
                                "properties": {
                                  "profile": {
                                    "type": "string",
                                    "description": "A reference to a defined collector profile."
                                  },
                                  "collection-interval": {
                                    "type": "integer",
                                    "format": "uint32",
                                    "minimum": 1,
                                    "maximum": 4294967295,
                                    "description": "At the end of each collection interval a DDB is created and exported.",
                                    "default": 10
                                  },
                                  "administrative-state": {
                                    "enum": [
                                      "locked",
                                      "unlocked"
                                    ],
                                    "description": "The administrative state of the data collection.",
                                    "default": "locked"
                                  },
                                  "transfer-status": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "description": "The status of the lastattempted transfer. Either it is 'ok' or an error string describing the reason of the failure.",
                                    "default": "ok"
                                  }
                                }
                              },
                              "sftp-server": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "List of SFTP servers the SFTP client is to initiate connections to in parallel.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "An arbitrary name for the SFTP server."
                                    },
                                    "endpoints": {
                                      "type": "object",
                                      "description": "Container for the list of endpoints.",
                                      "properties": {
                                        "endpoint": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "minItems": 1,
                                          "maxItems": 1,
                                          "description": "A user-ordered list of endpoints that the SFTP client may attempt to connect to (one at a time) swithcing to the next in case the connection failed. Each endpoint has its own security configuration.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "remote-address": {
                                                "type": "string",
                                                "anyOf": [
                                                  {
                                                    "format": "ipv4"
                                                  },
                                                  {
                                                    "format": "ipv6"
                                                  },
                                                  {
                                                    "format": "hostname"
                                                  }
                                                ],
                                                "description": "The IP address or hostname of the endpoint. If a domain name is configured, then the DNS resolution should happen on each usage attempt. If the DNS resolution results in multiple IP addresses, the IP addresses will be tried according to local preference order until a connection has been established or until all IP addresses have failed."
                                              },
                                              "remote-port": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The IP port for this endpoint. The NETCONF client will use the IANA-assigned well-known port for 'sftp' (22) if no value is specified.",
                                                "default": 22
                                              },
                                              "remote-path": {
                                                "type": "string",
                                                "description": "Specifies the location or path where the file(s) will be stored."
                                              },
                                              "client-identity": {
                                                "type": "object",
                                                "description": "The credentials used by the client to authenticate to the SSH server.",
                                                "properties": {
                                                  "username": {
                                                    "type": "string",
                                                    "description": "The username of this user. This will be the username used, for instance, to log into an SSH server."
                                                  },
                                                  "password": {
                                                    "type": "string",
                                                    "description": "A password to be used for client authentication.",
                                                    "eric-adp-is-passphrase": "true",
                                                    "format": "eric-adp-cm-secret"
                                                  },
                                                  "public-key": {
                                                    "type": "object",
                                                    "description": "A locally-defined or referenced asymmetric key pair to be used for client authentication.",
                                                    "properties": {
                                                      "local-definition": {
                                                        "type": "object",
                                                        "description": "Container to hold the local key definition.",
                                                        "properties": {
                                                          "private-key-format": {
                                                            "type": "string",
                                                            "description": "Identifies the key's format."
                                                          },
                                                          "algorithm": {
                                                            "enum": [
                                                              "rsa1024",
                                                              "rsa2048",
                                                              "rsa3072",
                                                              "rsa4096",
                                                              "rsa7680",
                                                              "rsa15360",
                                                              "secp192r1",
                                                              "secp224r1",
                                                              "secp256r1",
                                                              "secp384r1",
                                                              "secp521r1",
                                                              "x25519",
                                                              "x448"
                                                            ],
                                                            "description": "Identifies the key's algorithm."
                                                          },
                                                          "public-key-format": {
                                                            "type": "string",
                                                            "description": "Identifies the key's format."
                                                          },
                                                          "public-key": {
                                                            "type": "string",
                                                            "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                                          },
                                                          "private-key": {
                                                            "type": "string",
                                                            "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                                            "eric-adp-is-passphrase": "true",
                                                            "format": "eric-adp-cm-secret"
                                                          },
                                                          "hidden-private-key": {
                                                            "type": "string",
                                                            "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                                          }
                                                        },
                                                        "required": [
                                                          "algorithm",
                                                          "public-key"
                                                        ]
                                                      },
                                                      "keystore-reference": {
                                                        "type": "string",
                                                        "description": "A reference to an asymmetric key that exists in the keystore. The intent is to reference just the asymmetric key without any regard for any certificates that may be associated with it."
                                                      }
                                                    },
                                                    "required": [
                                                      "local-definition"
                                                    ]
                                                  }
                                                }
                                              },
                                              "server-authentication": {
                                                "type": "object",
                                                "description": "Specifies how the SSH client can authenticate SSH servers. Any combination of credentials is additive and unordered.",
                                                "properties": {
                                                  "ssh-host-keys": {
                                                    "type": "object",
                                                    "description": "A list of SSH host keys used by the SSH client to authenticate SSH server host keys. A server host key is authenticated if it is an exact match to a configured SSH host key.",
                                                    "properties": {
                                                      "local-definition": {
                                                        "type": "object",
                                                        "description": "Container to hold local host key definitions.",
                                                        "properties": {
                                                          "host-key": {
                                                            "type": "array",
                                                            "description": "The binary public key data for this host key.",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "truststore-reference": {
                                                        "type": "string",
                                                        "description": "A reference to a set of host keys that exist in the truststore."
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "required": [
                                              "name",
                                              "remote-address"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "endpoint"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "endpoints",
                                    "name"
                                  ]
                                }
                              }
                            }
                          },
                          "diameter": {
                            "type": "object",
                            "description": "Diameter instance represents a singleton entry point in the configuration model of the Diameter Service.",
                            "properties": {
                              "user-label": {
                                "type": "string",
                                "description": "Label for free use."
                              },
                              "service": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A service instance is used to describe the properties of AAA Service implemented by a Diameter Service User. The settings on service instance level are influencing the interaction mechanisms performed between the Diameter Service and related AAA Service.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Used to specify the key of the service instance. The key value provided should match the name the related AAA Service implementation was registering with towards the Diameter Service through one of the Diameter Service User interfaces."
                                    },
                                    "ingress-request-pending-timer": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 0,
                                      "maximum": 4294967295,
                                      "description": "Used to specify the time-out period the Diameter Service waits for a AAA Service instance to answer a diameter ingress request message. The time-out value provided is interpreted in milliseconds. The Diameter Stack will free resources allocated for an ingress request message if not answered by AAA Service instance in the indicated time-out period. An egress answer message received for the related ingress request after the indicated time-out period is discarded by the Diameter Service. Each time an egress diameter answer message is dropped by the Diameter Stack due to the time-out configured through the request-pending-timer, the Diameter.EgressAnswMsgDiscarded.TimeOut counter is stepped. Unit: millisecond (ms) MT Impacted: Diameter.EgressAnswMsgDiscarded.TimeOut Update Effect: No impact on established Peer connections. The Diameter Service will wait the indicated time-out period for diameter answer messages pertaining to newly received diameter ingress request messages.",
                                      "default": 5000
                                    },
                                    "egress-request-pending-timer": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 0,
                                      "maximum": 4294967295,
                                      "description": "Used to specify the time-out period the Diameter Service waits for an answer message related to the request message sent by the AAA Service instance. The egress request message is stored temporarily in the pending queue of the Diameter Service for this timeout period. The time-out value provided is interpreted in milliseconds. The Diameter Stack will free resources allocated for an egress request message and step the Diameter.EgressReqMsgDiscarded.TimeOut counter if not answered by remote peer in the indicated time-out period. Unit: millisecond (ms) MT Impacted: Diameter.EgressReqMsgDiscarded.TimeOut Update Effect: No impact on established Peer connections.The Diameter Service will wait the indicated time-out period for diameter answer messages pertaining to newly sent diameter egress request messages.",
                                      "default": 10000
                                    },
                                    "request-send-max-retry": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 0,
                                      "maximum": 4294967295,
                                      "description": "Used to specify the maximum number of times the Diameter Service retries to send a diameter egress request message. Egress request message resend can be triggered by the following events: Link fail-over That is, the active Peer connection is lost and the stack is failing over to use as active another Peer connection. Time-out The time-out specified runtime by the _AAA Service_ implementation for the related diameter egress request message expires. Diameter answer message An answer with result code `DIAMETER_UNABLE_TO_DELIVER (3002)` is received. Any of the above events should appear the Diameter Service will try to resend the egress request messages the indicated amount of times. This, however, might be constraint by the number of fail-overs Diameter Service can perform upon link loss. That is, if there is no link available to send out a request message no message caching and retries are performed. Diameter Service will indicate related AAA Service instance the inability to deliver request messages. Each time an egress diameter message is resent the Diameter_EgressReqMsgResent_TotalCount counter is stepped. NOTE: The connection is excluded for a certain request in case of time-out. When an answer with result code `3002` is received from a host, all connections towards that host is excluded for a certain request. During the retried delivery of the request, the next available connection is selected based on the routing table but without the excluded connections. Unit: Count MT Impacted: Diameter.EgressReqMsgResent.TotalCount Update Effect: No impact on established Peer connections. Diameter Service will apply the newly configured retry count for egress request messages stored in message pending queue.",
                                      "default": 3
                                    },
                                    "request-stack-handler-selection": {
                                      "enum": [
                                        "local",
                                        "cluster"
                                      ],
                                      "description": "Used to specify the algorithm based on which compute resources are selected for diameter ingress request message processing on Diameter Service level (that is, for message grammar validation, routing entry evaluation and message content based common diameter facility activation). Wether to use the LOCAL or the CLUSTER compute resource selection algorithm should be the result of a dimensioning activity. However, if a AAA Service needs no complex message processing activities to be performed on diameter level the LOCAL algorithm is recommended to be selected. This algorithm will provide better figures both in latency and throughput for such type of AAA Services. The default CLUSTER compute resource selection algorithm is defined on worst case basis (safety margin). Meaning, big diameter cluster with few dominant Peer connections with complex message processing needs on Diameter Service level (that is, not a typical deployment scenario for most of the Diameter Service user AAA Services). Update Effect: No impact on established Peer connections. Diameter Service will apply the newly configured distribution mechanism for message processing.",
                                      "default": "local"
                                    },
                                    "answer-stack-handler-selection": {
                                      "enum": [
                                        "local",
                                        "cluster"
                                      ],
                                      "description": "Used to specify the algorithm based on which compute resources are selected for diameter ingress answer message processing on Diameter Stack level (that is, for message grammar validation and message content based common diameter facility activation). Wether to use the LOCAL or the CLUSTER compute resource selection algorithm should be the result of a dimensioning activity. However, if a AAA Service needs no complex message processing activities to be performed on diameter level the LOCAL algorithm is recommended to be selected. This algorithm will provide better figures both in latency and throughput for such type of AAA Services. The default CLUSTER compute resource selection algorithm is defined on worst case basis (safety margin). Meaning, big diameter cluster with few dominant Peer connections with complex message processing needs on Diameter Service level (that is, not a typical deployment scenario for most of the Diameter Service user AAA Services). Update Effect: No impact on established Peer connections. Diameter Service will apply the newly configured distribution mechanism for message processing.",
                                      "default": "local"
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Used to enable/disable a AAA Service. As result of a service disable, all related peer diameter connections will be closed with cause indicated by the configured disconnect cause policy. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled",
                                      "default": true
                                    },
                                    "fast-feedback-enabled": {
                                      "type": "boolean",
                                      "description": "Used to enable/disable fast feedback on user API when no connection is available towards the Peers where the egress request message could be routed. By default, Diameter is waiting egress-request-pending-timer period for a Peer connection to come up before sending the Diameter Service Users an error indicating no connection. If the fast-feedback-enabled is set to true, Diameter sends such indication immediatelly.",
                                      "default": false
                                    },
                                    "message-destination-validation-enabled": {
                                      "type": "boolean",
                                      "description": "Can be used to turn off message destination validation for ingress requests. If active, before routing the ingress message to a service, Destination-Host and Destination-Realm AVPs are matched against the actual configuration of the own Diameter Node. In case of a mismatch, the message is answered with DIAMETER_UNABLE_TO_DELIVER. If turned off, the ingress request is routed to a service even when Destination-Host and Destination-Realm AVPs are not matching the actual configuration. Related https://tools.ietf.org/html/rfc6733#section-6.1.4",
                                      "default": true
                                    },
                                    "load-regulation-priority": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 19,
                                      "description": "Can be used during load regulation to prioritize diameter messages carrying the Application-Id implemented by the service. That is, when messages are to be dropped by the stack due to load regulation, those having the lowest priority are dropped first.",
                                      "default": 9
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    },
                                    "reroute-policy": {
                                      "type": "string",
                                      "description": "Reference to a reroute policy"
                                    },
                                    "local-endpoint-reference": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "A local-endpoint-reference instance is used to associate an already defined diameter transport local endpoint with a AAA Service. A AAA Service can use arbitrary number of transport local endpoints. However, all of these endpoints must be associated with the same Diameter Node (represented by node). The settings on local-endpoint-reference instance level are influencing the way the Peer connections associated with a certain transport endpoint are handled.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Used to specify the key of the local-endpoint-reference instance."
                                          },
                                          "enabled": {
                                            "type": "boolean",
                                            "description": "Used to enable or disable the use of the referred transport local endpoint for the related AAA Service (that is, it disables the related local-endpoint-reference instance). true: The use of the referred transport local endpoint is allowed. false: The use of the referred transport local endpoint is disallowed. Disabling a local-endpoint-reference instance will result in dropping all the Peer connections established through the referred local-endpoint instance between parent AAA Service and related Diameter Peers. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: All established Diameter Peer connections linked to referred endpoint are dropped if value set to false.",
                                            "default": true
                                          },
                                          "rank": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 4294967295,
                                            "description": "Used to express precedence for referred transport local endpoint selection during diameter egress request message routing. The rank value is considered during diameter egress request message routing when references towards multiple transport local endpoints are defined for a AAA Service (that is, multiple local-endpoint-reference are defined for same AAA Service) and the referred transport local endpoints are pointing to either: static peers with no connection restriction: Diameter Peers represented by dedicated static-peer in the diameter data tree with connection amount restriction towards same peer disabled (see also restrict-connections of static-peer) dynamic peers with or without connection restriction: Diameter Peers allowed to connect to the own Diameter Node as result of matching conditions expressed through a related dynamic-peer-acceptor with or without restriction on connection amount (see also restrict-connections of dynamic-peer-acceptor). The lowest the value provided the highest the priority assigned to the referred endpoint in related AAA Service configuration context. That is, the highest priority is assigned to a referred transport local endpoint by setting the rank value to 0. Multiple local-endpoint-reference instances of a AAA Service presenting same rank value and pointing to transport local endpoints falling into one of the conditions above defined will have equal priority during routing evaluation. That is, in such conditions the Diameter Service will perform https://tools.ietf.org/html/rfc6733#section-8.8[Session-Id AVP] hashing based message load balancing (load sharing) between the relevant transport connections. If the https://tools.ietf.org/html/rfc6733#section-8.8[Session-Id AVP] is not present in the related diameter request message connections are selected in random order. Update Effect: Depending on configured value a link fail-over might be triggered."
                                          },
                                          "application": {
                                            "type": "array",
                                            "description": "Used to restrict the use of referred transport local endpoint to a limited set of Diameter Applications implemented by the AAA Service. That is, the referred Diameter Applications must be a full-set or a sub-set of the Diameter Applications implemented by the parent AAA Service. The values shall refer to those applications that are allowed to use the referred transport local endpoint. Update Effect: All established Diameter Peer connections linked to related AAA Service are dropped and reestablished with updated Diameter Application information.",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "local-endpoint": {
                                            "type": "string",
                                            "description": "Used to specify the reference towards the transport local endpoint the AAA Service should use. That is, the relevant local-endpoint."
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "local-endpoint"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "applications": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "The instances of applications are used to define https://tools.ietf.org/html/rfc6733#section-1.3.4 Diameter Applications as defined by the Diameter Base Protocol (https://tools.ietf.org/html/rfc6733. A AAA Service can implement the client, server or agent side of one or several Diameter Applications. The behavior of implemented Diameter Applications is defined through related Diameter Application Specifications released by different standardization bodies (for example: 3GPP, IETF, ETSI, and so on) or vendors (for example: Ericsson).",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Used to specify the key of the applications"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "vendor-specific-application-id": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A vendor-specific-application-id instance is used to provide information about a vendor specific Diameter Application. The information provided in a vendor-specific-application-id instance is used to construct a Vendor-Specific-Application-Id AVP (https://tools.ietf.org/html/rfc6733#section-6.11) which is of type grouped. Each of a vendor-specific-application-id instance represents a Vendor-Specific-Application-Id AVP. The handling rules defined for Vendor-Specific-Application-Id AVP applies for the related vendor-specific-application-id instance as well.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The key of the vendor-specific-application-id instance."
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "dictionary": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A dictionary instance is used to store the dictionary of a Diameter Application.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Used to specify the key of the dictionary instance."
                                    },
                                    "dictionary-extension": {
                                      "type": "object",
                                      "description": "Allows the application integrator or operator to extend system created diameter dictionary specification. User must have throughout knowledge of Diameter standard, Dias Language Specification, diameter Peer's behavior and diameter user application logic. In case of any inconsistencies Diameter Configuration Failure alarm is raised. Update Effect: Changes performed on DiaDictionaryExt level is considered during message validation, that is diameter message grammar validation is performed according to the updated dictionary content that is merged on stack level.",
                                      "properties": {
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "updated-avp": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "Used to modify the AVP flag rules of an existing AVP definition. AVP shall be specified by related dictionary specification (that is by ../../specification), otherwise Diameter Configuration Failure alarm is raised.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "avp-name": {
                                                "type": "string",
                                                "description": "AVP name (avp_name of @avp_types) according to DiaS Language specification, for example: Policy-Counter-Identifier"
                                              },
                                              "flag-rule-must": {
                                                "type": "string",
                                                "pattern": "^(-|M|V|MV)$",
                                                "description": "Must rule (that is 1st column) from AVP flags (avp_flags) extended format according to DiaS Language specification, where example flag rule in extended format MV|-|-|- could be defined with flag-rule-must(MV) and flag-rule-must-not(-)"
                                              },
                                              "flag-rule-must-not": {
                                                "type": "string",
                                                "pattern": "^(-|M|V|MV)$",
                                                "description": "Must not rule (that is 4th column) from AVP flags (avp_flags) extended format according to DiaS Language specification, where example flag rule in extended format -|-|-|M could be defined with flag-rule-must(-) and flag-rule-must-not(M)"
                                              },
                                              "enabled": {
                                                "type": "boolean",
                                                "description": "Used to enable or disable the object.",
                                                "default": true
                                              },
                                              "user-label": {
                                                "type": "string",
                                                "description": "Label for free use."
                                              }
                                            },
                                            "required": [
                                              "avp-name",
                                              "flag-rule-must",
                                              "flag-rule-must-not"
                                            ]
                                          }
                                        },
                                        "new-avp": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "Used to add a new (non-existing) AVP or Grouped AVP into an existing Command Code Format (CCF_spec in @messages) or Grouped AVP (grouped_avp_spec in @grouped) specification. If an existing AVP is referred, Diameter Configuration Failure alarm is raised.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "avp-types-def": {
                                                "type": "string",
                                                "description": "AVP type definition according to DiaS Language specification (see @avp_types), for example: Policy-Counter-Identifier 2901 UTF8String -|MV|-|-"
                                              },
                                              "grouped-def": {
                                                "type": "string",
                                                "description": "Grouped AVP definition according to DiaS Language specification (see @grouped), for example: Subscription-Id ::= < AVP Header: 443 > { Subscription-Id-Type } { Subscription-Id-Data }"
                                              },
                                              "command-code": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Command Code Format specification (CCF or application message) to be extended with the new AVP. CCF must have already been defined by the dictionary, otherwise alarm Diameter Configuration Failure is raised. As optional AVP in [] (square brackets), the new AVP is appended at the end of the existing definition just before *[ AVP ].",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Identifies the CCF to be extended with the new AVP, for example: SL-Request."
                                                    },
                                                    "max-occurrence": {
                                                      "type": "integer",
                                                      "format": "uint32",
                                                      "minimum": 0,
                                                      "maximum": 4294967295,
                                                      "description": "Maximum qualifier from RFC6733, that is max from qual = [min] \\\"*\\\" [max] where min must be 0 for optional AVPs, undefined max qualifier means infinite."
                                                    }
                                                  },
                                                  "required": [
                                                    "name"
                                                  ]
                                                }
                                              },
                                              "grouped-avp": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Grouped AVP to be extended with the new AVP. Grouped AVP must have already been defined by the dictionary, otherwise alarm Diameter Configuration Failure is raised. As optional AVP in [] (square brackets), the new AVP is appended at the end of the existing definition just before *[ AVP ].",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "Grouped AVP to be extended with the new AVP"
                                                    },
                                                    "max-occurrence": {
                                                      "type": "integer",
                                                      "format": "uint32",
                                                      "minimum": 0,
                                                      "maximum": 4294967295,
                                                      "description": "Maximum qualifier from RFC6733, that is max from qual = [min] \\\"*\\\" [max] where min must be 0 for optional AVPs, undefined max qualifier means infinite."
                                                    }
                                                  },
                                                  "required": [
                                                    "name"
                                                  ]
                                                }
                                              },
                                              "enabled": {
                                                "type": "boolean",
                                                "description": "Used to enable or disable the object.",
                                                "default": true
                                              },
                                              "user-label": {
                                                "type": "string",
                                                "description": "Label for free use."
                                              }
                                            },
                                            "required": [
                                              "avp-types-def"
                                            ]
                                          }
                                        },
                                        "updated-enumeration": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "Used to add new value to an existing enumeration, see @enum <avp_name> in DiaS Language specification.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "enum-name": {
                                                "type": "string",
                                                "description": "Name of the already existing AVP of type Enumerated of the dictionary that is to be extended with new value(s), for example: SL-Request-Type. AVP shall be specified by related dictionary specification (that is by ../../specification), otherwise Diameter Configuration Failure alarm is raised."
                                              },
                                              "new-enum-field": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "minItems": 1,
                                                "description": "Name and value of the new enum field",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "enum-field-name": {
                                                      "type": "string",
                                                      "description": "For example: INTERMEDIATE_REQUEST. Must be undefined by the dictionary for the related enumeration, otherwise Diameter Configuration Failure alarm is raised."
                                                    },
                                                    "enum-field-value": {
                                                      "type": "integer",
                                                      "format": "uint16",
                                                      "minimum": 0,
                                                      "maximum": 65535,
                                                      "description": "For example: 12. Must be undefined by the dictionary for the related enumeration, otherwise Diameter Configuration Failure alarm is raised."
                                                    }
                                                  },
                                                  "required": [
                                                    "enum-field-name",
                                                    "enum-field-value"
                                                  ]
                                                }
                                              },
                                              "enabled": {
                                                "type": "boolean",
                                                "description": "Used to enable or disable the object.",
                                                "default": true
                                              },
                                              "user-label": {
                                                "type": "string",
                                                "description": "Label for free use."
                                              }
                                            },
                                            "required": [
                                              "enum-name",
                                              "new-enum-field"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "specification"
                                  ]
                                }
                              },
                              "peer-table": {
                                "type": "object",
                                "description": "A peer-table system created singleton instance is to be used as a container for static-peer and dynamic-peer-acceptor instances that are used to scope/filter the Diameter Peers which should be considered and stored by the Diameter Service in its internal Peer Table.",
                                "properties": {
                                  "static-peer": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A static-peer instance is used to describe in an explicit (static) way a Diameter Peer. Explicit specification of a Diameter Peer is mandated when the own Diameter Node (represented by a node instance) is expected to initiate transport connection setups towards it. Explicit specification of a Diameter Peer is optional when the Peer is expected to initiate transport connection setups towards the own Diameter Node. In such a case the Peer or a matching rule set for Peers can be specified by using the more generic dynamic-peer-acceptor. Changes on static-peer instance level might influence the transport connections already established between the own Diameter Node and Peer.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Used to specify the key of the static-peer instance."
                                        },
                                        "peer-origin-host": {
                                          "type": "string",
                                          "format": "hostname",
                                          "description": "Used to specify the origin host of the diameter Peer the static-peer instance is meant to represent. The value provided for peer-origin-host, if any, is matched against the value received in the Origin Host AVP during Peer connection establishment (CER/CEA) with a Diameter Peer. If matching fails (that is, the connecting or connected Diameter Peer is no the expected one), the connection establishment is rejected. When remote-endpoint/address is not specified for a static-peer server Diameter will attempt to resolve the hereby defined origin host FQDN of the diameter Peer by Kubernetes DNS and use the result as address(es). Update Effect: All established Diameter Peer connections towards the Peers matching the static-peer expressed constraints are dropped and reestablished by need in accordance with updated information."
                                        },
                                        "restrict-connections": {
                                          "type": "boolean",
                                          "description": "Used to disallow more than one Peer connection between the own Diameter Node and the Peer represented by the current static-peer. The Diameter Base Protocol specifies the use of single active connection between Diameter Peers. However, Diameter Nodes can be implemented by using a cluster of compute resources in which case the use of single Peer connection between such Diameter Nodes might be a bottleneck in handling required traffic throughput. Typically such Diameter Node implementations provides settings through which multiple Diameter Peer connections towards same Diameter Peer can be established. The Diameter Service provides support for such a functionality which can be enabled or disabled towards relevant Peer with the help of restrict-connections. Update Effect: All established Diameter Peer connections towards the peers matching the static-peer expressed constraints are dropped and reestablished by need in accordance with updated information.",
                                          "default": true
                                        },
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Used to enable or disable establishment of peer connections with the Diameter Peer(s) the static-peer instance is meant to represent. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: All established Diameter Peer connections towards the peers matching the static-peer expressed constraints are disconnected upon setting to value false.",
                                          "default": true
                                        },
                                        "max-connection-nr": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "Limits the number of connections built from this Peer Diameter Node. Considered by the Diameter Stack if restrict-connections of the same static-peer instance is set to false and the Peer represented by static-peer is playing a connection initiation role towards the own Diameter Node (that is, the static-peer is referred by a local-endpoint through a terminate-connection-from-peer reference). 0 == Any number, that is the number of connections is not limited hereby. See also restrict-connections.",
                                          "default": 4294967295
                                        },
                                        "required-connection-nr": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "Used to indicate a threshold for the number of redundant connections towards the Diameter Peer. When the configured threshold is crossed, one of the following alarms is raised: ADP Diameter Peer connection Number Below Required Level ADP Diameter Peer Unavailable Update Effect: When set, the configured threshold will be used by the stack during alarm handling.",
                                          "default": 1
                                        },
                                        "congestion-handling-policy": {
                                          "type": "string",
                                          "description": "Reference to a congestion-handling policy"
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "remote-endpoint": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "A remote-endpoint instance is used to specify a remote endpoint for a Diameter Peer represented by the parent static-peer instance. Many remote endpoints can be defined by need for a Diameter Peer. It is mandatory to define at least a remote endpoint if the own Diameter Node is configured to initiate connections towards the related Peer. If the Peer is the one initiating connections towards the own Diameter Node the specification of a remote endpoint can be omitted for related Peer.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Used to specify the key of the remote-endpoint instance."
                                              },
                                              "address": {
                                                "type": "array",
                                                "description": "Used to specify the list of IP addresses (IPv4 or IPv6 addresses) of the remote endpoint that can be used by the own Diameter Node to connect to a Diameter Peer (that is acting as diameter server, represented by parent static-peer instance). The address should take as value a single IP addresses if the transport protocol to be used is configured to TCP (see also the transport-protocol below). The address can take as value multiple IP addresses if the transport protocol to be used is configured to SCTP. In such a case the use of combined IPv4 and IPv6 addresses is allowed as well. When not specified for a static-peer acting as diameter server, Diameter will attempt to resolve peer-origin-host of its static-peer by Kubernetes DNS and use the result as address(es). When configured Peer acts as diameter client, the specified values are used to restrict connection attempts from specified addresses only. Only when Kubernetes externalTrafficPolicy is set to 'Local', moreover ECFE can communicate using BGP with the FE gateway router, the external IP address of the Peer could be configured hereby. In opposite to this, when Kubernetes externalTrafficPolicy is set to 'Cluster', due to the applied SNAT only the worker local address is received by Diameter, hence the usage of static-peer/remote-endpoint/address representing a client Peer is not recommended in such setups. Update Effect: All established Diameter Peer connections towards the remote endpoint represented by the related remote-endpoint instance are dropped and reestablished with updated information.",
                                                "items": {
                                                  "type": "string",
                                                  "anyOf": [
                                                    {
                                                      "format": "ipv4"
                                                    },
                                                    {
                                                      "format": "ipv6"
                                                    }
                                                  ]
                                                }
                                              },
                                              "port": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "Used to specify the port number of the remote endpoint that can be used by the own Diameter Node to connect to a Diameter Peer (represented by parent static-peer instance). The port number specified is valid for all the addresses specified for the related local-endpoint instance. It has no effect on configured Peers acting as clients. Update Effect: All established Diameter Peer connections towards the remote endpoint represented by the remote-endpoint instance are dropped and reestablished with updated information.",
                                                "default": 3868
                                              },
                                              "transport-protocol": {
                                                "enum": [
                                                  "tcp",
                                                  "sctp"
                                                ],
                                                "description": "Used to specify the transport protocol of the remote endpoint that can be used by the own Diameter Node when initiating Diameter Peer connections.",
                                                "default": "tcp"
                                              },
                                              "enabled": {
                                                "type": "boolean",
                                                "description": "Used to enable or disable the remote endpint of the Diameter Peer represented by the parent static-peer. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: All established Diameter Peer connections towards the remote endpoint represented by the related remote-endpoint instance are disconnected upon setting to value false.",
                                                "default": true
                                              },
                                              "user-label": {
                                                "type": "string",
                                                "description": "Label for free use."
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "peer-origin-host"
                                      ]
                                    }
                                  },
                                  "dynamic-peer-acceptor": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A dynamic-peer-acceptor instance is used to describe the conditions based on which Peer connection setups initiated by one or a collection of Diameter Peers are to be accepted or rejected by own Diameter Node. The Diameter Peer identifiers (like peer host IP address, origin host or origin realm) are matched against the related value matching patterns expressed in a dynamic-peer-acceptor instance. If matching is found towards all the expressed patterns the initiated Peer connection is accepted by diameter. Otherwise, the remote Peer connection initiation is rejected. Changes on dynamic-peer-acceptor instance level might influence all the Peer connections already established as result of matching towards the patterns expressed in related Peer connection acceptor instance. Note, there is no TLS hostname validation for dynamic Peers.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Used to specify the key of the dynamic-peer-acceptor instance."
                                        },
                                        "peer-origin-realm": {
                                          "type": "array",
                                          "description": "Used to specify the Origin Realm (see https://tools.ietf.org/html/rfc6733#section-6.4) validation pattern of the Diameter Peers allowed to initiate connections towards the own Diameter Node. The provided value shall be either a concrete or a pattern based representation (expressed using Perl Compatible Regular Expressions, see https://www.pcre.org/) of the Origin Realm used by Diameter Peers allowed to connect towards the own Diameter Node. The Origin Realm is a Diameter Identity (see https://tools.ietf.org/html/rfc6733#section-4.3.1) data type as defined by the Diameter Base Protocol, see Diameter Base Protocol (RFC 6733) IETF: STANDARD.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "peer-origin-host": {
                                          "type": "array",
                                          "description": "Used to specify the Origin Host (see https://tools.ietf.org/html/rfc6733#section-6.5) validation pattern of the Diameter Peers allowed to initiate connections towards the own Diameter Node. The provided value shall be either a concrete or a pattern based representation (expressed using Perl Compatible Regular Expressions, see https://www.pcre.org/) of the Origin Host used by Diameter Peers allowed to connect towards the own Diameter Node. The Origin Host is a Diameter Identity (see https://tools.ietf.org/html/rfc6733#section-4.3.1) data type as defined by the Diameter Base Protocol, see Diameter Base Protocol (RFC 6733) IETF: STANDARD.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "peer-host-ip-address": {
                                          "type": "array",
                                          "description": "Used to specify the Host IP Address (see https://tools.ietf.org/html/rfc6733#section-5.3.5) validation pattern of the Diameter Peers allowed to initiate connections towards the own Diameter Node. The provided value shall be either a concrete or a pattern based representation (expressed using Perl Compatible Regular Expressions, see https://www.pcre.org/) of the Host IP Address used by Diameter Peers allowed to connect towards the own Diameter Node. The Host IP Address (see https://tools.ietf.org/html/rfc6733#section-4.3.1) is an Address data type as defined by the Diameter Base Protocol, see Diameter Base Protocol (RFC 6733) IETF: STANDARD. Only when Kubernetes externalTrafficPolicy is set to 'Local', moreover ECFE can communicate using BGP with the FE gateway router, the external IP address of the Peer could be configured hereby. In opposite to this, when Kubernetes externalTrafficPolicy is set to 'Cluster', due to the applied SNAT only the worker local address is received by Diameter, hence the usage of peer-host-ip-address is not recommended in such setups.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excluded-host": {
                                          "type": "array",
                                          "description": "Defines an Origin Host validation pattern used to filter out Diameter Peers that are not allowed to initiate connections towards the own Diameter Node. Serves as exclude-list expression over the include-list defined by peer-origin-host.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "restrict-connections": {
                                          "type": "boolean",
                                          "description": "Used to disallow the establishment of more than one Diameter Peer connection from the same Diameter Peer. The Diameter Base Protocol specifies the use of single active connection between Diameter Peers (see, Diameter Base Protocol (RFC 6733) IETF: STANDARD). However, Diameter Nodes can be implemented using a cluster of compute resources in which case the use of single Peer connection between such Diameter Nodes might be a bottleneck in handling required traffic throughput. Such Diameter Node implementations provides settings through which multiple Diameter Peer connections towards same Diameter Peer can be established. diameter provides support for such a functionality as well. Update Effect: All established Diameter Peer connections towards the peers matching the dynamic-peer-acceptor expressed constraints are dropped and reestablished by need in accordance with updated information.",
                                          "default": true
                                        },
                                        "max-peer-connection-nr": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "Sets the maximum number of connections to be accepted from a single Diameter Peer. That is, from a peer matching the constraints expressed by the actual dynamic-peer-acceptor. In case the max-peer-connection-nr value is set to 0 the related dynamic-peer-acceptor will behave as a blocker. That is, no connections will be allowed from the diameter peers matching the filtering conditions expressed by the dynamic-peer-acceptor. Considered by the Diameter Service if restrict-connections of the same dynamic-peer-acceptor is set to false. Update Effect: If the updated value of max-peer-connection-nr is less than the previously set one, existing connections will be dropped to conform to the newly configured limit.",
                                          "default": 4294967295
                                        },
                                        "max-connection-nr": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "Used to configure the maximum number of connections to be accepted from Diameter Peers matching the constraints expressed by the current dynamic-peer-acceptor. This is a value to be considered for all Diameter Peers accepted by the current dynamic-peer-acceptor and not a value representing individual connections per Diameter Peer (see also max-peer-connection-nr for connection number constraints per Diameter Peer). In case the max-connection-nr is set to 0 the related dynamic-peer-acceptor will behave as a blocker. That is, no connection establishment will be allowed from any of the Peers matching the constraints expressed hereby. Considered by the Diameter Service if restrict-connections of the same dynamic-peer-acceptor is set to false. Update Effect: If the updated value of max-connection-nr is less than the previously set one, existing connections will be dropped to conform to the newly configured limit.",
                                          "default": 4294967295
                                        },
                                        "required-connection-nr": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "Used to indicate a threshold for the number of redundant connections towards a Diameter Peer. When the configured threshold is crossed, but there is at least one active connection available towards the Peer, the following alarms is raised: ADP Diameter Peer connection Number Below Required Level Update Effect: When set, the configured threshold will be used by the stack during alarm handling.",
                                          "default": 1
                                        },
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Used to enable or disable establishment of peer connections initiated by Diameter Peer(s) matching the different identity validation patterns as expressed by relevant dynamic-peer-acceptor instance. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: All established Diameter Peer connections towards the Peers matching the dynamic-peer-acceptor expressed constraints are disconnected upon setting to value false.",
                                          "default": true
                                        },
                                        "congestion-handling-policy": {
                                          "type": "string",
                                          "description": "Reference to a congestion-handling policy"
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  }
                                }
                              },
                              "transport": {
                                "type": "object",
                                "description": "A transport instance is a system created singleton object instance in the diameter configuration and it is used as a container for transport configuration. To have the own Diameter Node accept connections from or initiate connections towards Diameter Peer, data nodes of the transport subtree is to be configured accordingly. This is performed by creating one or more Local Endpoints with wanted roles and transport capabilities. Local Endpoints are specified with instances of local-endpoint.",
                                "properties": {
                                  "node": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A node instance is used to specify an own Diameter Node. A Diameter Service deployment, on a certain target system, can expose/represent arbitrary number of Diameter Nodes (each of them expressed by related node instance). The different AAA Service implementations using the Diameter Service can be connected to relevant Diameter Nodes. Any changes on the node instance are applied immediately on Diameter Service level. Since all the values provides common content for diameter messages used for Diameter Peer connection setup (CER/CEA messages) and some subsequent messages, changes on related values will have as result the drop of all related Diameter Peer connections and reestablishment with updated information. The Diameter Service level queued egress request messages will be resent to relevant Diameter Peers.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Used to specify the key of the node instance."
                                        },
                                        "origin-realm": {
                                          "type": "string",
                                          "format": "hostname",
                                          "description": "Used to specify the origin realm of the Diameter Node represented by the node instance. The provided value is to be expressed by complying to the Diameter Identity (https://tools.ietf.org/html/rfc6733#section-4.3.1) data type expression rules as defined by the Diameter Base Protocol. The provided value is used to construct a Origin-Realm AVP (https://tools.ietf.org/html/rfc6733#section-6.4) which is placed in capability exchange messages (CER/CEA messages) during related own Diameter Node linked Peer connection establishment. Update Effect: All established Diameter Peer connections linked to related own Diameter Node are dropped and reestablished with updated information."
                                        },
                                        "origin-host": {
                                          "type": "string",
                                          "format": "hostname",
                                          "description": "Used to specify the origin host of the Diameter Node represented by the node instance. The provided value is to be expressed by complying to the Diameter Identity (https://tools.ietf.org/html/rfc6733#section-4.3.1) data type expression rules as defined by the Diameter Base Protocol. The provided value is used to construct a Origin-Host AVP (https://tools.ietf.org/html/rfc6733#section-6.3) which is placed in capability exchange messages (CER/CEA messages) during related AAA Service linked Peer connection setup. The provided value must be unique in the context of the related origin realm. Update Effect: All established Diameter Peer connections linked to related own Diameter Node are dropped and reestablished with updated information."
                                        },
                                        "product-name": {
                                          "type": "string",
                                          "description": "Used to specify the name of the product behind the Diameter Node implementing different AAA Services by using the diameter stack (for example, EIR, SAPC, IpWorks, MTAS, CSCF, HSS). The provided value is used to construct a Product-Name AVP (https://tools.ietf.org/html/rfc6733#section-5.3.7) placed in related capability exchange messages (CER/CEA messages) during Peer connection setup. The provided product name should remain constant across firmware revisions for the same product (see also firmware-revision). Update Effect: All established Diameter Peer connections linked to related own Diameter Node are dropped and reestablished with updated information."
                                        },
                                        "vendor-id": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "Used to specify the identity of the vendor implementing the product specified for product-name. The should take as value an IANA allocated SMI Network Management Private Enterprise Code (see https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers ) assigned for the vendor implementing the product specified for product-name. Unless the product developer center is not registered with own vendor identity one should use the value 193 assigned to Ericsson AB. The provided value is used to construct a Vendor-Id AVP (https://tools.ietf.org/html/rfc6733#section-5.3.3) placed in related capability exchange messages (CER/CEA messages) during Peer connection setup. Update Effect: All established Diameter Peer connections linked to related own Diameter Node are dropped and reestablished with updated information.",
                                          "default": 193
                                        },
                                        "firmware-revision": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "Used to specify the revision of the software product specified for product-name. If there is an value provided it is used to construct a Firmware-Revision AVP (https://tools.ietf.org/html/rfc6733#section-5.3.4) placed in related capability exchange messages (CER/CEA messages) during Peer connection setup. Update Effect: All established Diameter Peer connections linked to related own Diameter Node are dropped and reestablished with updated information."
                                        },
                                        "host-ip-address": {
                                          "type": "array",
                                          "description": "Used to specify the list of IP addresses (a list of IPv4 and/or IPv6 addresses) that can be used by a Diameter Peer to connect to the own Diameter Node. The IP addresses specified shall visible for related Diameter Peers (for instance the IP address of external IP load balancer behind which the own Diameter Node is placed or alternatively the SENP VIP address). The provided values are used to construct relevant Host-IP-Address AVP (https://tools.ietf.org/html/rfc6733#section-5.3.5) which is placed in capability exchange messages (CER/CEA messages) during related AAA Service linked Peer connection setup. If no value is provided, the Host-IP-Address AVP is constructed by using the IP addresses provided for the own Diameter Node related Local Endpoints (see local-endpoint). Update Effect: All established Diameter Peer connections linked to related own Diameter Node are dropped and reestablished with updated information.",
                                          "items": {
                                            "type": "string",
                                            "anyOf": [
                                              {
                                                "format": "ipv4"
                                              },
                                              {
                                                "format": "ipv6"
                                              }
                                            ]
                                          }
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "tls-profile": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "TLS profile to be associated with local-endpoints of the node. Properties of tls-profile are used when securing connections for TCP transports with TLS 1.2 or TLS 1.3.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Used to specify the key of the tls-profile instance."
                                              },
                                              "keystore-reference": {
                                                "type": "object",
                                                "description": "Reference to a Diameter specific certificate and its associated private key in the keystore, but only those printed by action show-deployed-certificates can be referenced. TLS host name validation in Diameter Peer may require using a certificate where included subject alternative name is matching the originHost of the Diameter Own Node (see node origin-host). Update Effect: All established Diameter Peer connections linked to related tls-profile are dropped and reestablished with updated information.",
                                                "properties": {
                                                  "asymmetric-key": {
                                                    "type": "string",
                                                    "description": "A reference to an asymmetric key in the keystore."
                                                  },
                                                  "certificate": {
                                                    "type": "string",
                                                    "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                                  }
                                                }
                                              },
                                              "truststore-reference": {
                                                "type": "string",
                                                "description": "Reference to a set of Diameter trust anchors that exists in the truststore, but only those printed by action show-deployed-certificates can be referenced. These optional trusts are used when authenticating the Peer. Update Effect: All established Diameter Peer connections linked to related tls-profile are dropped and reestablished with updated information."
                                              },
                                              "tls-local-version": {
                                                "enum": [
                                                  "tls-1_2-tls-1_3",
                                                  "tls-1_3-only"
                                                ],
                                                "description": "Specifies the supported TLS versions. Only TLS 1.2 or newer is allowed for Diameter, while TLS 1.3 must always be supported. Hardening procedure can switch to TLS 1.3 only. Update Effect: All established Diameter Peer connections linked to related tls-profile are dropped and reestablished with updated information.",
                                                "default": "tls-1_2-tls-1_3"
                                              },
                                              "tls-1_2-local-cipher-list": {
                                                "type": "array",
                                                "description": "Specifies the list of ciphers for TLS 1.2 based on ietf-tls-common. Due to TLS 1.2 being the minimum supported protocol version, some of the hereby listed ciphers can not be used. If a cipher excluded by RFC7540 is configured, alarm DIA Diameter Transport Vulnerability is raised for the related tls-profile. Chosen ciphers must match the deployed certificate. Update Effect: All established Diameter Peer connections linked to related tls-profile are dropped and reestablished with updated information.",
                                                "items": {
                                                  "enum": [
                                                    "ecdhe-rsa-with-aes-128-gcm-sha256",
                                                    "ecdhe-rsa-with-aes-256-gcm-sha384",
                                                    "ecdhe-ecdsa-with-aes-128-gcm-sha256",
                                                    "ecdhe-ecdsa-with-aes-256-gcm-sha384",
                                                    "ecdhe-rsa-with-chacha20-poly1305-sha256",
                                                    "ecdhe-ecdsa-with-chacha20-poly1305-sha256",
                                                    "rsa-with-aes-128-cbc-sha",
                                                    "rsa-with-aes-256-cbc-sha",
                                                    "rsa-with-aes-128-cbc-sha256",
                                                    "rsa-with-aes-256-cbc-sha256",
                                                    "dhe-rsa-with-aes-128-cbc-sha",
                                                    "dhe-rsa-with-aes-256-cbc-sha",
                                                    "dhe-rsa-with-aes-128-cbc-sha256",
                                                    "dhe-rsa-with-aes-256-cbc-sha256",
                                                    "ecdhe-ecdsa-with-aes-128-cbc-sha256",
                                                    "ecdhe-ecdsa-with-aes-256-cbc-sha384",
                                                    "ecdhe-rsa-with-aes-128-cbc-sha256",
                                                    "ecdhe-rsa-with-aes-256-cbc-sha384",
                                                    "ecdhe-rsa-with-aes-128-cbc-sha",
                                                    "ecdhe-rsa-with-aes-256-cbc-sha",
                                                    "rsa-with-3des-ede-cbc-sha",
                                                    "ecdhe-rsa-with-3des-ede-cbc-sha"
                                                  ]
                                                }
                                              },
                                              "tls-1_3-local-cipher-suites": {
                                                "type": "array",
                                                "description": "Specifies the cipher suites for TLS 1.3 in order of preference. Update Effect: All established Diameter Peer connections linked to related tls-profile are dropped and reestablished with updated information.",
                                                "items": {
                                                  "enum": [
                                                    "tls-aes-256-gcm-sha384",
                                                    "tls-chacha20-poly1305-sha256",
                                                    "tls-aes-128-gcm-sha256",
                                                    "tls-aes-128-ccm-sha256",
                                                    "tls-aes-128-ccm-8-sha256"
                                                  ]
                                                }
                                              },
                                              "security-level": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 3,
                                                "maximum": 5,
                                                "description": "Specifies the TLS security level used with this profile. Hardening procedure can increase the applied security level. Level 3 Security level set to 128 bits of security. As a result RSA, DSA and DH keys shorter than 3072 bits and ECC keys shorter than 256 bits are prohibited. In addition to the level 2 exclusions cipher suites not offering forward secrecy are prohibited. TLS versions below 1.1 are not permitted. Session tickets are disabled. Level 4 Security level set to 192 bits of security. As a result RSA, DSA and DH keys shorter than 7680 bits and ECC keys shorter than 384 bits are prohibited. Cipher suites using SHA1 for the MAC are prohibited. TLS versions below 1.2 are not permitted. Level 5 Security level set to 256 bits of security. As a result RSA, DSA and DH keys shorter than 15360 bits and ECC keys shorter than 512 bits are prohibited. Update Effect: All established Diameter Peer connections linked to related tls-profile are dropped and reestablished with updated information.",
                                                "default": 3
                                              },
                                              "user-label": {
                                                "type": "string",
                                                "description": "Label for free use."
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ]
                                          }
                                        },
                                        "dtls-profile": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "DTLS profile to be associated with SCTP local-endpoints of the node. Properties of dtls-profile are used when securing connections for SCTP transports with DTLS 1.2.. DTLS protocol is based on the Transport Layer Security (TLS) protocol and provides equivalent security guarantees. See more at https://www.rfc-editor.org/rfc/rfc6347.html Properties defined here are passed to the SCTP Service.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Used to specify the key of the dtls-profile instance."
                                              },
                                              "keystore-reference": {
                                                "type": "object",
                                                "description": "Reference to a Diameter specific certificate and its associated private key in the keystore, but only those printed by action show-deployed-certificates can be referenced. TLS host name validation in Diameter Peer may require using a certificate where included subject alternative name is matching the originHost of the Diameter Own Node (see node origin-host). Update Effect: All established Diameter Peer connections linked to related dtls-profile are dropped and reestablished with updated information.",
                                                "properties": {
                                                  "asymmetric-key": {
                                                    "type": "string",
                                                    "description": "A reference to an asymmetric key in the keystore."
                                                  },
                                                  "certificate": {
                                                    "type": "string",
                                                    "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                                  }
                                                }
                                              },
                                              "truststore-reference": {
                                                "type": "string",
                                                "description": "Reference to a set of Diameter trust anchors that exists in the truststore, but only those printed by action show-deployed-certificates can be referenced. These optional trusts are used when authenticating the Peer. Update Effect: All established Diameter Peer connections linked to related dtls-profile are dropped and reestablished with updated information."
                                              },
                                              "tls-1_2-local-cipher-list": {
                                                "type": "array",
                                                "description": "Specifies the list of ciphers for TLS 1.2 based on ietf-tls-common. Due to TLS 1.2 being the minimum supported protocol version, some of the hereby listed ciphers can not be used. If a cipher excluded by RFC7540 is configured, alarm DIA Diameter Transport Vulnerability is raised for the related dtls-profile. Chosen ciphers must match the deployed certificate. Update Effect: All established Diameter Peer connections linked to related dtls-profile are dropped and reestablished with updated information.",
                                                "items": {
                                                  "enum": [
                                                    "ecdhe-rsa-with-aes-128-gcm-sha256",
                                                    "ecdhe-rsa-with-aes-256-gcm-sha384",
                                                    "ecdhe-ecdsa-with-aes-128-gcm-sha256",
                                                    "ecdhe-ecdsa-with-aes-256-gcm-sha384",
                                                    "ecdhe-rsa-with-chacha20-poly1305-sha256",
                                                    "ecdhe-ecdsa-with-chacha20-poly1305-sha256",
                                                    "rsa-with-aes-128-cbc-sha",
                                                    "rsa-with-aes-256-cbc-sha",
                                                    "rsa-with-aes-128-cbc-sha256",
                                                    "rsa-with-aes-256-cbc-sha256",
                                                    "dhe-rsa-with-aes-128-cbc-sha",
                                                    "dhe-rsa-with-aes-256-cbc-sha",
                                                    "dhe-rsa-with-aes-128-cbc-sha256",
                                                    "dhe-rsa-with-aes-256-cbc-sha256",
                                                    "ecdhe-ecdsa-with-aes-128-cbc-sha256",
                                                    "ecdhe-ecdsa-with-aes-256-cbc-sha384",
                                                    "ecdhe-rsa-with-aes-128-cbc-sha256",
                                                    "ecdhe-rsa-with-aes-256-cbc-sha384",
                                                    "ecdhe-rsa-with-aes-128-cbc-sha",
                                                    "ecdhe-rsa-with-aes-256-cbc-sha",
                                                    "rsa-with-3des-ede-cbc-sha",
                                                    "ecdhe-rsa-with-3des-ede-cbc-sha"
                                                  ]
                                                }
                                              },
                                              "security-level": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 3,
                                                "maximum": 5,
                                                "description": "Specifies the TLS security level used with this profile. Hardening procedure can increase the applied security level. Level 3 Security level set to 128 bits of security. As a result RSA, DSA and DH keys shorter than 3072 bits and ECC keys shorter than 256 bits are prohibited. In addition to the level 2 exclusions cipher suites not offering forward secrecy are prohibited. TLS versions below 1.1 are not permitted. Session tickets are disabled. Level 4 Security level set to 192 bits of security. As a result RSA, DSA and DH keys shorter than 7680 bits and ECC keys shorter than 384 bits are prohibited. Cipher suites using SHA1 for the MAC are prohibited. TLS versions below 1.2 are not permitted. Level 5 Security level set to 256 bits of security. As a result RSA, DSA and DH keys shorter than 15360 bits and ECC keys shorter than 512 bits are prohibited. Update Effect: All established Diameter Peer connections linked to related dtls-profile are dropped and reestablished with updated information.",
                                                "default": 3
                                              },
                                              "user-label": {
                                                "type": "string",
                                                "description": "Label for free use."
                                              }
                                            },
                                            "required": [
                                              "id"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "origin-host",
                                        "origin-realm",
                                        "product-name"
                                      ]
                                    }
                                  },
                                  "host-address-resolver": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A host-address-resolver is used to resolve or determine a host-local IP address the Local Endpoints shall use during peer connection establishment. This object can be used when the Diameter Service is deployed on a target system where a Diameter node (a POD hosting a Diameter Service instance) might be associated with more than one IP address (see also Kubernetes Cluster Networking). Changes on host-address-resolver level are influencing all established Peer connections using the related IP address. That is, affected Peer connections are closed then reestablished by need using updated information.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Used to specify the key of the host-address-resolver instance."
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "ip-family": {
                                          "enum": [
                                            "ipv4",
                                            "ipv6",
                                            "any"
                                          ],
                                          "description": "When dual-stack feature is enabled on Kubernetes level, ip-family can be used to specify the IP family of the address resolved by the host-address-resolver. In other words, to specify the IP family of the IP address the related Diameter EP should bind to. In case the host-address-resolver is configured with an ip-family for which there is no IP address allocated to the Diameter Service in the Kubernetes cluster, alarm DIA Diameter Configuration Incomplete is raised",
                                          "default": "any"
                                        },
                                        "linux-env-var": {
                                          "type": "string",
                                          "description": "Used to specify a Linux environment variable name the Diameter Service instances must use to resolve the related local IP address they should bind to. The Linux environment variable specified must be injected in related Diameter Service containers as well. Note, Diameter Service injects POD_IP and POD_IPS to represent Kubernetes runtime attributes .status.podIP and .status.podIPs. The .status.podIPs value holds the addresses allocated to the POD. The order in which the IPv4 and IPv6 address are placed in the .status.podIPs depends on the configuration of the Kubernetes cluster. The first item in .status.podIPs is matching the legacy .status.podIP content. Update Effect: All established Diameter Peer connections linked to Local Endpoints referring to the host-address-resolver are dropped and reestablished using the updated information."
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "linux-env-var"
                                      ]
                                    }
                                  },
                                  "secondary-network-address": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A secondary-network-address instance is used to specify addressing information used by SENP nVIP microservice in order to uphold separation from the traffic distributed on the default primary network within the Kubernetes cluster.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Used to specify the key of the secondary-network-address instance."
                                        },
                                        "senp-nvip-address": {
                                          "type": "string",
                                          "anyOf": [
                                            {
                                              "format": "ipv4"
                                            },
                                            {
                                              "format": "ipv6"
                                            }
                                          ],
                                          "description": "Used to specify the VIP address provided by SENP nVIP. Update Effect: All established Diameter Peer connections linked to related SENP VIP address are dropped and reestablished with updated information."
                                        },
                                        "senp-nvip-sctp-service-path": {
                                          "type": "string",
                                          "description": "Used to specify the secondary networking service path that together with related VIP address defines the SENP properties for the diameter SCTP traffic. Update Effect: All established SCTP Diameter Peer connections linked to related SENP address are dropped and reestablished with updated information."
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "local-endpoint": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A local-endpoint instance is used to specify a Local Endpoint for the own Diameter Node. A Local Endpoint can play one of the following roles: Connection Initiation The Local Endpoint is configured to play a transport connection initiation role towards the configured Diameter Peer. That is, the Local Endpoint is playing a client role in the Peer connection setup flow. When initiating connections towards a Diameter Peer the initiate-connection-to-peer of the local-endpoint should hold an object reference pointing to that Diameter Peer (represented by a static-peer together with related remote-endpoint) towards which the connection initiation and related peer connection establishment is to be performed. If the local-endpoint is configured as client, it is possible to define both TCP and SCTP transports (see transport-tcp and transport-sctp) at the same time. This kind of setup could be used to implement a fallback from one transport protocol to the other (see also rank parameter of the local-endpoint), as only one of the transports (one connection per computing resource) will be set-up by the stack. The one having the lowest rank is tried first, if it fails, the next configured transport connection is tried. Connection Termination The Local Endpoint is configured to play a connection termination role for Peer Diameter Nodes. That is, the related Local Endpoint is playing a server role in the Peer connection setup flow. It listens on the configured address and port pairs and accepts incoming transport connection requests initiated by Peer Diameter Nodes. The collection of Peer Diameter Nodes allowed to setup peer connections towards a Local Endpoint of the own Diameter Node can be constrained by either using the generic Peer filtering capabilities provided by the dynamic-peer-acceptor or by using concrete Peer specification capabilities provided by the static-peer or both. The Diameter Peer initiated connection acceptance constraints are expressed for a local-endpoint by loading the related terminate-connection-from-peers and/or terminate-connection-from-accepted-peers with an object reference pointing to those static-peer and respectively dynamic-peer-acceptor instances that are used to express the different connection acceptance conditions. If local-endpoint is configured as a server, there must be only one transport defined for it, either SCTP or TCP (see transport-tcp and transport-sctp). If both transports are required for the server, two local-endpoint instances are needed. A Local Endpoint can either play a connection initiation (client) role or connection termination (server) role, therefore, a Local Endpoint must either have the terminate-connection-from-* reference or the initiate-connection-to-peer reference filled with a valid reference value but never both of them. In opposite to SCTP, TCP can only handle one address for a transport connection. As a result, in case of transport-tcp, when multiple IP addresses provided, one available address will be selected at random by the related endpoint during connection setup. If more TCP connections are required, more local-endpoints must be specified referring to multiple address instances. A Local Endpoint can be assigned with several transport capabilities. A transport capability represents a certain transport protocol implementation. The following transport capabilities (transport protocol implementations) are supported by the Diameter Service: TCP Linux Kernel implementation of the Transmission Control Protocol (TCP). E-SCTP Proprietary user-space implementation of the Stream Control Transmission Protocol (SCTP). A Local Endpoint in client role can be assigned with up to two transport capabilities representing distinct transport protocol implementations. That is, for instance, one of the transport capability can represent a TCP protocol implementation while the other one an SCTP protocol implementation. That transport capability is selected first for Peer connection handling which presents the highest configured rank and it is potentially valid for connection establishment (for instance, the configured address is available on the target system). Upon multiple valid transport capabilities with same rank one of them is selected in a random way (for example when specifying one TCP and one SCTP transport capability using same rank). A AAA Service can have assigned any number of Local Endpoints with different roles and transport capabilities. The Diameter Service runs in a cluster configuration on the target system. That is, it might span on an arbitrary number of compute resources (nodes, interpreted as POD individuals for ADP). A Local Endpoint can be configured to start in single or multiple instances on cluster level. The number of instances started for a Local Endpoint can be configured to arbitrary value but the actual instances started will never pass the number of compute resources the Diameter Service is instantiated on. For TCP transport, in case no host-address-resolver is referred by a local-endpoint, and secondary networking is not specified during installation, the primary IP address on Kubernetes configuration level (variable POD_IP hosting the value of Kubernetes runtime attribute .status.podIP) returned by the inbuilt default host resolver is used. For SCTP transport, when SCTP multi-homing with secondary networking is not enabled, the default E-SCTP behavior is to use all local addresses available on primary network, independently from the referred host-address-resolver existence. When secondary networking is defined and SCTP multi-homing is enabled by the installation and no secondary-network-address is assigned, the default SENP VIP(s) and service path defined by the E-SCTP installation is used for diameter traffic. When secondary networking is defined and SCTP multi-homing is enabled by the installation: - when only primary networking custom address is defined it is passed onto E-SCTP, - when only secondary networking custom address is defined it is passed onto E-SCTP, - when both are defined the secondary address(es) takes precedence and passed onto E-SCTP for binding. Changes on local-endpoint are applied immediately on Diameter Service level. The majority of value changes on a local-endpoint will have as result the drop of related Peer connections and reestablishment by need with updated information. Diameter Service level queued egress request messages will be resent to related Diameter Peers.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Used to specify the key of the local-endpoint instance."
                                        },
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Used to enable or disable the use Local Endpoint. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: All established Diameter Peer connections related to the Local Endpoint are closed if value is set to false.",
                                          "default": true
                                        },
                                        "dscp": {
                                          "type": "integer",
                                          "format": "uint8",
                                          "minimum": 0,
                                          "maximum": 63,
                                          "description": "Used to specify the Differentiated Service Code Point (DSCP) to be used during Peer connection setups for the Local Endpoint. Update Effect: Depends on used transport capability. In case of TCP there is no impact on affected peer connections. The DSCP of affected Peer connections are updated without impact on traffic and related connections. In case of SCTP the affected Peer connections are dropped and reestablished by need with updated transport properties.",
                                          "default": 0
                                        },
                                        "instance-count": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 255,
                                          "description": "Used to specify the number of instances a Local Endpoint configured with connection initiation (client) role shall have. This has no effect on Local Endpoint configured with connection termination (server) role. It can take a value from one of the following ranges: 0: The Local Endpoint configured in connection initiation (client) mode shall have an instance started for each of the Diameter Service instances. That is, the actual Local Endpoint instance number is dynamically changing in accordance with actual Diameter Service cluster size. More Local Endpoint instances are created when the Diameter Service is scaled-out and Local Endpoint instances are removed when the Diameter Service is scaled-in. 1..255: The Local Endpoint configured in connection initiation (client) mode shall not pass on cluster level the indicated number of instances (a value specified between 1 and 255). The actual number of Local Endpoint instances created by Diameter Service will never be higher than the lowest threshold value represented by either of the actual Diameter Service cluster size or the configured Local Endpoint instance-count. The default value is 1. That is, a single instance is created for a Local Endpoint configured in connection initiation mode. The default setting assures standards behavior in relation with the restriction on number of Peer connections to be set towards same diameter peer. To have an effect when setting a value higher than one for instance-count, restrict-connections of the referred static-peer or dynamic-peer-acceptor must be set to false (see static-peer, dynamic-peer-acceptor). Update Effect: Depends on local endpoint connection role. In case of connection initiation (client) role, the configured amount of Local Endpoint instances will be applied. New Local Endpoint instances are added by need without affecting existing ones. Existing Local Endpoint instances with related peer connections are removed by need without affecting the other ones. In case of connection termination (server) role, there is no effect on value change.",
                                          "default": 1
                                        },
                                        "watchdog-timer": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 6000,
                                          "maximum": 4294967295,
                                          "description": "Used to configure the Watchdog Initial Timer (Twinit) of the Peer connections assigned with the local endpoint (see also Authentication, Authorization and Accounting (AAA) Transport Profile (RFC 3539) IETF: STANDARD). Unit: millisecond (ms) Update Effect: No impact on affected Peer connections.",
                                          "default": 30000
                                        },
                                        "reconnect-timer": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 1000,
                                          "maximum": 4294967295,
                                          "description": "Used to configure the Tc timer (https://tools.ietf.org/html/rfc6733#section-12) of the peer connections assigned with the local endpoint. That is, it is used to set the frequency the transport connection attempts are done to a diameter peer with whom no active transport connection exists. It is not recommended to configure too small Tc timer, as it can result in transport failures if related NAT cache is not flushed before the retry. Unit: millisecond (ms) Update Effect: No impact on affected Peer connections.",
                                          "default": 30000
                                        },
                                        "node": {
                                          "type": "string",
                                          "description": "Used to assign a Local Endpoint with an own Diameter Node represented by related node instance. Should take as single value a reference to that node to which the Local Endpoint must be assigned (see node). Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished with updated own Diameter Node information."
                                        },
                                        "initiate-connection-to-peer": {
                                          "type": "string",
                                          "description": "Used to set a Local Endpoint to play a connection initiator (client) role. It can take a value if terminate-connection-from-accepted-peers and terminate-connection-from-peer are not set. It shall refer to that static-peer that represents the Diameter Peer the Local Endpoint should initiate connection establishment towards (see static-peer). Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished by need with updated information."
                                        },
                                        "disconnect-cause-handling-policy": {
                                          "type": "string",
                                          "description": "Used to express the Disconnect-Cause handling policy to follow upon Peer connection close as result of operations over service instances or upon AAA Service disconnection from Diameter Service. Should take as value a reference to disconnect-cause-handling-policy. Update Effect: No impact on established Peer connections. Upon update, the Local Endpoint will apply the referred policy. If not set the Diameter Service uses the default Disconnect-Cause handling policy set to REBOOTING."
                                        },
                                        "terminate-connection-from-peer": {
                                          "type": "array",
                                          "description": "Used to set a Local Endpoint to play connection termination (server) role. It can take a value if the initiate-connection-to-peer is not set. It shall hold a list of references towards those static-peer instances which are representing Diameter Peers allowed to initiate connection establishment towards the Local Endpoint (see static-peer). Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished by need with updated information.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "terminate-connection-from-accepted-peers": {
                                          "type": "array",
                                          "description": "Used to set a Local Endpoint to play connection termination (server) role. It can take a value if the initiate-connection-to-peer is not set. It shall hold a list of references towards those dynamic-peer-acceptor instances which are used to express a pattern based representation of Diameter Peers allowed to initiate connection establishment towards the Local Endpoint (see dynamic-peer-acceptor). Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished by need with updated information.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "transport-tcp": {
                                          "type": "object",
                                          "description": "Used to assign TCP transport capability for a Local Endpoint.",
                                          "properties": {
                                            "port": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 65535,
                                              "description": "Used to specify the port to be used by the TCP transport capability of a Local Endpoint. Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished with updated information. Depending on local endpoint role, it defaults to: 0: if local endpoint is configured in connection initiation (client) mode. 3868: if local endpoint is configured in connection termination (server) mode.",
                                              "default": 0
                                            },
                                            "rank": {
                                              "type": "integer",
                                              "format": "uint32",
                                              "minimum": 0,
                                              "maximum": 4294967295,
                                              "description": "Used to express precedence for transport capability selection for a Local Endpoint. That transport capability will be selected for a Local Endpoint that is valid to use (for instance, diameter can bind to specified address) and contains the lowest rank. In case of multiple valid transport capabilities assigned to a Local Endpoint with same rank one will be selected by random. Update Effect: No effect on already established Peer connections for related Local Endpoint. The new value is considered for newly established Peer connections."
                                            },
                                            "backlog": {
                                              "type": "integer",
                                              "format": "uint32",
                                              "minimum": 0,
                                              "maximum": 4294967295,
                                              "description": "Used to specify the backlog size of incoming connections handled by a Local Endpoint (the queue size of sockets in LISTEN state, see http://man7.org/linux/man-pages/man2/listen.2.html). This is only valid for Local Endpoints configured in connection termination (server) role. The value applied also depends on underlying OS settings (might be constrained by OS to less than configured). Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished with updated information.",
                                              "default": 1024
                                            },
                                            "no-delay": {
                                              "type": "boolean",
                                              "description": "Used to enable or disable the use of the Nagle algorithm for the TCP transport capability of a Local Endpoint. By default, TCP_NODELAY socket option is applied, the use of Nagle algorithm (see https://tools.ietf.org/html/rfc3539#section-3.2) is disabled. Update Effect: All established Diameter Peer connections assigned to local endpoint are preserved and updated with new configuration.",
                                              "default": true
                                            },
                                            "address": {
                                              "type": "array",
                                              "description": "Offers the possibility to assign an IP address to a transport capability. In case of multiple IP addresses provided, one available address will be selected at random by the related endpoint during connection setup. Update Effect: All established Diameter Peer connections for the transport capability assigned to local endpoint are dropped and reestablished by need with updated information.",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "tls-profile": {
                                              "type": "string",
                                              "description": "If defined, endpoint uses TLS to secure the communication with properties of the referred tls-profile. If not defined, alarm DIA Diameter Transport Vulnerability is raised for the related endpoint. Update Effect: All established Diameter Peer connections assigned to local tcp endpoint are dropped and reestablished with updated information."
                                            },
                                            "tls-host-name-validation": {
                                              "type": "boolean",
                                              "description": "Can be used to turn off hostname validation on TLS secured static connections. By default, peer certificate received during TLS handshake must contain the id defined by peer-origin-host of referred static-peer instance. If turned off, alarm DIA Diameter Transport Vulnerability is raised for the related endpoint. Note, there is no hostname validation for dynamic Peers allowed by filters in dynamic-peer-acceptor instances. Has no effect on connections without TLS, that is if tls-profile is empty. Update Effect: All established Diameter Peer connections assigned to local tcp endpoint are dropped and reestablished with updated information.",
                                              "default": true
                                            }
                                          }
                                        },
                                        "transport-sctp": {
                                          "type": "object",
                                          "description": "Used to assign SCTP transport capability for a Local Endpoint. Either primary or secondary NW address(es) or no address is to be defined.",
                                          "properties": {
                                            "port": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 65535,
                                              "description": "Used to specify the port to be used by the E-SCTP transport capability of a Local Endpoint. Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished with updated information. Depending on local endpoint role, it defaults to: 0: if local endpoint is configured in connection initiation (client) mode. 3868: if local endpoint is configured in connection termination (server) mode.",
                                              "default": 0
                                            },
                                            "rank": {
                                              "type": "integer",
                                              "format": "uint32",
                                              "minimum": 0,
                                              "maximum": 4294967295,
                                              "description": "Used to express precedence for transport capability selection for a Local Endpoint. That transport capability will be selected for a Local Endpoint that is valid to use (for instance, diameter can bind to specified address) and contains the lowest rank. In case of multiple valid transport capabilities assigned to a Local Endpoint with same rank one will be selected by random. Update Effect: No effect on already established Peer connections for related Local Endpoint. The new value is considered for newly established Peer connections."
                                            },
                                            "outbound-streams": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 65535,
                                              "description": "Used to configure the Number of Outbound Streams (OS) (https://tools.ietf.org/html/rfc4960#section-3.3.2) wished for the associations created for the Peer connections assigned with the local endpoint (see also Stream Control Transmission Protocol (RFC 4960) IETF: STANDARD). Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished with updated information. Unit: Count",
                                              "default": 1
                                            },
                                            "max-inbound-streams": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 65535,
                                              "description": "Used to configure the Number of Inbound Streams (MIS) (https://tools.ietf.org/html/rfc4960#section-3.3.2) wished for the associations created for the Peer connections assigned with the local endpoint (see also Stream Control Transmission Protocol (RFC 4960) IETF: STANDARD). Update Effect: All established Diameter Peer connections assigned to local endpoint are dropped and reestablished with updated information. Unit: Count",
                                              "default": 1
                                            },
                                            "address": {
                                              "type": "array",
                                              "description": "Gives the possibility to assign IP address(es) to an E-SCTP transport capability. Note, Diameter normally does not pass it to E-SCTP to trigger default E-SCTP behaviour that is binding to all available local addresses on primary network. The only exception is when multi-homing is enabled and a custom primary address is defined hereby, that is passed onto E-SCTP for binding. Update Effect: All established Diameter Peer connections for the transport capability assigned to local endpoint are dropped and reestablished by need with updated information.",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "secondary-network-address": {
                                              "type": "array",
                                              "description": "Gives the possibility to assign SENP VIP address(es) and related service path to an E-SCTP transport capability. At least two addresses are required for SCTP multi-homing. Diameter passes the configured values to E-SCTP for binding. Update Effect: All established Diameter Peer connections for the transport capability assigned to local endpoint are dropped and reestablished by need with updated information.",
                                              "items": {
                                                "type": "string"
                                              }
                                            },
                                            "dtls-profile": {
                                              "type": "string",
                                              "description": "If defined, SCTP service uses DTLS to secure the communication with properties of the hereby referred dtls-profile. If not defined, alarm DIA Diameter Transport Vulnerability is raised for the related endpoint. Update Effect: All established Diameter Peer connections assigned to local sctp endpoint are dropped and reestablished with updated information."
                                            },
                                            "tls-host-name-validation": {
                                              "type": "boolean",
                                              "description": "Can be used to turn off hostname validation on DTLS secured static connections. By default, peer certificate received during TLS handshake must contain the id defined by peer-origin-host of referred static-peer instance. If turned off, alarm DIA Diameter Transport Vulnerability is raised for the related endpoint. Note, there is no hostname validation for dynamic Peers allowed by filters in dynamic-peer-acceptor instances. Has no effect on connections without DTLS, that is if dtls-profile is empty. Update Effect: All established Diameter Peer connections assigned to local tcp endpoint are dropped and reestablished with updated information.",
                                              "default": true
                                            },
                                            "sctp-profile": {
                                              "type": "integer",
                                              "description": "If defined, SCTP endpoint uses configuration from the referred SCTP profile. Otherwise, default sctp configuration is used (profile 0). Update Effect: All established Diameter Peer connections assigned to local sctp endpoint are dropped and reestablished with updated information."
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "node"
                                      ]
                                    }
                                  }
                                }
                              },
                              "peer-selector": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A peer-selector instance is used to group a collection of Diameter Nodes to form a destination domain egress request messages can be passed towards as result of evaluation of those routing entries that are referring to it. Practically, in routing perspective, a peer-selector instance returns a set of Diameter Peer connections organized in increased order of their determined rank. That available Diameter Peer connection will be selected when matching criteria is found during related routing entry evaluation that is with the lowest rank. Egress request routing selects a connection from this returned set of connections by using a Session-Id AVP based hashing algorithm. If the Session-Id AVP is not present in the related diameter request message connection is selected in random order. In case multiple Peers referred by the selector through static-peer-group, peer-reference or dynamic-peer-group have equal ranks, then all the connections to these Peers are returned by the selector. If the ranks are different, only the Peer or Peers with the lowest rank is selected. The peer selections (or peer groups) should be used when Diameter Peers are to be grouped based on different criteria to form destination domains egress request messages can be passed towards as result of related routing entry evaluation. That is, peer selections are to be created only with the purpose to use them as destination domains during routing entry evaluations. In other cases the use of peer selections (peer groups) can be omitted. Define peer selections only if the route-to-peer-selection action is planned to be used when creating routing rules.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Used to specify the key of the peer-selector instance."
                                    },
                                    "update-message-destination": {
                                      "type": "boolean",
                                      "description": "When set to true in linux service-execution-environment, Diameter routing function executing route-to-peer-selection routing action checks if the Destination-Host and Destination-Realm AVPs are included in the egress request message. If they are included, Diameter ensures that they do match the peer-origin-host of the selected static-peer and its realm, respectively. This function is to be used by diameter user applications utilizing peer-selector to implement fail-over between multiple directly connected Peer Nodes (probably serving different realms) while Destination-Host and Destination-Realm AVP pair is included into the request by the user application. Message destination updates performed by Diameter routing ensures that the request won't get rejected by the message destination validation even at alternative Diameter Peer Nodes.",
                                      "default": false
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    },
                                    "static-peer-group": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "A static-peer-group instance is used to specify a group of Diameter Peers by referring to their explicit representation expressed through related static-peer instances. Any change in the number of static peers assigned to the static-peer-group instance will be applied immediately impacting in this way the related routing entries evaluated by the routing logic of diameter.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Used to specify the key of the static-peer-group instance."
                                          },
                                          "rank": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 4294967295,
                                            "description": "Used to assign a rank to the group of Diameter Peers represented by the collection of static-peer instances referred by child peer-reference instances. The lower the rank value the higher the configured rank of the static-peer-group. The default value is 0 (highest rank). Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated.",
                                            "default": 0
                                          },
                                          "update-message-destination": {
                                            "type": "boolean",
                                            "description": "Deprecated, use function on peer-selector level.",
                                            "default": false
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use."
                                          },
                                          "peer-reference": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "A peer-reference instance is used to assign a rank to an explicit representation of a Diameter Peer (represented through referred static-peer instance). Any change on peer-reference instance values will be applied immediately impacting in this way the related routing entries evaluated by the routing logic of diameter.",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string",
                                                  "description": "Used to specify the key of the peer-reference instance."
                                                },
                                                "rank": {
                                                  "type": "integer",
                                                  "format": "uint32",
                                                  "minimum": 0,
                                                  "maximum": 4294967295,
                                                  "description": "Used to assign a rank to the set of Diameter Peers represented by the collection of static-peer instances referred by the peer values. The lower the rank value the higher the configured rank of the referred Peer Diameters. The default value is 0 (highest rank). Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated.",
                                                  "default": 0
                                                },
                                                "peer": {
                                                  "type": "array",
                                                  "minItems": 1,
                                                  "description": "Used to refer to a set of Diameter Peers, represented by related static-peer instances, ought to be assigned with same rank. Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "user-label": {
                                                  "type": "string",
                                                  "description": "Label for free use."
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "peer"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "peer-reference"
                                        ]
                                      }
                                    },
                                    "dynamic-peer-group": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "A dynamic-peer-group instance is used to specify a group of Diameter Peers by referring to their pattern based representation expressed through related dynamic-peer-acceptor instances. Any change in the number of Diameter Peers assigned dynamically (pattern based) to the dynamic-peer-group instance will be applied immediately impacting in this way the related routing entries evaluated by the routing logic of diameter.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Used to specify the key of the dynamic-peer-group instance."
                                          },
                                          "rank": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 4294967295,
                                            "description": "Used to assign a rank to the set of Diameter Peers matching with related identity patterns expressed through dynamic-peer-acceptor instances referred by the peer values. The lower the rank value the higher the configured rank of the referred Diameter Peers. The default value is 0 (highest rank). Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated.",
                                            "default": 0
                                          },
                                          "peer": {
                                            "type": "array",
                                            "minItems": 1,
                                            "description": "Used to refer to a set of dynamic-peer-acceptor instance accepted Diameter Peer ought to be assigned with same rank. Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated.",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use."
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "peer"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "routing-table": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "Service diameter bases its message routing mechanism on the sequential evaluation of a collection of routing rules organized in a table called routing table. Each AAA Service using diameter must have a routing table associated. A routing table can be dedicated to a single AAA Service or shared between multiple AAA Services. There can be only a single routing table associated with a certain AAA Service. When a routing decision is to be made, the corresponding Diameter ingress or egress request message is checked against such a routing table by evaluating the routing rules (also called routing entries) in it one by one. The evaluation begins with the first routing rule in the relevant routing table then continues with the next ones up until either a routing rule fires or all the routing rules in the routing table are exhausted. A routing table is represented by a routing-table instance. Any change in the content of a routing table will be applied immediately impacting in this way the related routing rules/entries evaluated by the message routing mechanism of diameter. diameter will run a message routing mechanism whenever an ingress or egress request message is received by it: Egress Request Message Routing Whenever an egress request message is created by a AAA Service and passed down the diameter stack for delivery towards wanted destination a message routing mechanism is executed, on diameter stack level, to determine the Peer connection the egress request message is to be sent through in order to have the message starting its route towards its final destination. The message routing mechanism can either take direct instruction via the runtime API from a AAA Service on the Diameter Peer(s) to be used to send an egress request message towards, or it can determine it itself by using the information stored in a previously loaded routing table. That is, a routing table assigned to a AAA Service is evaluated during egress request message sending only if there is no peer list provided by related AAA Service during message sending request invocation method invoked to request sending an egress request message holds a peers=NULL list). Ingress Request Message Routing Whenever an ingress request message is received by the diameter stack through one of its Peer connections the AAA Service the message shall be passed towards is evaluated as well by using related routing entries expressed in the routing table. The Diameter answer messages always follow the routing path built for the related request message. This is the reason why answer messages are never matched against the routing rules defined in the routing table. The expression of a routing table for a AAA Service is mandatory. A routing table associated with a AAA Service is constructed by using one or several routing entries.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Used to specify the key of the routing-table instance."
                                    },
                                    "service": {
                                      "type": "array",
                                      "minItems": 1,
                                      "description": "Used to refer to a set of AAA Services, represented by related service instances, the routing table should be associated with. A routing table can be assigned to many AAA Services. However, a AAA Service must be assigned with a single routing table only. Update Effect: No effect on already established Peer connections but on routing evaluation. Introduced change will be applied next time a routing entry is evaluated.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    },
                                    "routing-entry": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "A routing-entry instance is used to specify a routing rule/entry. Each routing rule is constructed with the help of an expression and an action (see also related expression and action of the routing-entry instance). A routing rule can be enabled (default) or disabled by need. Only the enabled routing rules present in a routing table are considered during request message routing evaluation (disabled ones are just simply skipped). Any change in the content of a routing rule will be applied immediately impacting in this way the next routing rules/entries evaluated by the message routing mechanism of diameter.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 4294967295,
                                            "description": "Used to specify the key of the routing-entry instance. It shall be set to the number of the related routing rule/entry. This is how user can control the order of evaluation of a routing rule/entry in the related routing table. It is recommended to increment this value in steps of 100 or 1000. In this way it is easy to inject further routing entries in an existing routing table between 2 existing routing entries."
                                          },
                                          "enabled": {
                                            "type": "boolean",
                                            "description": "Used to enable or disable a routing rule/entry. When routing rule is disabled the routing rule is inactive, therefore, skipped by the diameter routing mechanism. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated.",
                                            "default": true
                                          },
                                          "expression": {
                                            "type": "string",
                                            "description": "Used to specify the expression part of a routing rule. The expression is that part of the routing rule the request message is matched against and evaluates to either TRUE or FALSE. If it evaluates to TRUE the action of the routing rule is executed. If it evaluates to FALSE the action of the routing rule is skipped and the routing mechanism continues with matching the request message against the expression of the next routing rule in the routing table. See more about routing language elements in Routing Rule Specification Language. Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated."
                                          },
                                          "action": {
                                            "type": "string",
                                            "description": "Used to specify the action part of a routing rule. The action is that part of the routing rule which is executed if the expression part of the routing rule evaluates to TRUE (that is, when the expression fires). See more about routing language elements in Routing Rule Specification Language. Update Effect: No effect on already established Peer connections but on routing information. Introduced change will be applied next time a routing entry is evaluated."
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use."
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "expression",
                                          "id"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "routing-entry",
                                    "service"
                                  ]
                                }
                              },
                              "policies": {
                                "type": "object",
                                "description": "Container holding various policy objects.",
                                "properties": {
                                  "reroute-policy": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "Specifies the answer message error codes for automatic message re-routing. The reroute-policy instance can be used to specify the answer message error codes triggering automatic egress request message rerouting using configured routing rules. The context of this policy can be scoped on AAA Service level.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Key of the routing policy."
                                        },
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Can be used to enable or disable the actual reroute policy. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: When enabled, the Diameter Service will apply the reroute-policy configuration. When disabled, the Diameter Service will apply the default behavior for egress request message rerouting.",
                                          "default": true
                                        },
                                        "reroute-error-id": {
                                          "type": "array",
                                          "minItems": 1,
                                          "description": "Used to specify the Diameter Result Codes which should trigger an egress request message re-routing to alternate peer based on the configured routing table. Error codes are received in the Result-Code data field of a Result-Code AVP. The following error categories exists: 1xxx (Informational) 3xxx (Protocol Errors) 4xxx (Transient Failures) 5xxx (Permanent Failure) Update Effect: When set, the Diameter Service will start to behave according to the configured reroute-policy. It will automatically reroute messages upon reception of error answers holding the configured error codes.",
                                          "items": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1000,
                                            "maximum": 5999
                                          }
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "reroute-error-id"
                                      ]
                                    }
                                  },
                                  "disconnect-cause-handling-policy": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "Defines the content of the Disconnect-Cause AVP sent in the DPR.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Key of the disconnect cause handling policy."
                                        },
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Can be used to enable or disable the actual DisconnectCause handling policy. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: When enabled, the Diameter Service will apply the disconnect-cause-handling-policy. When disabled, the Diameter Service will apply the default behavior for DPR message content construction.",
                                          "default": true
                                        },
                                        "disconnect-cause": {
                                          "enum": [
                                            "rebooting",
                                            "busy",
                                            "do_not_want_to_talk_to_you"
                                          ],
                                          "description": "Defines the content of the Disconnect-Cause AVP to be sent in DPRs. It is used in the Disconnect-Peer-Request message to inform the Diameter Peer about the reason of the disconnection. Update Effect: When set, the Diameter Service will apply the new configuration over scoped Local Endpoints. That is, upon Diameter Peer connection disconnection the configured error code will be applied.",
                                          "default": "rebooting"
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  },
                                  "congestion-handling-policy": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "The congestion-handling-policy can be used to define the conditions (thresholds) which will trigger a traffic congestion handling towards relevant Diameter Peers. As result of congestion handling, congested Diameter Peer connection will be excluded temporarily from the list of potential routes and alternate routes (determined based on loaded routing table) will be used to send egress request messages towards relevant target Diameter Nodes. The context of this policy can be scoped on Peer level",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Key of the congestion handling policy."
                                        },
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Used to enable or disable a congestion-handling-policy. When disabled, the following alarm is raised: ADP Diameter Managed Object Disabled Update Effect: When enabled, the Diameter Service will apply the congestion-handling-policy configuration for scoped Diameter Peers. When disabled, the Diameter Service will apply the default behavior for Diameter Peer connection congestion handling.",
                                          "default": true
                                        },
                                        "congestion-threshold-raise-level": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Used to specify the arm threshold the congestion handling policy is to be applied over the congested diameter peer connections of scoped Diameter Peers. The congested peer connection will be temporarily removed from the possible routes determined based on loaded routing table. The value, in percentage representation, represents the utilization level of the internal queue of the Local Endpoint used to send egress messages towards the scoped Diameter Peer. Update Effect: When set, the Diameter Service will apply the new threshold value.",
                                          "default": 85
                                        },
                                        "congestion-threshold-cease-level": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 100,
                                          "description": "Used to specify the disarm threshold the congestion handling policy is to be ceased over the Diameter Peer connections, of scoped Diameter Peers, getting out of congestion. The Peer connection will be considered again as possible route to be used based on loaded routing table. The value, in percentage representation, represents the utilization level of the internal queue of the Local Endpoint used to send egress messages towards the scoped Diameter Peer. Update Effect: When set, the Diameter Service will apply the new threshold value.",
                                          "default": 75
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    }
                                  }
                                }
                              },
                              "load-control": {
                                "type": "object",
                                "description": "Container holding overload protection and load regulation parameters effective on stack level.",
                                "properties": {
                                  "ingress-connection-backlog-limit": {
                                    "type": "integer",
                                    "format": "uint32",
                                    "minimum": 0,
                                    "maximum": 4294967295,
                                    "description": "Used to limit the number of parallel incoming transport connections per computing resource (Diameter POD) being setup to the stack at the same time. Parallel TCP and SCTP connections are counted until capability exchange is finished, that is when CEA is sent. This is an overload protection function to improve robustness against extreme load peaks. It ensures that Diameter remains in service even at significant increase of incoming transport connections. Rejected attempts are measured by related Diameter_ConnTermDrop_OverloadProtection counter. By default(value 0), backlog of incoming connections is not limited. Calculated value shall be the result of careful user application dimensioning including load tests on different Diameter cluster sizes with various number of client Peer connections built at the same time. Update Effect: Diameter Service applies the configured backlog limit.",
                                    "default": 0
                                  },
                                  "user-label": {
                                    "type": "string",
                                    "description": "Label for free use."
                                  },
                                  "load-regulation": {
                                    "type": "object",
                                    "description": "Container holding stack level load regulation related functions. Load regulation function secures high diameter traffic throughput at sustained high load via rejecting excessive ingress requests with with DIAMETER_TOO_BUSY result code. The aim of the load regulation mechanism is to regulate the incoming traffic level in a way that it maximizes the amount of successfully handled traffic on a compute resource at sustained overload, that is, to keep the load on regulation-limit level or below. Load regulation algorithm of Diameter can be applied over several measurement types monitored on stack level, see measurement-name of regulator. Measurement value samples are fetched at every granularity-period for each measurement. The number of granularity-period samplings used to calculate trends can be configured both for short and long term trend prediction. If the utilization level of any of the monitored measurement types goes above the configured hysteresis-on-limit resource utilization level, the load regulation mechanism is turned on, if it goes below the configured hysteresis-off-limit resource utilization level, the load regulation mechanism is turned off. The hysteresis-on-limit and hysteresis-off-limit utilization limits are set relative but lower or equal to the regulation-limit parameter that configures the engineered capacity of the resources for a certain system type configuration. Load regulation is not able to tolerate the negative feedback caused by the retry mechanism of the Peer node, hence make sure that retry function is turned off in the Peer. (In Diameter GS configuration see /diameter/service/request-send-max-retry). To lessen the load caused by Peer retries, incoming resent requests (with T-flag set) are dropped when regulation is taking place (when requests are rejected by load regulation). To save resources, the higher the rejection rate the less incoming requests are answered with DIAMETER_TOO_BUSY, the rest of the incoming requests are simply dropped.",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean",
                                        "description": "Used to enable or disable load regulation in Diameter. Update Effect: When enabled, the Diameter Service regulates ingress traffic by the configured regulators. In this case, configured `requests` must be equal to configured `limit` value in Diameter helm resources configuration. When disabled (by default), no load regulation is applied.",
                                        "default": false
                                      },
                                      "granularity-period": {
                                        "type": "integer",
                                        "format": "uint32",
                                        "minimum": 1000,
                                        "maximum": 300000,
                                        "description": "Granularity period of load regulation. It defines how often the measurement values are updated for load regulation calculation. Update Effect: Diameter Service applies load regulation with the defined granularity.",
                                        "default": 1000
                                      },
                                      "reject-rate-aging-step": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 100,
                                        "description": "Used to set the size of the step in percentage used during aging. Aging of reject rate is applied when no measurement value has been received during the granularity period. In this case, the new reject rate value is calculated via decreasing the last value with reject-rate-aging-step percentage. Reject rate defines the percentage of the traffic that is to be rejected when load regulation is applied. Aging prevents freeze of load regulation when no measurement values are received. Update Effect: Diameter Service applies load regulation with the defined aging step.",
                                        "default": 10
                                      },
                                      "history-size": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 10,
                                        "maximum": 500,
                                        "description": "Used to set size of the stored history. Update Effect: Load regulation history is maintained and dumped with defined size.",
                                        "default": 256
                                      },
                                      "user-label": {
                                        "type": "string",
                                        "description": "Label for free use."
                                      },
                                      "regulator": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "description": "Specifies a regulator function of Diameter load regulation.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "Key of the regulator."
                                            },
                                            "enabled": {
                                              "type": "boolean",
                                              "description": "Can be used to enable or disable the regulator. Update Effect: When enabled, Diameter Service will apply regulation defined hereby.",
                                              "default": true
                                            },
                                            "measurement-name": {
                                              "enum": [
                                                "cpuload",
                                                "memory-utilization"
                                              ],
                                              "description": "Defines the measurement type used by the regulator. Update Effect: Diameter Service applies load regulation using the defined measurement.",
                                              "default": "cpuload"
                                            },
                                            "maximum-value": {
                                              "type": "integer",
                                              "format": "uint32",
                                              "minimum": 0,
                                              "maximum": 4294967295,
                                              "description": "Used to specify the upper limit for the releated measurement type to give a base for the related percentage based parameters defined for the regulator. Percentage based measurement types should keep default 100. Shall be used for measurement types that are not percentage based, like for example latency. Update Effect: When set, the Diameter Service starts regulation according to the specified value.",
                                              "default": 100
                                            },
                                            "regulation-limit": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 100,
                                              "description": "Used to specify the limit of the regulation in percentage relative to the maximum-value of the configured measurement. If resource usage rises above the specified load regulation limit, reject rate of ingress requests is significantly increased. Load regulation aims to keep the resource consumption around/under the configured regulation limit. The stack increases the reject rate (RR) until the configured regulation limit (LIM) is reached/crossed by the measured value (MVAL/VAL). Until the reject rate is not zero the stack answers messages with DIAMETER_TOO_BUSY (or just drops them) to decrease the resource consumption. Ingress requests rejected by load regulation are measured by Diameter_IngressReqMsgDiscarded_DiaServerLoadReg meas type. Diameter user applications can configure PM threshold based alarm on it. Update Effect: When set, the Diameter Service starts regulation according to the specified value.",
                                              "default": 80
                                            },
                                            "hysteresis-on-limit": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 100,
                                              "description": "Used to set the utilization level the load regulation mechanism is to be switched on. It is to be expressed as a percentage value relative to the configured maximum-value and lower or equal to regulation-limit. Update Effect: When set, the Diameter Service starts regulation according to the specified value.",
                                              "default": 60
                                            },
                                            "hysteresis-off-limit": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 100,
                                              "description": "Used to set the utilization level the load regulation mechanism is to be switched off. It is to be expressed as a percentage value relative to the configured maximum-value and lower or equal to regulation-limit and hysteresis-on-limit. Update Effect: When set, the Diameter Service starts regulation according to the specified value.",
                                              "default": 50
                                            },
                                            "short-term-samples": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 1,
                                              "maximum": 300,
                                              "description": "Used to set the short-term monitoring interval (number of measurement samples) for resource utilization trend prediction. It expresses how many load-regulation granularity-period to consider for short term sampling. Update Effect: When set, the Diameter Service starts regulation according to the specified value.",
                                              "default": 1
                                            },
                                            "long-term-samples": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 1,
                                              "maximum": 300,
                                              "description": "Used to set the long-term monitoring interval (number of measurement samples) for resource utilization trend prediction. It expresses how many load-regulation granularity-period to consider for long term sampling. Update Effect: When set, the Diameter Service starts regulation according to the specified value.",
                                              "default": 5
                                            },
                                            "user-label": {
                                              "type": "string",
                                              "description": "Label for free use."
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "fm": {
                            "type": "object",
                            "description": "Fault Management root",
                            "properties": {
                              "alarm-model": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A list to contain a set of related FM alarm types.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "Identity of the alarm-model."
                                    },
                                    "alarm-type": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "A specific kind of alarm that can be reported, for example power failure. In an X.733 context it maps to event type, probable cause, and specific problem. The same principle is used for alert types as for alarm types.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Identity of the alarm-type."
                                          },
                                          "configured-severity": {
                                            "enum": [
                                              "critical",
                                              "major",
                                              "minor",
                                              "warning"
                                            ],
                                            "description": "Gives the possibility to configure the perceived severity for all alarms of this type. If set, this value overrides the perceived severity provided by the alarming object. Setting this leaf has no impact on existing alarms, only new and updated ones."
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              }
                            }
                          },
                          "pm": {
                            "type": "object",
                            "description": "Performance Management model",
                            "properties": {
                              "measurement-capabilities": {
                                "type": "object",
                                "description": "Exposes the PM capabilities.",
                                "properties": {
                                  "job-start-stop-support": {
                                    "enum": [
                                      "none",
                                      "basic"
                                    ],
                                    "description": "Specifies whether or not Performance Management jobs can be started and stopped."
                                  },
                                  "measurement-jobs": {
                                    "type": "object",
                                    "properties": {
                                      "job-prioritization-support": {
                                        "type": "boolean",
                                        "description": "Defines whether or not measurement jobs can be stopped by the system. Based on the priority of the Measurement jobs, they can either be stopped (true) or not (false) by the system."
                                      },
                                      "file-rp-supported": {
                                        "type": "boolean",
                                        "description": "Specifies if a file Reporting Period different to Granularity Period, where RP > GP, is supported."
                                      },
                                      "supported-reporting-periods": {
                                        "type": "array",
                                        "minItems": 1,
                                        "maxItems": 9,
                                        "description": "Indicates the Reporting Period or ROPs supported by the ME.",
                                        "items": {
                                          "enum": [
                                            "one-min",
                                            "five-min",
                                            "fifteen-min",
                                            "thirty-min",
                                            "one-hour",
                                            "twelve-hour",
                                            "one-day",
                                            "ten-seconds",
                                            "thirty-seconds"
                                          ]
                                        }
                                      },
                                      "supported-meas-job-gps": {
                                        "type": "array",
                                        "minItems": 1,
                                        "maxItems": 9,
                                        "description": "Indicates which granularity periods are supported for Measurement jobs.",
                                        "items": {
                                          "enum": [
                                            "one-min",
                                            "five-min",
                                            "fifteen-min",
                                            "thirty-min",
                                            "one-hour",
                                            "twelve-hour",
                                            "one-day",
                                            "ten-seconds",
                                            "thirty-seconds"
                                          ]
                                        }
                                      },
                                      "supported-compression-types": {
                                        "type": "array",
                                        "maxItems": 2,
                                        "description": "Indicates which compression types are supported for report files. No value means that compression of report files is not supported.",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "job-grouping-support": {
                                        "type": "boolean",
                                        "description": "Indicates if grouping of selected measurement job results in a report file is supported. If set to true, the selected measurement job results are grouped into one file per reporting period based on the job leaf group. If set to false, the default behaviour is to generate a single PM report file per reporting period for all jobs."
                                      }
                                    },
                                    "required": [
                                      "file-rp-supported",
                                      "job-grouping-support",
                                      "job-prioritization-support",
                                      "supported-meas-job-gps",
                                      "supported-reporting-periods"
                                    ]
                                  },
                                  "realtime-jobs": {
                                    "type": "object",
                                    "properties": {
                                      "supported-rt-job-gps": {
                                        "type": "array",
                                        "minItems": 1,
                                        "maxItems": 9,
                                        "description": "Indicates which granularity periods are supported for realtime jobs.",
                                        "items": {
                                          "enum": [
                                            "one-min",
                                            "five-min",
                                            "fifteen-min",
                                            "thirty-min",
                                            "one-hour",
                                            "twelve-hour",
                                            "one-day",
                                            "ten-seconds",
                                            "thirty-seconds"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "supported-rt-job-gps"
                                    ]
                                  },
                                  "threshold-jobs": {
                                    "type": "object",
                                    "properties": {
                                      "supported-thresh-job-gps": {
                                        "type": "array",
                                        "minItems": 1,
                                        "maxItems": 9,
                                        "description": "Indicates which granularity periods are supported for Threshold jobs.",
                                        "items": {
                                          "enum": [
                                            "one-min",
                                            "five-min",
                                            "fifteen-min",
                                            "thirty-min",
                                            "one-hour",
                                            "twelve-hour",
                                            "one-day",
                                            "ten-seconds",
                                            "thirty-seconds"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "supported-thresh-job-gps"
                                    ]
                                  }
                                },
                                "required": [
                                  "job-start-stop-support",
                                  "measurement-jobs",
                                  "threshold-jobs"
                                ]
                              },
                              "group": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "Represents a group of Measurement Types.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the PM Group."
                                    },
                                    "measurement-type": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "Defines a Measurement Type on the Managed Element to be monitored and collected. The measurement-type id is unique within the group.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Identity of the measurement-type instance."
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "measurement-type",
                                    "name"
                                  ]
                                }
                              },
                              "job": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "Describes a user-defined PM job on the Managed Element. A PM Job defines the configuration required per job and also defines the measurements to be included in the job. An instance of the measurement-reader list is created for every group or measurement-type instance being measured.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Holds the name used when identifying the job."
                                    },
                                    "requested-job-state": {
                                      "enum": [
                                        "active",
                                        "stopped"
                                      ],
                                      "description": "Contains the requested state of the PM job. It represents the state that the job has been ordered to reach.",
                                      "default": "active"
                                    },
                                    "reporting-period": {
                                      "enum": [
                                        "one-min",
                                        "five-min",
                                        "fifteen-min",
                                        "thirty-min",
                                        "one-hour",
                                        "twelve-hour",
                                        "one-day",
                                        "ten-seconds",
                                        "thirty-seconds"
                                      ],
                                      "description": "Contains the reporting period of the result file. This is directly related to the granularity period as the granularity period can not be longer than the reporting period. Reporting period must be one of the supported values for that job type as listed in /pm/measurement-capabilities/measurement-jobs/supported-reporting-periods",
                                      "default": "fifteen-min"
                                    },
                                    "type": {
                                      "enum": [
                                        "none",
                                        "measurement-job",
                                        "threshold-job",
                                        "realtime-job"
                                      ],
                                      "description": "Type of PM job."
                                    },
                                    "priority": {
                                      "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                      ],
                                      "description": "Contains the priority of the job.",
                                      "default": "medium"
                                    },
                                    "measurement-job-checks": {
                                      "type": "object",
                                      "description": "The container implements checks for the measurement-jobs and SHALL NOT be used for configuration.",
                                      "properties": {}
                                    },
                                    "threshold-job-checks": {
                                      "type": "object",
                                      "description": "The container implements checks for the threshold-jobs and SHALL NOT be used for configuration.",
                                      "properties": {}
                                    },
                                    "realtime-job-checks": {
                                      "type": "object",
                                      "description": "The container implements checks for the realtime-jobs and SHALL NOT be used for configuration.",
                                      "properties": {}
                                    },
                                    "granularity-period": {
                                      "enum": [
                                        "one-min",
                                        "five-min",
                                        "fifteen-min",
                                        "thirty-min",
                                        "one-hour",
                                        "twelve-hour",
                                        "one-day",
                                        "ten-seconds",
                                        "thirty-seconds"
                                      ],
                                      "description": "Contains the granularity period of the job. The granularity period is the time between the initiation of two successive gatherings of measurement data. This is directly related to the reporting-period as the granularity period can not be longer than the reporting period. Granularity period must be one of the supported values for that job type as listed in /pm/measurement-capabilities/XXX/supported-XXX-job-gps where XXX defines the type of the job",
                                      "default": "fifteen-min"
                                    },
                                    "compression-type": {
                                      "type": "string",
                                      "description": "Indicates file compression type to be applied to the report file. If no value is set, then no compression is to be applied to the report file for this job. Must have the same value for all PM jobs with the same group tag and reporting-period assigned. Must have the same value for all PM jobs for which no group tag is assigned (the default group), but the same reporting-period assigned."
                                    },
                                    "group": {
                                      "type": "string",
                                      "description": "Tag for grouping PM measurement job results. Represents a grouping of separate PM Jobs for which the measurement results must be collected together in a single report file for that group only. If this leaf is not set, then for each reporting period, the measurement results for this job are written to the same report file as other jobs that have no job group assigned."
                                    },
                                    "measurement-reader": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "Represents the capability to read the value of the Measurement Type or group of Measurement Types. There can be many measurement-reader instances for each job (one for each measurement-type or group). For a Threshold Job or Real-time Job, only a measurement-type instance can be referenced by the Measurement Reader.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Identity of the measurement-reader instance."
                                          },
                                          "group-ref": {
                                            "type": "string",
                                            "description": "Reference to a group"
                                          },
                                          "measurement-type-ref": {
                                            "type": "string",
                                            "description": "Reference to a specific-type. If measurement-type-ref is not specified, then all measurement-types in the referenced group are included. Threshold and Real-time jobs MUST specify a single measurement-type"
                                          },
                                          "threshold-direction": {
                                            "enum": [
                                              "increasing",
                                              "decreasing"
                                            ],
                                            "description": "Specifies the threshold direction. Used when the threshold-direction in the measurement-type instance is not set. If neither is set, the default value is used.",
                                            "default": "increasing"
                                          },
                                          "threshold-monitoring": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "maxItems": 4,
                                            "description": "Contains configuration of each threshold for Threshold jobs. To be able to monitor the overall health of the network, thresholds are used for generating Performance Alarms. Performance alarms cannot be cleared manually. Performance alarms must be cleared when the threshold is (a) crossed, or (b) reached, in the opposite direction to the one that triggers the alarm.",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Holds the name used when identifying the threshold monitor."
                                                },
                                                "threshold-high": {
                                                  "type": "string",
                                                  "format": "int64",
                                                  "description": "Defines the high-threshold level for this alarm severity. For each pair of high-threshold and low-threshold levels, one of them must generate an alarm notification, or increase the severity of an existing alarm. The other one must generate an alarm clear notification, or decrease the severity of an existing alarm. If the direction of the threshold monitor is increasing, a new alarm (or severity increase of an existing alarm) is not generated before the measurement value has (a) crossed or (b) reached the high-level threshold value. Furthermore, an existing alarm is not cleared (or its severity decreased) before the measurement value has reached or crossed the low-level threshold value. If the direction of the threshold monitor is defined as decreasing, this means that the counter behaviour approaches an alarm situation as its value decreases. For this scenario, the threshold-low leaf holds the alarming level, and if hysteresis is applied, the threshold-high leaf holds the value at which the alarm will clear (or decrease in severity) as the value of the counter increases to this level. The value of threshold-low shall never be higher than the value of threshold-high. It is not mandatory to apply hysteresis to the threshold monitor. If hysteresis is not required, the same threshold value shall be assigned to both threshold-high and threshold-low. The hysteresis mechanism can be used for both Gauges and Cumulative Counters thresholds."
                                                },
                                                "threshold-low": {
                                                  "type": "string",
                                                  "format": "int64",
                                                  "description": "Defines the low-threshold level for this alarm severity. For each pair of high-threshold and low-threshold levels, one of them must generate an alarm notification, or increase the severity of an existing alarm. The other one must generate an alarm clear notification, or decrease the severity of an existing alarm. If the direction of the threshold monitor is increasing, a new alarm (or severity increase of an existing alarm) is not generated before the measurement value has (a) crossed or (b) reached the high-level threshold value. Furthermore, an existing alarm is not cleared (or its severity decreased) before the measurement value has reached or crossed the low-level threshold value. If the direction of the threshold monitor is defined as decreasing, this means that the counter behaviour approaches an alarm situation as its value decreases. For this scenario, the threshold-low leaf holds the alarming level, and if hysteresis is applied, the threshold-high leaf holds the value at which the alarm will clear (or decrease in severity) as the value of the counter increases to this level. The value of threshold-low shall never be higher than the value of threshold-high. It is not mandatory to apply hysteresis to the threshold monitor. If hysteresis is not required, the same threshold value shall be assigned to both threshold-high and threshold-low. The hysteresis mechanism can be used for both Gauges and Cumulative Counters thresholds."
                                                },
                                                "threshold-severity": {
                                                  "enum": [
                                                    "critical",
                                                    "major",
                                                    "minor",
                                                    "warning"
                                                  ],
                                                  "description": "Threshold severity. One of the following Severity Levels must be assigned per threshold, in order to raise a threshold alarm of this severity, or change an existing alarm to this severity, if that threshold is reached or crossed: 'critical', 'major', 'minor' or 'warning'. Severity level 'cleared' is not a valid severity level and cannot be assigned to this leaf.",
                                                  "default": "minor"
                                                }
                                              }
                                            }
                                          },
                                          "target": {
                                            "type": "array",
                                            "maxItems": 1,
                                            "description": "Selects resource instance(s) as the target of the measurement. If not set, the job is applied to all resource instances relevant to the selected group or measurement-type. If set, target is extracted based on configured pattern",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "group-ref",
                                          "name"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ]
                                }
                              }
                            }
                          },
                          "scp-function": {
                            "type": "object",
                            "description": "Configuration settings for the Service Communication Proxy NF",
                            "properties": {
                              "nf-instance": {
                                "type": "array",
                                "uniqueItems": true,
                                "maxItems": 1,
                                "description": "The SCP instance defines the behavior of the SCP NF as well as the NRF registration behavior",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "pattern": "^[^.]+$",
                                      "description": "Name identifying the SCP instance"
                                    },
                                    "nf-peer-info": {
                                      "type": "object",
                                      "description": "Defines the required data for 3gpp-Sbi-NF-Peer-Info header in a global level",
                                      "properties": {
                                        "out-message-handling": {
                                          "enum": [
                                            "on",
                                            "off"
                                          ],
                                          "description": "A switch to define the header handling in a global level",
                                          "default": "off"
                                        }
                                      }
                                    },
                                    "nf-instance-id": {
                                      "type": "string",
                                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                      "description": "A Universally Unique IDentifier in the string representation defined in RFC 4122. The canonical representation uses lower case characters. The following is an example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 Setting this property is optional. It has a meaning for how the SCP registers in its NRF(s): If not set, an automatically generated NF instance ID (a different one for each NRF group) is used for the registration. If set, this is used for the registration rather than the automatically generated NF instance IDs of the NRF groups."
                                    },
                                    "dns-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Settings for DNS resolution of producers.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the dns-profile"
                                          },
                                          "ip-family-resolution": {
                                            "type": "array",
                                            "minItems": 1,
                                            "maxItems": 2,
                                            "description": "IP family for the DNS resolution of an FQDN",
                                            "items": {
                                              "enum": [
                                                "ipv4",
                                                "ipv6"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "ip-family-resolution",
                                          "name"
                                        ]
                                      }
                                    },
                                    "dns-profile-ref": {
                                      "type": "string",
                                      "description": "Reference to a defined dns-profile that will be used for DNS resolution on producers of all nf-pools."
                                    },
                                    "ingress-connection-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "Connection profile for ingress traffic cases",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the ingress-connection-profile"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "max-connection-duration": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "The maximum duration of an incoming TCP connection. The duration is defined as a period since a connection was established. Default value zero means that no time limit is imposed",
                                            "default": 0
                                          },
                                          "hpack-table-size": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "Maximum table size (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values range from 0 to 2147483647 (2^31 - 1). 0 effectively disables header compression."
                                          },
                                          "max-concurrent-streams": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 2147483647,
                                            "description": "Maximum concurrent streams allowed for peer on one HTTP/2 connection. If the limit is reached, it is treated as stream error",
                                            "default": 2147483647
                                          },
                                          "connection-idle-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The period in which there are no active HTTP requests. When the idle timeout is reached the connection will be closed. To disable idle timeouts explicitly set this to 0.",
                                            "default": 3600
                                          },
                                          "tcp-keepalive": {
                                            "type": "object",
                                            "description": "TCP-keepalive settings",
                                            "properties": {
                                              "probes": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead",
                                                "default": 6
                                              },
                                              "time": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds a connection needs to be idle before keep-alive probes start being sent",
                                                "default": 5
                                              },
                                              "interval": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds between keep-alive probes",
                                                "default": 5
                                              }
                                            }
                                          },
                                          "dscp-marking": {
                                            "type": "integer",
                                            "format": "uint8",
                                            "minimum": 0,
                                            "maximum": 63,
                                            "description": "DSCP value used for IP packets sent over this connection"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "ingress-connection-profile-ref": {
                                      "type": "string",
                                      "description": "Reference to a defined ingress-connection-profile"
                                    },
                                    "egress-connection-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Connection profile for egress traffic cases",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the egress-connection-profile"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "hpack-table-size": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "Maximum table size (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values range from 0 to 2147483647 (2^31 - 1). 0 effectively disables header compression."
                                          },
                                          "max-requests": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 16384,
                                            "description": "The maximum number of requests that can be outstanding per worker pod to all members of a pool",
                                            "default": 16384
                                          },
                                          "max-pending-requests": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 16384,
                                            "description": "The maximum number of requests per worker pod that can be waiting for establishment of a connection",
                                            "default": 16384
                                          },
                                          "max-connections": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 16384,
                                            "description": "The maximum number of connections per worker pod that can be established to all members of a pool",
                                            "default": 16384
                                          },
                                          "max-connection-duration": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "The maximum duration of an outgoing TCP connection. The duration is defined as a period since a connection was established. Default value zero means that no time limit is imposed",
                                            "default": 0
                                          },
                                          "max-concurrent-streams": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 2147483647,
                                            "description": "Maximum concurrent streams allowed for peer on one HTTP/2 connection. If the limit is reached, SCP may queue requests or establish additional connections (as allowed per circuit breaker limits).",
                                            "default": 2147483647
                                          },
                                          "tcp-connect-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 86400,
                                            "description": "Timeout for setting up a new connection",
                                            "default": 2
                                          },
                                          "connection-idle-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The period in which there are no active HTTP requests. When the idle timeout is reached the connection will be closed. To disable idle timeouts explicitly set this to 0.",
                                            "default": 3600
                                          },
                                          "tcp-keepalive": {
                                            "type": "object",
                                            "description": "TCP-keepalive settings",
                                            "properties": {
                                              "probes": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead",
                                                "default": 6
                                              },
                                              "time": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds a connection needs to be idle before keep-alive probes start being sent",
                                                "default": 5
                                              },
                                              "interval": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds between keep-alive probes",
                                                "default": 5
                                              }
                                            }
                                          },
                                          "enable-message-size-measurement": {
                                            "type": "boolean",
                                            "description": "A switch that allows the operator to enable or disable upstream traffic counters for message size",
                                            "default": false
                                          },
                                          "dscp-marking": {
                                            "type": "integer",
                                            "format": "uint8",
                                            "minimum": 0,
                                            "maximum": 63,
                                            "description": "DSCP value used for IP packets sent over this connection"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "egress-connection-profile-ref": {
                                      "type": "string",
                                      "description": "Reference to a defined egress-connection-profile"
                                    },
                                    "local-rate-limit-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Contains the necessary parameters for local rate limiting to be applied. Referenced from own-network",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the local-rate-limit-profile"
                                          },
                                          "token-bucket": {
                                            "type": "object",
                                            "description": "Token bucket configuration based on which local rate limiting will be applied",
                                            "properties": {
                                              "max-tokens": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The maximum tokens that the bucket can hold, as well as the number of tokens the bucket initially contains"
                                              },
                                              "tokens-per-fill": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of tokens added to the bucket at the beginning of each fill-interval"
                                              },
                                              "fill-interval": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 51,
                                                "maximum": 2147483647,
                                                "description": "The fill interval at which tokens are added to the bucket, defined in milliseconds"
                                              }
                                            },
                                            "required": [
                                              "fill-interval",
                                              "max-tokens",
                                              "tokens-per-fill"
                                            ]
                                          },
                                          "add-response-header": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Headers to be added on the response to a request that is rejected due to rate limiting",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of the header"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Value of the header. In case the header is already present, the value is appended."
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "value"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "token-bucket"
                                        ]
                                      }
                                    },
                                    "global-rate-limit-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Define the necessary parameters for global rate limiting to be applied.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the rate limit profile."
                                          },
                                          "sustainable-rate": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The number of incoming requests that can be sustainably received from a peer within an one second interval"
                                          },
                                          "max-burst-size": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The maximum number of the incoming requests, beyond the sustainable rate, that can be received from a peer in a burst"
                                          },
                                          "action-reject-message": {
                                            "type": "object",
                                            "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                            "properties": {
                                              "status": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 100,
                                                "maximum": 999,
                                                "description": "Status-code of the reply",
                                                "default": 429
                                              },
                                              "title": {
                                                "type": "string",
                                                "description": "A short, human-readable summary of the problem",
                                                "default": "Too Many Requests"
                                              },
                                              "cause": {
                                                "type": "string",
                                                "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500).",
                                                "default": "NF_CONGESTION_RISK"
                                              },
                                              "detail": {
                                                "type": "string",
                                                "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'",
                                                "default": "request_rate_limit"
                                              },
                                              "format": {
                                                "enum": [
                                                  "text",
                                                  "json"
                                                ],
                                                "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                "default": "json"
                                              },
                                              "retry-after-header": {
                                                "enum": [
                                                  "delay-seconds",
                                                  "HTTP-date",
                                                  "disabled"
                                                ],
                                                "description": "Format of the retry-after header. If the default value 'delay-seconds' is used, the retry-after-header is formatted according to RFC 7231. If the retry-after-header value used is 'HTTP-date', the corresponding format according to RFC 7231 is used. If the value used is 'disabled' then the retry-after-header is disabled",
                                                "default": "delay-seconds"
                                              }
                                            }
                                          },
                                          "action-drop-message": {
                                            "type": "object",
                                            "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                            "properties": {}
                                          }
                                        },
                                        "required": [
                                          "max-burst-size",
                                          "name",
                                          "sustainable-rate"
                                        ]
                                      }
                                    },
                                    "message-body-limits": {
                                      "type": "object",
                                      "description": "Defines the limits for the message body",
                                      "properties": {
                                        "max-bytes": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 16000000,
                                          "description": "Maximum message body size in bytes"
                                        },
                                        "max-leaves": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 16000,
                                          "description": "Maximum number of leaves in the JSON message body"
                                        },
                                        "max-nesting-depth": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 32,
                                          "description": "Maximum nesting depth of the leaves in the JSON message body"
                                        }
                                      }
                                    },
                                    "vtap": {
                                      "type": "object",
                                      "description": "Defines the required data for traffic tapping",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "A switch that allows the operator to enable or disable traffic tapping in a global level",
                                          "default": true
                                        },
                                        "vtap-configuration": {
                                          "type": "object",
                                          "description": "Defines the required settings for traffic tapping",
                                          "properties": {
                                            "proxy": {
                                              "type": "object",
                                              "description": "Defines the required data for tapping on the proxy traffic",
                                              "properties": {
                                                "ingress": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "maxItems": 2,
                                                  "description": "Defines the configuration data required for tapping ingress traffic",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "own-network-ref": {
                                                        "type": "array",
                                                        "minItems": 1,
                                                        "maxItems": 2,
                                                        "description": "Reference to the own-network the traffic of which is taken into account for tapping",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "enabled": {
                                                        "type": "boolean",
                                                        "description": "A switch that allows the operator to enable or disable traffic tapping for the specific element",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "own-network-ref"
                                                    ]
                                                  }
                                                },
                                                "egress": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "Defines the configuration data required for tapping egress traffic",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "enabled": {
                                                        "type": "boolean",
                                                        "description": "A switch that allows the operator to enable or disable traffic tapping for the specific element",
                                                        "default": true
                                                      },
                                                      "all-nf-pools": {
                                                        "type": "object",
                                                        "description": "If present , it applies egress vtap configuration to all nf-pools",
                                                        "properties": {}
                                                      },
                                                      "nf-pool-ref": {
                                                        "type": "array",
                                                        "description": "Reference to the nf-pool the traffic of which is taken into account for tapping",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "slf-lookup-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Service Lookup Function (SLF) configuration parameters",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the SLF lookup profile"
                                          },
                                          "request-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "The timeout of SLF interrogation requests",
                                            "default": 10000
                                          },
                                          "identity-type": {
                                            "enum": [
                                              "supi",
                                              "gpsi"
                                            ],
                                            "description": "The type of subscriber identifier based on which messages should be routed",
                                            "default": "supi"
                                          },
                                          "requester-nf-type": {
                                            "type": "string",
                                            "description": "The NF type of the NF requesting the SLF interrogation (according to TS 29.510)",
                                            "default": "SMF"
                                          },
                                          "target-nf-type": {
                                            "type": "string",
                                            "description": "The NF type of the targeted NF for SLF interrogation (according to TS 29.510)",
                                            "default": "CHF"
                                          },
                                          "message-data-ref": {
                                            "type": "string",
                                            "description": "Reference to message-data MO that defines the data to extract from a message"
                                          },
                                          "result-variable-name": {
                                            "type": "string",
                                            "description": "Variable name to store the outcome of the SLF interrogation",
                                            "default": "region"
                                          },
                                          "routing-case-identity-not-found": {
                                            "type": "string",
                                            "description": "Routing case where the execution will continue when the interrogated supi/gpsi is not found in the SLF lookup"
                                          },
                                          "routing-case-destination-unknown": {
                                            "type": "string",
                                            "description": "Routing case where the execution will continue when the SLF interrogation result does not exist"
                                          },
                                          "routing-case-identity-missing": {
                                            "type": "string",
                                            "description": "Routing case where the execution will continue when the subscriber identity cannot be retrieved from the request message"
                                          },
                                          "routing-case-lookup-failure": {
                                            "type": "string",
                                            "description": "Routing case where the execution will continue when the SLF interrogation fails"
                                          }
                                        },
                                        "required": [
                                          "message-data-ref",
                                          "name"
                                        ]
                                      }
                                    },
                                    "service-address": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "maxItems": 2,
                                      "description": "Listening address of the SCP, referenced in own-network as well as the nf-profile and nf-service sent to the NRF",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ipv4-address": {
                                            "type": "string",
                                            "pattern": "^[0-9\\.]*$",
                                            "description": "IPv4 address of the SCP service"
                                          },
                                          "ipv6-address": {
                                            "type": "string",
                                            "pattern": "^[0-9a-fA-F:\\.]*$",
                                            "description": "IPv6 address of the SCP service"
                                          },
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name uniquely identifying the service address."
                                          },
                                          "fqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "FQDN of the nf-service, for example chf.op.com"
                                          },
                                          "port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "This port is used to receive non-TLS traffic."
                                          },
                                          "tls-port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "This port is used to receive TLS traffic."
                                          }
                                        }
                                      }
                                    },
                                    "own-network": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "maxItems": 2,
                                      "description": "Definition of an own, internal network of this SCP instance",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name identifying the own network"
                                          },
                                          "service-address-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined service-address"
                                          },
                                          "in-request-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the request screening case that is applied when a request is received from an NF instance in the own PLMN"
                                          },
                                          "out-response-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the response screening case that is applied when the response is targeting an NF instance in the own PLMN"
                                          },
                                          "routing-case-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined routing case, used for all traffic originating from own PLMN"
                                          },
                                          "ingress-connection-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined ingress-connection-profile"
                                          },
                                          "local-rate-limit-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined local-rate-limit-profile"
                                          },
                                          "global-ingress-rate-limit-profile-ref": {
                                            "type": "array",
                                            "maxItems": 1,
                                            "description": "Reference to a defined global-rate-limit-profile",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "routing-case-ref",
                                          "service-address-ref"
                                        ]
                                      }
                                    },
                                    "message-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Data extracted from incoming requests, used in routing rules to determine the appropriate routing action",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the message data set"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "path": {
                                            "type": "object",
                                            "description": "If present, specifies that the content of the URL path is used as the source",
                                            "properties": {}
                                          },
                                          "request-header": {
                                            "type": "string",
                                            "description": "If present, specifies the name of the request header from which to read the content"
                                          },
                                          "response-header": {
                                            "type": "string",
                                            "description": "If present, specifies the name of the response header from which to read the content"
                                          },
                                          "header": {
                                            "type": "string",
                                            "description": "If present, specifies the name of the request or response header from which to read the content depending on if it is used in the request or response path"
                                          },
                                          "body-json-pointer": {
                                            "type": "string",
                                            "description": "If configured, specifies the element that will be extracted from a JSON-formatted body with a JSON-Pointer specification according to RFC 6901"
                                          },
                                          "variable-name": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                            "description": "The name of the variable in which to store the extracted data"
                                          },
                                          "extractor-regex": {
                                            "type": "string",
                                            "description": "Regular expression name captures (?<name>re) used to extract data into the variable 'name'. If the regular expression does not match, all variables are left undefined. The names of named-captures\u2019 respective variables must begin with a letter and contain only letters, digits, or underscore"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "request-screening-case": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Entry point to a list of screening rules which are evaluated in sequence to filter a request message",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name identifying the request-screening-case"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "message-data-ref": {
                                            "type": "array",
                                            "description": "Reference to defined message-data which has extracted the data to be used in screening rule conditions",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "screening-rule": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "The screening rules are evaluated in sequence once the request-screening-case is referenced",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "pattern": "^[^.]+$",
                                                  "description": "Name identifying the screening-rule"
                                                },
                                                "condition": {
                                                  "type": "string",
                                                  "description": "A logical expression which is evaluated using the collected data from incoming requests as stored in message-data, and determines whether the screening-rule shall be executed. If no condition is defined, the screening-rule is always executed"
                                                },
                                                "screening-action": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "The screening-actions are executed in sequence once the condition of the screening-rule evaluates to true",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the screening-action"
                                                      },
                                                      "action-add-header": {
                                                        "type": "object",
                                                        "description": "Adds an HTTP header to a message",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be added to the request"
                                                          },
                                                          "if-exists": {
                                                            "enum": [
                                                              "replace",
                                                              "add",
                                                              "no-action"
                                                            ],
                                                            "description": "Defines the behavior when the header exists",
                                                            "default": "no-action"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "description": "Specifies the value of the header to be added to the request"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ]
                                                      },
                                                      "action-modify-header": {
                                                        "type": "object",
                                                        "description": "Either replaces the value of an existing HTTP header with a new one or prepends/appends a value to the existing value of a header",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be modified"
                                                          },
                                                          "replace-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to replace the header's old value"
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to replace the header's old value"
                                                          },
                                                          "prepend-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be prepended to the header's old value"
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be prepended to the header's old value"
                                                          },
                                                          "append-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be appended to the header's old value"
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be appended to the header's old value"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-remove-header": {
                                                        "type": "object",
                                                        "description": "Removes an HTTP header from a message",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be removed from the request"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-drop-message": {
                                                        "type": "object",
                                                        "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                                        "properties": {}
                                                      },
                                                      "action-exit-screening-case": {
                                                        "type": "object",
                                                        "description": "Exits from a screening-case and terminates message screening processing",
                                                        "properties": {}
                                                      },
                                                      "action-reject-message": {
                                                        "type": "object",
                                                        "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                                        "properties": {
                                                          "status": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 100,
                                                            "maximum": 999,
                                                            "description": "Status-code of the reply"
                                                          },
                                                          "title": {
                                                            "type": "string",
                                                            "description": "A short, human-readable summary of the problem"
                                                          },
                                                          "cause": {
                                                            "type": "string",
                                                            "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                          },
                                                          "detail": {
                                                            "type": "string",
                                                            "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                          },
                                                          "format": {
                                                            "enum": [
                                                              "text",
                                                              "json"
                                                            ],
                                                            "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                            "default": "json"
                                                          }
                                                        },
                                                        "required": [
                                                          "status"
                                                        ]
                                                      },
                                                      "action-go-to": {
                                                        "type": "object",
                                                        "description": "Jump to another request-screening-case",
                                                        "properties": {
                                                          "request-screening-case-ref": {
                                                            "type": "string",
                                                            "description": "The name of the request-screening-case where the execution continues"
                                                          }
                                                        }
                                                      },
                                                      "action-log": {
                                                        "type": "object",
                                                        "description": "Logs a user-defined message with the configured log-level",
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to be used for troubleshooting"
                                                          },
                                                          "max-log-message-length": {
                                                            "type": "integer",
                                                            "format": "uint32",
                                                            "minimum": 1,
                                                            "maximum": 10000,
                                                            "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                                            "default": 250
                                                          },
                                                          "log-level": {
                                                            "enum": [
                                                              "debug",
                                                              "info",
                                                              "trace",
                                                              "warn",
                                                              "error"
                                                            ],
                                                            "description": "Define the log level for troubleshooting",
                                                            "default": "debug"
                                                          }
                                                        },
                                                        "required": [
                                                          "text"
                                                        ]
                                                      },
                                                      "action-modify-json-body": {
                                                        "type": "object",
                                                        "description": "Performs modifications on JSON body elements by either adding new elements, replacing the value of existing elements, appending/prepending strings to existing elements or removing the elements from the JSON body",
                                                        "properties": {
                                                          "json-pointer": {
                                                            "type": "string",
                                                            "description": "Specifies the path inside the JSON body where an element will be added or modified or removed"
                                                          },
                                                          "add-value": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body, it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the value of the element to be added"
                                                              },
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              }
                                                            }
                                                          },
                                                          "add-from-var-name": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. The value of the new element is stored on a variable. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              },
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value to add to the path specified by the json-pointer attribute"
                                                              }
                                                            }
                                                          },
                                                          "replace-value": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value specified in the value attribute",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the new value that will replace the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value that is stored on a variable",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value that will replace the element\u2019s old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-value": {
                                                            "type": "object",
                                                            "description": "Prepends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be prepended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "object",
                                                            "description": "Prepends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be prepended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-value": {
                                                            "type": "object",
                                                            "description": "Appends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be appended to the elements's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "object",
                                                            "description": "Appends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be appended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "search-replace-string": {
                                                            "type": "object",
                                                            "description": "Searches for a string using the path specified by the json-pointer attribute. If the string is found in the JSON body, it is being replaced with the string specified using the configured options",
                                                            "properties": {
                                                              "case-sensitive": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will be perfomed in case sensitive mode.",
                                                                "default": true
                                                              },
                                                              "full-match": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation requires full match to proceed with the replace.",
                                                                "default": false
                                                              },
                                                              "search-backwards": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will start from the end of the json body toward the top.",
                                                                "default": false
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "search-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the search value"
                                                              },
                                                              "search-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the search string is stored."
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the replace value"
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace string is stored."
                                                              }
                                                            }
                                                          },
                                                          "search-replace-regex": {
                                                            "type": "object",
                                                            "description": "Searches for a pattern using the path specified by the json-pointer attribute. If the pattern matches in the JSON body, it is being replaced with the matched text specified using the configured options",
                                                            "properties": {
                                                              "search-regex": {
                                                                "type": "string",
                                                                "description": "Specifies the regular expression used to search for string patterns."
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies how the replacement will be performed based on the matched text as result of search-regex attribute. If the regular expression did not match, no replacement is applied."
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace value is stored."
                                                              }
                                                            }
                                                          },
                                                          "remove": {
                                                            "type": "object",
                                                            "description": "Removes the element, including its contents if any, that is specified by the json-pointer attribute",
                                                            "properties": {}
                                                          }
                                                        },
                                                        "required": [
                                                          "json-pointer"
                                                        ]
                                                      },
                                                      "action-create-json-body": {
                                                        "type": "object",
                                                        "description": "Creates a valid JSON body from scratch",
                                                        "properties": {
                                                          "json-body": {
                                                            "type": "string",
                                                            "description": "Specifies the entire JSON body that will be created"
                                                          }
                                                        },
                                                        "required": [
                                                          "json-body"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "condition",
                                                "name",
                                                "screening-action"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "screening-rule"
                                        ]
                                      }
                                    },
                                    "response-screening-case": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Entry point to a list of screening rules which are evaluated in sequence on response messages",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name identifying the response-screening-case"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "message-data-ref": {
                                            "type": "array",
                                            "description": "Reference to defined message-data which has extracted the data to be used in screening rule conditions",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "screening-rule": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "The screening rules are evaluated in sequence once the response-screening-case is referenced",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "pattern": "^[^.]+$",
                                                  "description": "Name identifying the screening-rule"
                                                },
                                                "condition": {
                                                  "type": "string",
                                                  "description": "A logical expression which is evaluated using the collected data from incoming responses as stored in message-data, and determines whether the screening-rule shall be executed. If no condition is defined, the screening-rule is always executed"
                                                },
                                                "screening-action": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "The screening-actions are executed in sequence once the condition of the screening-rule evaluates to true",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the screening-action"
                                                      },
                                                      "action-add-header": {
                                                        "type": "object",
                                                        "description": "Adds an HTTP header to a message",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be added to the response"
                                                          },
                                                          "if-exists": {
                                                            "enum": [
                                                              "replace",
                                                              "add",
                                                              "no-action"
                                                            ],
                                                            "description": "Defines the behavior when the header exists",
                                                            "default": "no-action"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "description": "Specifies the value of the header to be added to the response"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ]
                                                      },
                                                      "action-modify-header": {
                                                        "type": "object",
                                                        "description": "Either replaces the value of an existing HTTP header with a new one or prepends/appends a value to the existing value of a header",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be modified"
                                                          },
                                                          "replace-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to replace the header's old value"
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to replace the header's old value"
                                                          },
                                                          "prepend-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be prepended to the header's old value"
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be prepended to the header's old value"
                                                          },
                                                          "append-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be appended to the header's old value"
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be appended to the header's old value"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-remove-header": {
                                                        "type": "object",
                                                        "description": "Removes an HTTP header from a message",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be removed from the response"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-exit-screening-case": {
                                                        "type": "object",
                                                        "description": "Exits from a screening-case and terminates message screening processing",
                                                        "properties": {}
                                                      },
                                                      "action-modify-status-code": {
                                                        "type": "object",
                                                        "description": "Modify the response status-code",
                                                        "properties": {
                                                          "status": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 100,
                                                            "maximum": 999,
                                                            "description": "Status-code of the response message"
                                                          },
                                                          "cause": {
                                                            "type": "string",
                                                            "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                          },
                                                          "detail": {
                                                            "type": "string",
                                                            "description": "A human-readable explanation of the problem"
                                                          },
                                                          "title": {
                                                            "type": "string",
                                                            "description": "A short, human-readable summary of the problem"
                                                          },
                                                          "format": {
                                                            "enum": [
                                                              "text",
                                                              "json"
                                                            ],
                                                            "description": "Format of the response message. The default is json",
                                                            "default": "json"
                                                          }
                                                        }
                                                      },
                                                      "action-go-to": {
                                                        "type": "object",
                                                        "description": "Jump to another response screening case",
                                                        "properties": {
                                                          "response-screening-case-ref": {
                                                            "type": "string",
                                                            "description": "The name of the response-screening-case where the execution continues"
                                                          }
                                                        }
                                                      },
                                                      "action-log": {
                                                        "type": "object",
                                                        "description": "Logs a user-defined message with the configured log-level",
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to be used for troubleshooting"
                                                          },
                                                          "max-log-message-length": {
                                                            "type": "integer",
                                                            "format": "uint32",
                                                            "minimum": 1,
                                                            "maximum": 10000,
                                                            "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                                            "default": 250
                                                          },
                                                          "log-level": {
                                                            "enum": [
                                                              "debug",
                                                              "info",
                                                              "trace",
                                                              "warn",
                                                              "error"
                                                            ],
                                                            "description": "Define the log level for troubleshooting",
                                                            "default": "debug"
                                                          }
                                                        },
                                                        "required": [
                                                          "text"
                                                        ]
                                                      },
                                                      "action-modify-json-body": {
                                                        "type": "object",
                                                        "description": "Performs modifications on JSON body elements by either adding new elements, replacing the value of existing elements, appending/prepending strings to existing elements or removing the elements from the JSON body",
                                                        "properties": {
                                                          "json-pointer": {
                                                            "type": "string",
                                                            "description": "Specifies the path inside the JSON body where an element will be added or modified or removed"
                                                          },
                                                          "add-value": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body, it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the value of the element to be added"
                                                              },
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              }
                                                            }
                                                          },
                                                          "add-from-var-name": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. The value of the new element is stored on a variable. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              },
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value to add to the path specified by the json-pointer attribute"
                                                              }
                                                            }
                                                          },
                                                          "replace-value": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value specified in the value attribute",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the new value that will replace the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value that is stored on a variable",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value that will replace the element\u2019s old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-value": {
                                                            "type": "object",
                                                            "description": "Prepends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be prepended to the elements's old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "object",
                                                            "description": "Prepends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be prepended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-value": {
                                                            "type": "object",
                                                            "description": "Appends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be appended to the elements's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "object",
                                                            "description": "Appends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be appended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "search-replace-string": {
                                                            "type": "object",
                                                            "description": "Searches for a string using the path specified by the json-pointer attribute. If the string is found in the JSON body, it is being replaced with the string specified using the configured options",
                                                            "properties": {
                                                              "case-sensitive": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will be perfomed in case sensitive mode.",
                                                                "default": true
                                                              },
                                                              "full-match": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation requires full match to proceed with the replace.",
                                                                "default": false
                                                              },
                                                              "search-backwards": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will start from the end of the json body toward the top.",
                                                                "default": false
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "search-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the search value"
                                                              },
                                                              "search-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the search string is stored."
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the replace value"
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace string is stored."
                                                              }
                                                            }
                                                          },
                                                          "search-replace-regex": {
                                                            "type": "object",
                                                            "description": "Searches for a pattern using the path specified by the json-pointer attribute. If the pattern matches in the JSON body, it is being replaced with the matched text specified using the configured options",
                                                            "properties": {
                                                              "search-regex": {
                                                                "type": "string",
                                                                "description": "Specifies the regular expression used to search for string patterns."
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies how the replacement will be performed based on the matched text as result of search-regex attribute. If the regular expression did not match, no replacement is applied."
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace value is stored."
                                                              }
                                                            }
                                                          },
                                                          "remove": {
                                                            "type": "object",
                                                            "description": "Removes the element, including its contents if any, that is specified by the json-pointer attribute",
                                                            "properties": {}
                                                          }
                                                        },
                                                        "required": [
                                                          "json-pointer"
                                                        ]
                                                      },
                                                      "action-create-json-body": {
                                                        "type": "object",
                                                        "description": "Creates a valid JSON body from scratch",
                                                        "properties": {
                                                          "json-body": {
                                                            "type": "string",
                                                            "description": "Specifies the entire JSON body that will be created"
                                                          }
                                                        },
                                                        "required": [
                                                          "json-body"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "condition",
                                                "name",
                                                "screening-action"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "screening-rule"
                                        ]
                                      }
                                    },
                                    "routing-case": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "Entry point to a list of routing rules which are evaluated in sequence",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the routing-case"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "message-data-ref": {
                                            "type": "array",
                                            "description": "Reference to defined message-data which has extracted the data to be used in routing rule conditions",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "routing-rule": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Routing rules executed in sequence",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the routing-rule"
                                                },
                                                "user-label": {
                                                  "type": "string",
                                                  "description": "Label for free use"
                                                },
                                                "condition": {
                                                  "type": "string",
                                                  "description": "The evaluation of the condition determines, using the collected data from incoming requests, whether the actions in this routing rule shall be executed. If empty, the condition always evaluates to true"
                                                },
                                                "routing-action": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "Routing actions that are executed in sequence once the routing rule is used if the condition is true",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the routing-action"
                                                      },
                                                      "action-slf-lookup": {
                                                        "type": "object",
                                                        "description": "Perform SLF interrogation",
                                                        "properties": {
                                                          "slf-lookup-profile-ref": {
                                                            "type": "string",
                                                            "description": "Specifies the slf-lookup-profile used for the SLF interrogation"
                                                          }
                                                        }
                                                      },
                                                      "action-nf-discovery": {
                                                        "type": "object",
                                                        "description": "Perform delegated NF discovery by querying the NRF with the parameters from the received request.Specific discovery parameters or all the discovery parameters are extracted from the received request based on the configuration of either use-discovery-parameter or add-discovery-parameter.",
                                                        "properties": {
                                                          "nrf-group-ref": {
                                                            "type": "string",
                                                            "description": "The group of NRFs providing the Nnrf_NFDiscovery service"
                                                          },
                                                          "request-timeout": {
                                                            "type": "integer",
                                                            "format": "uint32",
                                                            "minimum": 1,
                                                            "maximum": 65535,
                                                            "description": "The timeout of delegated discovery requests",
                                                            "default": 10000
                                                          },
                                                          "endpoint-ip-family": {
                                                            "type": "array",
                                                            "maxItems": 2,
                                                            "description": "IP family of the discovered endpoints to be used. Applicable only when FQDN is not present.",
                                                            "items": {
                                                              "enum": [
                                                                "ipv4",
                                                                "ipv6"
                                                              ]
                                                            }
                                                          },
                                                          "use-discovery-parameter": {
                                                            "type": "object",
                                                            "description": "Discovery parameters from the received request that are used in the delegated discovery",
                                                            "properties": {
                                                              "use-selected": {
                                                                "type": "object",
                                                                "description": "Explicitly selected discovery parameters from the received request that are used in the delegated discovery",
                                                                "properties": {
                                                                  "name": {
                                                                    "type": "array",
                                                                    "description": "The selected discovery parameter to use in the delegated discovery",
                                                                    "items": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "use-all": {
                                                                "type": "object",
                                                                "description": "Use all discovery parameters present in the received request when performing delegated discovery.",
                                                                "properties": {}
                                                              }
                                                            }
                                                          },
                                                          "add-discovery-parameter": {
                                                            "type": "array",
                                                            "uniqueItems": true,
                                                            "description": "Discovery parameters and values to be used in addition or instead of the parameters from the received request",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string",
                                                                  "description": "The discovery parameter name"
                                                                },
                                                                "value": {
                                                                  "type": "string",
                                                                  "description": "The specific value of the discovery parameter. Strings as well as valid JSON data structures are allowed"
                                                                },
                                                                "from-var-name": {
                                                                  "type": "string",
                                                                  "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                  "description": "The name of the variable that holds the discovery parameter's value"
                                                                }
                                                              },
                                                              "required": [
                                                                "name"
                                                              ]
                                                            }
                                                          },
                                                          "nf-selection-on-priority": {
                                                            "type": "object",
                                                            "description": "From the discovered list of NF-profiles, choose one NF from those with the highest priority and store it as the preferred host in the variable given in \u2018variable-name-selected-host\u2019. The nf-set-if of the chosen host is stored in the variable given in \u2018variable-name-nfset\u2019.",
                                                            "properties": {
                                                              "variable-name-selected-host": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "The name of the variable used for storing the host name:port of the selected NF"
                                                              },
                                                              "variable-name-nfset": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "The name of the variable used for storing the nf-set-id of the selected NF"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "required": [
                                                          "nrf-group-ref"
                                                        ]
                                                      },
                                                      "action-route-strict": {
                                                        "type": "object",
                                                        "description": "Route strictly to the targeted host",
                                                        "properties": {
                                                          "keep-authority-header": {
                                                            "type": "object",
                                                            "description": "If present, keep the authority header of the request without modifying",
                                                            "properties": {}
                                                          },
                                                          "preserve-if-indirect-routing": {
                                                            "enum": [
                                                              "target-api-root-header",
                                                              "absolute-uri-path"
                                                            ],
                                                            "description": "Selected attributes value to preserve in case of indirect routing"
                                                          },
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the pool name"
                                                              },
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured nf-pool"
                                                              }
                                                            }
                                                          },
                                                          "from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Route the request based on the defined variable"
                                                          },
                                                          "from-target-api-root-header": {
                                                            "type": "object",
                                                            "description": "If present, route the request based on the target-api-root-header's value",
                                                            "properties": {}
                                                          },
                                                          "from-authority-header": {
                                                            "type": "object",
                                                            "description": "If present, route the request based on the authority-header's value",
                                                            "properties": {}
                                                          }
                                                        }
                                                      },
                                                      "action-route-preferred": {
                                                        "type": "object",
                                                        "description": "Route to the targeted host which belongs to the specified nf-pool. In case of failure, re-select among the rest of the hosts in this nf-pool",
                                                        "properties": {
                                                          "keep-authority-header": {
                                                            "type": "object",
                                                            "description": "If present, keep the authority header of the request without modifying",
                                                            "properties": {}
                                                          },
                                                          "preserve-if-indirect-routing": {
                                                            "enum": [
                                                              "target-api-root-header",
                                                              "absolute-uri-path"
                                                            ],
                                                            "description": "Selected attribute's value to preserve in case of indirect routing"
                                                          },
                                                          "preserve-disc-param-if-indirect": {
                                                            "type": "object",
                                                            "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                                            "properties": {
                                                              "preserve-selected": {
                                                                "type": "object",
                                                                "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {
                                                                  "name": {
                                                                    "type": "array",
                                                                    "description": "The discovery parameter to preserve in the request",
                                                                    "items": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "preserve-all": {
                                                                "type": "object",
                                                                "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {}
                                                              }
                                                            }
                                                          },
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the pool name"
                                                              },
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured nf-pool"
                                                              }
                                                            }
                                                          },
                                                          "last-resort-nf-pool-ref": {
                                                            "type": "string",
                                                            "description": "Last nf-pool of hosts to try in case of multiple failures"
                                                          },
                                                          "from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Route the request based on the defined variable"
                                                          },
                                                          "from-target-api-root-header": {
                                                            "type": "object",
                                                            "description": "If present, route the request based on the target-api-root-header's value",
                                                            "properties": {}
                                                          },
                                                          "from-authority-header": {
                                                            "type": "object",
                                                            "description": "If present, route the request based on the authority-header's value",
                                                            "properties": {}
                                                          }
                                                        }
                                                      },
                                                      "action-route-round-robin": {
                                                        "type": "object",
                                                        "description": "Route indirectly in a round-robin fashion. Set the target-apiRoot header to the selected target, based on the result of the preceding nf-discovery action. The target-apiRoot header is replaced for every reselection to another target.",
                                                        "properties": {
                                                          "keep-authority-header": {
                                                            "type": "object",
                                                            "description": "If present, keep the authority header of the request without modifying",
                                                            "properties": {}
                                                          },
                                                          "preserve-if-indirect-routing": {
                                                            "enum": [
                                                              "target-api-root-header",
                                                              "absolute-uri-path"
                                                            ],
                                                            "description": "Selected attribute's value to preserve in case of indirect routing"
                                                          },
                                                          "preserve-disc-param-if-indirect": {
                                                            "type": "object",
                                                            "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                                            "properties": {
                                                              "preserve-selected": {
                                                                "type": "object",
                                                                "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {
                                                                  "name": {
                                                                    "type": "array",
                                                                    "description": "The discovery parameter to preserve in the request",
                                                                    "items": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "preserve-all": {
                                                                "type": "object",
                                                                "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {}
                                                              }
                                                            }
                                                          },
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the pool name"
                                                              },
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured nf-pool"
                                                              }
                                                            }
                                                          },
                                                          "last-resort-nf-pool-ref": {
                                                            "type": "string",
                                                            "description": "Last nf-pool of hosts to try in case of multiple failures"
                                                          }
                                                        }
                                                      },
                                                      "action-route-remote-round-robin": {
                                                        "type": "object",
                                                        "description": "Select the host name to include in the target-api-root header and route the request to any of the hosts in the specified target-nf-pool. The target-api-root header is replaced on reselects in a round-robin fashion.",
                                                        "properties": {
                                                          "preserve-disc-param-if-indirect": {
                                                            "type": "object",
                                                            "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                                            "properties": {
                                                              "preserve-selected": {
                                                                "type": "object",
                                                                "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {
                                                                  "name": {
                                                                    "type": "array",
                                                                    "description": "The discovery parameter to preserve in the request",
                                                                    "items": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "preserve-all": {
                                                                "type": "object",
                                                                "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {}
                                                              }
                                                            }
                                                          },
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the pool name"
                                                              },
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured nf-pool"
                                                              }
                                                            }
                                                          },
                                                          "last-resort-nf-pool-ref": {
                                                            "type": "string",
                                                            "description": "Last nf-pool of hosts to try in case of multiple failures"
                                                          }
                                                        }
                                                      },
                                                      "action-route-remote-preferred": {
                                                        "type": "object",
                                                        "description": "Route indirectly to the preferred host as specified in the target-api-root-header. In cases where a re-selection of the target is needed, select the host name to include in the target-api-root header based on the result of the preceding nf-discovery action. The target-api-root header is replaced in a round-robin fashion for every subsequent re-selection",
                                                        "properties": {
                                                          "preserve-if-indirect-routing": {
                                                            "enum": [
                                                              "target-api-root-header",
                                                              "absolute-uri-path"
                                                            ],
                                                            "description": "Selected attribute's value to preserve in case of indirect routing"
                                                          },
                                                          "preserve-disc-param-if-indirect": {
                                                            "type": "object",
                                                            "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                                            "properties": {
                                                              "preserve-selected": {
                                                                "type": "object",
                                                                "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {
                                                                  "name": {
                                                                    "type": "array",
                                                                    "description": "The discovery parameter to preserve in the request",
                                                                    "items": {
                                                                      "type": "string"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "preserve-all": {
                                                                "type": "object",
                                                                "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                                                "properties": {}
                                                              }
                                                            }
                                                          },
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the pool name"
                                                              },
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured nf-pool"
                                                              }
                                                            }
                                                          },
                                                          "last-resort-nf-pool-ref": {
                                                            "type": "string",
                                                            "description": "Last nf-pool of hosts to try in case of multiple failures"
                                                          },
                                                          "from-target-api-root-header": {
                                                            "type": "object",
                                                            "description": "If present, route the request based on the target-api-root-header's value",
                                                            "properties": {}
                                                          }
                                                        }
                                                      },
                                                      "action-reject-message": {
                                                        "type": "object",
                                                        "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                                        "properties": {
                                                          "status": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 100,
                                                            "maximum": 999,
                                                            "description": "Status-code of the reply"
                                                          },
                                                          "title": {
                                                            "type": "string",
                                                            "description": "A short, human-readable summary of the problem"
                                                          },
                                                          "cause": {
                                                            "type": "string",
                                                            "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                          },
                                                          "detail": {
                                                            "type": "string",
                                                            "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                          },
                                                          "format": {
                                                            "enum": [
                                                              "text",
                                                              "json"
                                                            ],
                                                            "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                            "default": "json"
                                                          }
                                                        },
                                                        "required": [
                                                          "status"
                                                        ]
                                                      },
                                                      "action-log": {
                                                        "type": "object",
                                                        "description": "Logs a user-defined message with the configured log-level",
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to be used for troubleshooting"
                                                          },
                                                          "max-log-message-length": {
                                                            "type": "integer",
                                                            "format": "uint32",
                                                            "minimum": 1,
                                                            "maximum": 10000,
                                                            "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                                            "default": 250
                                                          },
                                                          "log-level": {
                                                            "enum": [
                                                              "debug",
                                                              "info",
                                                              "trace",
                                                              "warn",
                                                              "error"
                                                            ],
                                                            "description": "Define the log level for troubleshooting",
                                                            "default": "debug"
                                                          }
                                                        },
                                                        "required": [
                                                          "text"
                                                        ]
                                                      },
                                                      "action-drop-message": {
                                                        "type": "object",
                                                        "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                                        "properties": {}
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "condition",
                                                "name"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "routing-rule"
                                        ]
                                      }
                                    },
                                    "static-nf-instance-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Statically defined NF instances to be referenced in a nf-pool",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the static NF instance data set"
                                          },
                                          "static-nf-instance": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Static NF instances in this data set",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nf-instance-id": {
                                                  "type": "string",
                                                  "description": "The NF instance identity"
                                                },
                                                "static-nf-service": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The service for which an NF has registered",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "nf-service-id": {
                                                        "type": "string",
                                                        "description": "The NF service identity"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the service supported"
                                                      },
                                                      "capacity": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Specifies the capacity of this service"
                                                      },
                                                      "priority": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                                      },
                                                      "set-id": {
                                                        "type": "array",
                                                        "description": "The set identity of the service",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "address": {
                                                        "type": "object",
                                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                        "properties": {
                                                          "scheme": {
                                                            "enum": [
                                                              "http",
                                                              "https"
                                                            ],
                                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                                          },
                                                          "fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "inter-plmn-fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service used for inter-PLMN routing. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "multiple-ip-endpoint": {
                                                            "type": "array",
                                                            "uniqueItems": true,
                                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string",
                                                                  "description": "Name identifying the ip-endpoint"
                                                                },
                                                                "transport": {
                                                                  "enum": [
                                                                    "tcp"
                                                                  ],
                                                                  "description": "Transport protocol"
                                                                },
                                                                "port": {
                                                                  "type": "integer",
                                                                  "format": "uint16",
                                                                  "minimum": 0,
                                                                  "maximum": 65535,
                                                                  "description": "Port number"
                                                                },
                                                                "ipv4-address": {
                                                                  "type": "array",
                                                                  "description": "IPv4 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9\\.]*$"
                                                                  }
                                                                },
                                                                "ipv6-address": {
                                                                  "type": "array",
                                                                  "description": "IPv6 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "name"
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Human readable name of the NF"
                                                },
                                                "nf-type": {
                                                  "type": "string",
                                                  "description": "The type of the NF (according to TS 29.510)"
                                                },
                                                "locality": {
                                                  "type": "string",
                                                  "description": "The geographic locality of the NF"
                                                },
                                                "nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "scp-domain": {
                                                  "type": "array",
                                                  "description": "The SCP domains this NF is associated with",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "static-nf-instance"
                                        ]
                                      }
                                    },
                                    "static-scp-instance-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Statically defined SCP instances to be referenced in a nf-pool",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the static SCP instance data set"
                                          },
                                          "static-scp-instance": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Static SCP instances in this data set",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nf-instance-id": {
                                                  "type": "string",
                                                  "description": "The NF instance identity"
                                                },
                                                "served-nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NFs served by the SCP",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "static-nf-service": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The service for which the SCP has registered",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "nf-service-id": {
                                                        "type": "string",
                                                        "description": "The NF service identity"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the service supported"
                                                      },
                                                      "capacity": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Specifies the capacity of this service"
                                                      },
                                                      "priority": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                                      },
                                                      "set-id": {
                                                        "type": "array",
                                                        "description": "The set identity of the service",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "address": {
                                                        "type": "object",
                                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                        "properties": {
                                                          "scheme": {
                                                            "enum": [
                                                              "http",
                                                              "https"
                                                            ],
                                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                                          },
                                                          "fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "inter-plmn-fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service used for inter-PLMN routing. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "multiple-ip-endpoint": {
                                                            "type": "array",
                                                            "uniqueItems": true,
                                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string",
                                                                  "description": "Name identifying the ip-endpoint"
                                                                },
                                                                "transport": {
                                                                  "enum": [
                                                                    "tcp"
                                                                  ],
                                                                  "description": "Transport protocol"
                                                                },
                                                                "port": {
                                                                  "type": "integer",
                                                                  "format": "uint16",
                                                                  "minimum": 0,
                                                                  "maximum": 65535,
                                                                  "description": "Port number"
                                                                },
                                                                "ipv4-address": {
                                                                  "type": "array",
                                                                  "description": "IPv4 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9\\.]*$"
                                                                  }
                                                                },
                                                                "ipv6-address": {
                                                                  "type": "array",
                                                                  "description": "IPv6 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "name"
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                },
                                                "static-scp-domain-info": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The info about the static scp domain",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the static scp domain"
                                                      },
                                                      "domain": {
                                                        "type": "string",
                                                        "description": "Domain of the static scp",
                                                        "default": "default"
                                                      },
                                                      "capacity": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Specifies the capacity of this service"
                                                      },
                                                      "priority": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                                      },
                                                      "address": {
                                                        "type": "object",
                                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                        "properties": {
                                                          "scheme": {
                                                            "enum": [
                                                              "http",
                                                              "https"
                                                            ],
                                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                                          },
                                                          "fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "multiple-ip-endpoint": {
                                                            "type": "array",
                                                            "uniqueItems": true,
                                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string",
                                                                  "description": "Name identifying the ip-endpoint"
                                                                },
                                                                "transport": {
                                                                  "enum": [
                                                                    "tcp"
                                                                  ],
                                                                  "description": "Transport protocol"
                                                                },
                                                                "port": {
                                                                  "type": "integer",
                                                                  "format": "uint16",
                                                                  "minimum": 0,
                                                                  "maximum": 65535,
                                                                  "description": "Port number"
                                                                },
                                                                "ipv4-address": {
                                                                  "type": "array",
                                                                  "description": "IPv4 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9\\.]*$"
                                                                  }
                                                                },
                                                                "ipv6-address": {
                                                                  "type": "array",
                                                                  "description": "IPv6 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "name"
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Human readable name of the NF"
                                                },
                                                "nf-type": {
                                                  "type": "string",
                                                  "description": "The type of the NF (according to TS 29.510)"
                                                },
                                                "locality": {
                                                  "type": "string",
                                                  "description": "The geographic locality of the NF"
                                                },
                                                "nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "scp-domain": {
                                                  "type": "array",
                                                  "description": "The SCP domains this NF is associated with",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "static-scp-instance"
                                        ]
                                      }
                                    },
                                    "static-sepp-instance-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Statically defined SEPP instances to be referenced in an nf-pool",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the static SEPP instance data set"
                                          },
                                          "static-sepp-instance": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Static SEPP instances in this data set",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nf-instance-id": {
                                                  "type": "string",
                                                  "description": "The NF instance identity"
                                                },
                                                "capacity": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "Specifies the capacity of this static sepp instance"
                                                },
                                                "priority": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "The priority of the static sepp instance. Lower values indicate a higher priority"
                                                },
                                                "address": {
                                                  "type": "object",
                                                  "description": "Address of the static sepp instance, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                  "properties": {
                                                    "scheme": {
                                                      "enum": [
                                                        "http",
                                                        "https"
                                                      ],
                                                      "description": "The URI scheme (i.e. 'http' or 'https')",
                                                      "default": "http"
                                                    },
                                                    "fqdn": {
                                                      "type": "string",
                                                      "format": "hostname",
                                                      "description": "FQDN of the static sepp instance. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                    },
                                                    "multiple-ip-endpoint": {
                                                      "type": "array",
                                                      "uniqueItems": true,
                                                      "description": "Multiple IP endpoint(s) of the static sepp instance, all with the same port and transport",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Name identifying the ip-endpoint"
                                                          },
                                                          "transport": {
                                                            "enum": [
                                                              "tcp"
                                                            ],
                                                            "description": "Transport protocol"
                                                          },
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 0,
                                                            "maximum": 65535,
                                                            "description": "Port number"
                                                          },
                                                          "ipv4-address": {
                                                            "type": "array",
                                                            "description": "IPv4 address",
                                                            "items": {
                                                              "type": "string",
                                                              "pattern": "^[0-9\\.]*$"
                                                            }
                                                          },
                                                          "ipv6-address": {
                                                            "type": "array",
                                                            "description": "IPv6 address",
                                                            "items": {
                                                              "type": "string",
                                                              "pattern": "^[0-9a-fA-F:\\.]*$"
                                                            }
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Human readable name of the NF"
                                                },
                                                "nf-type": {
                                                  "type": "string",
                                                  "description": "The type of the NF (according to TS 29.510)"
                                                },
                                                "locality": {
                                                  "type": "string",
                                                  "description": "The geographic locality of the NF"
                                                },
                                                "nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "scp-domain": {
                                                  "type": "array",
                                                  "description": "The SCP domains this NF is associated with",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "static-sepp-instance"
                                        ]
                                      }
                                    },
                                    "nf-pool": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Grouping of defined or dynamically discovered NF instances",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name identifying the nf-pool"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "dns-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined dns-profile that will be used for DNS resolution on producers of this nf-pool. This setting overrides the global setting."
                                          },
                                          "preferred-ip-family": {
                                            "enum": [
                                              "ipv4",
                                              "ipv6"
                                            ],
                                            "description": "Preferred IP version for routing."
                                          },
                                          "enable-stats-per-nf-instance": {
                                            "type": "boolean",
                                            "description": "If set to true, then counters per NF instance are activated",
                                            "default": false
                                          },
                                          "threshold-for-nf-unavailable-alarm": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Threshold for the number of 5xx errors and timeouts received within 15 seconds time interval, that lead to raising the alarm: SCP, NF Instance Unavailable"
                                          },
                                          "add-non-matching-as-lowest-priority": {
                                            "type": "boolean",
                                            "description": "If true, last priority-group is created with non-matching instances or endpoints.",
                                            "default": true
                                          },
                                          "nf-match-condition": {
                                            "type": "string",
                                            "description": "Only the NF instances that satisfy the nf-match-condition are included in the NF pool. Applicable only to dynamically discovered NF instances"
                                          },
                                          "scp-match-condition": {
                                            "type": "string",
                                            "description": "Only the SCP instances that satisfy the scp-match-condition are included in the NF pool. Applicable only to dynamically discovered SCP instances"
                                          },
                                          "nf-pool-discovery": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Attributes to define discovery and grouping of NF instances",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the nf-pool-discovery"
                                                },
                                                "nrf-query": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "NRF queries used to discover NF instances that then get stored in attribute discovered-nf-instance of this nf-pool",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the nrf-query"
                                                      },
                                                      "requester-nf-type": {
                                                        "type": "string",
                                                        "description": "The NF type of the requester NF (according to TS 29.510)",
                                                        "default": "SCP"
                                                      },
                                                      "nf-type": {
                                                        "type": "string",
                                                        "description": "The NF type of the targeted NF (according to TS 29.510)"
                                                      },
                                                      "nf-set-id": {
                                                        "type": "string",
                                                        "description": "The set identity of the targeted NF"
                                                      },
                                                      "nf-service-set-id": {
                                                        "type": "string",
                                                        "description": "The set identity of the targeted NF service"
                                                      },
                                                      "preferred-locality": {
                                                        "type": "string",
                                                        "description": "The preferred locality of the targeted NF"
                                                      },
                                                      "requester-plmn": {
                                                        "type": "array",
                                                        "description": "The PLMN identity of the requester NF. Format: MCC (3 digits) followed by MNC (2 or 3 digits). Example for MCC=123 and MNC=45: 12345",
                                                        "items": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{5,6}$"
                                                        }
                                                      },
                                                      "requester-snssai": {
                                                        "type": "array",
                                                        "uniqueItems": true,
                                                        "description": "Slice info of the requester NF",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "sst": {
                                                              "type": "integer",
                                                              "format": "uint8",
                                                              "minimum": 0,
                                                              "maximum": 255,
                                                              "description": "Specifies the slice service type of the S-NSSAI"
                                                            },
                                                            "sd": {
                                                              "type": "string",
                                                              "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                              "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                              "default": "-"
                                                            }
                                                          },
                                                          "required": [
                                                            "name",
                                                            "sst"
                                                          ]
                                                        }
                                                      },
                                                      "scp-domain": {
                                                        "type": "array",
                                                        "description": "The SCP domain the target NF or SCP belongs to",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "service-name": {
                                                        "type": "array",
                                                        "description": "The name of the service offered by the targeted NF",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "query-parameter": {
                                                        "type": "array",
                                                        "uniqueItems": true,
                                                        "description": "Custom query parameter used for parameters not covered by non-custom attributes in nrf-query. Query parameter names already covered may not be used. Apart from this, possible name and value are according to TS 29.510",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "name"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "nf-type"
                                                    ]
                                                  }
                                                },
                                                "static-nf-instance-data-ref": {
                                                  "type": "array",
                                                  "description": "Reference to a list of statically configured NF instances",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "update-interval": {
                                                  "enum": [
                                                    "infinite",
                                                    "24h",
                                                    "12h",
                                                    "6h",
                                                    "4h",
                                                    "3h",
                                                    "2h",
                                                    "1h",
                                                    "30min",
                                                    "20min",
                                                    "15min",
                                                    "10min",
                                                    "5min",
                                                    "1min",
                                                    "30s",
                                                    "20s",
                                                    "15s",
                                                    "10s",
                                                    "5s"
                                                  ],
                                                  "description": "Time span between two nf-pool updates. Use special value infinite to stop regular nf-pool updates",
                                                  "default": "1h"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          },
                                          "priority-group": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "maxItems": 10,
                                            "description": "Group of NF instances that satisfy specific selection criteria and belong to the same priority",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the priority group"
                                                },
                                                "priority": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "The priority assigned to the group of NF instances, with a lower value indicating higher priority"
                                                },
                                                "static-scp-instance-data-ref": {
                                                  "type": "array",
                                                  "description": "Reference to an SCP instance data set",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "static-sepp-instance-data-ref": {
                                                  "type": "array",
                                                  "description": "Reference to a SEPP instance data set",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "nf-match-condition": {
                                                  "type": "string",
                                                  "description": "NF instances of this nf-pool which satisfy the nf-match-condition are prioritized according to priority-group priority"
                                                },
                                                "scp-match-condition": {
                                                  "type": "string",
                                                  "description": "SCP instances of this nf-pool which satisfy the scp-match-condition are prioritized according to priority-group priority"
                                                },
                                                "sepp-match-condition": {
                                                  "type": "string",
                                                  "description": "SEPP instances of this nf-pool which satisfy the sepp-match-condition are prioritized according to priority-group priority"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "priority"
                                              ]
                                            }
                                          },
                                          "static-scp-instance-data-ref": {
                                            "type": "array",
                                            "description": "Reference to an SCP instance data set",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "static-sepp-instance-data-ref": {
                                            "type": "array",
                                            "description": "Reference to a SEPP instance data set",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "pool-retry-budget": {
                                            "type": "object",
                                            "description": "Specifies a limit per pool on concurrent retries in relation to the number of active requests",
                                            "properties": {
                                              "concurrent-retries-percentage": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 100,
                                                "description": "Specifies the limit on concurrent retries as a percentage of the sum of active requests and active pending requests.For example, if there are 100 active requests and the budget_percent is set to 25, there may be 25 active retries",
                                                "default": 20
                                              },
                                              "min-concurrent-retries": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "Specifies the minimum retry concurrency allowed for the retry budget. The limit on the number of active retries may never go below this number.",
                                                "default": 10
                                              }
                                            }
                                          },
                                          "temporary-blocking": {
                                            "type": "object",
                                            "description": "Temporary blocking allows the dynamic blocking of NFs which are not reachable, based on configurable and preset attributes",
                                            "properties": {
                                              "blocking-time": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The duration of time for which a NF is blocked",
                                                "default": 5
                                              },
                                              "consecutive-failures": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of consecutive 5xx errors from a NF node before it is temporarily blocked. If consecutive-local-failures parameter is not configured, then this value also represents the locally originated failures",
                                                "default": 5
                                              },
                                              "consecutive-local-failures": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of consecutive locally originated failures per worker pod before an NF is temporary blocked. If this parameter is configured, then the locally originated failures are counted separately from the consecutive 5xx errors for temporary blocking. If this parameter is set to zero then locally originated failures do not lead to temporary blocking in this pool"
                                              },
                                              "consecutive-gateway-failures": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of consecutive gateway failures (502, 503, 504 status codes) before a consecutive gateway failure ejection occurs. If this parameter is configured, then the consecutive gateway failures are counted separately from the consecutive 5xx errors for temporary blocking. If this parameter is set to zero then consecutive gateway failures do not lead to temporary blocking in this pool"
                                              }
                                            }
                                          },
                                          "egress-connection-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined egress-connection-profile."
                                          },
                                          "out-request-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the request screening case that is applied when the request is targeting an NF instance in this nf-pool"
                                          },
                                          "in-response-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the response screening case that is applied when the response is received from an NF instance in this nf-pool"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "failover-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Determines the failover behaviour in case of failure such as lack of response or error response from peer",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the failover-profile"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "request-time-budget": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "The maximum time in milliseconds a single request is allowed to take including retries, before SEPP considers it as timed out. The time starts when the request enters the SCP Worker and ends when the response leaves the SCP Worker. It includes the time for an SLF-lookup if one is required.",
                                            "default": 2000
                                          },
                                          "retry-condition": {
                                            "type": "object",
                                            "description": "Criteria for attempting a retry",
                                            "properties": {
                                              "http-status": {
                                                "type": "array",
                                                "description": "HTTP Status codes to trigger a retry",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 100,
                                                  "maximum": 999
                                                }
                                              },
                                              "reset": {
                                                "type": "boolean",
                                                "description": "If defined, retry when the peer does not respond at all",
                                                "default": true
                                              },
                                              "connect-failure": {
                                                "type": "boolean",
                                                "description": "If defined, retry in case of connection timeout or connection refused",
                                                "default": true
                                              },
                                              "refused-stream": {
                                                "type": "boolean",
                                                "description": "If defined, retry in case of response HTTP2 REFUSED_STREAM received from peer",
                                                "default": true
                                              }
                                            }
                                          },
                                          "target-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Specifies the maximum time in milliseconds a single request towards a specific target is allowed to take before considered to be timed out",
                                            "default": 2000
                                          },
                                          "preferred-host-retries-max": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Specifies the number of times to perform a retry to the preferred host",
                                            "default": 3
                                          },
                                          "preferred-host-retry-multiple-addresses": {
                                            "type": "boolean",
                                            "description": "Retry multiple addresses of preferred host. If set to true, retries will be spread across all addresses of the selected host.",
                                            "default": true
                                          },
                                          "target-nf-pool-reselects-max": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Specifies the number of reselects to perform among the hosts of the target-nf-pool",
                                            "default": 3
                                          },
                                          "last-resort-nf-pool-reselects-max": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Specifies the number of reselects to perform among the hosts of the last-resort nf-pool",
                                            "default": 3
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "nf-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Profile consisting of general parameters of the SCP instance and the services exposed by it, sent to the NRF at registration",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the NF profile"
                                          },
                                          "service-address-ref": {
                                            "type": "string",
                                            "description": "Service address on which the SCP listens for incoming requests"
                                          },
                                          "associated-nf-pool-ref": {
                                            "type": "array",
                                            "maxItems": 1,
                                            "description": "Reference to the associated nf-pool to be considered at NRF registration for discovered NF instances capacity aggregation. If it is not present, the configured capacity will be used instead.",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "chf-info": {
                                            "type": "object",
                                            "description": "Specific data for the CHF NF",
                                            "properties": {
                                              "supi-range": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Specifies the list of ranges of SUPIs that can be served by the CHF instance. If not specified, the CHF can serve any SUPI",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "integer",
                                                      "format": "uint32",
                                                      "minimum": 0,
                                                      "maximum": 2147483647,
                                                      "description": "ID uniquely identifying the SUPI range"
                                                    },
                                                    "supi-start": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]+$",
                                                      "description": "First value identifying the start of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                    },
                                                    "supi-end": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]+$",
                                                      "description": "Last value identifying the end of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                    },
                                                    "pattern": {
                                                      "type": "string",
                                                      "description": "Regular expression pattern representing the set of SUPIs belonging to this range. A SUPI value is considered part of the range if, and only if, the SUPI string fully matches the regular expression."
                                                    }
                                                  }
                                                }
                                              },
                                              "gpsi-range": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Specifies the list of ranges of GPSIs that can be served by the CHF instance. If not specified, the CHF can serve any GPSI",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "integer",
                                                      "format": "uint32",
                                                      "minimum": 0,
                                                      "maximum": 2147483647
                                                    },
                                                    "identity-start": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]+$",
                                                      "description": "First value identifying the start of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                    },
                                                    "identity-end": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]+$",
                                                      "description": "Last value identifying the end of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                    },
                                                    "pattern": {
                                                      "type": "string",
                                                      "description": "Regular expression pattern representing the set of identities belonging to this range. An identity value is considered part of the range if and only if the identity string fully matches the regular expression. To be used when identity is External Identifier or External Group Identifier or MSISDN."
                                                    }
                                                  }
                                                }
                                              },
                                              "plmn-range": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Specifies the list of ranges of PLMNs that can be served by the CHF instance. If not specified, the CHF can serve any PLMN",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "id": {
                                                      "type": "integer",
                                                      "format": "uint32",
                                                      "minimum": 0,
                                                      "maximum": 2147483647
                                                    },
                                                    "plmn-start": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                      "description": "First value identifying the start of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12340'."
                                                    },
                                                    "plmn-end": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                      "description": "Last value identifying the end of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12349'."
                                                    },
                                                    "pattern": {
                                                      "type": "string",
                                                      "description": "Regular expression pattern representing the set of PLMNs belonging to this range. A PLMN value is considered part of the range if and only if the PLMN string, formatted as <MCC><MNC>, fully matches the regular expression. For example '^1234[0-9]$'"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "scp-info": {
                                            "type": "object",
                                            "description": "Specific data for the SCP NF",
                                            "properties": {
                                              "scp-prefix": {
                                                "type": "string",
                                                "description": "Optional deployment-specific string used to construct the apiRoot of this SCP"
                                              },
                                              "ipv4-address": {
                                                "type": "array",
                                                "description": "IPv4 address reachable through the SCP",
                                                "items": {
                                                  "type": "string",
                                                  "pattern": "^[0-9\\.]*$"
                                                }
                                              },
                                              "ipv6-prefix": {
                                                "type": "array",
                                                "description": "IPv6 prefix reachable through the SCP",
                                                "items": {
                                                  "type": "string",
                                                  "allOf": [
                                                    {
                                                      "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                    },
                                                    {
                                                      "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                    }
                                                  ]
                                                }
                                              },
                                              "ipv4-addr-range": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "IPv4 address range reachable through the SCP",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ipv4-addr-start": {
                                                      "type": "string",
                                                      "format": "ipv4"
                                                    },
                                                    "ipv4-addr-end": {
                                                      "type": "string",
                                                      "format": "ipv4"
                                                    }
                                                  }
                                                }
                                              },
                                              "ipv6-prefix-range": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "IPv6 prefix range reachable through the SCP",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "ipv6-prefix-start": {
                                                      "type": "string",
                                                      "allOf": [
                                                        {
                                                          "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                        },
                                                        {
                                                          "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                        }
                                                      ]
                                                    },
                                                    "ipv6-prefix-end": {
                                                      "type": "string",
                                                      "allOf": [
                                                        {
                                                          "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                        },
                                                        {
                                                          "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "served-nf-set-id": {
                                                "type": "array",
                                                "description": "The set identity of the NF served by the SCP",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "address-domain": {
                                                "type": "array",
                                                "description": "Address domain name(s) reachable through the SCP",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "remote-plmn": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Remote PLMN(s) reachable through the SCP",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "mcc": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{3}$",
                                                      "description": "Specifies the mobile country code of the PLMN"
                                                    },
                                                    "mnc": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{2,3}$",
                                                      "description": "Specifies the mobile network code of the PLMN"
                                                    }
                                                  }
                                                }
                                              },
                                              "scp-capabilities": {
                                                "type": "object",
                                                "description": "If present, scp capabilities are published in nrf during registration. If present but no scp capabilities are defined, then an empty array is sent to NRF.",
                                                "properties": {
                                                  "indirect-com-with-deleg-disc": {
                                                    "type": "boolean",
                                                    "description": "If true, scp has the capability for delegated discovery support"
                                                  }
                                                }
                                              },
                                              "ip-reachability": {
                                                "type": "string",
                                                "description": "Type of IP addresses reachable through the SCP in the SCP domain(s) it belongs to"
                                              },
                                              "scp-domain-info": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "SCP domain specific information of the SCP",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "scp-domain-ref": {
                                                      "type": "string",
                                                      "description": "Reference to a defined SCP domain"
                                                    },
                                                    "scp-prefix": {
                                                      "type": "string",
                                                      "description": "Optional deployment-specific string used to construct the apiRoot of this SCP"
                                                    },
                                                    "service-address-ref": {
                                                      "type": "array",
                                                      "maxItems": 1,
                                                      "description": "Reference to a defined service-address",
                                                      "items": {
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "nf-service": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "The configuration of NF services, proxied through the SCP NF instance, which can be discovered by other NFs",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "service-version": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The supported versions of this NF service. Detailed information on the default versions used can be found in CPI document 'Configuring the SCP'.",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "api-version-in-uri": {
                                                        "type": "string",
                                                        "description": "Version of the service instance to be used in the URI for accessing the API"
                                                      },
                                                      "api-full-version": {
                                                        "type": "string",
                                                        "description": "Full version number of the API"
                                                      }
                                                    },
                                                    "required": [
                                                      "api-full-version",
                                                      "api-version-in-uri"
                                                    ]
                                                  }
                                                },
                                                "service-address-ref": {
                                                  "type": "array",
                                                  "maxItems": 1,
                                                  "description": "Service address on which the SCP listens for incoming requests",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "service-instance-id": {
                                                  "type": "string",
                                                  "description": "Name uniquely identifying this service instance."
                                                },
                                                "service-name": {
                                                  "enum": [
                                                    "default",
                                                    "nnrf-nfm",
                                                    "nnrf-disc",
                                                    "nnrf-oauth2",
                                                    "nudm-sdm",
                                                    "nudm-uecm",
                                                    "nudm-ueau",
                                                    "nudm-ee",
                                                    "nudm-pp",
                                                    "nudm-niddau",
                                                    "nudm-mt",
                                                    "namf-comm",
                                                    "namf-evts",
                                                    "namf-mt",
                                                    "namf-loc",
                                                    "nsmf-pdusession",
                                                    "nsmf-event-exposure",
                                                    "nsmf-nidd",
                                                    "nausf-auth",
                                                    "nausf-sorprotection",
                                                    "nausf-upuprotection",
                                                    "nnef-pfdmanagement",
                                                    "nnef-smcontext",
                                                    "nnef-eventexposure",
                                                    "npcf-am-policy-control",
                                                    "npcf-smpolicycontrol",
                                                    "npcf-policyauthorization",
                                                    "npcf-bdtpolicycontrol",
                                                    "npcf-eventexposure",
                                                    "npcf-ue-policy-control",
                                                    "nsmsf-sms",
                                                    "nnssf-nsselection",
                                                    "nnssf-nssaiavailability",
                                                    "nudr-dr",
                                                    "nudr-group-id-map",
                                                    "nlmf-loc",
                                                    "n5g-eir-eic",
                                                    "nbsf-management",
                                                    "nchf-spendinglimitcontrol",
                                                    "nchf-convergedcharging",
                                                    "nchf-offlineonlycharging",
                                                    "nnwdaf-eventssubscription",
                                                    "nnwdaf-analyticsinfo",
                                                    "ngmlc-loc",
                                                    "nucmf-provisioning",
                                                    "nucmf-uecapabilitymanagement",
                                                    "nhss-sdm",
                                                    "nhss-uecm",
                                                    "nhss-ueau",
                                                    "nhss-ee",
                                                    "nhss-ims-sdm",
                                                    "nhss-ims-uecm",
                                                    "nhss-ims-ueau",
                                                    "nsepp-telescopic",
                                                    "nsoraf-sor",
                                                    "nspaf-secured-packet",
                                                    "nudsf-dr",
                                                    "nnssaaf-nssaa"
                                                  ],
                                                  "description": "Name identifying the type of NF service."
                                                },
                                                "scheme": {
                                                  "enum": [
                                                    "http",
                                                    "https"
                                                  ],
                                                  "description": "Specifies the URI scheme"
                                                },
                                                "admin-state": {
                                                  "enum": [
                                                    "active",
                                                    "undiscoverable"
                                                  ],
                                                  "description": "Administrative state on NFService level"
                                                },
                                                "api-prefix": {
                                                  "type": "string",
                                                  "description": "Optional path used to construct the API URI for this service"
                                                },
                                                "allowed-plmn": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "mcc": {
                                                        "type": "string",
                                                        "pattern": "^[0-9]{3}$",
                                                        "description": "Specifies the mobile country code of the PLMN"
                                                      },
                                                      "mnc": {
                                                        "type": "string",
                                                        "pattern": "^[0-9]{2,3}$",
                                                        "description": "Specifies the mobile network code of the PLMN"
                                                      }
                                                    }
                                                  }
                                                },
                                                "allowed-nf-type": {
                                                  "type": "array",
                                                  "description": "NF types (according to TS 29.510) which are allowed to access the NF service. If not specified, NFs of any type are allowed to access the NF service.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "allowed-nf-domain": {
                                                  "type": "array",
                                                  "description": "NF domain names which are allowed to access the NF service. If not specified, If not specified, NFs in any domain are allowed to access the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "allowed-nssai": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sst": {
                                                        "type": "integer",
                                                        "format": "uint8",
                                                        "minimum": 0,
                                                        "maximum": 255,
                                                        "description": "Specifies the slice service type of the S-NSSAI"
                                                      },
                                                      "sd": {
                                                        "type": "string",
                                                        "pattern": "^[A-Fa-f0-9]{6}$",
                                                        "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                      }
                                                    },
                                                    "required": [
                                                      "sst"
                                                    ]
                                                  }
                                                },
                                                "allowed-nssai-1": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "sst": {
                                                        "type": "integer",
                                                        "format": "uint8",
                                                        "minimum": 0,
                                                        "maximum": 255,
                                                        "description": "Specifies the slice service type of the S-NSSAI"
                                                      },
                                                      "sd": {
                                                        "type": "string",
                                                        "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                        "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                        "default": "-"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "sst"
                                                    ]
                                                  }
                                                },
                                                "service-priority": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1,
                                                  "maximum": 65535,
                                                  "description": "Service priority of this NF service relative to other NF services of the same type, to be used for NF service selection. Lower values indicate a higher priority"
                                                },
                                                "capacity": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1,
                                                  "maximum": 65535,
                                                  "description": "Static capacity information of this NF service expressed as a weight relative to other services of the same type, to be used for NF selection"
                                                }
                                              },
                                              "required": [
                                                "scheme",
                                                "service-instance-id",
                                                "service-name"
                                              ]
                                            }
                                          },
                                          "nf-instance-name": {
                                            "type": "string",
                                            "description": "Human readable name of the NF instance"
                                          },
                                          "nf-type": {
                                            "type": "string",
                                            "description": "The type of the NF instance (according to TS 29.510)"
                                          },
                                          "admin-state": {
                                            "enum": [
                                              "active",
                                              "undiscoverable"
                                            ],
                                            "description": "Administrative state on NF level"
                                          },
                                          "nf-specific-info": {
                                            "type": "object",
                                            "description": "Deprecated, use nf-profile->chf-info and nf-profile->bsf-info instead, specific data for the NF instance type",
                                            "properties": {
                                              "chf-info": {
                                                "type": "object",
                                                "description": "Specific data for the CHF NF",
                                                "properties": {
                                                  "supi-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of SUPIs that can be served by the CHF instance. If not specified, the CHF can serve any SUPI",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295,
                                                          "description": "ID uniquely identifying the SUPI range"
                                                        },
                                                        "supi-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "First value identifying the start of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                        },
                                                        "supi-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "Last value identifying the end of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of SUPIs belonging to this range. A SUPI value is considered part of the range if, and only if, the SUPI string fully matches the regular expression."
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "gpsi-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of GPSIs that can be served by the CHF instance. If not specified, the CHF can serve any GPSI",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295
                                                        },
                                                        "identity-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "First value identifying the start of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                        },
                                                        "identity-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "Last value identifying the end of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of identities belonging to this range. An identity value is considered part of the range if and only if the identity string fully matches the regular expression. To be used when identity is External Identifier or External Group Identifier or MSISDN."
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "plmn-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of PLMNs that can be served by the CHF instance. If not specified, the CHF can serve any PLMN",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295
                                                        },
                                                        "plmn-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                          "description": "First value identifying the start of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12340'."
                                                        },
                                                        "plmn-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                          "description": "Last value identifying the end of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12349'."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of PLMNs belonging to this range. A PLMN value is considered part of the range if and only if the PLMN string, formatted as <MCC><MNC>, fully matches the regular expression. For example '^1234[0-9]$'"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "bsf-info": {
                                                "type": "object",
                                                "description": "Specific data for the BSF NF",
                                                "properties": {
                                                  "dnn": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "ip-domain": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "ipv4-addr-range": {
                                                    "type": "object",
                                                    "properties": {
                                                      "ipv4-addr-start": {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      },
                                                      "ipv4-addr-end": {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      }
                                                    }
                                                  },
                                                  "ipv6-prefix-range": {
                                                    "type": "object",
                                                    "properties": {
                                                      "ipv6-prefix-start": {
                                                        "type": "string",
                                                        "allOf": [
                                                          {
                                                            "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                          },
                                                          {
                                                            "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                          }
                                                        ]
                                                      },
                                                      "ipv6-prefix-end": {
                                                        "type": "string",
                                                        "allOf": [
                                                          {
                                                            "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                          },
                                                          {
                                                            "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "requested-heartbeat-timer": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Requested time, in seconds, expected between two heart-beat messages from the NF instance to the NRF"
                                          },
                                          "plmn": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "PLMN(s) of the NF instance. If not provided, the PLMN ID(s) of the PLMN of the NRF are assumed for this NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "mcc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{3}$",
                                                  "description": "Specifies the mobile country code of the PLMN"
                                                },
                                                "mnc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{2,3}$",
                                                  "description": "Specifies the mobile network code of the PLMN"
                                                }
                                              }
                                            }
                                          },
                                          "snssai": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Deprecated, use snssai-1 instead. S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                }
                                              },
                                              "required": [
                                                "sst"
                                              ]
                                            }
                                          },
                                          "snssai-1": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                  "default": "-"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "sst"
                                              ]
                                            }
                                          },
                                          "allowed-plmn": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "mcc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{3}$",
                                                  "description": "Specifies the mobile country code of the PLMN"
                                                },
                                                "mnc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{2,3}$",
                                                  "description": "Specifies the mobile network code of the PLMN"
                                                }
                                              }
                                            }
                                          },
                                          "allowed-nf-type": {
                                            "type": "array",
                                            "description": "NF types (according to TS 29.510) which are allowed to access the NF instance. If not specified, NFs of any type are allowed to access the NF",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "allowed-nf-domain": {
                                            "type": "array",
                                            "description": "NF domain names which are allowed to access the NF instance. If not specified, NFs in any domain are allowed to access the NF",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "allowed-nssai": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                }
                                              },
                                              "required": [
                                                "sst"
                                              ]
                                            }
                                          },
                                          "allowed-nssai-1": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                  "default": "-"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "sst"
                                              ]
                                            }
                                          },
                                          "nf-set-id": {
                                            "type": "array",
                                            "description": "NF Set Identifiers for this NF used for NF registration",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "nsi": {
                                            "type": "array",
                                            "description": "NSI identities of the Network Function. If not provided, the NF can serve any NSI",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "service-priority": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Service priority of this NF instance, in the range of 0-65535, relative to other NF instances of the same type, to be used for NF selection. Lower values indicate a higher priority"
                                          },
                                          "capacity": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Static capacity information of this NF instance, in the range of 0-65535, expressed as a weight relative to other NF instances of the same type"
                                          },
                                          "locality": {
                                            "type": "string",
                                            "description": "Operator defined information about the location of the NF instance. This information can be used by requesting NFs which prefer services of those NFs in the same geographical location or data center"
                                          },
                                          "scp-domain": {
                                            "type": "array",
                                            "description": "The SCP domain(s) the SCP belongs to or the SCP domain the NF (other than SCP) belongs to",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "nf-type",
                                          "service-address-ref"
                                        ]
                                      }
                                    },
                                    "nrf-group": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "The NRF group specifies all relevant information of NRFs that are available to this SCP instance. Regarding the Nnrf_NFManagement interface, it determines the NRF registration behavior and triggers the NRF registration for the NF instance specified in the nf-profile",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the NRF registration group"
                                          },
                                          "nf-profile-ref": {
                                            "type": "string",
                                            "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on NRF level will override the corresponding attributes of the NF profile on NRF group level"
                                          },
                                          "dns-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined dns-profile that will be used for DNS resolution of the FQDN of the NRFs in the NRF group"
                                          },
                                          "nrf": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "The configuration for a single NRF within this NRF group",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the NRF"
                                                },
                                                "nf-profile-ref": {
                                                  "type": "string",
                                                  "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on the individual NRF level will override the corresponding attributes of the NF profile on the NRF group level"
                                                },
                                                "priority": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 99,
                                                  "description": "Priority of this NRF for NF registration and other NRF service requests, relative to other NRFs in the same NRF group. In regard to the Nnrf_NFManagement service, the NRF with the highest priority is the primary NRF to which the NF instance will register. The remaining NRFs are used in case of failover, in order of priority. Lower values indicate a higher priority."
                                                },
                                                "fqdn": {
                                                  "type": "string",
                                                  "format": "hostname",
                                                  "description": "FQDN of the NRF"
                                                },
                                                "scheme": {
                                                  "enum": [
                                                    "http",
                                                    "https"
                                                  ],
                                                  "description": "Specifies the URI scheme to be used when contacting this NRF"
                                                },
                                                "ip-endpoint": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "IP endpoint of the NRF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name uniquely identifying the ip-endpoint."
                                                      },
                                                      "port": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Port number"
                                                      },
                                                      "ipv4-address": {
                                                        "type": "string",
                                                        "pattern": "^[0-9\\.]*$",
                                                        "description": "IPv4 address"
                                                      },
                                                      "ipv6-address": {
                                                        "type": "string",
                                                        "pattern": "^[0-9a-fA-F:\\.]*$",
                                                        "description": "IPv6 address"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "port"
                                                    ]
                                                  }
                                                },
                                                "retry-timeout": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1000,
                                                  "maximum": 65535,
                                                  "description": "The time duration in milliseconds after which a request is considered unsuccessful and a retry to the same NRF is sent.",
                                                  "default": 1500
                                                },
                                                "max-retries": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 100,
                                                  "description": "The number of retries sent to the same NRF before failover to another NRF.",
                                                  "default": 0
                                                },
                                                "nrf-instance-id": {
                                                  "type": "string",
                                                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                                  "description": "NRF instance id uniquely identifying the NRF"
                                                }
                                              },
                                              "required": [
                                                "ip-endpoint",
                                                "name",
                                                "priority",
                                                "scheme"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "nrf"
                                        ]
                                      }
                                    },
                                    "nrf-service": {
                                      "type": "object",
                                      "description": "Defines which NRF services are used by this NF instance, referencing groups of NRFs that provide the respective service",
                                      "properties": {
                                        "nf-management": {
                                          "type": "object",
                                          "description": "Triggers the registration of this NF instance towards NRF and the usage of the Nnrf_NfManagement service",
                                          "properties": {
                                            "nrf-group-ref": {
                                              "type": "array",
                                              "minItems": 1,
                                              "maxItems": 32,
                                              "description": "The groups of NRFs providing the Nnrf_NFManagement service",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "nrf-group-ref"
                                          ]
                                        },
                                        "nf-discovery": {
                                          "type": "object",
                                          "description": "Enables the usage of the Nnrf_NfDiscovery service",
                                          "properties": {
                                            "nrf-group-ref": {
                                              "type": "string",
                                              "description": "The group of NRFs providing the Nnrf_NFDiscovery service"
                                            }
                                          },
                                          "required": [
                                            "nrf-group-ref"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "ingress-connection-profile",
                                    "ingress-connection-profile-ref",
                                    "name",
                                    "own-network",
                                    "routing-case",
                                    "service-address"
                                  ]
                                }
                              }
                            }
                          },
                          "sctp": {
                            "type": "object",
                            "description": "The sctp is an abstraction of SCTP configuration.",
                            "properties": {
                              "user-label": {
                                "type": "string",
                                "description": "Label for free use."
                              },
                              "sctp-profile": {
                                "type": "array",
                                "uniqueItems": true,
                                "minItems": 1,
                                "maxItems": 255,
                                "description": "Part of the configuration applied to SCTP entities. The sctp-profile can be shared by one or more sctp-remote-endpoint. sctp-profile id 0 is created automatically and can not be removed, this profile is used as default if another one is not specified by an SCTP user",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 0,
                                      "maximum": 254,
                                      "description": "The identifier of the sctp-profile."
                                    },
                                    "min-rto": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 10,
                                      "maximum": 5000,
                                      "description": "The minimum allowed value for RTO. RFC 4960 defines this parameter as RTO.Min.",
                                      "default": 400
                                    },
                                    "max-rto": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 11,
                                      "maximum": 120000,
                                      "description": "The maximum allowed value for RTO. RFC 4960 defines this parameter as RTO.Max.",
                                      "default": 3200
                                    },
                                    "init-rto": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 10,
                                      "maximum": 120000,
                                      "description": "The initial value for RTO. RFC 4960 defines this parameter as RTO.Initial.",
                                      "default": 500
                                    },
                                    "rto-alpha-index": {
                                      "enum": [
                                        "alpha-1-2nd",
                                        "alpha-1-4th",
                                        "alpha-1-8th",
                                        "alpha-1-16th"
                                      ],
                                      "description": "RTO alpha index (mapped to RTO.Alpha). This parameter is used to compute the value of the SRTT (Smoothed Round-Trip Time) for a particular destination address. It is used to weight up the RTT (Round-Trip Time) measures and its value must be between zero and one. A value close to one gives more importance to the last RTT measure. See init-rto",
                                      "default": "alpha-1-8th"
                                    },
                                    "rto-beta-index": {
                                      "enum": [
                                        "beta-1-2nd",
                                        "beta-1-4th",
                                        "beta-1-8th",
                                        "beta-1-16th"
                                      ],
                                      "description": "RTO beta index (mapped to RTO.Beta). This parameter is used to compute the value of the RTTVar (Round-Trip Time Variation) of a destination address. Similarly to rto-alpha-index, it is used to weight up some of the terms within the equation used to compute the RTTVar: RTTVar = (1 - RTO.Beta)*RTTVar + RTO.Beta*|SRTT - lastRTT| A value close to 1 gives more importance to the last observed variation. See init-rto",
                                      "default": "beta-1-4th"
                                    },
                                    "cookie-life": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 1000,
                                      "maximum": 180000,
                                      "description": "Valid cookie life. RFC 4960 defines this parameter as Valid.Cookie.Life. The lifespan of the State Cookie sent in the INIT_ACK chunk. It is used to limit the valid amount of time between the sending of the INIT_ACK chunk and the reception of a COOKIE_ECHO chunk when establishing an association. If a COOKIE_ECHO chunk arrives after cookie-life delay since the INIT_ACK was sent, it is discarded and, therefore, no association is established.",
                                      "default": 60000
                                    },
                                    "increment-cookie-life": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 0,
                                      "maximum": 180000,
                                      "description": "Allowed increment of parameter cookie-life. The sender of an INIT chunk may request the remote endpoint to increase a cookie life-span (for instance, if a previous attempt to connect failed due to a stale-cookie error). If the value sent in the \"Cookie Preservative\" field of the INIT chunk is less than or equal to this parameter, the receiver of the INIT will increase the valid cookie life in the number of milliseconds specified. If the value present in the \"Cookie Preservative\" is greater than this parameter, the cookie life shall be incremented in the number of milliseconds specified by the parameter. Some considerations about this parameter: for security reasons the server may want to ignore any increase on the cookie life-span (increasing the value of the cookie life-span means more time for an attacker to break our key), so the value of this parameter would be set to zero.",
                                      "default": 0
                                    },
                                    "assoc-max-rtx": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 1,
                                      "maximum": 20,
                                      "description": "Association maximum number of consecutive unsuccessful retransmissions packets. RFC 4960 defines this parameter as Association.Max.Retrans. If the number of retransmissions becomes greater than this value, the remote peer is considered as unreachable and the association is closed down.",
                                      "default": 4
                                    },
                                    "max-init-rtx": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 1,
                                      "maximum": 16,
                                      "description": "Maximum number of retransmissions during the establishing phase of an association. RFC 4960 defines this parameter as Max.Init.Retransmits.",
                                      "default": 8
                                    },
                                    "max-shutdown-rtx": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 1,
                                      "maximum": 20,
                                      "description": "Maximum number of retransmissions during the shutdown phase of an association.",
                                      "default": 5
                                    },
                                    "heartbeat-enabled": {
                                      "type": "boolean",
                                      "description": "States whether sending of HEARTBEAT is activated. true: Activates HEARTBEATs for SCTP endpoint. false: Disables HEARTBEATs for SCTP endpoint.",
                                      "default": true
                                    },
                                    "heartbeat-interval": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 10,
                                      "maximum": 1800000,
                                      "description": "SCTP HEARTBEAT interval. RFC 4960 defines this parameter as HB.interval. A duration of time interval between cyclic HEARTBEATs",
                                      "default": 5000
                                    },
                                    "heartbeat-timer-reduction-rate": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 0,
                                      "maximum": 100,
                                      "description": "Adjusts HEARTBEAT interval decreasing. This parameter sets the number of percents on which current HEARTBEAT interval should be decreased (comparing to current value) with each new HEARTBEAT attempt if no HEARTBEAT acknowledgment is received.",
                                      "default": 50
                                    },
                                    "heartbeat-smooth-factor": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 0,
                                      "maximum": 100,
                                      "description": "Allows to smooth HEARTBEATs in time. It is recommended to setup non-zero heartbeat-smooth-factor to avoid burst of HEARTBEATs.",
                                      "default": 50
                                    },
                                    "max-in-streams": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 1,
                                      "maximum": 65535,
                                      "description": "Maximum number of inbound streams for an association. A Stream is a unidirectional logical channel established between two SCTP endpoints, within which all user messages are delivered in sequence except for those submitted to the unordered delivery service. At SCTP association establishment the SCTP endpoints negotiate the number of Streams used in each direction within the SCTP association.",
                                      "default": 17
                                    },
                                    "max-out-streams": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 1,
                                      "maximum": 65535,
                                      "description": "Maximum number of outbound streams for an association. A Stream is a unidirectional logical channel established between two SCTP endpoints, within which all user messages are delivered in sequence except for those submitted to the unordered delivery service. At SCTP association establishment the SCTP endpoints negotiate the number of Streams used in each direction within the SCTP association.",
                                      "default": 17
                                    },
                                    "transmit-buffer-size": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 2,
                                      "maximum": 10000,
                                      "description": "Outgoing buffer size of an association. Also known as \"M\". The maximum amount of data that SCTP can store before discarding user messages. A new user-data is accepted if its size is not greater than (transmit-buffer-size - size of currently buffered data), otherwise it is discarded.",
                                      "default": 10000
                                    },
                                    "transmit-buffer-threshold": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 1,
                                      "maximum": 10000,
                                      "description": "Congestion threshold of transmit-buffer-size. Upon exceeding this threshold the user of SCTP will be asked to stop sending data. This condition will persist until the occupancy of the transmit buffer drops below congestion-ceased-percent * transmit-buffer-threshold.",
                                      "default": 7500
                                    },
                                    "congestion-ceased-percent": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 1,
                                      "maximum": 100,
                                      "description": "Congestion ceased level of transmit-buffer-threshold in percent. See also description of transmit-buffer-threshold and transmit-buffer-size.",
                                      "default": 85
                                    },
                                    "initial-arwnd": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 1500,
                                      "maximum": 1048576,
                                      "description": "Value of the initial advertised receiver window credit (a-rwnd sent in the INIT message). The Advertised Receiver Window Credit is the field in INIT, INIT ACK and SACK chunks that indicates the current available space in the receiver buffer for a specific association. The a-rwnd is at all times equal to or less than the total allocated size of the receiver buffer for specific association. During lifetime of association, receiver buffer space advertised by a-rwnd in INIT or INIT ACK chunks can only be decreased due to received DATA (and not due to some administrative, configuration or management actions).",
                                      "default": 60000
                                    },
                                    "max-burst": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 1,
                                      "maximum": 16384,
                                      "description": "Maximum number of burst packets (Max.Burst).",
                                      "default": 4
                                    },
                                    "sack-timer": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 500,
                                      "description": "Time delay for sending the Selective Acknowledgement (SACK). Time is measured from reception of the DATA chunk to sending of the SACK chunk. If sack-timer is zero then SACK will be sent immediately.",
                                      "default": 40
                                    },
                                    "bundling-enabled": {
                                      "type": "boolean",
                                      "description": "States whether bundling is allowed for an endpoint. Bundling is the act of placing more than one chunk within an SCTP packet. The bundled chunks can be chunks carrying SCTP user's data or chunks caring SCTP control information such as, for example, data reception selective acknowledgement (SACK). Whether bundling of the DATA chunks occurs depends on the number of DATA chunks available for transmission in the send buffer as well as on whether the Bundling feature is invoked. true: An endpoint bundles chunks by including multiple chunks in one outbound SCTP packet. false: Bundling is not used.",
                                      "default": true
                                    },
                                    "bundling-timer": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 10000,
                                      "description": "Time interval to bundle data to one SCTP packet. Interval during which SCTP buffers data chunks in order to send them bundled in one SCTP packet. SCTP will buffer data chunks until either of the following occurs: - The bundling delay time expires. - The size of buffered data chunks reaches or exceeds the maximum size of the SCTP packet. In case there are data chunks still buffered after the transmission of a maximum sized SCTP packet, the bundling timer is restarted. Otherwise, if the send buffer is emptied, the bundling timer is stopped and restarted again when the first data chunk is received and buffered for bundling purpose. For SCTP implementations that implement the Nagle-like algorithm (RFC 6458), upon arrival of a SACK that acknowledges all outstanding data, if the bundling timer is running and data chunks are stored in the send buffer, the bundling delay timer is stopped and the buffered data chunks are bundled and sent in one SCTP packet. Note that Nagle algorithm is specified in RFC 1122. If bundling-timer is zero then bundled packet will be sent with no delay.",
                                      "default": 16
                                    },
                                    "path-selection-adjustment": {
                                      "type": "string",
                                      "description": "Bitmask which defines path selection properties",
                                      "default": ""
                                    },
                                    "ipv4-pdu": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 65515,
                                      "description": "Maximum size of the SCTP PDU for IPv4 paths. This is the size of IP MTU without underlying overhead like regular IPv4 header, IPsec, etc. For example, if vNIC MTU is 1500, then this parameter shall be calculated as: - if over IP: 1500 - 20 = 1480; - if IPIP over IPSec (AES, SHA-256): 1500 - 86 - 20 = 1394; If this parameter is set to zero, MTU size will be retrieved from network interface (which corresponds to the used IP address) and SCTP PDU size will be calculated as MTU minus regular IPv4 header size. Setting this parameter to zero requires the parameter ipv6-pdu to be also set to zero.",
                                      "default": 1300
                                    },
                                    "ipv6-pdu": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 65495,
                                      "description": "Maximum size of the SCTP PDU for IPv6 paths. This is the size of IP MTU without underlying overhead like regular IPv6 header, IPsec, etc. For example, if vNIC MTU is 1500, then this parameter shall be calculated as: - if over IP: 1500 - 40 = 1460; - if IPIP over IPSec (AES, SHA-256): 1500 - 106 - 40 = 1354; If this parameter is set to zero, MTU size will be retrieved from network interface (which corresponds to the used IP address) and SCTP PDU size will be calculated as MTU minus regular IPv6 header size. Setting this parameter to zero requires the parameter ipv4-pdu to be also set to zero.",
                                      "default": 1300
                                    },
                                    "dscp": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 0,
                                      "maximum": 64,
                                      "description": "Differentiated Service Code Point This value represents the DSCP related to the Quality of Service. The dscp value is applied to all outgoing traffic. 64 is special value: if DSCP value is not provided in EINSS7_00SctpXInitializeReq then zero DSCP value will be used on a socket. If DSCP value is provided in EINSS7_00SctpXInitializeReq then the value from EINSS7_00SctpXInitializeReq will be used on a socket. If dscp is not equal to 64 in the configuration then any DSCP value provided through EINSS7_00SctpXInitializeReq call will be ignored and the value from the configuration will be used instead.",
                                      "default": 64
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "incoming-association-handling": {
                                "type": "array",
                                "uniqueItems": true,
                                "maxItems": 65535,
                                "description": "Settings for incoming association handling. Defines action for handling of incoming SCTP INIT (associations established by the remote side). Each instance is used to associate incoming association (which is established by the remote side) with sctp-profile or drop incoming association.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 1,
                                      "maximum": 65535
                                    },
                                    "port-number": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 65535,
                                      "description": "Port number of the remote endpoint. Zero value means the port number will not be used to match incoming INIT, address will be matched only.",
                                      "default": 2905
                                    },
                                    "address": {
                                      "type": "array",
                                      "minItems": 1,
                                      "maxItems": 16,
                                      "description": "List of peer addresses or peer host names. Wildcards are supported in IP address: \"*\" means zero or more decimal (in IPv4) or hexadecimal (in IPv6) numbers; \"?\" means any decimal (in IPv4) or hexadecimal (in IPv6) number. Examples: 192.168.*.1 match 192.168.0.1-192.168.255.1 192.168.1*.1 match 192.168.10.1-192.168.199.1 192.168.1?.1 match 192.168.10.1-192.168.19.1 192.168.??.1 match 192.168.10.1-192.168.99.1 2031:0:130F:0:0:9C:8A:* match 2031:0:130F:0:0:9C:8A:0-2031:0:130F:0:0:9C:8A:FFFF 2031:0:130F:0:0:9C:8A:? match 2031:0:130F:0:0:9C:8A:0-2031:0:130F:0:0:9C:8A:F",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "format": "ipv4"
                                          },
                                          {
                                            "format": "ipv6"
                                          },
                                          {
                                            "format": "hostname"
                                          },
                                          {
                                            "type": "string",
                                            "pattern": "^[0-9\\.]*$"
                                          },
                                          {
                                            "type": "string",
                                            "pattern": "^[0-9a-fA-F:\\.]*$"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      }
                                    },
                                    "profile": {
                                      "type": "integer",
                                      "description": "Reference to sctp-profile.",
                                      "default": 0
                                    },
                                    "init-chunk-processing-mode": {
                                      "enum": [
                                        "use-association-sctp-profile",
                                        "use-endpoint-sctp-profile",
                                        "drop-incoming-init"
                                      ],
                                      "description": "Defines how SCTP shall handle incoming INIT chunk matched by port-number, address and match-type.",
                                      "default": "use-association-sctp-profile"
                                    },
                                    "match-type": {
                                      "enum": [
                                        "all",
                                        "any"
                                      ],
                                      "description": "Defines IP addresses matching type.",
                                      "default": "all"
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    }
                                  },
                                  "required": [
                                    "address",
                                    "id"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "sctp-profile"
                            ]
                          },
                          "sepp-function": {
                            "type": "object",
                            "description": "Configuration settings for the Security Edge Protection Proxy NF",
                            "properties": {
                              "nf-instance": {
                                "type": "array",
                                "uniqueItems": true,
                                "maxItems": 1,
                                "description": "The SEPP instance defines the behavior of the SEPP NF as well as the NRF registration behavior",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "pattern": "^[^.]+$",
                                      "description": "Name identifying the SEPP instance"
                                    },
                                    "nf-peer-info": {
                                      "type": "object",
                                      "description": "Defines the required data for 3gpp-Sbi-NF-Peer-Info header in a global level",
                                      "properties": {
                                        "out-message-handling": {
                                          "enum": [
                                            "on",
                                            "off"
                                          ],
                                          "description": "A switch to define the header handling in a global level",
                                          "default": "off"
                                        }
                                      }
                                    },
                                    "nf-instance-id": {
                                      "type": "string",
                                      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                      "description": "A Universally Unique IDentifier in the string representation defined in RFC 4122. The canonical representation uses lower case characters. The following is an example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 Setting this property is optional. It has a meaning for how the SEPP registers in its NRF(s): If not set, an automatically generated NF instance ID (a different one for each NRF group) is used for the registration. If set, this is used for the registration rather than the automatically generated NF instance IDs of the NRF groups."
                                    },
                                    "dns-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Settings for DNS resolution of producers.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the dns-profile"
                                          },
                                          "ip-family-resolution": {
                                            "type": "array",
                                            "minItems": 1,
                                            "maxItems": 2,
                                            "description": "IP family for the DNS resolution of an FQDN",
                                            "items": {
                                              "enum": [
                                                "ipv4",
                                                "ipv6"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "ip-family-resolution",
                                          "name"
                                        ]
                                      }
                                    },
                                    "dns-profile-ref": {
                                      "type": "string",
                                      "description": "Reference to a defined dns-profile that will be used for DNS resolution on producers of all nf-pools."
                                    },
                                    "ingress-connection-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "Connection profile for ingress traffic cases",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the ingress-connection-profile"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "max-connection-duration": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "The maximum duration of an incoming TCP connection. The duration is defined as a period since a connection was established. Default value zero means that no time limit is imposed",
                                            "default": 0
                                          },
                                          "hpack-table-size": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "Maximum table size (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values range from 0 to 2147483647 (2^31 - 1). 0 effectively disables header compression."
                                          },
                                          "max-concurrent-streams": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 2147483647,
                                            "description": "Maximum concurrent streams allowed for peer on one HTTP/2 connection. If the limit is reached, it is treated as stream error",
                                            "default": 2147483647
                                          },
                                          "connection-idle-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The period in which there are no active HTTP requests. When the idle timeout is reached the connection will be closed. To disable idle timeouts explicitly set this to 0.",
                                            "default": 3600
                                          },
                                          "tcp-keepalive": {
                                            "type": "object",
                                            "description": "TCP-keepalive settings",
                                            "properties": {
                                              "probes": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead",
                                                "default": 6
                                              },
                                              "time": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds a connection needs to be idle before keep-alive probes start being sent",
                                                "default": 5
                                              },
                                              "interval": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds between keep-alive probes",
                                                "default": 5
                                              }
                                            }
                                          },
                                          "dscp-marking": {
                                            "type": "integer",
                                            "format": "uint8",
                                            "minimum": 0,
                                            "maximum": 63,
                                            "description": "DSCP value used for IP packets sent over this connection"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "ingress-connection-profile-ref": {
                                      "type": "string",
                                      "description": "Reference to a defined ingress-connection-profile"
                                    },
                                    "egress-connection-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Connection profile for egress traffic cases",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the egress-connection-profile"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "hpack-table-size": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "Maximum table size (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values range from 0 to 2147483647 (2^31 - 1). 0 effectively disables header compression."
                                          },
                                          "max-requests": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 16384,
                                            "description": "The maximum number of requests that can be outstanding per worker pod to all members of a pool",
                                            "default": 16384
                                          },
                                          "max-pending-requests": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 16384,
                                            "description": "The maximum number of requests per worker pod that can be waiting for establishment of a connection",
                                            "default": 16384
                                          },
                                          "max-connections": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 16384,
                                            "description": "The maximum number of connections per worker pod that can be established to all members of a pool",
                                            "default": 16384
                                          },
                                          "max-connection-duration": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "The maximum duration of an outgoing TCP connection. The duration is defined as a period since a connection was established. Default value zero means that no time limit is imposed",
                                            "default": 0
                                          },
                                          "max-concurrent-streams": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 2147483647,
                                            "description": "Maximum concurrent streams allowed for peer on one HTTP/2 connection. If the limit is reached, SEPP may queue requests or establish additional connections (as allowed per circuit breaker limits).",
                                            "default": 2147483647
                                          },
                                          "tcp-connect-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 86400,
                                            "description": "Timeout for setting up a new connection",
                                            "default": 2
                                          },
                                          "connection-idle-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The period in which there are no active HTTP requests. When the idle timeout is reached the connection will be closed. To disable idle timeouts explicitly set this to 0.",
                                            "default": 3600
                                          },
                                          "tcp-keepalive": {
                                            "type": "object",
                                            "description": "TCP-keepalive settings",
                                            "properties": {
                                              "probes": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead",
                                                "default": 6
                                              },
                                              "time": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds a connection needs to be idle before keep-alive probes start being sent",
                                                "default": 5
                                              },
                                              "interval": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of seconds between keep-alive probes",
                                                "default": 5
                                              }
                                            }
                                          },
                                          "enable-message-size-measurement": {
                                            "type": "boolean",
                                            "description": "A switch that allows the operator to enable or disable upstream traffic counters for message size",
                                            "default": false
                                          },
                                          "dscp-marking": {
                                            "type": "integer",
                                            "format": "uint8",
                                            "minimum": 0,
                                            "maximum": 63,
                                            "description": "DSCP value used for IP packets sent over this connection"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "egress-connection-profile-ref": {
                                      "type": "string",
                                      "description": "Reference to a defined egress-connection-profile"
                                    },
                                    "local-rate-limit-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Contains the necessary parameters for local rate limiting to be applied. Referenced from own and external networks",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the local-rate-limit-profile"
                                          },
                                          "token-bucket": {
                                            "type": "object",
                                            "description": "Token bucket configuration based on which local rate limiting will be applied",
                                            "properties": {
                                              "max-tokens": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The maximum tokens that the bucket can hold, as well as the number of tokens the bucket initially contains"
                                              },
                                              "tokens-per-fill": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The number of tokens added to the bucket at the beginning of each fill-interval"
                                              },
                                              "fill-interval": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 51,
                                                "maximum": 2147483647,
                                                "description": "The fill interval at which tokens are added to the bucket, defined in milliseconds"
                                              }
                                            },
                                            "required": [
                                              "fill-interval",
                                              "max-tokens",
                                              "tokens-per-fill"
                                            ]
                                          },
                                          "add-response-header": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Headers to be added on the response to a request that is rejected due to rate limiting",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name of the header"
                                                },
                                                "value": {
                                                  "type": "string",
                                                  "description": "Value of the header. In case the header is already present, the value is appended."
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "value"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "token-bucket"
                                        ]
                                      }
                                    },
                                    "global-rate-limit-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Define the necessary parameters for global rate limiting to be applied.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the rate limit profile.\u200b"
                                          },
                                          "sustainable-rate": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The number of incoming requests that can be sustainably received from a peer within an one second interval"
                                          },
                                          "max-burst-size": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 0,
                                            "maximum": 2147483647,
                                            "description": "The maximum number of the incoming requests, beyond the sustainable rate, that can be received from a peer in a burst"
                                          },
                                          "action-reject-message": {
                                            "type": "object",
                                            "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                            "properties": {
                                              "status": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 100,
                                                "maximum": 999,
                                                "description": "Status-code of the reply",
                                                "default": 429
                                              },
                                              "title": {
                                                "type": "string",
                                                "description": "A short, human-readable summary of the problem",
                                                "default": "Too Many Requests"
                                              },
                                              "cause": {
                                                "type": "string",
                                                "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500).",
                                                "default": "NF_CONGESTION_RISK"
                                              },
                                              "detail": {
                                                "type": "string",
                                                "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'",
                                                "default": "request_rate_limit"
                                              },
                                              "format": {
                                                "enum": [
                                                  "text",
                                                  "json"
                                                ],
                                                "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                "default": "json"
                                              },
                                              "retry-after-header": {
                                                "enum": [
                                                  "delay-seconds",
                                                  "HTTP-date",
                                                  "disabled"
                                                ],
                                                "description": "Format of the retry-after header. If the default value 'delay-seconds' is used, the retry-after-header is formatted according to RFC 7231. If the retry-after-header value used is 'HTTP-date', the corresponding format according to RFC 7231 is used. If the value used is 'disabled' then the retry-after-header is disabled",
                                                "default": "delay-seconds"
                                              }
                                            }
                                          },
                                          "action-drop-message": {
                                            "type": "object",
                                            "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                            "properties": {}
                                          }
                                        },
                                        "required": [
                                          "max-burst-size",
                                          "name",
                                          "sustainable-rate"
                                        ]
                                      }
                                    },
                                    "service-address": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "maxItems": 2,
                                      "description": "Listening address of the SEPP, referenced in own-network,roaming-partner as well as the nf-profile and nf-service sent to the NRF",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ipv4-address": {
                                            "type": "string",
                                            "pattern": "^[0-9\\.]*$",
                                            "description": "IPv4 address of the SEPP service"
                                          },
                                          "ipv6-address": {
                                            "type": "string",
                                            "pattern": "^[0-9a-fA-F:\\.]*$",
                                            "description": "IPv6 address of the SEPP service"
                                          },
                                          "asymmetric-key-ref": {
                                            "type": "string",
                                            "description": "The name of the referenced configured asymmetric-key."
                                          },
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name uniquely identifying the service address."
                                          },
                                          "fqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "FQDN of the nf-service, for example chf.op.com"
                                          },
                                          "port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "This port is used to receive non-TLS traffic."
                                          },
                                          "tls-port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "This port is used to receive TLS traffic."
                                          }
                                        }
                                      }
                                    },
                                    "n32-c": {
                                      "type": "object",
                                      "description": "Defines data to be used for the N32 handshake procedure between the SEPPs in two PLMNs.",
                                      "properties": {
                                        "own-security-data": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "maxItems": 1,
                                          "description": "Definition of own security data.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "primary-plmn-id-mcc": {
                                                "type": "string",
                                                "pattern": "^[0-9]{3}$",
                                                "description": "Specifies the mobile country code of own primary PLMN Id."
                                              },
                                              "primary-plmn-id-mnc": {
                                                "type": "string",
                                                "pattern": "^[0-9]{2,3}$",
                                                "description": "Specifies the mobile network code of own primary PLMN Id."
                                              },
                                              "additional-plmn-id": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Additional PLMN Id(s).",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "mcc": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{3}$",
                                                      "description": "Specifies the mobile country code of the PLMN"
                                                    },
                                                    "mnc": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{2,3}$",
                                                      "description": "Specifies the mobile network code of the PLMN"
                                                    }
                                                  }
                                                }
                                              },
                                              "security-capability": {
                                                "type": "array",
                                                "minItems": 1,
                                                "description": "Supported security capabilities of requesting SEPP i.e. PRINS and/or TLS.",
                                                "items": {
                                                  "enum": [
                                                    "TLS",
                                                    "PRINS"
                                                  ]
                                                }
                                              },
                                              "supports-target-apiroot": {
                                                "type": "boolean",
                                                "description": "When true, TLS security using the 3gpp-Sbi-Target-apiRoot HTTP header is supported for N32f message forwarding.",
                                                "default": true
                                              }
                                            },
                                            "required": [
                                              "primary-plmn-id-mcc",
                                              "primary-plmn-id-mnc",
                                              "security-capability"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "own-network": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "maxItems": 1,
                                      "description": "Definition of an own, internal network of this SEPP instance",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name uniquely identifying the own network"
                                          },
                                          "service-address-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined service-address"
                                          },
                                          "in-request-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the request screening case that is applied when a request is received from an NF instance in the own PLMN"
                                          },
                                          "routing-case-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined routing case, used for all traffic originating from own PLMN"
                                          },
                                          "out-response-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the response screening case that is applied when the response is targeting an NF instance in the own PLMN"
                                          },
                                          "trusted-certificate-list": {
                                            "type": "string",
                                            "description": "Name of the installed trusted certificate group defined in the ietf-truststore"
                                          },
                                          "ingress-connection-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined ingress-connection-profile"
                                          },
                                          "local-rate-limit-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined local-rate-limit-profile"
                                          },
                                          "global-ingress-rate-limit-profile-ref": {
                                            "type": "array",
                                            "maxItems": 1,
                                            "description": "Reference to a defined global-rate-limit-profile",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "routing-case-ref",
                                          "service-address-ref"
                                        ]
                                      }
                                    },
                                    "external-network": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "maxItems": 1,
                                      "description": "Definition of an external network of this SEPP instance, used to group roaming partners and provide the service address on which they use to address this SEPP.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name uniquely identifying the external network"
                                          },
                                          "service-address-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined service-address"
                                          },
                                          "in-request-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the request screening case that is applied when a request is received from an NF instance in this external network and its contained roaming partners"
                                          },
                                          "routing-case-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined routing case, used for all traffic originating from this external network and its contained roaming partners"
                                          },
                                          "out-response-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the response screening case that is applied when the response is targeting an NF instance in this external network and its contained roaming partners"
                                          },
                                          "topology-hiding-ref": {
                                            "type": "array",
                                            "description": "Reference to a defined topology hiding profile for either Pseudo Search Result or IP Address Hiding, applied to all roaming-partners of this network",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "topology-hiding-with-admin-state": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "tph-profile-ref": {
                                                  "type": "string",
                                                  "description": "Reference to a defined topology hiding profile for FQDN Mapping or FQDN Scrambling, applied to all roaming-partners of this network. In order to configure FQDN Scrambling, an NRF FQDN mapping profile must be configured as well"
                                                },
                                                "admin-state": {
                                                  "enum": [
                                                    "active",
                                                    "graceful-activation",
                                                    "graceful-deactivation"
                                                  ],
                                                  "description": "The administrative state of the FQDN Mapping/FQDN Scrambling functionality",
                                                  "default": "active"
                                                },
                                                "scrambling-key": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The list of the scrambling encryption identifiers (referencing the scrambling keys and the relevant initial vectors) and the corresponding activation dates",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "key-id-ref": {
                                                        "type": "string",
                                                        "description": "The reference to the encryption identifier of the scrambling key which is going to be used"
                                                      },
                                                      "activation-date": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The exact date and time when the key is activated. At least one of the referenced scrambling keys must be activated already by the time the configuration is passed"
                                                      }
                                                    },
                                                    "required": [
                                                      "activation-date",
                                                      "key-id-ref"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "tph-profile-ref"
                                              ]
                                            }
                                          },
                                          "roaming-partner": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Definition of a roaming partner of this SEPP instance",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "pattern": "^[^.]+$",
                                                  "description": "Name identifying the roaming partner"
                                                },
                                                "comment": {
                                                  "type": "string",
                                                  "description": "Deprecated, use user-label instead. Some space for comments"
                                                },
                                                "user-label": {
                                                  "type": "string",
                                                  "description": "Label for free use"
                                                },
                                                "in-request-screening-case-ref": {
                                                  "type": "string",
                                                  "description": "Reference to the request screening case that is applied when a request is received originating from this roaming partner. If not defined, the corresponding screening-case referenced at external network level is used per default"
                                                },
                                                "routing-case-ref": {
                                                  "type": "string",
                                                  "description": "Reference to a defined routing case, used for requests originating from this roaming partner. If not defined, the routing-case referenced at external network level is used per default."
                                                },
                                                "topology-hiding-ref": {
                                                  "type": "array",
                                                  "description": "Reference to a defined topology hiding profile for Pseudo Search Result or IP Address Hiding, applied to this roaming partner",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "topology-hiding-with-admin-state": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "tph-profile-ref": {
                                                        "type": "string",
                                                        "description": "Reference to a defined topology hiding profile for FQDN Mapping or FQDN Scrambling, applied to this roaming-partner of this network. In order to configure FQDN Scrambling, an NRF FQDN mapping profile must be configured as well"
                                                      },
                                                      "admin-state": {
                                                        "enum": [
                                                          "active",
                                                          "graceful-activation",
                                                          "graceful-deactivation"
                                                        ],
                                                        "description": "The administrative state of the FQDN Mapping/FQDN Scrambling functionality",
                                                        "default": "active"
                                                      },
                                                      "scrambling-key": {
                                                        "type": "array",
                                                        "uniqueItems": true,
                                                        "description": "The list of the scrambling encryption identifiers (referencing the scrambling keys and the relevant initial vectors) and the corresponding activation dates",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "key-id-ref": {
                                                              "type": "string",
                                                              "description": "The reference to the encryption identifier of the scrambling key which is going to be used"
                                                            },
                                                            "activation-date": {
                                                              "type": "string",
                                                              "format": "date-time",
                                                              "description": "The exact date and time when the key is activated. At least one of the referenced scrambling keys must be activated already by the time the configuration is passed"
                                                            }
                                                          },
                                                          "required": [
                                                            "activation-date",
                                                            "key-id-ref"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "tph-profile-ref"
                                                    ]
                                                  }
                                                },
                                                "out-response-screening-case-ref": {
                                                  "type": "string",
                                                  "description": "Reference to the response screening case that is applied when the response is targeting this roaming partner. If not defined, the corresponding screening-case referenced at external network level is used per default"
                                                },
                                                "global-ingress-rate-limit-profile-ref": {
                                                  "type": "array",
                                                  "maxItems": 1,
                                                  "description": "Reference to a defined global-rate-limit-profile",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "domain-name": {
                                                  "type": "array",
                                                  "minItems": 1,
                                                  "description": "The domains that this roaming-partner is associated with. The values are matched with the Subject Alternative Names received within the certificates.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "trusted-certificate-list": {
                                                  "type": "string",
                                                  "description": "Name of the installed trusted certificate group defined in the ietf-truststore"
                                                },
                                                "supports-target-apiroot": {
                                                  "enum": [
                                                    "true",
                                                    "false",
                                                    "negotiated"
                                                  ],
                                                  "description": "Indicates if this roaming-partner\u2019s SEPP supports the 3gpp-Sbi-Target-apiRoot header or not. Ignored if N32-C applies."
                                                },
                                                "n32-c": {
                                                  "type": "object",
                                                  "description": "Defines data to be used for the N32 handshake procedure between the SEPPs in two PLMNs.",
                                                  "properties": {
                                                    "enabled": {
                                                      "type": "boolean",
                                                      "description": "A switch that allows the operator to enable or disable N32-c support for the roaming partner",
                                                      "default": false
                                                    },
                                                    "nf-pool-ref": {
                                                      "type": "string",
                                                      "description": "SEPP NF Pool that belongs to the Roaming Partner."
                                                    },
                                                    "allow-plmn": {
                                                      "type": "object",
                                                      "description": "Definition of the primary and additional PLMN Ids of the roaming partner's PLMN.",
                                                      "properties": {
                                                        "primary-id-mcc": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{3}$",
                                                          "description": "Specifies the mobile country code of the primary PLMN Id."
                                                        },
                                                        "primary-id-mnc": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{2,3}$",
                                                          "description": "Specifies the mobile network code of the primary PLMN Id."
                                                        },
                                                        "additional-id": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "Additional PLMN id(s) of the roaming partner's PLMN.",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "mcc": {
                                                                "type": "string",
                                                                "pattern": "^[0-9]{3}$",
                                                                "description": "Specifies the mobile country code of the PLMN"
                                                              },
                                                              "mnc": {
                                                                "type": "string",
                                                                "pattern": "^[0-9]{2,3}$",
                                                                "description": "Specifies the mobile network code of the PLMN"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "required": [
                                                        "primary-id-mcc",
                                                        "primary-id-mnc"
                                                      ]
                                                    }
                                                  },
                                                  "required": [
                                                    "allow-plmn",
                                                    "nf-pool-ref"
                                                  ]
                                                },
                                                "firewall-profile-ref": {
                                                  "type": "string",
                                                  "description": "Reference to a firewall profile that is applied to messages coming from this roaming partner, replacing the firewall profile from external network."
                                                }
                                              },
                                              "required": [
                                                "domain-name",
                                                "name",
                                                "supports-target-apiroot"
                                              ]
                                            }
                                          },
                                          "ingress-connection-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined ingress-connection-profile"
                                          },
                                          "local-rate-limit-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined local-rate-limit-profile"
                                          },
                                          "global-ingress-rate-limit-profile-ref": {
                                            "type": "array",
                                            "maxItems": 1,
                                            "description": "Reference to a defined global-rate-limit-profile",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "firewall-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a firewall profile that is applied to messages coming from NF instances in this external network and its roaming partners."
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "routing-case-ref",
                                          "service-address-ref"
                                        ]
                                      }
                                    },
                                    "nrf-fqdn-mapping-table": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "The table containing the internal NRF FQDNs used in the own network and the target values to be mapped to, in order to be used externally by the Roaming Partners. The table must be configured when NRF mapping functionality is enabled",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "internalFqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "The FQDN used in the internal network."
                                          },
                                          "externalFqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "The new value to map the FQDN to, in order to be used by the Roaming Partners"
                                          }
                                        },
                                        "required": [
                                          "externalFqdn",
                                          "internalFqdn"
                                        ]
                                      }
                                    },
                                    "fqdn-scrambling-table": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "The table of the scrambling keys, initial vectors and the corresponding encryption identifiers. It must be configured when FQDN Scrambling functionality is enabled",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "pattern": "^[A-Z0-9]{4}$",
                                            "description": "The encryption identifier of the scrambling key"
                                          },
                                          "key": {
                                            "type": "string",
                                            "description": "The scrambling key to be used in AES GCM algorithm. A plain text string of 32 characters is expected. The value is stored encrypted",
                                            "eric-adp-is-passphrase": "true",
                                            "format": "eric-adp-cm-secret"
                                          },
                                          "initial-vector": {
                                            "type": "string",
                                            "description": "The initial vector to be used in AES GCM algorithm. A plain text string of 12 characters is expected. The values is stored encrypted",
                                            "eric-adp-is-passphrase": "true",
                                            "format": "eric-adp-cm-secret"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "initial-vector",
                                          "key"
                                        ]
                                      }
                                    },
                                    "telescopic-fqdn": {
                                      "type": "object",
                                      "description": "Parameters that configure the handling of telescopic FQDN inside the own network.",
                                      "properties": {
                                        "required-for-nf-type": {
                                          "type": "array",
                                          "description": "List of nf-types (according to TS 29.510) such as \u2018amf\u2019 or \u2018smf\u2019 that require Telescopic-FQDN because they do not support the 3gpp-Sbi-Target-apiRoot header. If the list is empty, no Telescopic-FQDN handling is performed.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "callback-uri": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "Additions and overrides for locations of callback-URIs in requests that need to be converted to Telescopic-FQDNs. Elements in this list override and add to the pre-defined elements in callback-uri-defaults. If this list has multiple entries for the same api-name and api-version combination, the last one overwrites the previous ones.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "api-name": {
                                                "type": "string",
                                                "description": "The api-name, together with the api-version, are the key to look up the callback-uri-json-pointer that is used to convert a callback URI."
                                              },
                                              "api-version": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The api-version, together with the api-name, are the key to look up the callback-uri-json-pointer that is used to convert a callback URI."
                                              },
                                              "callback-uri-json-pointer": {
                                                "type": "array",
                                                "minItems": 1,
                                                "description": "A list of extended JSON-pointers to find callback-URIs in the body of the request. The FQDNs in the found callback-URIs are converted to Telescopic FQDNs. If the list contains more than one JSON-pointer, all of them are searched and converted. If a JSON-pointer refers to a non-existing element, it is ignored. If this list contains a single JSON-pointer that is the empty string, it effectively disables the corresponding element in the callback-uri-defaults with the same api-name and api-version.",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "required": [
                                              "api-name",
                                              "api-version",
                                              "callback-uri-json-pointer"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "fqdn-scrambling-command": {
                                      "type": "object",
                                      "description": "Actions for scrambling/descrambling a given FQDN",
                                      "properties": {}
                                    },
                                    "topology-hiding": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Definition of topology hiding attributes",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the topology hiding"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "condition": {
                                            "type": "string",
                                            "description": "A condition that filters the messages for which topology hiding is applicable"
                                          },
                                          "pseudo-search-result": {
                                            "type": "object",
                                            "description": "Defines the data of the nrf-discovery response",
                                            "properties": {
                                              "validity-period": {
                                                "type": "integer",
                                                "format": "uint32",
                                                "minimum": 0,
                                                "maximum": 2147483647,
                                                "description": "The time in seconds during which the discovery result is considered valid and can be cached by the NF service consumer"
                                              },
                                              "nf-profile": {
                                                "type": "object",
                                                "description": "Profile consisting of general parameters of the network function, included in the NRF discovery response",
                                                "properties": {
                                                  "fqdn": {
                                                    "type": "string",
                                                    "format": "hostname",
                                                    "description": "The service address that is used to hide the actual service address. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                  },
                                                  "nf-type": {
                                                    "type": "string",
                                                    "description": "The NF type of the hidden NF"
                                                  },
                                                  "nf-status": {
                                                    "enum": [
                                                      "registered",
                                                      "suspended",
                                                      "undiscoverable"
                                                    ],
                                                    "description": "The status of the NF"
                                                  }
                                                },
                                                "required": [
                                                  "fqdn",
                                                  "nf-status",
                                                  "nf-type"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "nf-profile",
                                              "validity-period"
                                            ]
                                          },
                                          "ip-address-hiding": {
                                            "type": "object",
                                            "description": "Enable/Disable IP Address Hiding functionality based on the targeted nf-type",
                                            "properties": {
                                              "on-fqdn-absence": {
                                                "type": "object",
                                                "description": "Action to perform on a message in case IP Address Hiding cannot be applied, given that the message contains at least one NF profile with no FQDN and at least one of its services (if exists) does not support FQDN. If no action is configured, then IP Address Hiding shall be performed despite missing FQDN.",
                                                "properties": {
                                                  "drop-message": {
                                                    "type": "object",
                                                    "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                                    "properties": {}
                                                  },
                                                  "forward-message": {
                                                    "type": "object",
                                                    "description": "Forward message as is",
                                                    "properties": {}
                                                  },
                                                  "respond-with-error": {
                                                    "type": "object",
                                                    "description": "Respond with a specific error message",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                        "default": "json"
                                                      }
                                                    },
                                                    "required": [
                                                      "status"
                                                    ]
                                                  }
                                                }
                                              },
                                              "on-nf-profile-absence": {
                                                "type": "object",
                                                "description": "IP addresses of the configured range to delete from a notification request, in case no full NF profile data is included. These IP addresses shall be assigned to NFs of the specified NF type.",
                                                "properties": {
                                                  "remove-ipv4-address-range": {
                                                    "type": "array",
                                                    "description": "The IPv4 addresses to delete from a notification request.",
                                                    "items": {
                                                      "type": "string",
                                                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/(([0-9])|([1-2][0-9])|(3[0-2]))$"
                                                    }
                                                  },
                                                  "remove-ipv6-address-range": {
                                                    "type": "array",
                                                    "description": "The IPv6 addresses to delete from a notification request.",
                                                    "items": {
                                                      "type": "string",
                                                      "allOf": [
                                                        {
                                                          "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                        },
                                                        {
                                                          "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "fqdn-mapping": {
                                            "type": "object",
                                            "description": "Enable/Disable the FQDN Mapping functionality for NRF FQDNs",
                                            "properties": {
                                              "custom-fqdn-locator": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "The parameters to define the location of the FQDNs that need to be mapped/scrambled according to the specified service",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "request-message": {
                                                      "type": "object",
                                                      "description": "Parameters used to define the location of FQDNs in a request message",
                                                      "properties": {
                                                        "message-data-ref": {
                                                          "type": "array",
                                                          "description": "Reference to defined message-data.",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "search-in-query-parameter": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the query parameters included in the request message, which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "query-parameter": {
                                                                "type": "string",
                                                                "description": "The query parameter"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "query-parameter"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-header": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the headers of the message which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "header": {
                                                                "type": "string",
                                                                "description": "The header of the message."
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "header"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-message-body": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the elements conveying specific information that can be extracted from the JSON-formatted body of the message",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "body-json-pointer": {
                                                                "type": "string",
                                                                "description": "The element to be extracted from a JSON-formatted body with a JSON-Pointer specification according to RFC 6901"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "body-json-pointer"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "response-message": {
                                                      "type": "object",
                                                      "description": "Parameters used to define the location of FQDNs in a response message",
                                                      "properties": {
                                                        "message-data-ref": {
                                                          "type": "array",
                                                          "description": "Reference to defined message-data.",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "search-in-query-parameter": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the query parameters included in the request message, which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "query-parameter": {
                                                                "type": "string",
                                                                "description": "The query parameter"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "query-parameter"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-header": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the headers of the message which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "header": {
                                                                "type": "string",
                                                                "description": "The header of the message."
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "header"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-message-body": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the elements conveying specific information that can be extracted from the JSON-formatted body of the message",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "body-json-pointer": {
                                                                "type": "string",
                                                                "description": "The element to be extracted from a JSON-formatted body with a JSON-Pointer specification according to RFC 6901"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "body-json-pointer"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "service-name": {
                                                      "type": "string",
                                                      "description": "The name of the service"
                                                    },
                                                    "service-version": {
                                                      "type": "string",
                                                      "description": "The version of the service specified by 'v' and a number, ex. 'v1', 'v2' etc"
                                                    },
                                                    "notification-message": {
                                                      "type": "boolean",
                                                      "description": "Set to 'true' when referring to Notification messages"
                                                    },
                                                    "http-method": {
                                                      "enum": [
                                                        "get",
                                                        "put",
                                                        "delete",
                                                        "post",
                                                        "head",
                                                        "connect",
                                                        "options",
                                                        "patch",
                                                        "trace"
                                                      ],
                                                      "description": "The HTTP method"
                                                    },
                                                    "resource": {
                                                      "type": "string",
                                                      "description": "The explicit part in the path between two slashes '/' which uniquely identifies a message. For example, setting 'sm-contexts' in resource attribute will match against the messages with {apiRoot}/nsmf-pdusession/<apiVersion>/sm-contexts/{smContextRef} path."
                                                    },
                                                    "message-origin": {
                                                      "enum": [
                                                        "own-network",
                                                        "external-network"
                                                      ],
                                                      "description": "Set to 'own-network' if the message originates in the own network or 'extenal-network' otherwise"
                                                    }
                                                  },
                                                  "required": [
                                                    "name"
                                                  ]
                                                }
                                              },
                                              "on-fqdn-mapping-unsuccessful": {
                                                "type": "object",
                                                "description": "Action to perform in case FQDN mapping cannot be applied",
                                                "properties": {
                                                  "drop-message": {
                                                    "type": "object",
                                                    "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                                    "properties": {}
                                                  },
                                                  "respond-with-error": {
                                                    "type": "object",
                                                    "description": "Respond with a specific error message",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                        "default": "json"
                                                      }
                                                    },
                                                    "required": [
                                                      "status"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "fqdn-scrambling": {
                                            "type": "object",
                                            "description": "Enable/Disable the FQDN Scrambling functionality",
                                            "properties": {
                                              "custom-fqdn-locator": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "The parameters to define the location of the FQDNs that need to be scrambled according to the specified service",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string"
                                                    },
                                                    "request-message": {
                                                      "type": "object",
                                                      "description": "Parameters used to define the location of FQDNs in a request message",
                                                      "properties": {
                                                        "message-data-ref": {
                                                          "type": "array",
                                                          "description": "Reference to defined message-data.",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "search-in-query-parameter": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the query parameters included in the request message, which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "query-parameter": {
                                                                "type": "string",
                                                                "description": "The query parameter"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "query-parameter"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-header": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the headers of the message which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "header": {
                                                                "type": "string",
                                                                "description": "The header of the message."
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "header"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-message-body": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the elements conveying specific information that can be extracted from the JSON-formatted body of the message",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "body-json-pointer": {
                                                                "type": "string",
                                                                "description": "The element to be extracted from a JSON-formatted body with a JSON-Pointer specification according to RFC 6901"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "body-json-pointer"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "response-message": {
                                                      "type": "object",
                                                      "description": "Parameters used to define the location of FQDNs in a response message",
                                                      "properties": {
                                                        "message-data-ref": {
                                                          "type": "array",
                                                          "description": "Reference to defined message-data.",
                                                          "items": {
                                                            "type": "string"
                                                          }
                                                        },
                                                        "search-in-query-parameter": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the query parameters included in the request message, which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "query-parameter": {
                                                                "type": "string",
                                                                "description": "The query parameter"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "query-parameter"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-header": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the headers of the message which are used to locate specific information",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "header": {
                                                                "type": "string",
                                                                "description": "The header of the message."
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "header"
                                                            ]
                                                          }
                                                        },
                                                        "search-in-message-body": {
                                                          "type": "array",
                                                          "uniqueItems": true,
                                                          "description": "A list of the elements conveying specific information that can be extracted from the JSON-formatted body of the message",
                                                          "items": {
                                                            "type": "object",
                                                            "properties": {
                                                              "body-json-pointer": {
                                                                "type": "string",
                                                                "description": "The element to be extracted from a JSON-formatted body with a JSON-Pointer specification according to RFC 6901"
                                                              },
                                                              "matching-condition": {
                                                                "type": "string",
                                                                "description": "The condition to match against the message data"
                                                              },
                                                              "perform-action-on-attribute": {
                                                                "enum": [
                                                                  "replace-with-own-fqdn",
                                                                  "erase",
                                                                  "map",
                                                                  "de-map",
                                                                  "scramble",
                                                                  "de-scramble"
                                                                ]
                                                              }
                                                            },
                                                            "required": [
                                                              "body-json-pointer"
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "service-name": {
                                                      "type": "string",
                                                      "description": "The name of the service"
                                                    },
                                                    "service-version": {
                                                      "type": "string",
                                                      "description": "The version of the service specified by 'v' and a number, ex. 'v1', 'v2' etc"
                                                    },
                                                    "notification-message": {
                                                      "type": "boolean",
                                                      "description": "Set to 'true' when referring to Notification messages"
                                                    },
                                                    "http-method": {
                                                      "enum": [
                                                        "get",
                                                        "put",
                                                        "delete",
                                                        "post",
                                                        "head",
                                                        "connect",
                                                        "options",
                                                        "patch",
                                                        "trace"
                                                      ],
                                                      "description": "The HTTP method"
                                                    },
                                                    "resource": {
                                                      "type": "string",
                                                      "description": "The explicit part in the path between two slashes '/' which uniquely identifies a message. For example, setting 'sm-contexts' in resource attribute will match against the messages with {apiRoot}/nsmf-pdusession/<apiVersion>/sm-contexts/{smContextRef} path."
                                                    },
                                                    "message-origin": {
                                                      "enum": [
                                                        "own-network",
                                                        "external-network"
                                                      ],
                                                      "description": "Set to 'own-network' if the message originates in the own network or 'extenal-network' otherwise"
                                                    }
                                                  },
                                                  "required": [
                                                    "name"
                                                  ]
                                                }
                                              },
                                              "on-fqdn-scrambling-unsuccessful": {
                                                "type": "object",
                                                "description": "Action to perform in case FQDN scrambling cannot be applied. Several reasons can invoke this action. For example, if the key for scrambling/de-scrambling is missing, or if the received FQDN is invalid.",
                                                "properties": {
                                                  "drop-message": {
                                                    "type": "object",
                                                    "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                                    "properties": {}
                                                  },
                                                  "respond-with-error": {
                                                    "type": "object",
                                                    "description": "Respond with a specific error message",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                        "default": "json"
                                                      }
                                                    },
                                                    "required": [
                                                      "status"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "condition",
                                          "name"
                                        ]
                                      }
                                    },
                                    "message-body-limits": {
                                      "type": "object",
                                      "description": "Defines the limits for the message body",
                                      "properties": {
                                        "max-bytes": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 16000000,
                                          "description": "Maximum message body size in bytes"
                                        },
                                        "max-leaves": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 16000,
                                          "description": "Maximum number of leaves in the JSON message body"
                                        },
                                        "max-nesting-depth": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 32,
                                          "description": "Maximum nesting depth of the leaves in the JSON message body"
                                        }
                                      }
                                    },
                                    "vtap": {
                                      "type": "object",
                                      "description": "Defines the required data for traffic tapping",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "A switch that allows the operator to enable or disable traffic tapping in a global level",
                                          "default": true
                                        },
                                        "vtap-configuration": {
                                          "type": "object",
                                          "description": "Defines the required settings for traffic tapping",
                                          "properties": {
                                            "proxy": {
                                              "type": "object",
                                              "description": "Defines the required data for tapping on the proxy traffic",
                                              "properties": {
                                                "ingress": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "maxItems": 2,
                                                  "description": "Defines the configuration data required for tapping ingress traffic",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "own-network-ref": {
                                                        "type": "array",
                                                        "maxItems": 1,
                                                        "description": "Reference to the own-network the traffic of which is taken into account for tapping",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "external-network-ref": {
                                                        "type": "array",
                                                        "maxItems": 1,
                                                        "description": "Reference to the external-network the traffic of which is taken into account for tapping",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "enabled": {
                                                        "type": "boolean",
                                                        "description": "A switch that allows the operator to enable or disable traffic tapping for the specific element",
                                                        "default": true
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                },
                                                "egress": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "Defines the configuration data required for tapping egress traffic",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "enabled": {
                                                        "type": "boolean",
                                                        "description": "A switch that allows the operator to enable or disable traffic tapping for the specific element",
                                                        "default": true
                                                      },
                                                      "all-nf-pools": {
                                                        "type": "object",
                                                        "description": "If present , it applies egress vtap configuration to all nf-pools",
                                                        "properties": {}
                                                      },
                                                      "nf-pool-ref": {
                                                        "type": "array",
                                                        "description": "Reference to the nf-pool the traffic of which is taken into account for tapping",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "message-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Data extracted from incoming requests, used in routing rules to determine the appropriate routing action",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the message-data set"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "path": {
                                            "type": "object",
                                            "description": "If present, specifies that the content of the URL path is used as the source",
                                            "properties": {}
                                          },
                                          "request-header": {
                                            "type": "string",
                                            "description": "If present, specifies the name of the request header from which to read the content"
                                          },
                                          "response-header": {
                                            "type": "string",
                                            "description": "If present, specifies the name of the response header from which to read the content"
                                          },
                                          "header": {
                                            "type": "string",
                                            "description": "If present, specifies the name of the request or response header from which to read the content depending on if it is used in the request or response path"
                                          },
                                          "body-json-pointer": {
                                            "type": "string",
                                            "description": "If configured, specifies the element that will be extracted from a JSON-formatted body with a JSON-Pointer specification according to RFC 6901"
                                          },
                                          "variable-name": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                            "description": "The name of the variable in which to store the extracted data"
                                          },
                                          "extractor-regex": {
                                            "type": "string",
                                            "description": "Regular expression name captures (?<name>re) used to extract data into the variable 'name'. If the regular expression does not match, all variables are left undefined. The names of named-captures\u2019 respective variables must begin with a letter and contain only letters, digits, or underscore"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "request-screening-case": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Entry point to a list of screening rules which are evaluated in sequence to filter a request message",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name identifying the request-screening-case"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "message-data-ref": {
                                            "type": "array",
                                            "description": "Reference to defined message-data which has extracted the data to be used in screening rule conditions",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "screening-rule": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "The screening rules are evaluated in sequence once the request-screening-case is referenced",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "pattern": "^[^.]+$",
                                                  "description": "Name identifying the screening-rule"
                                                },
                                                "condition": {
                                                  "type": "string",
                                                  "description": "A logical expression which is evaluated using the collected data from incoming requests as stored in message-data, and determines whether the screening-rule shall be executed. If no condition is defined, the screening-rule is always executed"
                                                },
                                                "screening-action": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "The screening-actions are executed in sequence once the condition of the screening-rule evaluates to true",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the screening-action"
                                                      },
                                                      "action-add-header": {
                                                        "type": "object",
                                                        "description": "Adds an HTTP header to a message",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be added to the request"
                                                          },
                                                          "if-exists": {
                                                            "enum": [
                                                              "replace",
                                                              "add",
                                                              "no-action"
                                                            ],
                                                            "description": "Defines the behavior when the header exists",
                                                            "default": "no-action"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "description": "Specifies the value of the header to be added to the request"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ]
                                                      },
                                                      "action-modify-header": {
                                                        "type": "object",
                                                        "description": "Either replaces the value of an existing HTTP header with a new one or prepends/appends a value to the existing value of a header",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be modified"
                                                          },
                                                          "replace-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to replace the header's old value"
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to replace the header's old value"
                                                          },
                                                          "prepend-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be prepended to the header's old value"
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be prepended to the header's old value"
                                                          },
                                                          "append-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be appended to the header's old value"
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be appended to the header's old value"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-remove-header": {
                                                        "type": "object",
                                                        "description": "Remove header from the request",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be removed from the request"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-drop-message": {
                                                        "type": "object",
                                                        "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                                        "properties": {}
                                                      },
                                                      "action-exit-screening-case": {
                                                        "type": "object",
                                                        "description": "Exits from a screening-case and terminates message screening processing",
                                                        "properties": {}
                                                      },
                                                      "action-reject-message": {
                                                        "type": "object",
                                                        "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                                        "properties": {
                                                          "status": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 100,
                                                            "maximum": 999,
                                                            "description": "Status-code of the reply"
                                                          },
                                                          "title": {
                                                            "type": "string",
                                                            "description": "A short, human-readable summary of the problem"
                                                          },
                                                          "cause": {
                                                            "type": "string",
                                                            "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                          },
                                                          "detail": {
                                                            "type": "string",
                                                            "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                          },
                                                          "format": {
                                                            "enum": [
                                                              "text",
                                                              "json"
                                                            ],
                                                            "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                            "default": "json"
                                                          }
                                                        },
                                                        "required": [
                                                          "status"
                                                        ]
                                                      },
                                                      "action-go-to": {
                                                        "type": "object",
                                                        "description": "Jump to another request screening case",
                                                        "properties": {
                                                          "request-screening-case-ref": {
                                                            "type": "string",
                                                            "description": "The name of the request-screening-case where the execution continues"
                                                          }
                                                        }
                                                      },
                                                      "action-log": {
                                                        "type": "object",
                                                        "description": "Logs a user-defined message with the configured log-level",
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to be used for troubleshooting"
                                                          },
                                                          "max-log-message-length": {
                                                            "type": "integer",
                                                            "format": "uint32",
                                                            "minimum": 1,
                                                            "maximum": 10000,
                                                            "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                                            "default": 250
                                                          },
                                                          "log-level": {
                                                            "enum": [
                                                              "debug",
                                                              "info",
                                                              "trace",
                                                              "warn",
                                                              "error"
                                                            ],
                                                            "description": "Define the log level for troubleshooting",
                                                            "default": "debug"
                                                          }
                                                        },
                                                        "required": [
                                                          "text"
                                                        ]
                                                      },
                                                      "action-modify-json-body": {
                                                        "type": "object",
                                                        "description": "Performs modifications on JSON body elements by either adding new elements, replacing the value of existing elements, appending/prepending strings to existing elements or removing the elements from the JSON body",
                                                        "properties": {
                                                          "json-pointer": {
                                                            "type": "string",
                                                            "description": "Specifies the path inside the JSON body where an element will be added or modified or removed"
                                                          },
                                                          "add-value": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body, it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the value of the element to be added"
                                                              },
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              }
                                                            }
                                                          },
                                                          "add-from-var-name": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. The value of the new element is stored on a variable. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              },
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value to add to the path specified by the json-pointer attribute"
                                                              }
                                                            }
                                                          },
                                                          "replace-value": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value specified in the value attribute",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the new value that will replace the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value that is stored on a variable",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value that will replace the element\u2019s old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-value": {
                                                            "type": "object",
                                                            "description": "Prepends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be prepended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "object",
                                                            "description": "Prepends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be prepended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-value": {
                                                            "type": "object",
                                                            "description": "Appends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be appended to the elements's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "object",
                                                            "description": "Appends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be appended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "search-replace-string": {
                                                            "type": "object",
                                                            "description": "Searches for a string using the path specified by the json-pointer attribute. If the string is found in the JSON body, it is being replaced with the string specified using the configured options",
                                                            "properties": {
                                                              "case-sensitive": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will be perfomed in case sensitive mode.",
                                                                "default": true
                                                              },
                                                              "full-match": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation requires full match to proceed with the replace.",
                                                                "default": false
                                                              },
                                                              "search-backwards": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will start from the end of the json body toward the top.",
                                                                "default": false
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "search-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the search value"
                                                              },
                                                              "search-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the search string is stored."
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the replace value"
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace string is stored."
                                                              }
                                                            }
                                                          },
                                                          "search-replace-regex": {
                                                            "type": "object",
                                                            "description": "Searches for a pattern using the path specified by the json-pointer attribute. If the pattern matches in the JSON body, it is being replaced with the matched text specified using the configured options",
                                                            "properties": {
                                                              "search-regex": {
                                                                "type": "string",
                                                                "description": "Specifies the regular expression used to search for string patterns."
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies how the replacement will be performed based on the matched text as result of search-regex attribute. If the regular expression did not match, no replacement is applied."
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace value is stored."
                                                              }
                                                            }
                                                          },
                                                          "remove": {
                                                            "type": "object",
                                                            "description": "Removes the element, including its contents if any, that is specified by the json-pointer attribute",
                                                            "properties": {}
                                                          }
                                                        },
                                                        "required": [
                                                          "json-pointer"
                                                        ]
                                                      },
                                                      "action-create-json-body": {
                                                        "type": "object",
                                                        "description": "Creates a valid JSON body from scratch",
                                                        "properties": {
                                                          "json-body": {
                                                            "type": "string",
                                                            "description": "Specifies the entire JSON body that will be created"
                                                          }
                                                        },
                                                        "required": [
                                                          "json-body"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "condition",
                                                "name",
                                                "screening-action"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "screening-rule"
                                        ]
                                      }
                                    },
                                    "response-screening-case": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Entry point to a list of screening rules which are evaluated in sequence on response messages",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name identifying the response-screening-case"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "message-data-ref": {
                                            "type": "array",
                                            "description": "Reference to defined message-data which has extracted the data to be used in screening rule conditions",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "screening-rule": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "The screening rules are evaluated in sequence once the response-screening-case is referenced",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "pattern": "^[^.]+$",
                                                  "description": "Name identifying the screening-rule"
                                                },
                                                "condition": {
                                                  "type": "string",
                                                  "description": "A logical expression which is evaluated using the collected data from incoming responses as stored in message-data, and determines whether the screening-rule shall be executed. If no condition is defined, the screening-rule is always executed"
                                                },
                                                "screening-action": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "The screening-actions are executed in sequence once the condition of the screening-rule evaluates to true",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the screening-action"
                                                      },
                                                      "action-add-header": {
                                                        "type": "object",
                                                        "description": "Adds an HTTP header to a message",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be added to the response"
                                                          },
                                                          "if-exists": {
                                                            "enum": [
                                                              "replace",
                                                              "add",
                                                              "no-action"
                                                            ],
                                                            "description": "Defines the behavior when the header exists",
                                                            "default": "no-action"
                                                          },
                                                          "value": {
                                                            "type": "string",
                                                            "description": "Specifies the value of the header to be added to the response"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "value"
                                                        ]
                                                      },
                                                      "action-modify-header": {
                                                        "type": "object",
                                                        "description": "Either replaces the value of an existing HTTP header with a new one or prepends/appends a value to the existing value of a header",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be modified"
                                                          },
                                                          "replace-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to replace the header's old value"
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to replace the header's old value"
                                                          },
                                                          "prepend-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be prepended to the header's old value"
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be prepended to the header's old value"
                                                          },
                                                          "append-value": {
                                                            "type": "string",
                                                            "description": "Specifies the value to be appended to the header's old value"
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Specifies the name of the variable from which to fetch the value to be appended to the header's old value"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-remove-header": {
                                                        "type": "object",
                                                        "description": "Remove header from the response",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Specifies the header to be removed from the response"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      },
                                                      "action-exit-screening-case": {
                                                        "type": "object",
                                                        "description": "Exits from a screening-case and terminates message screening processing",
                                                        "properties": {}
                                                      },
                                                      "action-modify-status-code": {
                                                        "type": "object",
                                                        "description": "Modify the response status-code",
                                                        "properties": {
                                                          "status": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 100,
                                                            "maximum": 999,
                                                            "description": "Status-code of the response message"
                                                          },
                                                          "cause": {
                                                            "type": "string",
                                                            "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                          },
                                                          "detail": {
                                                            "type": "string",
                                                            "description": "A human-readable explanation of the problem"
                                                          },
                                                          "title": {
                                                            "type": "string",
                                                            "description": "A short, human-readable summary of the problem"
                                                          },
                                                          "format": {
                                                            "enum": [
                                                              "text",
                                                              "json"
                                                            ],
                                                            "description": "Configurable format for the response message",
                                                            "default": "json"
                                                          }
                                                        }
                                                      },
                                                      "action-go-to": {
                                                        "type": "object",
                                                        "description": "Jump to another response screening case",
                                                        "properties": {
                                                          "response-screening-case-ref": {
                                                            "type": "string",
                                                            "description": "The name of the response-screening-case where the execution continues"
                                                          }
                                                        }
                                                      },
                                                      "action-log": {
                                                        "type": "object",
                                                        "description": "Define log level for troubleshooting",
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to be used for troubleshooting"
                                                          },
                                                          "max-log-message-length": {
                                                            "type": "integer",
                                                            "format": "uint32",
                                                            "minimum": 1,
                                                            "maximum": 10000,
                                                            "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                                            "default": 250
                                                          },
                                                          "log-level": {
                                                            "enum": [
                                                              "debug",
                                                              "info",
                                                              "trace",
                                                              "warn",
                                                              "error"
                                                            ],
                                                            "description": "Define the log level for troubleshooting",
                                                            "default": "debug"
                                                          }
                                                        },
                                                        "required": [
                                                          "text"
                                                        ]
                                                      },
                                                      "action-modify-json-body": {
                                                        "type": "object",
                                                        "description": "Performs modifications on JSON body elements by either adding new elements, replacing the value of existing elements, appending/prepending strings to existing elements or removing the elements from the JSON body",
                                                        "properties": {
                                                          "json-pointer": {
                                                            "type": "string",
                                                            "description": "Specifies the path inside the JSON body where an element will be added or modified or removed"
                                                          },
                                                          "add-value": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body, it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the value of the element to be added"
                                                              },
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              }
                                                            }
                                                          },
                                                          "add-from-var-name": {
                                                            "type": "object",
                                                            "description": "Adds a new element to the path specified by the json-pointer attribute. The value of the new element is stored on a variable. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                                            "properties": {
                                                              "if-path-not-exists": {
                                                                "enum": [
                                                                  "create",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                                                "default": "create"
                                                              },
                                                              "if-element-exists": {
                                                                "enum": [
                                                                  "replace",
                                                                  "no-action"
                                                                ],
                                                                "description": "Specifies whether the value of an existing element will be replaced or not",
                                                                "default": "no-action"
                                                              },
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value to add to the path specified by the json-pointer attribute"
                                                              }
                                                            }
                                                          },
                                                          "replace-value": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value specified in the value attribute",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the new value that will replace the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "replace-from-var-name": {
                                                            "type": "object",
                                                            "description": "Replaces an element's old value with a new value that is stored on a variable",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the value that will replace the element\u2019s old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-value": {
                                                            "type": "object",
                                                            "description": "Prepends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be prepended to the elements's old value"
                                                              }
                                                            }
                                                          },
                                                          "prepend-from-var-name": {
                                                            "type": "object",
                                                            "description": "Prepends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be prepended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-value": {
                                                            "type": "object",
                                                            "description": "Appends a string to an element's old value",
                                                            "properties": {
                                                              "value": {
                                                                "type": "string",
                                                                "description": "Specifies the string value to be appended to the elements's old value"
                                                              }
                                                            }
                                                          },
                                                          "append-from-var-name": {
                                                            "type": "object",
                                                            "description": "Appends a string stored in a variable to an element's old value",
                                                            "properties": {
                                                              "variable": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the name of the variable from which to fetch the string value to be appended to the element's old value"
                                                              }
                                                            }
                                                          },
                                                          "search-replace-string": {
                                                            "type": "object",
                                                            "description": "Searches for a string using the path specified by the json-pointer attribute. If the string is found in the JSON body, it is being replaced with the string specified using the configured options",
                                                            "properties": {
                                                              "case-sensitive": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will be perfomed in case sensitive mode.",
                                                                "default": true
                                                              },
                                                              "full-match": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation requires full match to proceed with the replace.",
                                                                "default": false
                                                              },
                                                              "search-backwards": {
                                                                "type": "boolean",
                                                                "description": "If true, the search operation will start from the end of the json body toward the top.",
                                                                "default": false
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "search-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the search value"
                                                              },
                                                              "search-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the search string is stored."
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies specific string as the replace value"
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace string is stored."
                                                              }
                                                            }
                                                          },
                                                          "search-replace-regex": {
                                                            "type": "object",
                                                            "description": "Searches for a pattern using the path specified by the json-pointer attribute. If the pattern matches in the JSON body, it is being replaced with the matched text specified using the configured options",
                                                            "properties": {
                                                              "search-regex": {
                                                                "type": "string",
                                                                "description": "Specifies the regular expression used to search for string patterns."
                                                              },
                                                              "replace-all-occurrences": {
                                                                "type": "boolean",
                                                                "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                                                "default": false
                                                              },
                                                              "replace-value": {
                                                                "type": "string",
                                                                "description": "Specifies how the replacement will be performed based on the matched text as result of search-regex attribute. If the regular expression did not match, no replacement is applied."
                                                              },
                                                              "replace-from-var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Specifies the variable name where the replace value is stored."
                                                              }
                                                            }
                                                          },
                                                          "remove": {
                                                            "type": "object",
                                                            "description": "Removes the element, including its contents if any, that is specified by the json-pointer attribute",
                                                            "properties": {}
                                                          }
                                                        },
                                                        "required": [
                                                          "json-pointer"
                                                        ]
                                                      },
                                                      "action-create-json-body": {
                                                        "type": "object",
                                                        "description": "Creates a valid JSON body from scratch",
                                                        "properties": {
                                                          "json-body": {
                                                            "type": "string",
                                                            "description": "Specifies the entire JSON body that will be created"
                                                          }
                                                        },
                                                        "required": [
                                                          "json-body"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "condition",
                                                "name",
                                                "screening-action"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "screening-rule"
                                        ]
                                      }
                                    },
                                    "routing-case": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "minItems": 1,
                                      "description": "Entry point to a list of routing rules which are evaluated in sequence",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the routing-case"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "message-data-ref": {
                                            "type": "array",
                                            "description": "Reference to defined message-data which has extracted the data to be used in routing rule conditions",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "routing-rule": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Routing rules executed in sequence",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the routing-rule"
                                                },
                                                "user-label": {
                                                  "type": "string",
                                                  "description": "Label for free use"
                                                },
                                                "condition": {
                                                  "type": "string",
                                                  "description": "The evaluation of the condition determines, using the collected data from incoming requests, whether the actions in this routing rule shall be executed. If empty, the condition always evaluates to true"
                                                },
                                                "routing-action": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "Routing actions that are executed in sequence once the routing rule is used if the condition is true",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the routing-action"
                                                      },
                                                      "action-route-strict": {
                                                        "type": "object",
                                                        "description": "Route strictly to the targeted host",
                                                        "properties": {
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured nf-pool"
                                                              },
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the pool name"
                                                              }
                                                            }
                                                          },
                                                          "from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Route the request based on the defined variable"
                                                          },
                                                          "from-target-api-root-header": {
                                                            "type": "object",
                                                            "description": "If present, route the request based on the target-api-root-headers value",
                                                            "properties": {}
                                                          },
                                                          "from-authority-header": {
                                                            "type": "object",
                                                            "description": "If present, route the request based on the authority-headers value",
                                                            "properties": {}
                                                          }
                                                        }
                                                      },
                                                      "action-route-preferred": {
                                                        "type": "object",
                                                        "description": "Route to the targeted host which belongs to the specified pool. In case of failure, reselect among the rest of hosts in this pool",
                                                        "properties": {
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured pool"
                                                              },
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the nf-pool name"
                                                              }
                                                            }
                                                          },
                                                          "last-resort-nf-pool-ref": {
                                                            "type": "string",
                                                            "description": "Last nf-pool of hosts to try in case of multiple failures"
                                                          },
                                                          "from-var-name": {
                                                            "type": "string",
                                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                            "description": "Route the request based on the defined variable"
                                                          },
                                                          "from-target-api-root-header": {
                                                            "type": "object",
                                                            "description": "Route the request based on the target-api-root-headers value",
                                                            "properties": {}
                                                          },
                                                          "from-authority-header": {
                                                            "type": "object",
                                                            "description": "Route the request based on the authority-headers value",
                                                            "properties": {}
                                                          }
                                                        }
                                                      },
                                                      "action-route-round-robin": {
                                                        "type": "object",
                                                        "description": "Route to the any of the hosts in the specified nf-pool",
                                                        "properties": {
                                                          "failover-profile-ref": {
                                                            "type": "string",
                                                            "description": "Name of the referenced failover-profile"
                                                          },
                                                          "last-resort-nf-pool-ref": {
                                                            "type": "string",
                                                            "description": "Last nf-pool of hosts to try in case of multiple failures"
                                                          },
                                                          "target-nf-pool": {
                                                            "type": "object",
                                                            "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                                            "properties": {
                                                              "nf-pool-ref": {
                                                                "type": "string",
                                                                "description": "Name of the referenced configured nf-pool"
                                                              },
                                                              "var-name": {
                                                                "type": "string",
                                                                "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                                                "description": "Variable that holds the nf-pool name"
                                                              }
                                                            }
                                                          },
                                                          "target-roaming-partner": {
                                                            "type": "object",
                                                            "description": "Route via the referenced roaming-partner",
                                                            "properties": {
                                                              "roaming-partner-ref": {
                                                                "type": "string",
                                                                "description": "Name of the roaming-partner"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "action-reject-message": {
                                                        "type": "object",
                                                        "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                                        "properties": {
                                                          "status": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 100,
                                                            "maximum": 999,
                                                            "description": "Status-code of the reply"
                                                          },
                                                          "title": {
                                                            "type": "string",
                                                            "description": "A short, human-readable summary of the problem"
                                                          },
                                                          "cause": {
                                                            "type": "string",
                                                            "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                          },
                                                          "detail": {
                                                            "type": "string",
                                                            "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                          },
                                                          "format": {
                                                            "enum": [
                                                              "text",
                                                              "json"
                                                            ],
                                                            "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                                            "default": "json"
                                                          }
                                                        },
                                                        "required": [
                                                          "status"
                                                        ]
                                                      },
                                                      "action-log": {
                                                        "type": "object",
                                                        "description": "Logs a user-defined message with the configured log-level",
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "The text to be used for troubleshooting"
                                                          },
                                                          "max-log-message-length": {
                                                            "type": "integer",
                                                            "format": "uint32",
                                                            "minimum": 1,
                                                            "maximum": 10000,
                                                            "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                                            "default": 250
                                                          },
                                                          "log-level": {
                                                            "enum": [
                                                              "debug",
                                                              "info",
                                                              "trace",
                                                              "warn",
                                                              "error"
                                                            ],
                                                            "description": "Define the log level for troubleshooting",
                                                            "default": "debug"
                                                          }
                                                        },
                                                        "required": [
                                                          "text"
                                                        ]
                                                      },
                                                      "action-drop-message": {
                                                        "type": "object",
                                                        "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                                        "properties": {}
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                }
                                              },
                                              "required": [
                                                "condition",
                                                "name",
                                                "routing-action"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "routing-rule"
                                        ]
                                      }
                                    },
                                    "static-nf-instance-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Statically defined NF instances to be referenced in a nf-pool",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the static NF instance data set"
                                          },
                                          "static-nf-instance": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Static NF instances in this data set",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nf-instance-id": {
                                                  "type": "string",
                                                  "description": "The NF instance identity"
                                                },
                                                "static-nf-service": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The service for which an NF has registered",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "nf-service-id": {
                                                        "type": "string",
                                                        "description": "The NF service identity"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the service supported"
                                                      },
                                                      "capacity": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Specifies the capacity of this service"
                                                      },
                                                      "priority": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                                      },
                                                      "set-id": {
                                                        "type": "array",
                                                        "description": "The set identity of the service",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "address": {
                                                        "type": "object",
                                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                        "properties": {
                                                          "scheme": {
                                                            "enum": [
                                                              "http",
                                                              "https"
                                                            ],
                                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                                          },
                                                          "fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "inter-plmn-fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service used for inter-PLMN routing. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "multiple-ip-endpoint": {
                                                            "type": "array",
                                                            "uniqueItems": true,
                                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string",
                                                                  "description": "Name identifying the ip-endpoint"
                                                                },
                                                                "transport": {
                                                                  "enum": [
                                                                    "tcp"
                                                                  ],
                                                                  "description": "Transport protocol"
                                                                },
                                                                "port": {
                                                                  "type": "integer",
                                                                  "format": "uint16",
                                                                  "minimum": 0,
                                                                  "maximum": 65535,
                                                                  "description": "Port number"
                                                                },
                                                                "ipv4-address": {
                                                                  "type": "array",
                                                                  "description": "IPv4 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9\\.]*$"
                                                                  }
                                                                },
                                                                "ipv6-address": {
                                                                  "type": "array",
                                                                  "description": "IPv6 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "name"
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the profile"
                                                },
                                                "nf-type": {
                                                  "type": "string",
                                                  "description": "The type of the NF (according to TS 29.510)"
                                                },
                                                "locality": {
                                                  "type": "string",
                                                  "description": "The geographic locality of the NF"
                                                },
                                                "nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "scp-domain": {
                                                  "type": "array",
                                                  "description": "The SCP domains this NF is associated with",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "static-nf-instance"
                                        ]
                                      }
                                    },
                                    "static-scp-instance-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Statically defined SCP instances to be referenced in a nf-pool",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the static SCP instance data set"
                                          },
                                          "static-scp-instance": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Static SCP instances in this data set",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nf-instance-id": {
                                                  "type": "string",
                                                  "description": "The NF instance identity"
                                                },
                                                "served-nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NFs served by the SCP",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "static-nf-service": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The service for which the SCP has registered",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "nf-service-id": {
                                                        "type": "string",
                                                        "description": "The NF service identity"
                                                      },
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the service supported"
                                                      },
                                                      "capacity": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Specifies the capacity of this service"
                                                      },
                                                      "priority": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                                      },
                                                      "set-id": {
                                                        "type": "array",
                                                        "description": "The set identity of the service",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "address": {
                                                        "type": "object",
                                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                        "properties": {
                                                          "scheme": {
                                                            "enum": [
                                                              "http",
                                                              "https"
                                                            ],
                                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                                          },
                                                          "fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "inter-plmn-fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service used for inter-PLMN routing. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "multiple-ip-endpoint": {
                                                            "type": "array",
                                                            "uniqueItems": true,
                                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string",
                                                                  "description": "Name identifying the ip-endpoint"
                                                                },
                                                                "transport": {
                                                                  "enum": [
                                                                    "tcp"
                                                                  ],
                                                                  "description": "Transport protocol"
                                                                },
                                                                "port": {
                                                                  "type": "integer",
                                                                  "format": "uint16",
                                                                  "minimum": 0,
                                                                  "maximum": 65535,
                                                                  "description": "Port number"
                                                                },
                                                                "ipv4-address": {
                                                                  "type": "array",
                                                                  "description": "IPv4 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9\\.]*$"
                                                                  }
                                                                },
                                                                "ipv6-address": {
                                                                  "type": "array",
                                                                  "description": "IPv6 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "name"
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                },
                                                "static-scp-domain-info": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The info about the static scp domain",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the static scp domain"
                                                      },
                                                      "domain": {
                                                        "type": "string",
                                                        "description": "Domain of the static scp",
                                                        "default": "default"
                                                      },
                                                      "capacity": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Specifies the capacity of this service"
                                                      },
                                                      "priority": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                                      },
                                                      "address": {
                                                        "type": "object",
                                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                        "properties": {
                                                          "scheme": {
                                                            "enum": [
                                                              "http",
                                                              "https"
                                                            ],
                                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                                          },
                                                          "fqdn": {
                                                            "type": "string",
                                                            "format": "hostname",
                                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                          },
                                                          "multiple-ip-endpoint": {
                                                            "type": "array",
                                                            "uniqueItems": true,
                                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                                            "items": {
                                                              "type": "object",
                                                              "properties": {
                                                                "name": {
                                                                  "type": "string",
                                                                  "description": "Name identifying the ip-endpoint"
                                                                },
                                                                "transport": {
                                                                  "enum": [
                                                                    "tcp"
                                                                  ],
                                                                  "description": "Transport protocol"
                                                                },
                                                                "port": {
                                                                  "type": "integer",
                                                                  "format": "uint16",
                                                                  "minimum": 0,
                                                                  "maximum": 65535,
                                                                  "description": "Port number"
                                                                },
                                                                "ipv4-address": {
                                                                  "type": "array",
                                                                  "description": "IPv4 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9\\.]*$"
                                                                  }
                                                                },
                                                                "ipv6-address": {
                                                                  "type": "array",
                                                                  "description": "IPv6 address",
                                                                  "items": {
                                                                    "type": "string",
                                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                                  }
                                                                }
                                                              },
                                                              "required": [
                                                                "name"
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name"
                                                    ]
                                                  }
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the profile"
                                                },
                                                "nf-type": {
                                                  "type": "string",
                                                  "description": "The type of the NF (according to TS 29.510)"
                                                },
                                                "locality": {
                                                  "type": "string",
                                                  "description": "The geographic locality of the NF"
                                                },
                                                "nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "scp-domain": {
                                                  "type": "array",
                                                  "description": "The SCP domains this NF is associated with",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "static-scp-instance"
                                        ]
                                      }
                                    },
                                    "static-sepp-instance-data": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Statically defined SEPP instances to be referenced in a nf-pool",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of the static SEPP instance data set"
                                          },
                                          "static-sepp-instance": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "Static SEPP instances in this data set",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "nf-instance-id": {
                                                  "type": "string",
                                                  "description": "The NF instance identity"
                                                },
                                                "capacity": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "Specifies the capacity of this static sepp instance"
                                                },
                                                "priority": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "The priority of the static sepp instance. Lower values indicate a higher priority"
                                                },
                                                "address": {
                                                  "type": "object",
                                                  "description": "Address of the static sepp instance, at least one of FQDN or IPv4 or IPv6 address must be given",
                                                  "properties": {
                                                    "scheme": {
                                                      "enum": [
                                                        "http",
                                                        "https"
                                                      ],
                                                      "description": "The URI scheme (i.e. 'http' or 'https')",
                                                      "default": "http"
                                                    },
                                                    "fqdn": {
                                                      "type": "string",
                                                      "format": "hostname",
                                                      "description": "FQDN of the static sepp instance. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                                    },
                                                    "multiple-ip-endpoint": {
                                                      "type": "array",
                                                      "uniqueItems": true,
                                                      "description": "Multiple IP endpoint(s) of the static sepp instance, all with the same port and transport",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "Name identifying the ip-endpoint"
                                                          },
                                                          "transport": {
                                                            "enum": [
                                                              "tcp"
                                                            ],
                                                            "description": "Transport protocol"
                                                          },
                                                          "port": {
                                                            "type": "integer",
                                                            "format": "uint16",
                                                            "minimum": 0,
                                                            "maximum": 65535,
                                                            "description": "Port number"
                                                          },
                                                          "ipv4-address": {
                                                            "type": "array",
                                                            "description": "IPv4 address",
                                                            "items": {
                                                              "type": "string",
                                                              "pattern": "^[0-9\\.]*$"
                                                            }
                                                          },
                                                          "ipv6-address": {
                                                            "type": "array",
                                                            "description": "IPv6 address",
                                                            "items": {
                                                              "type": "string",
                                                              "pattern": "^[0-9a-fA-F:\\.]*$"
                                                            }
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the profile"
                                                },
                                                "nf-type": {
                                                  "type": "string",
                                                  "description": "The type of the NF (according to TS 29.510)"
                                                },
                                                "locality": {
                                                  "type": "string",
                                                  "description": "The geographic locality of the NF"
                                                },
                                                "nf-set-id": {
                                                  "type": "array",
                                                  "description": "The set identity of the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "scp-domain": {
                                                  "type": "array",
                                                  "description": "The SCP domains this NF is associated with",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "static-sepp-instance"
                                        ]
                                      }
                                    },
                                    "nf-pool": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Grouping of defined or dynamically discovered NF instances",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "pattern": "^[^.]+$",
                                            "description": "Name identifying the nf-pool"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "egress-connection-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined egress-connection-profile"
                                          },
                                          "dns-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined dns-profile that will be used for DNS resolution on producers of this nf-pool. This setting overrides the global setting."
                                          },
                                          "preferred-ip-family": {
                                            "enum": [
                                              "ipv4",
                                              "ipv6"
                                            ],
                                            "description": "Preferred IP version for routing."
                                          },
                                          "add-non-matching-as-lowest-priority": {
                                            "type": "boolean",
                                            "description": "If true, last priority-group is created with non-matching instances or endpoints.",
                                            "default": true
                                          },
                                          "nf-match-condition": {
                                            "type": "string",
                                            "description": "Only the NF instances that satisfy the nf-match-condition are included in the NF pool. This is applicable only to dynamically discovered NF instances."
                                          },
                                          "scp-match-condition": {
                                            "type": "string",
                                            "description": "Only the SCP instances that satisfy the scp-match-condition are included in the NF pool. Applicable only to dynamically discovered SCP instances"
                                          },
                                          "nf-pool-discovery": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Attributes to define discovery and grouping of NF instances",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the nf-pool-discovery"
                                                },
                                                "nrf-query": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "NRF queries used to discover NF instances that then get stored in attribute discovered-nf-instances of this nf-pool",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name identifying the nrf-query"
                                                      },
                                                      "requester-nf-type": {
                                                        "type": "string",
                                                        "description": "The NF type of the requester NF (according to TS 29.510)",
                                                        "default": "SEPP"
                                                      },
                                                      "nf-type": {
                                                        "type": "string",
                                                        "description": "The NF type of the targeted NF (according to TS 29.510)"
                                                      },
                                                      "nf-set-id": {
                                                        "type": "string",
                                                        "description": "The set identity of the targeted NF"
                                                      },
                                                      "nf-service-set-id": {
                                                        "type": "string",
                                                        "description": "The set identity of the targeted NF service"
                                                      },
                                                      "requester-plmn": {
                                                        "type": "array",
                                                        "description": "The PLMN identity of the requester NF. Format: MCC (3 digits) followed by MNC (2 or 3 digits). Example for MCC=123 and MNC=45: 12345",
                                                        "items": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{5,6}$"
                                                        }
                                                      },
                                                      "requester-snssai": {
                                                        "type": "array",
                                                        "uniqueItems": true,
                                                        "description": "Slice info of the requester NF",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "sst": {
                                                              "type": "integer",
                                                              "format": "uint8",
                                                              "minimum": 0,
                                                              "maximum": 255,
                                                              "description": "Specifies the slice service type of the S-NSSAI"
                                                            },
                                                            "sd": {
                                                              "type": "string",
                                                              "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                              "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                              "default": "-"
                                                            }
                                                          },
                                                          "required": [
                                                            "name",
                                                            "sst"
                                                          ]
                                                        }
                                                      },
                                                      "scp-domain": {
                                                        "type": "array",
                                                        "description": "The SCP domain the target NF or SCP belongs to",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "service-name": {
                                                        "type": "array",
                                                        "description": "The name of the service offered by the targeted NF",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      },
                                                      "query-parameter": {
                                                        "type": "array",
                                                        "uniqueItems": true,
                                                        "description": "Custom query parameter used for parameters not covered by non-custom attributes in nrf-query. Query parameter names already covered may not be used. Apart from this, possible name and value are according to TS 29.510",
                                                        "items": {
                                                          "type": "object",
                                                          "properties": {
                                                            "name": {
                                                              "type": "string"
                                                            },
                                                            "value": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "required": [
                                                            "name"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "nf-type"
                                                    ]
                                                  }
                                                },
                                                "static-nf-instance-data-ref": {
                                                  "type": "array",
                                                  "description": "Reference to a list of statically configured NF instances",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "update-interval": {
                                                  "enum": [
                                                    "infinite",
                                                    "24h",
                                                    "12h",
                                                    "6h",
                                                    "4h",
                                                    "3h",
                                                    "2h",
                                                    "1h",
                                                    "30min",
                                                    "20min",
                                                    "15min",
                                                    "10min",
                                                    "5min",
                                                    "1min",
                                                    "30s",
                                                    "20s",
                                                    "15s",
                                                    "10s",
                                                    "5s"
                                                  ],
                                                  "description": "Time span between two nf-pool updates. Use special value infinite to stop regular nf-pool updates",
                                                  "default": "1h"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          },
                                          "priority-group": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "maxItems": 10,
                                            "description": "Group of NF instances that satisfy specific selection criteria and belong to the same priority",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the priority-group"
                                                },
                                                "priority": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "The priority assigned to the group of NF instances, with a lower value indicating higher priority"
                                                },
                                                "static-scp-instance-data-ref": {
                                                  "type": "array",
                                                  "description": "Reference to an SCP instance data set",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "nf-match-condition": {
                                                  "type": "string",
                                                  "description": "NF instances of this nf-pool which satisfy the nf-match-condition are prioritized according to priority-group priority"
                                                },
                                                "scp-match-condition": {
                                                  "type": "string",
                                                  "description": "SCP instances of this nf-pool which satisfy the scp-match-condition are prioritized according to priority-group priority"
                                                },
                                                "sepp-match-condition": {
                                                  "type": "string",
                                                  "description": "SEPP instances of this nf-pool which satisfy the sepp-match-condition are prioritized according to priority-group priority"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "priority"
                                              ]
                                            }
                                          },
                                          "static-scp-instance-data-ref": {
                                            "type": "array",
                                            "description": "Reference to an SCP instance data set",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "static-sepp-instance-data-ref": {
                                            "type": "array",
                                            "description": "Reference to a SEPP instance data set",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "pool-retry-budget": {
                                            "type": "object",
                                            "description": "Specifies a limit per pool on concurrent retries in relation to the number of active requests",
                                            "properties": {
                                              "concurrent-retries-percentage": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 100,
                                                "description": "Specifies the limit on \u200bconcurrent retries as a percentage of the sum of active requests and active pending requests.\u200bFor example, if there are 100 active requests and\u200b the budget_percent is set to 25, there may be 25\u200b active retries",
                                                "default": 20
                                              },
                                              "min-concurrent-retries": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "Specifies the minimum retry concurrency allowed for\u200b the retry budget. The limit on the number of active retries may never go below this number",
                                                "default": 10
                                              }
                                            }
                                          },
                                          "temporary-blocking": {
                                            "type": "object",
                                            "description": "Temporary blocking allows the dynamic blocking of NFs which are not reachable, based on configurable and preset attributes",
                                            "properties": {
                                              "blocking-time": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The duration of time for which a NF is blocked",
                                                "default": 5
                                              },
                                              "consecutive-failures": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of consecutive 5xx errors from a NF node before it is temporarily blocked. If consecutive-local-failures parameter is not configured, then this value also represents the locally originated failures",
                                                "default": 5
                                              },
                                              "consecutive-local-failures": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of consecutive locally originated failures per worker pod before an NF is temporary blocked. If this parameter is configured, then the locally originated failures are counted separately from the consecutive 5xx errors for temporary blocking. If this parameter is set to zero then locally originated failures do not lead to temporary blocking in this pool"
                                              },
                                              "consecutive-gateway-failures": {
                                                "type": "integer",
                                                "format": "uint16",
                                                "minimum": 0,
                                                "maximum": 65535,
                                                "description": "The number of consecutive gateway failures (502, 503, 504 status codes) before a consecutive gateway failure ejection occurs. If this parameter is configured, then the consecutive gateway failures are counted separately from the consecutive 5xx errors for temporary blocking. If this parameter is set to zero then consecutive gateway failures do not lead to temporary blocking in this pool"
                                              }
                                            }
                                          },
                                          "enable-stats-per-nf-instance": {
                                            "type": "boolean",
                                            "description": "If set to true, then counters per NF instance are activated",
                                            "default": false
                                          },
                                          "threshold-for-nf-unavailable-alarm": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Threshold for the number of 5xx errors and timeouts received within 15 seconds time interval, that lead to raising the alarm: SEPP, NF Instance Unavailable"
                                          },
                                          "check-san-on-egress": {
                                            "type": "object",
                                            "description": "If present, SEPP acting as client checks RP's server certificate matching the SANs presented in it with the configured fqdns of that specific RP and only if they are matched , SEPP will send requests towards RP",
                                            "properties": {}
                                          },
                                          "out-request-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the request screening case that is applied when the request is targeting an NF instance in this nf-pool"
                                          },
                                          "in-response-screening-case-ref": {
                                            "type": "string",
                                            "description": "Reference to the response screening case that is applied when the response is received from an NF instance in this nf-pool"
                                          },
                                          "own-network-ref": {
                                            "type": "string",
                                            "description": "The own-network to which this nf-pool belongs to."
                                          },
                                          "roaming-partner-ref": {
                                            "type": "string",
                                            "description": "The roaming-partner to which this pool belongs to."
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "failover-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Determines the failover behaviour in case of failure such as lack of response or error response from peer",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the failover-profile"
                                          },
                                          "user-label": {
                                            "type": "string",
                                            "description": "Label for free use"
                                          },
                                          "request-time-budget": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "The maximum time in milliseconds a single request is allowed to take including retries, before SEPP considers it as timed out. The time starts when the request enters the SCP Worker and ends when the response leaves the SCP Worker. It includes the time for an SLF-lookup if one is required.",
                                            "default": 2000
                                          },
                                          "retry-condition": {
                                            "type": "object",
                                            "description": "Criteria for attempting a retry",
                                            "properties": {
                                              "http-status": {
                                                "type": "array",
                                                "description": "HTTP Status codes to trigger a retry",
                                                "items": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 100,
                                                  "maximum": 999
                                                }
                                              },
                                              "reset": {
                                                "type": "boolean",
                                                "description": "If defined, retry when the peer does not respond at all",
                                                "default": true
                                              },
                                              "connect-failure": {
                                                "type": "boolean",
                                                "description": "If defined, retry in case of connection timeout or connection refused",
                                                "default": true
                                              },
                                              "refused-stream": {
                                                "type": "boolean",
                                                "description": "If defined, retry in case of response HTTP2 REFUSED_STREAM received from peer",
                                                "default": true
                                              }
                                            }
                                          },
                                          "target-timeout": {
                                            "type": "integer",
                                            "format": "uint32",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Specifies the maximum time in milliseconds a single request towards a specific target is allowed to take before considered to be timed out",
                                            "default": 2000
                                          },
                                          "preferred-host-retries-max": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Specifies the number of times to perform a retry to the preferred host",
                                            "default": 3
                                          },
                                          "preferred-host-retry-multiple-addresses": {
                                            "type": "boolean",
                                            "description": "Retry multiple addresses of preferred host. If set to true, retries will be spread across all addresses of the selected host.",
                                            "default": true
                                          },
                                          "target-nf-pool-reselects-max": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Specifies the number of reselects to perform among the hosts of the target-nf-pool",
                                            "default": 3
                                          },
                                          "last-resort-nf-pool-reselects-max": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Specifies the number of reselects to perform among the hosts of the last-resort nf-pool",
                                            "default": 3
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "nf-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Profile consisting of general parameters of the SEPP instance and the services exposed by it, sent to the NRF at registration",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the NF profile"
                                          },
                                          "service-address-ref": {
                                            "type": "string",
                                            "description": "Service address on which the SEPP listens for incoming requests"
                                          },
                                          "sepp-info": {
                                            "type": "object",
                                            "description": "Specific data for the SEPP NF",
                                            "properties": {
                                              "sepp-prefix": {
                                                "type": "string",
                                                "description": "Optional deployment-specific string used to construct the apiRoot of this SEPP"
                                              },
                                              "remote-plmn": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "Remote PLMN(s) reachable through the SEPP",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "mcc": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{3}$",
                                                      "description": "Specifies the mobile country code of the PLMN"
                                                    },
                                                    "mnc": {
                                                      "type": "string",
                                                      "pattern": "^[0-9]{2,3}$",
                                                      "description": "Specifies the mobile network code of the PLMN"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "nf-service": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "The configuration of NF services, proxied through the SEPP NF instance, which can be discovered by other NFs",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "service-version": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "The supported versions of this NF service. Detailed information on the default versions used can be found in CPI document 'Configuring the SEPP'.",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "api-version-in-uri": {
                                                        "type": "string",
                                                        "description": "Version of the service instance to be used in the URI for accessing the API"
                                                      },
                                                      "api-full-version": {
                                                        "type": "string",
                                                        "description": "Full version number of the API"
                                                      }
                                                    },
                                                    "required": [
                                                      "api-full-version",
                                                      "api-version-in-uri"
                                                    ]
                                                  }
                                                },
                                                "service-address-ref": {
                                                  "type": "array",
                                                  "maxItems": 1,
                                                  "description": "Service address on which the SEPP listens for incoming requests",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "service-instance-id": {
                                                  "type": "string",
                                                  "description": "Name uniquely identifying this service instance."
                                                },
                                                "service-name": {
                                                  "enum": [
                                                    "default",
                                                    "nnrf-nfm",
                                                    "nnrf-disc",
                                                    "nnrf-oauth2",
                                                    "nudm-sdm",
                                                    "nudm-uecm",
                                                    "nudm-ueau",
                                                    "nudm-ee",
                                                    "nudm-pp",
                                                    "nudm-niddau",
                                                    "nudm-mt",
                                                    "namf-comm",
                                                    "namf-evts",
                                                    "namf-mt",
                                                    "namf-loc",
                                                    "nsmf-pdusession",
                                                    "nsmf-event-exposure",
                                                    "nsmf-nidd",
                                                    "nausf-auth",
                                                    "nausf-sorprotection",
                                                    "nausf-upuprotection",
                                                    "nnef-pfdmanagement",
                                                    "nnef-smcontext",
                                                    "nnef-eventexposure",
                                                    "npcf-am-policy-control",
                                                    "npcf-smpolicycontrol",
                                                    "npcf-policyauthorization",
                                                    "npcf-bdtpolicycontrol",
                                                    "npcf-eventexposure",
                                                    "npcf-ue-policy-control",
                                                    "nsmsf-sms",
                                                    "nnssf-nsselection",
                                                    "nnssf-nssaiavailability",
                                                    "nudr-dr",
                                                    "nudr-group-id-map",
                                                    "nlmf-loc",
                                                    "n5g-eir-eic",
                                                    "nbsf-management",
                                                    "nchf-spendinglimitcontrol",
                                                    "nchf-convergedcharging",
                                                    "nchf-offlineonlycharging",
                                                    "nnwdaf-eventssubscription",
                                                    "nnwdaf-analyticsinfo",
                                                    "ngmlc-loc",
                                                    "nucmf-provisioning",
                                                    "nucmf-uecapabilitymanagement",
                                                    "nhss-sdm",
                                                    "nhss-uecm",
                                                    "nhss-ueau",
                                                    "nhss-ee",
                                                    "nhss-ims-sdm",
                                                    "nhss-ims-uecm",
                                                    "nhss-ims-ueau",
                                                    "nsepp-telescopic",
                                                    "nsoraf-sor",
                                                    "nspaf-secured-packet",
                                                    "nudsf-dr",
                                                    "nnssaaf-nssaa"
                                                  ],
                                                  "description": "Name identifying the type of NF service."
                                                },
                                                "scheme": {
                                                  "enum": [
                                                    "http",
                                                    "https"
                                                  ],
                                                  "description": "Specifies the URI scheme"
                                                },
                                                "admin-state": {
                                                  "enum": [
                                                    "active",
                                                    "undiscoverable"
                                                  ],
                                                  "description": "Administrative state on NFService level"
                                                },
                                                "api-prefix": {
                                                  "type": "string",
                                                  "description": "Optional path used to construct the API URI for this service"
                                                },
                                                "allowed-plmn": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "mcc": {
                                                        "type": "string",
                                                        "pattern": "^[0-9]{3}$",
                                                        "description": "Specifies the mobile country code of the PLMN"
                                                      },
                                                      "mnc": {
                                                        "type": "string",
                                                        "pattern": "^[0-9]{2,3}$",
                                                        "description": "Specifies the mobile network code of the PLMN"
                                                      }
                                                    }
                                                  }
                                                },
                                                "allowed-nf-type": {
                                                  "type": "array",
                                                  "description": "NF types (according to TS 29.510) which are allowed to access the NF service. If not specified, NFs of any type are allowed to access the NF service.",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "allowed-nf-domain": {
                                                  "type": "array",
                                                  "description": "NF domain names which are allowed to access the NF service. If not specified, If not specified, NFs in any domain are allowed to access the NF",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "allowed-nssai": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sst": {
                                                        "type": "integer",
                                                        "format": "uint8",
                                                        "minimum": 0,
                                                        "maximum": 255,
                                                        "description": "Specifies the slice service type of the S-NSSAI"
                                                      },
                                                      "sd": {
                                                        "type": "string",
                                                        "pattern": "^[A-Fa-f0-9]{6}$",
                                                        "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                      }
                                                    },
                                                    "required": [
                                                      "sst"
                                                    ]
                                                  }
                                                },
                                                "allowed-nssai-1": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "sst": {
                                                        "type": "integer",
                                                        "format": "uint8",
                                                        "minimum": 0,
                                                        "maximum": 255,
                                                        "description": "Specifies the slice service type of the S-NSSAI"
                                                      },
                                                      "sd": {
                                                        "type": "string",
                                                        "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                        "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                        "default": "-"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "sst"
                                                    ]
                                                  }
                                                },
                                                "service-priority": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1,
                                                  "maximum": 65535,
                                                  "description": "Service priority of this NF service relative to other NF services of the same type, to be used for NF service selection. Lower values indicate a higher priority"
                                                },
                                                "capacity": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1,
                                                  "maximum": 65535,
                                                  "description": "Static capacity information of this NF service expressed as a weight relative to other services of the same type, to be used for NF selection"
                                                }
                                              },
                                              "required": [
                                                "scheme",
                                                "service-instance-id",
                                                "service-name"
                                              ]
                                            }
                                          },
                                          "nf-instance-name": {
                                            "type": "string",
                                            "description": "Human readable name of the NF instance"
                                          },
                                          "nf-type": {
                                            "type": "string",
                                            "description": "The type of the NF instance (according to TS 29.510)"
                                          },
                                          "admin-state": {
                                            "enum": [
                                              "active",
                                              "undiscoverable"
                                            ],
                                            "description": "Administrative state on NF level"
                                          },
                                          "nf-specific-info": {
                                            "type": "object",
                                            "description": "Deprecated, use nf-profile->chf-info and nf-profile->bsf-info instead, specific data for the NF instance type",
                                            "properties": {
                                              "chf-info": {
                                                "type": "object",
                                                "description": "Specific data for the CHF NF",
                                                "properties": {
                                                  "supi-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of SUPIs that can be served by the CHF instance. If not specified, the CHF can serve any SUPI",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295,
                                                          "description": "ID uniquely identifying the SUPI range"
                                                        },
                                                        "supi-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "First value identifying the start of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                        },
                                                        "supi-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "Last value identifying the end of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of SUPIs belonging to this range. A SUPI value is considered part of the range if, and only if, the SUPI string fully matches the regular expression."
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "gpsi-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of GPSIs that can be served by the CHF instance. If not specified, the CHF can serve any GPSI",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295
                                                        },
                                                        "identity-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "First value identifying the start of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                        },
                                                        "identity-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]+$",
                                                          "description": "Last value identifying the end of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of identities belonging to this range. An identity value is considered part of the range if and only if the identity string fully matches the regular expression. To be used when identity is External Identifier or External Group Identifier or MSISDN."
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  },
                                                  "plmn-range": {
                                                    "type": "array",
                                                    "uniqueItems": true,
                                                    "description": "Specifies the list of ranges of PLMNs that can be served by the CHF instance. If not specified, the CHF can serve any PLMN",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "id": {
                                                          "type": "integer",
                                                          "format": "uint32",
                                                          "minimum": 0,
                                                          "maximum": 4294967295
                                                        },
                                                        "plmn-start": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                          "description": "First value identifying the start of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12340'."
                                                        },
                                                        "plmn-end": {
                                                          "type": "string",
                                                          "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                                          "description": "Last value identifying the end of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12349'."
                                                        },
                                                        "pattern": {
                                                          "type": "string",
                                                          "description": "Regular expression pattern representing the set of PLMNs belonging to this range. A PLMN value is considered part of the range if and only if the PLMN string, formatted as <MCC><MNC>, fully matches the regular expression. For example '^1234[0-9]$'"
                                                        }
                                                      },
                                                      "required": [
                                                        "id"
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              "bsf-info": {
                                                "type": "object",
                                                "description": "Specific data for the BSF NF",
                                                "properties": {
                                                  "dnn": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "ip-domain": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "ipv4-addr-range": {
                                                    "type": "object",
                                                    "properties": {
                                                      "ipv4-addr-start": {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      },
                                                      "ipv4-addr-end": {
                                                        "type": "string",
                                                        "format": "ipv4"
                                                      }
                                                    }
                                                  },
                                                  "ipv6-prefix-range": {
                                                    "type": "object",
                                                    "properties": {
                                                      "ipv6-prefix-start": {
                                                        "type": "string",
                                                        "allOf": [
                                                          {
                                                            "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                          },
                                                          {
                                                            "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                          }
                                                        ]
                                                      },
                                                      "ipv6-prefix-end": {
                                                        "type": "string",
                                                        "allOf": [
                                                          {
                                                            "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                                          },
                                                          {
                                                            "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "requested-heartbeat-timer": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 1,
                                            "maximum": 65535,
                                            "description": "Requested time, in seconds, expected between two heart-beat messages from the NF instance to the NRF"
                                          },
                                          "plmn": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "PLMN(s) of the NF instance. If not provided, the PLMN ID(s) of the PLMN of the NRF are assumed for this NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "mcc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{3}$",
                                                  "description": "Specifies the mobile country code of the PLMN"
                                                },
                                                "mnc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{2,3}$",
                                                  "description": "Specifies the mobile network code of the PLMN"
                                                }
                                              }
                                            }
                                          },
                                          "snssai": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Deprecated, use snssai-1 instead. S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                }
                                              },
                                              "required": [
                                                "sst"
                                              ]
                                            }
                                          },
                                          "snssai-1": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                  "default": "-"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "sst"
                                              ]
                                            }
                                          },
                                          "allowed-plmn": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "mcc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{3}$",
                                                  "description": "Specifies the mobile country code of the PLMN"
                                                },
                                                "mnc": {
                                                  "type": "string",
                                                  "pattern": "^[0-9]{2,3}$",
                                                  "description": "Specifies the mobile network code of the PLMN"
                                                }
                                              }
                                            }
                                          },
                                          "allowed-nf-type": {
                                            "type": "array",
                                            "description": "NF types (according to TS 29.510) which are allowed to access the NF instance. If not specified, NFs of any type are allowed to access the NF",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "allowed-nf-domain": {
                                            "type": "array",
                                            "description": "NF domain names which are allowed to access the NF instance. If not specified, NFs in any domain are allowed to access the NF",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "allowed-nssai": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                                }
                                              },
                                              "required": [
                                                "sst"
                                              ]
                                            }
                                          },
                                          "allowed-nssai-1": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string"
                                                },
                                                "sst": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 255,
                                                  "description": "Specifies the slice service type of the S-NSSAI"
                                                },
                                                "sd": {
                                                  "type": "string",
                                                  "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                                  "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                                  "default": "-"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "sst"
                                              ]
                                            }
                                          },
                                          "nf-set-id": {
                                            "type": "array",
                                            "description": "NF Set Identifiers for this NF used for NF registration",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "nsi": {
                                            "type": "array",
                                            "description": "NSI identities of the Network Function. If not provided, the NF can serve any NSI",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "service-priority": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Service priority of this NF instance, in the range of 0-65535, relative to other NF instances of the same type, to be used for NF selection. Lower values indicate a higher priority"
                                          },
                                          "capacity": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Static capacity information of this NF instance, in the range of 0-65535, expressed as a weight relative to other NF instances of the same type"
                                          },
                                          "locality": {
                                            "type": "string",
                                            "description": "Operator defined information about the location of the NF instance. This information can be used by requesting NFs which prefer services of those NFs in the same geographical location or data center"
                                          },
                                          "scp-domain": {
                                            "type": "array",
                                            "description": "The SCP domain(s) the SCP belongs to or the SCP domain the NF (other than SCP) belongs to",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "nf-type",
                                          "service-address-ref"
                                        ]
                                      }
                                    },
                                    "nrf-group": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "The NRF group specifies all relevant information of NRFs that are available to this SEPP instance. Regarding the Nnrf_NFManagement interface, it determines the NRF registration behavior and triggers the NRF registration for the NF instance specified in the nf-profile",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the NRF registration group"
                                          },
                                          "nf-profile-ref": {
                                            "type": "string",
                                            "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on NRF level will override the corresponding attributes of the NF profile on NRF group level"
                                          },
                                          "dns-profile-ref": {
                                            "type": "string",
                                            "description": "Reference to a defined dns-profile that will be used for DNS resolution of the FQDN of the NRFs in the NRF group"
                                          },
                                          "nrf": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "minItems": 1,
                                            "description": "The configuration for a single NRF within this NRF group",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the NRF"
                                                },
                                                "nf-profile-ref": {
                                                  "type": "string",
                                                  "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on the individual NRF level will override the corresponding attributes of the NF profile on the NRF group level"
                                                },
                                                "priority": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 99,
                                                  "description": "Priority of this NRF for NF registration and other NRF service requests, relative to other NRFs in the same NRF group. In regard to the Nnrf_NFManagement service, the NRF with the highest priority is the primary NRF to which the NF instance will register. The remaining NRFs are used in case of failover, in order of priority. Lower values indicate a higher priority."
                                                },
                                                "fqdn": {
                                                  "type": "string",
                                                  "format": "hostname",
                                                  "description": "FQDN of the NRF"
                                                },
                                                "scheme": {
                                                  "enum": [
                                                    "http",
                                                    "https"
                                                  ],
                                                  "description": "Specifies the URI scheme to be used when contacting this NRF"
                                                },
                                                "ip-endpoint": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "minItems": 1,
                                                  "description": "IP endpoint of the NRF",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "Name uniquely identifying the ip-endpoint."
                                                      },
                                                      "port": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 0,
                                                        "maximum": 65535,
                                                        "description": "Port number"
                                                      },
                                                      "ipv4-address": {
                                                        "type": "string",
                                                        "pattern": "^[0-9\\.]*$",
                                                        "description": "IPv4 address"
                                                      },
                                                      "ipv6-address": {
                                                        "type": "string",
                                                        "pattern": "^[0-9a-fA-F:\\.]*$",
                                                        "description": "IPv6 address"
                                                      }
                                                    },
                                                    "required": [
                                                      "name",
                                                      "port"
                                                    ]
                                                  }
                                                },
                                                "retry-timeout": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 1000,
                                                  "maximum": 65535,
                                                  "description": "The time duration in milliseconds after which a request is considered unsuccessful and a retry to the same NRF is sent.",
                                                  "default": 1500
                                                },
                                                "max-retries": {
                                                  "type": "integer",
                                                  "format": "uint8",
                                                  "minimum": 0,
                                                  "maximum": 100,
                                                  "description": "The number of retries sent to the same NRF before failover to another NRF.",
                                                  "default": 0
                                                },
                                                "nrf-instance-id": {
                                                  "type": "string",
                                                  "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                                  "description": "NRF instance id uniquely identifying the NRF"
                                                }
                                              },
                                              "required": [
                                                "ip-endpoint",
                                                "name",
                                                "priority",
                                                "scheme"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "nrf"
                                        ]
                                      }
                                    },
                                    "nrf-service": {
                                      "type": "object",
                                      "description": "Defines which NRF services are used by this NF instance, referencing groups of NRFs that provide the respective service",
                                      "properties": {
                                        "nf-management": {
                                          "type": "object",
                                          "description": "Triggers the registration of this NF instance towards NRF and the usage of the Nnrf_NfManagement service",
                                          "properties": {
                                            "nrf-group-ref": {
                                              "type": "array",
                                              "minItems": 1,
                                              "maxItems": 32,
                                              "description": "The groups of NRFs providing the Nnrf_NFManagement service",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "required": [
                                            "nrf-group-ref"
                                          ]
                                        },
                                        "nf-discovery": {
                                          "type": "object",
                                          "description": "Enables the usage of the Nnrf_NfDiscovery service",
                                          "properties": {
                                            "nrf-group-ref": {
                                              "type": "string",
                                              "description": "The group of NRFs providing the Nnrf_NFDiscovery service"
                                            }
                                          },
                                          "required": [
                                            "nrf-group-ref"
                                          ]
                                        }
                                      }
                                    },
                                    "asymmetric-key": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "maxItems": 2,
                                      "description": "Asymmetric key of the SEPP used for TLS communication, referenced in service-address",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name uniquely identifying the asymmetric key"
                                          },
                                          "private-key": {
                                            "type": "string",
                                            "description": "Name of the installed private key defined in the ietf-keystore"
                                          },
                                          "certificate": {
                                            "type": "string",
                                            "description": "Name of the installed certificate defined in the ietf-keystore"
                                          }
                                        },
                                        "required": [
                                          "certificate",
                                          "name",
                                          "private-key"
                                        ]
                                      }
                                    },
                                    "firewall-profile": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Firewall profile contains a set of rules to validate incoming messages and report relevant events. Can be referenced from an external-network or roaming-partner.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name uniquely identifying the firewall profile"
                                          },
                                          "request": {
                                            "type": "object",
                                            "description": "Firewall rules for request messages. Order of applied rules is defined by the system and described in the CPI.",
                                            "properties": {
                                              "validate-message-headers": {
                                                "type": "object",
                                                "description": "Validation against allowed or denied headers.",
                                                "properties": {
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "allowed": {
                                                    "type": "object",
                                                    "description": "Allowed headers. If left empty, only the default allowed headers will be permitted. Default allowed headers are defined by the system and described in the CPI.",
                                                    "properties": {
                                                      "additional-allowed-header": {
                                                        "type": "array",
                                                        "description": "List of additional permitted headers in the message.",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "denied": {
                                                    "type": "object",
                                                    "description": "Denied headers.",
                                                    "properties": {
                                                      "denied-header": {
                                                        "type": "array",
                                                        "minItems": 1,
                                                        "description": "List of headers prohibited in the message.",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "denied-header"
                                                    ]
                                                  },
                                                  "action-reject-message": {
                                                    "type": "object",
                                                    "description": "Reject the message and send back a response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  },
                                                  "action-drop-message": {
                                                    "type": "object",
                                                    "description": "Drop the message and reset the stream gracefully.",
                                                    "properties": {}
                                                  },
                                                  "action-forward-unmodified-message": {
                                                    "type": "object",
                                                    "description": "Forward the message unmodified.",
                                                    "properties": {}
                                                  },
                                                  "action-forward-modified-message": {
                                                    "type": "object",
                                                    "description": "Remove not allowed or denied headers and forward the message.",
                                                    "properties": {}
                                                  }
                                                }
                                              },
                                              "validate-message-body-size": {
                                                "type": "object",
                                                "description": "Validation of configured maximum size of the message body.",
                                                "properties": {
                                                  "max-bytes": {
                                                    "type": "integer",
                                                    "format": "uint32",
                                                    "minimum": 0,
                                                    "maximum": 16000000,
                                                    "description": "Maximum message body size in bytes. Must be equal or lower than message-body-limits max-bytes."
                                                  },
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-reject-message": {
                                                    "type": "object",
                                                    "description": "Reject the message and send back a response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  },
                                                  "action-drop-message": {
                                                    "type": "object",
                                                    "description": "Drop the message and reset the stream gracefully.",
                                                    "properties": {}
                                                  }
                                                },
                                                "required": [
                                                  "max-bytes"
                                                ]
                                              },
                                              "validate-message-json-body-syntax": {
                                                "type": "object",
                                                "description": "Validation of message JSON body syntax.",
                                                "properties": {
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-reject-message": {
                                                    "type": "object",
                                                    "description": "Reject the message and send back a response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  },
                                                  "action-drop-message": {
                                                    "type": "object",
                                                    "description": "Drop the message and reset the stream gracefully.",
                                                    "properties": {}
                                                  },
                                                  "action-forward-unmodified-message": {
                                                    "type": "object",
                                                    "description": "Forward the message unmodified.",
                                                    "properties": {}
                                                  }
                                                }
                                              },
                                              "validate-message-json-body-leaves": {
                                                "type": "object",
                                                "description": "Validation of configured maximum number of JSON body leaves in the message.",
                                                "properties": {
                                                  "max-leaves": {
                                                    "type": "integer",
                                                    "format": "uint32",
                                                    "minimum": 0,
                                                    "maximum": 16000,
                                                    "description": "Maximum number of leaves in the JSON body. Must be equal or lower than message-body-limits max-leaves."
                                                  },
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-reject-message": {
                                                    "type": "object",
                                                    "description": "Reject the message and send back a response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  },
                                                  "action-drop-message": {
                                                    "type": "object",
                                                    "description": "Drop the message and reset the stream gracefully.",
                                                    "properties": {}
                                                  }
                                                },
                                                "required": [
                                                  "max-leaves"
                                                ]
                                              },
                                              "validate-message-json-body-depth": {
                                                "type": "object",
                                                "description": "Validation of configured maximum JSON body depth in the message.",
                                                "properties": {
                                                  "max-nesting-depth": {
                                                    "type": "integer",
                                                    "format": "uint32",
                                                    "minimum": 0,
                                                    "maximum": 32,
                                                    "description": "Maximum nesting depth of the JSON body. Must be equal or lower than message-body-limits max-nesting-depth."
                                                  },
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-reject-message": {
                                                    "type": "object",
                                                    "description": "Reject the message and send back a response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  },
                                                  "action-drop-message": {
                                                    "type": "object",
                                                    "description": "Drop the message and reset the stream gracefully.",
                                                    "properties": {}
                                                  }
                                                },
                                                "required": [
                                                  "max-nesting-depth"
                                                ]
                                              }
                                            }
                                          },
                                          "response": {
                                            "type": "object",
                                            "description": "Firewall rules for response messages. Order of applied rules is defined by the system and described in the CPI.",
                                            "properties": {
                                              "validate-message-headers": {
                                                "type": "object",
                                                "description": "Validation against allowed or denied headers.",
                                                "properties": {
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "allowed": {
                                                    "type": "object",
                                                    "description": "Allowed headers. If left empty, only the default allowed headers will be permitted. Default allowed headers are defined by the system and described in the CPI.",
                                                    "properties": {
                                                      "additional-allowed-header": {
                                                        "type": "array",
                                                        "description": "List of additional permitted headers in the message.",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "denied": {
                                                    "type": "object",
                                                    "description": "Denied headers.",
                                                    "properties": {
                                                      "denied-header": {
                                                        "type": "array",
                                                        "minItems": 1,
                                                        "description": "List of headers prohibited in the message.",
                                                        "items": {
                                                          "type": "string"
                                                        }
                                                      }
                                                    },
                                                    "required": [
                                                      "denied-header"
                                                    ]
                                                  },
                                                  "action-respond-with-error": {
                                                    "type": "object",
                                                    "description": "Create an error response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  },
                                                  "action-forward-unmodified-message": {
                                                    "type": "object",
                                                    "description": "Forward the message unmodified.",
                                                    "properties": {}
                                                  },
                                                  "action-forward-modified-message": {
                                                    "type": "object",
                                                    "description": "Remove not allowed or denied headers and forward the message.",
                                                    "properties": {}
                                                  }
                                                }
                                              },
                                              "validate-message-body-size": {
                                                "type": "object",
                                                "description": "Validation of configured maximum size of the message body.",
                                                "properties": {
                                                  "max-bytes": {
                                                    "type": "integer",
                                                    "format": "uint32",
                                                    "minimum": 0,
                                                    "maximum": 16000000,
                                                    "description": "Maximum message body size in bytes. Must be equal or lower than message-body-limits max-bytes."
                                                  },
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-respond-with-error": {
                                                    "type": "object",
                                                    "description": "Create an error response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "max-bytes"
                                                ]
                                              },
                                              "validate-message-json-body-syntax": {
                                                "type": "object",
                                                "description": "Validation of message JSON body syntax.",
                                                "properties": {
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-respond-with-error": {
                                                    "type": "object",
                                                    "description": "Create an error response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  },
                                                  "action-forward-unmodified-message": {
                                                    "type": "object",
                                                    "description": "Forward the message unmodified.",
                                                    "properties": {}
                                                  }
                                                }
                                              },
                                              "validate-message-json-body-leaves": {
                                                "type": "object",
                                                "description": "Validation of configured maximum number of JSON body leaves in the message.",
                                                "properties": {
                                                  "max-leaves": {
                                                    "type": "integer",
                                                    "format": "uint32",
                                                    "minimum": 0,
                                                    "maximum": 16000,
                                                    "description": "Maximum number of leaves in the JSON body. Must be equal or lower than message-body-limits max-leaves."
                                                  },
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-respond-with-error": {
                                                    "type": "object",
                                                    "description": "Create an error response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "max-leaves"
                                                ]
                                              },
                                              "validate-message-json-body-depth": {
                                                "type": "object",
                                                "description": "Validation of configured maximum JSON body depth in the message.",
                                                "properties": {
                                                  "max-nesting-depth": {
                                                    "type": "integer",
                                                    "format": "uint32",
                                                    "minimum": 0,
                                                    "maximum": 32,
                                                    "description": "Maximum nesting depth of the JSON body. Must be equal or lower than message-body-limits max-nesting-depth."
                                                  },
                                                  "report-event": {
                                                    "type": "boolean",
                                                    "description": "Report event if a message fails the validation check.",
                                                    "default": true
                                                  },
                                                  "action-respond-with-error": {
                                                    "type": "object",
                                                    "description": "Create an error response with a configured status code and title with detailed explanation.",
                                                    "properties": {
                                                      "status": {
                                                        "type": "integer",
                                                        "format": "uint16",
                                                        "minimum": 100,
                                                        "maximum": 999,
                                                        "description": "Status-code of the reply"
                                                      },
                                                      "title": {
                                                        "type": "string",
                                                        "description": "A short, human-readable summary of the problem"
                                                      },
                                                      "cause": {
                                                        "type": "string",
                                                        "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                                      },
                                                      "detail": {
                                                        "type": "string",
                                                        "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                                      },
                                                      "format": {
                                                        "enum": [
                                                          "text",
                                                          "json"
                                                        ],
                                                        "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                                                        "default": "json"
                                                      }
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "max-nesting-depth"
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "external-network",
                                    "ingress-connection-profile",
                                    "ingress-connection-profile-ref",
                                    "name",
                                    "own-network",
                                    "routing-case",
                                    "service-address"
                                  ]
                                }
                              }
                            }
                          },
                          "snmp": {
                            "type": "object",
                            "description": "Configuration of the SNMP protocol, for example IP addresses and ports.",
                            "properties": {
                              "heartbeat-interval": {
                                "type": "integer",
                                "format": "uint32",
                                "minimum": 30,
                                "maximum": 4294967295,
                                "description": "The interval in seconds, with which an SNMP heartbeat notification (eriAlarmHeartBeatNotif) is sent to all targets. heartbeat-interval in this module replaces heartbeat-interval specified in the ericsson-fm model, which has no effect on SNMP heartbeat. If not defined, a default value of 60 seconds will be used. The heartbeatInterval must be greater than 30 sec when oamVIP is enabled",
                                "default": 60
                              },
                              "administrative-state": {
                                "enum": [
                                  "locked",
                                  "unlocked"
                                ],
                                "description": "The administrative state for the SNMP protocol. If locked, no SNMP Traps are generated, for example, alarm, alerts or heartbeats. All access to the SNMP protocol is disabled.",
                                "default": "unlocked"
                              },
                              "enable-source-check-for-v1v2c": {
                                "type": "boolean",
                                "description": "Enables source IP check on the agent for community based Snmp V1 and Snmp V2C protocol access. If false, agent may accept SNMP GET, SET messages from any IP address. If true, agent only accepts SNMP GET, SET messages from configured target IP subnet.",
                                "default": false
                              },
                              "engine-id": {
                                "type": "string",
                                "description": "Unique identifier of the SNMP agent. Only applicable when using SNMPv3. To be configured when auto discovery of the SNMP Engine ID is not supported or it is desired to use an identifier that is not automatically calculated and remains unchanged across re-initializations. Where SNMP stack can not support setting the Engine ID, the applied value is ignored, keeping the current empty value."
                              },
                              "engine-boots": {
                                "type": "integer",
                                "format": "uint32",
                                "minimum": 0,
                                "maximum": 4294967295,
                                "description": "Count of the number of times the SNMP engine has re-booted/re-initialized since engine-id was last configured. Only applicable when using SNMPv3. In order to reset an SNMP engine whose snmpEngineBoots value is about to reach the value 2147483647, manual intervention is required. The engine must be re-configured, either with a new engine-id value, or with new secret values for the authentication and privacy protocols of all users known to that SNMP engine. The engine-boots will be stored and incremented every time SNMP AP re-boots",
                                "default": 0
                              },
                              "node-credential": {
                                "type": "object",
                                "description": "Node credential used for SNMP notifications with Transport Security Model. Must be set if Transport Security Model, DTLS, is used.",
                                "properties": {
                                  "server-identity": {
                                    "type": "object",
                                    "description": "A locally-defined or referenced end-entity certificate, including any configured intermediate certificates, the TLS server will present when establishing a TLS connection in its Certificate message, as defined in Section 7.4.2 in RFC 5246.",
                                    "properties": {
                                      "certificate": {
                                        "type": "object",
                                        "description": "Specifies the server identity using a certificate.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local key definition.",
                                            "properties": {
                                              "private-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "encrypted-private-key": {
                                                "type": "object",
                                                "description": "A container for the encrypted asymmetric private key value.",
                                                "properties": {
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                                                  },
                                                  "symmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies a symmetric key used to encrypt this key."
                                                  },
                                                  "asymmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies an asymmetric key used to encrypt this key."
                                                  }
                                                }
                                              },
                                              "algorithm": {
                                                "enum": [
                                                  "rsa1024",
                                                  "rsa2048",
                                                  "rsa3072",
                                                  "rsa4096",
                                                  "rsa7680",
                                                  "rsa15360",
                                                  "secp192r1",
                                                  "secp224r1",
                                                  "secp256r1",
                                                  "secp384r1",
                                                  "secp521r1",
                                                  "x25519",
                                                  "x448"
                                                ],
                                                "description": "Identifies the key's algorithm."
                                              },
                                              "public-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "public-key": {
                                                "type": "string",
                                                "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                              },
                                              "private-key": {
                                                "type": "string",
                                                "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                                "eric-adp-is-passphrase": "true",
                                                "format": "eric-adp-cm-secret"
                                              },
                                              "hidden-private-key": {
                                                "type": "string",
                                                "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                              },
                                              "cert": {
                                                "type": "string",
                                                "description": "The binary certificate data for this certificate."
                                              }
                                            },
                                            "required": [
                                              "algorithm",
                                              "public-key"
                                            ]
                                          },
                                          "keystore-reference": {
                                            "type": "object",
                                            "description": "A reference to a specific certificate (and its associated private key) in the keystore.",
                                            "properties": {
                                              "asymmetric-key": {
                                                "type": "string",
                                                "description": "A reference to an asymmetric key in the keystore."
                                              },
                                              "certificate": {
                                                "type": "string",
                                                "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "local-definition"
                                        ]
                                      },
                                      "raw-private-key": {
                                        "type": "object",
                                        "description": "Specifies the server identity using a raw private key.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local key definition.",
                                            "properties": {
                                              "private-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "encrypted-private-key": {
                                                "type": "object",
                                                "description": "A container for the encrypted asymmetric private key value.",
                                                "properties": {
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                                                  },
                                                  "symmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies a symmetric key used to encrypt this key."
                                                  },
                                                  "asymmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies an asymmetric key used to encrypt this key."
                                                  }
                                                }
                                              },
                                              "algorithm": {
                                                "enum": [
                                                  "rsa1024",
                                                  "rsa2048",
                                                  "rsa3072",
                                                  "rsa4096",
                                                  "rsa7680",
                                                  "rsa15360",
                                                  "secp192r1",
                                                  "secp224r1",
                                                  "secp256r1",
                                                  "secp384r1",
                                                  "secp521r1",
                                                  "x25519",
                                                  "x448"
                                                ],
                                                "description": "Identifies the key's algorithm."
                                              },
                                              "public-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "public-key": {
                                                "type": "string",
                                                "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                              },
                                              "private-key": {
                                                "type": "string",
                                                "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                                "eric-adp-is-passphrase": "true",
                                                "format": "eric-adp-cm-secret"
                                              },
                                              "hidden-private-key": {
                                                "type": "string",
                                                "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                              }
                                            },
                                            "required": [
                                              "algorithm",
                                              "public-key"
                                            ]
                                          },
                                          "keystore-reference": {
                                            "type": "string",
                                            "description": "A reference to an asymmetric key that exists in the keystore. The intent is to reference just the asymmetric key without any regard for any certificates that may be associated with it."
                                          }
                                        },
                                        "required": [
                                          "local-definition"
                                        ]
                                      },
                                      "psk": {
                                        "type": "object",
                                        "description": "Specifies the server identity using a PSK.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local key definition.",
                                            "properties": {
                                              "algorithm": {
                                                "enum": [
                                                  "aes-128-cbc",
                                                  "aes-192-cbc",
                                                  "aes-256-cbc",
                                                  "aes-128-ctr",
                                                  "aes-192-ctr",
                                                  "aes-256-ctr",
                                                  "des3-cbc-sha1-kd",
                                                  "rc4-hmac",
                                                  "rc4-hmac-exp"
                                                ],
                                                "description": "The algorithm to be used when generating the key."
                                              },
                                              "key-format": {
                                                "type": "string",
                                                "description": "Identifies the symmetric key's format."
                                              },
                                              "encrypted-key": {
                                                "type": "object",
                                                "description": "A container for the encrypted symmetric key value.",
                                                "properties": {
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                                                  },
                                                  "symmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies a symmetric key used to encrypt this key."
                                                  },
                                                  "asymmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies an asymmetric key used to encrypt this key."
                                                  }
                                                }
                                              },
                                              "key": {
                                                "type": "string",
                                                "description": "The binary value of the key. The interpretation of the value is defined by 'key-format'. For example, FIXME."
                                              },
                                              "hidden-key": {
                                                "type": "string",
                                                "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                              }
                                            },
                                            "required": [
                                              "algorithm"
                                            ]
                                          },
                                          "keystore-reference": {
                                            "type": "string",
                                            "description": "A reference to an symmetric key that exists in the keystore."
                                          }
                                        },
                                        "required": [
                                          "local-definition"
                                        ]
                                      }
                                    }
                                  },
                                  "client-authentication": {
                                    "type": "object",
                                    "description": "Specifies how the TLS server can authenticate TLS clients. Any combination of credentials is additive and unordered. Note that no configuration is required for PSK (pre-shared or pairwise-symmetric key) based authentication as the key is necessarily the same as configured in the '../server- identity' node.",
                                    "properties": {
                                      "ca-certs": {
                                        "type": "object",
                                        "description": "A set of certificate authority (CA) certificates used by the TLS server to authenticate TLS client certificates. A client certificate is authenticated if it has a valid chain of trust to a configured CA certificate.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local trust anchor definitions.",
                                            "properties": {
                                              "cert": {
                                                "type": "array",
                                                "description": "The binary certificate data for this certificate.",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "truststore-reference": {
                                            "type": "string",
                                            "description": "A reference to a set of trust anchors that exists in the truststore."
                                          }
                                        }
                                      },
                                      "client-certs": {
                                        "type": "object",
                                        "description": "A set of client certificates (i.e., end entity certificates) used by the TLS server to authenticate certificates presented by TLS clients. A client certificate is authenticated if it is an exact match to a configured client certificate.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local trust anchor definitions.",
                                            "properties": {
                                              "cert": {
                                                "type": "array",
                                                "description": "The binary certificate data for this certificate.",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "truststore-reference": {
                                            "type": "string",
                                            "description": "A reference to a set of trust anchors that exists in the truststore."
                                          }
                                        }
                                      },
                                      "raw-public-keys": {
                                        "type": "object",
                                        "description": "A set of raw public keys used by the TLS server to authenticate raw public keys presented by the TLS client. A raw public key is authenticated if it is an exact match to a configured raw public key.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold local raw public key definitions.",
                                            "properties": {
                                              "raw-public-key": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "A raw public key definition.",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "An arbitrary name for this raw public key."
                                                    },
                                                    "algorithm": {
                                                      "enum": [
                                                        "rsa1024",
                                                        "rsa2048",
                                                        "rsa3072",
                                                        "rsa4096",
                                                        "rsa7680",
                                                        "rsa15360",
                                                        "secp192r1",
                                                        "secp224r1",
                                                        "secp256r1",
                                                        "secp384r1",
                                                        "secp521r1",
                                                        "x25519",
                                                        "x448"
                                                      ],
                                                      "description": "Identifies the key's algorithm."
                                                    },
                                                    "public-key-format": {
                                                      "type": "string",
                                                      "description": "Identifies the key's format."
                                                    },
                                                    "public-key": {
                                                      "type": "string",
                                                      "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                                    }
                                                  },
                                                  "required": [
                                                    "algorithm",
                                                    "public-key"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "truststore-reference": {
                                            "type": "string",
                                            "description": "A reference to a set of raw public keys that exist in the truststore."
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "hello-params": {
                                    "type": "object",
                                    "description": "Configurable parameters for the TLS hello message.",
                                    "properties": {
                                      "tls-versions": {
                                        "type": "object",
                                        "description": "Parameters regarding TLS versions.",
                                        "properties": {
                                          "tls-version": {
                                            "type": "array",
                                            "description": "Acceptable TLS protocol versions. If this leaf-list is not configured (has zero elements) the acceptable TLS protocol versions are implementation- defined.",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "cipher-suites": {
                                        "type": "object",
                                        "description": "Parameters regarding cipher suites.",
                                        "properties": {
                                          "cipher-suite": {
                                            "type": "array",
                                            "description": "Acceptable cipher suites in order of descending preference. The configured host key algorithms should be compatible with the algorithm used by the configured private key. Please see Section 5 of RFC XXXX for valid combinations. If this leaf-list is not configured (has zero elements) the acceptable cipher suites are implementation- defined.",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "keepalives": {
                                    "type": "object",
                                    "description": "Configures the keep-alive policy, to proactively test the aliveness of the TLS client. An unresponsive TLS client is dropped after approximately max-wait * max-attempts seconds.",
                                    "properties": {
                                      "max-wait": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 1,
                                        "maximum": 65535,
                                        "description": "Sets the amount of time in seconds after which if no data has been received from the TLS client, a TLS-level message will be sent to test the aliveness of the TLS client.",
                                        "default": 30
                                      },
                                      "max-attempts": {
                                        "type": "integer",
                                        "format": "uint8",
                                        "minimum": 0,
                                        "maximum": 255,
                                        "description": "Sets the maximum number of sequential keep-alive messages that can fail to obtain a response from the TLS client before assuming the TLS client is no longer alive.",
                                        "default": 3
                                      }
                                    }
                                  }
                                }
                              },
                              "trust-category": {
                                "type": "object",
                                "description": "The trust category used for authentication of DTLS protocol users. Must be set if Transport Security Model, DTLS, is used.",
                                "properties": {
                                  "server-identity": {
                                    "type": "object",
                                    "description": "A locally-defined or referenced end-entity certificate, including any configured intermediate certificates, the TLS server will present when establishing a TLS connection in its Certificate message, as defined in Section 7.4.2 in RFC 5246.",
                                    "properties": {
                                      "certificate": {
                                        "type": "object",
                                        "description": "Specifies the server identity using a certificate.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local key definition.",
                                            "properties": {
                                              "private-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "encrypted-private-key": {
                                                "type": "object",
                                                "description": "A container for the encrypted asymmetric private key value.",
                                                "properties": {
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                                                  },
                                                  "symmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies a symmetric key used to encrypt this key."
                                                  },
                                                  "asymmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies an asymmetric key used to encrypt this key."
                                                  }
                                                }
                                              },
                                              "algorithm": {
                                                "enum": [
                                                  "rsa1024",
                                                  "rsa2048",
                                                  "rsa3072",
                                                  "rsa4096",
                                                  "rsa7680",
                                                  "rsa15360",
                                                  "secp192r1",
                                                  "secp224r1",
                                                  "secp256r1",
                                                  "secp384r1",
                                                  "secp521r1",
                                                  "x25519",
                                                  "x448"
                                                ],
                                                "description": "Identifies the key's algorithm."
                                              },
                                              "public-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "public-key": {
                                                "type": "string",
                                                "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                              },
                                              "private-key": {
                                                "type": "string",
                                                "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                                "eric-adp-is-passphrase": "true",
                                                "format": "eric-adp-cm-secret"
                                              },
                                              "hidden-private-key": {
                                                "type": "string",
                                                "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                              },
                                              "cert": {
                                                "type": "string",
                                                "description": "The binary certificate data for this certificate."
                                              }
                                            },
                                            "required": [
                                              "algorithm",
                                              "public-key"
                                            ]
                                          },
                                          "keystore-reference": {
                                            "type": "object",
                                            "description": "A reference to a specific certificate (and its associated private key) in the keystore.",
                                            "properties": {
                                              "asymmetric-key": {
                                                "type": "string",
                                                "description": "A reference to an asymmetric key in the keystore."
                                              },
                                              "certificate": {
                                                "type": "string",
                                                "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "local-definition"
                                        ]
                                      },
                                      "raw-private-key": {
                                        "type": "object",
                                        "description": "Specifies the server identity using a raw private key.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local key definition.",
                                            "properties": {
                                              "private-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "encrypted-private-key": {
                                                "type": "object",
                                                "description": "A container for the encrypted asymmetric private key value.",
                                                "properties": {
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                                                  },
                                                  "symmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies a symmetric key used to encrypt this key."
                                                  },
                                                  "asymmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies an asymmetric key used to encrypt this key."
                                                  }
                                                }
                                              },
                                              "algorithm": {
                                                "enum": [
                                                  "rsa1024",
                                                  "rsa2048",
                                                  "rsa3072",
                                                  "rsa4096",
                                                  "rsa7680",
                                                  "rsa15360",
                                                  "secp192r1",
                                                  "secp224r1",
                                                  "secp256r1",
                                                  "secp384r1",
                                                  "secp521r1",
                                                  "x25519",
                                                  "x448"
                                                ],
                                                "description": "Identifies the key's algorithm."
                                              },
                                              "public-key-format": {
                                                "type": "string",
                                                "description": "Identifies the key's format."
                                              },
                                              "public-key": {
                                                "type": "string",
                                                "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                              },
                                              "private-key": {
                                                "type": "string",
                                                "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                                "eric-adp-is-passphrase": "true",
                                                "format": "eric-adp-cm-secret"
                                              },
                                              "hidden-private-key": {
                                                "type": "string",
                                                "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                              }
                                            },
                                            "required": [
                                              "algorithm",
                                              "public-key"
                                            ]
                                          },
                                          "keystore-reference": {
                                            "type": "string",
                                            "description": "A reference to an asymmetric key that exists in the keystore. The intent is to reference just the asymmetric key without any regard for any certificates that may be associated with it."
                                          }
                                        },
                                        "required": [
                                          "local-definition"
                                        ]
                                      },
                                      "psk": {
                                        "type": "object",
                                        "description": "Specifies the server identity using a PSK.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local key definition.",
                                            "properties": {
                                              "algorithm": {
                                                "enum": [
                                                  "aes-128-cbc",
                                                  "aes-192-cbc",
                                                  "aes-256-cbc",
                                                  "aes-128-ctr",
                                                  "aes-192-ctr",
                                                  "aes-256-ctr",
                                                  "des3-cbc-sha1-kd",
                                                  "rc4-hmac",
                                                  "rc4-hmac-exp"
                                                ],
                                                "description": "The algorithm to be used when generating the key."
                                              },
                                              "key-format": {
                                                "type": "string",
                                                "description": "Identifies the symmetric key's format."
                                              },
                                              "encrypted-key": {
                                                "type": "object",
                                                "description": "A container for the encrypted symmetric key value.",
                                                "properties": {
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                                                  },
                                                  "symmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies a symmetric key used to encrypt this key."
                                                  },
                                                  "asymmetric-key-ref": {
                                                    "type": "string",
                                                    "description": "Identifies an asymmetric key used to encrypt this key."
                                                  }
                                                }
                                              },
                                              "key": {
                                                "type": "string",
                                                "description": "The binary value of the key. The interpretation of the value is defined by 'key-format'. For example, FIXME."
                                              },
                                              "hidden-key": {
                                                "type": "string",
                                                "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                              }
                                            },
                                            "required": [
                                              "algorithm"
                                            ]
                                          },
                                          "keystore-reference": {
                                            "type": "string",
                                            "description": "A reference to an symmetric key that exists in the keystore."
                                          }
                                        },
                                        "required": [
                                          "local-definition"
                                        ]
                                      }
                                    }
                                  },
                                  "client-authentication": {
                                    "type": "object",
                                    "description": "Specifies how the TLS server can authenticate TLS clients. Any combination of credentials is additive and unordered. Note that no configuration is required for PSK (pre-shared or pairwise-symmetric key) based authentication as the key is necessarily the same as configured in the '../server- identity' node.",
                                    "properties": {
                                      "ca-certs": {
                                        "type": "object",
                                        "description": "A set of certificate authority (CA) certificates used by the TLS server to authenticate TLS client certificates. A client certificate is authenticated if it has a valid chain of trust to a configured CA certificate.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local trust anchor definitions.",
                                            "properties": {
                                              "cert": {
                                                "type": "array",
                                                "description": "The binary certificate data for this certificate.",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "truststore-reference": {
                                            "type": "string",
                                            "description": "A reference to a set of trust anchors that exists in the truststore."
                                          }
                                        }
                                      },
                                      "client-certs": {
                                        "type": "object",
                                        "description": "A set of client certificates (i.e., end entity certificates) used by the TLS server to authenticate certificates presented by TLS clients. A client certificate is authenticated if it is an exact match to a configured client certificate.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold the local trust anchor definitions.",
                                            "properties": {
                                              "cert": {
                                                "type": "array",
                                                "description": "The binary certificate data for this certificate.",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "truststore-reference": {
                                            "type": "string",
                                            "description": "A reference to a set of trust anchors that exists in the truststore."
                                          }
                                        }
                                      },
                                      "raw-public-keys": {
                                        "type": "object",
                                        "description": "A set of raw public keys used by the TLS server to authenticate raw public keys presented by the TLS client. A raw public key is authenticated if it is an exact match to a configured raw public key.",
                                        "properties": {
                                          "local-definition": {
                                            "type": "object",
                                            "description": "Container to hold local raw public key definitions.",
                                            "properties": {
                                              "raw-public-key": {
                                                "type": "array",
                                                "uniqueItems": true,
                                                "description": "A raw public key definition.",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "name": {
                                                      "type": "string",
                                                      "description": "An arbitrary name for this raw public key."
                                                    },
                                                    "algorithm": {
                                                      "enum": [
                                                        "rsa1024",
                                                        "rsa2048",
                                                        "rsa3072",
                                                        "rsa4096",
                                                        "rsa7680",
                                                        "rsa15360",
                                                        "secp192r1",
                                                        "secp224r1",
                                                        "secp256r1",
                                                        "secp384r1",
                                                        "secp521r1",
                                                        "x25519",
                                                        "x448"
                                                      ],
                                                      "description": "Identifies the key's algorithm."
                                                    },
                                                    "public-key-format": {
                                                      "type": "string",
                                                      "description": "Identifies the key's format."
                                                    },
                                                    "public-key": {
                                                      "type": "string",
                                                      "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                                    }
                                                  },
                                                  "required": [
                                                    "algorithm",
                                                    "public-key"
                                                  ]
                                                }
                                              }
                                            }
                                          },
                                          "truststore-reference": {
                                            "type": "string",
                                            "description": "A reference to a set of raw public keys that exist in the truststore."
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "hello-params": {
                                    "type": "object",
                                    "description": "Configurable parameters for the TLS hello message.",
                                    "properties": {
                                      "tls-versions": {
                                        "type": "object",
                                        "description": "Parameters regarding TLS versions.",
                                        "properties": {
                                          "tls-version": {
                                            "type": "array",
                                            "description": "Acceptable TLS protocol versions. If this leaf-list is not configured (has zero elements) the acceptable TLS protocol versions are implementation- defined.",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "cipher-suites": {
                                        "type": "object",
                                        "description": "Parameters regarding cipher suites.",
                                        "properties": {
                                          "cipher-suite": {
                                            "type": "array",
                                            "description": "Acceptable cipher suites in order of descending preference. The configured host key algorithms should be compatible with the algorithm used by the configured private key. Please see Section 5 of RFC XXXX for valid combinations. If this leaf-list is not configured (has zero elements) the acceptable cipher suites are implementation- defined.",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "keepalives": {
                                    "type": "object",
                                    "description": "Configures the keep-alive policy, to proactively test the aliveness of the TLS client. An unresponsive TLS client is dropped after approximately max-wait * max-attempts seconds.",
                                    "properties": {
                                      "max-wait": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 1,
                                        "maximum": 65535,
                                        "description": "Sets the amount of time in seconds after which if no data has been received from the TLS client, a TLS-level message will be sent to test the aliveness of the TLS client.",
                                        "default": 30
                                      },
                                      "max-attempts": {
                                        "type": "integer",
                                        "format": "uint8",
                                        "minimum": 0,
                                        "maximum": 255,
                                        "description": "Sets the maximum number of sequential keep-alive messages that can fail to obtain a response from the TLS client before assuming the TLS client is no longer alive.",
                                        "default": 3
                                      }
                                    }
                                  }
                                }
                              },
                              "snmp-target-v2c": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "SNMP target defines a trap receiver and gives access privileges.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "administrative-state": {
                                      "enum": [
                                        "locked",
                                        "unlocked"
                                      ],
                                      "description": "Administrative state for SNMP target. If locked, traps are not sent.",
                                      "default": "unlocked"
                                    },
                                    "community": {
                                      "type": "string",
                                      "description": "SNMP community string."
                                    },
                                    "network-prefix-length": {
                                      "type": "integer",
                                      "format": "uint8",
                                      "minimum": 1,
                                      "maximum": 128,
                                      "description": "The network prefix length identifying the number of subnet mask bits in the target address. For IPv4 target address, range 1-32 For IPv6 target address, range 1-128 Used only when enable-source-check-for-v1v2c in the snmp list is true. The agent uses the value to determine the source IP address range permitted to execute Snmp GET and SET on managed device. If not present it means that Snmp GET and SET shall be permitted from just a single target IP as configured in host leaf of this list entry."
                                    },
                                    "host": {
                                      "type": "string",
                                      "anyOf": [
                                        {
                                          "format": "ipv4"
                                        },
                                        {
                                          "format": "ipv6"
                                        },
                                        {
                                          "format": "hostname"
                                        }
                                      ],
                                      "description": "The host IP address or a DNS domain name."
                                    },
                                    "port": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 65535,
                                      "description": "The host port.",
                                      "default": 162
                                    },
                                    "transport-method": {
                                      "enum": [
                                        "trap"
                                      ],
                                      "description": "Method type used.",
                                      "default": "trap"
                                    }
                                  },
                                  "required": [
                                    "community",
                                    "host",
                                    "id"
                                  ]
                                }
                              },
                              "snmp-target-v3": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "SNMP target defines a trap receiver and gives access privileges. This list, defines V3 USM protocol attributes.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "administrative-state": {
                                      "enum": [
                                        "locked",
                                        "unlocked"
                                      ],
                                      "description": "Administrative state for SNMP target. If locked, traps are not sent.",
                                      "default": "unlocked"
                                    },
                                    "host": {
                                      "type": "string",
                                      "anyOf": [
                                        {
                                          "format": "ipv4"
                                        },
                                        {
                                          "format": "ipv6"
                                        },
                                        {
                                          "format": "hostname"
                                        }
                                      ],
                                      "description": "The host IP address or a DNS domain name."
                                    },
                                    "port": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 65535,
                                      "description": "The host port.",
                                      "default": 162
                                    },
                                    "user": {
                                      "type": "string",
                                      "description": "SNMP V3 user name for the SNMP V3 message."
                                    },
                                    "snmp-security-level": {
                                      "enum": [
                                        "no-auth-no-priv",
                                        "auth-no-priv",
                                        "auth-priv"
                                      ],
                                      "description": "Specifies the level of security applied to messages exchanged with this target.",
                                      "default": "auth-priv"
                                    },
                                    "auth-protocol": {
                                      "enum": [
                                        "md5",
                                        "sha1"
                                      ],
                                      "description": "Authentication protocol used. Value relevant only when authentication is enabled. See leaf snmpSecurityLevel.",
                                      "default": "sha1"
                                    },
                                    "auth-key": {
                                      "type": "string",
                                      "description": "Authentication key used for signing SNMP notifications. Value relevant only if authentication is enabled. See leaf snmpSecurityLevel. If authentication is enabled key MUST contain at least 8 characters.",
                                      "eric-adp-is-passphrase": "true",
                                      "format": "eric-adp-cm-secret"
                                    },
                                    "priv-protocol": {
                                      "enum": [
                                        "aes-128-cfb",
                                        "des-cbc"
                                      ],
                                      "description": "Privacy protocol used. Relevant only if privacy is enabled. See leaf snmpSecurityLevel.",
                                      "default": "aes-128-cfb"
                                    },
                                    "priv-key": {
                                      "type": "string",
                                      "description": "Privacy key used for encryption. User's privKey encrypts the data portion of the message. Value relevant only if privacy is enabled. See leaf snmpSecurityLevel. If privacy is enabled key MUST contain at least 8 characters.",
                                      "eric-adp-is-passphrase": "true",
                                      "format": "eric-adp-cm-secret"
                                    },
                                    "transport-method": {
                                      "enum": [
                                        "trap"
                                      ],
                                      "description": "Method type used.",
                                      "default": "trap"
                                    }
                                  },
                                  "required": [
                                    "host",
                                    "id",
                                    "user"
                                  ]
                                }
                              },
                              "snmp-target-v3dtls": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "SNMP target defines a trap receiver and gives access privileges. This list defines attributes needed for SNMP over DTLS. nodeCredential and trustCategory defined in the parent snmp container are used. DTLS is used as transport protocol for incoming requests, outgoing responses and SNMP notifications.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "administrative-state": {
                                      "enum": [
                                        "locked",
                                        "unlocked"
                                      ],
                                      "description": "Administrative state for SNMP target. If locked, traps are not sent.",
                                      "default": "unlocked"
                                    },
                                    "host": {
                                      "type": "string",
                                      "anyOf": [
                                        {
                                          "format": "ipv4"
                                        },
                                        {
                                          "format": "ipv6"
                                        },
                                        {
                                          "format": "hostname"
                                        }
                                      ],
                                      "description": "The host IP address or a DNS domain name."
                                    },
                                    "port": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 65535,
                                      "description": "The host port.",
                                      "default": 10162
                                    },
                                    "user": {
                                      "type": "string",
                                      "description": "SNMP V3 user name. Used for authorization of incoming SNMP requests. Defined by the subject alternative name field, from the certificate provided by the client during DTLS session setup."
                                    },
                                    "transport-method": {
                                      "enum": [
                                        "trap"
                                      ],
                                      "description": "Method type used.",
                                      "default": "trap"
                                    }
                                  },
                                  "required": [
                                    "host",
                                    "id",
                                    "user"
                                  ]
                                }
                              }
                            }
                          },
                          "swim": {
                            "type": "object",
                            "description": "Sw inventory management",
                            "properties": {
                              "sw-item": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A software item holds information about an executable software product. A software item can also represent a container product that contains other software items, which represent a subordinate container and/or executable software products.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "sw-item-id": {
                                      "type": "string",
                                      "description": "Identity of the sw-item entry."
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    }
                                  },
                                  "required": [
                                    "sw-item-id"
                                  ]
                                }
                              },
                              "sw-version": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A resource of this list entry represents the software version of a domain of the software. If there is only one software domain, the resource represents the overall version of the managed element.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "sw-version-id": {
                                      "type": "string",
                                      "description": "Identity of the sw-version entry."
                                    },
                                    "user-label": {
                                      "type": "string",
                                      "description": "Label for free use."
                                    }
                                  },
                                  "required": [
                                    "sw-version-id"
                                  ]
                                }
                              }
                            }
                          },
                          "vtap": {
                            "type": "object",
                            "description": "Tapping real-time or near real-time packets to an external system in a specific format",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "description": "Enable/Disable virtual tap",
                                "default": false
                              },
                              "profiles": {
                                "type": "object",
                                "description": "Contains tapping profiles to be used by consumers",
                                "properties": {
                                  "profile": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "maxItems": 5,
                                    "description": "Tapping profile, which specify domains",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the tapping profile"
                                        },
                                        "domain": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "minItems": 1,
                                          "maxItems": 2,
                                          "description": "List of bussiness logic NF",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the domain"
                                              },
                                              "protocol": {
                                                "type": "array",
                                                "description": "List of protocol streamed for this domain",
                                                "items": {
                                                  "enum": [
                                                    "http",
                                                    "raw-http",
                                                    "pfcp",
                                                    "gtpc",
                                                    "sctp",
                                                    "dns",
                                                    "radius",
                                                    "diameter",
                                                    "raw-sbi",
                                                    "native-http",
                                                    "ldap",
                                                    "soap"
                                                  ]
                                                }
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "domain",
                                        "name"
                                      ]
                                    }
                                  }
                                }
                              },
                              "stream-consumers": {
                                "type": "object",
                                "description": "Contains consumers to receive vtap traces",
                                "properties": {
                                  "stream-consumer": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "maxItems": 5,
                                    "description": "Consumers to receive vtap traces",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the consumer"
                                        },
                                        "address": {
                                          "type": "string",
                                          "anyOf": [
                                            {
                                              "format": "ipv4"
                                            },
                                            {
                                              "format": "ipv6"
                                            },
                                            {
                                              "format": "hostname"
                                            }
                                          ],
                                          "description": "Contains the IP address or DNS domain name of the consumer"
                                        },
                                        "tapping-profile": {
                                          "type": "string",
                                          "description": "Specifies the tapping profile used by the consumer"
                                        }
                                      },
                                      "required": [
                                        "address",
                                        "name",
                                        "tapping-profile"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "interfaces": {
                            "type": "object",
                            "description": "Interface parameters.",
                            "properties": {
                              "interface": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "The list of interfaces on the device. The status of an interface is available in this list in the operational state. If the configuration of a system-controlled interface cannot be used by the system (e.g., the interface hardware present does not match the interface type), then the configuration is not applied to the system-controlled interface shown in the operational state. If the configuration of a user-controlled interface cannot be used by the system, the configured interface is not instantiated in the operational state. System-controlled interfaces created by the system are always present in this list in the operational state, whether or not they are configured.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the interface. A device MAY restrict the allowed values for this leaf, possibly depending on the type of the interface. For system-controlled interfaces, this leaf is the device-specific name of the interface. If a client tries to create configuration for a system-controlled interface that is not present in the operational state, the server MAY reject the request if the implementation does not support pre-provisioning of interfaces or if the name refers to an interface that can never exist in the system. A Network Configuration Protocol (NETCONF) server MUST reply with an rpc-error with the error-tag 'invalid-value' in this case. If the device supports pre-provisioning of interface configuration, the 'pre-provisioning' feature is advertised. If the device allows arbitrarily named user-controlled interfaces, the 'arbitrary-names' feature is advertised. When a configured user-controlled interface is created by the system, it is instantiated with the same name in the operational state. A server implementation MAY map this leaf to the ifName MIB object. Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and ifName. The definition of such a mechanism is outside the scope of this document."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "A textual description of the interface. A server implementation MAY map this leaf to the ifAlias MIB object. Such an implementation needs to use some mechanism to handle the differences in size and characters allowed between this leaf and ifAlias. The definition of such a mechanism is outside the scope of this document. Since ifAlias is defined to be stored in non-volatile storage, the MIB implementation MUST map ifAlias to the value of 'description' in the persistently stored configuration."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the interface. When an interface entry is created, a server MAY initialize the type leaf with a valid value, e.g., if it is possible to derive the type from the name of the interface. If a client tries to set the type of an interface to a value that can never be used by the system, e.g., if the type is not supported or if the type does not match the name of the interface, the server MUST reject the request. A NETCONF server MUST reply with an rpc-error with the error-tag 'invalid-value' in this case."
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "This leaf contains the configured, desired state of the interface. Systems that implement the IF-MIB use the value of this leaf in the intended configuration to set IF-MIB.ifAdminStatus to 'up' or 'down' after an ifEntry has been initialized, as described in RFC 2863. Changes in this leaf in the intended configuration are reflected in ifAdminStatus.",
                                      "default": true
                                    },
                                    "link-up-down-trap-enable": {
                                      "enum": [
                                        "enabled",
                                        "disabled"
                                      ],
                                      "description": "Controls whether linkUp/linkDown SNMP notifications should be generated for this interface. If this node is not configured, the value 'enabled' is operationally used by the server for interfaces that do not operate on top of any other interface (i.e., there are no 'lower-layer-if' entries), and 'disabled' otherwise."
                                    },
                                    "ipv4": {
                                      "type": "object",
                                      "description": "Parameters for the IPv4 address family.",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Controls whether IPv4 is enabled or disabled on this interface. When IPv4 is enabled, this interface is connected to an IPv4 stack, and the interface can send and receive IPv4 packets.",
                                          "default": true
                                        },
                                        "forwarding": {
                                          "type": "boolean",
                                          "description": "Controls IPv4 packet forwarding of datagrams received by, but not addressed to, this interface. IPv4 routers forward datagrams. IPv4 hosts do not (except those source-routed via the host).",
                                          "default": false
                                        },
                                        "mtu": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 68,
                                          "maximum": 65535,
                                          "description": "The size, in octets, of the largest IPv4 packet that the interface will send and receive. The server may restrict the allowed values for this leaf, depending on the interface's type. If this leaf is not configured, the operationally used MTU depends on the interface's type."
                                        },
                                        "address": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "The list of IPv4 addresses on the interface.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "ip": {
                                                "type": "string",
                                                "pattern": "^[0-9\\.]*$",
                                                "description": "The IPv4 address on the interface."
                                              },
                                              "prefix-length": {
                                                "type": "integer",
                                                "format": "uint8",
                                                "minimum": 0,
                                                "maximum": 32,
                                                "description": "The length of the subnet prefix."
                                              },
                                              "netmask": {
                                                "type": "string",
                                                "pattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$",
                                                "description": "The subnet specified as a netmask."
                                              }
                                            },
                                            "required": [
                                              "ip"
                                            ]
                                          }
                                        },
                                        "neighbor": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "A list of mappings from IPv4 addresses to link-layer addresses. Entries in this list in the intended configuration are used as static entries in the ARP Cache. In the operational state, this list represents the ARP Cache.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "ip": {
                                                "type": "string",
                                                "pattern": "^[0-9\\.]*$",
                                                "description": "The IPv4 address of the neighbor node."
                                              },
                                              "link-layer-address": {
                                                "type": "string",
                                                "pattern": "^([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?$",
                                                "description": "The link-layer address of the neighbor node."
                                              }
                                            },
                                            "required": [
                                              "ip",
                                              "link-layer-address"
                                            ]
                                          }
                                        },
                                        "bind-ni-name": {
                                          "type": "string",
                                          "description": "Network instance to which IPv4 interface is bound."
                                        }
                                      }
                                    },
                                    "ipv6": {
                                      "type": "object",
                                      "description": "Parameters for the IPv6 address family.",
                                      "properties": {
                                        "enabled": {
                                          "type": "boolean",
                                          "description": "Controls whether IPv6 is enabled or disabled on this interface. When IPv6 is enabled, this interface is connected to an IPv6 stack, and the interface can send and receive IPv6 packets.",
                                          "default": true
                                        },
                                        "forwarding": {
                                          "type": "boolean",
                                          "description": "Controls IPv6 packet forwarding of datagrams received by, but not addressed to, this interface. IPv6 routers forward datagrams. IPv6 hosts do not (except those source-routed via the host).",
                                          "default": false
                                        },
                                        "mtu": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 1280,
                                          "maximum": 4294967295,
                                          "description": "The size, in octets, of the largest IPv6 packet that the interface will send and receive. The server may restrict the allowed values for this leaf, depending on the interface's type. If this leaf is not configured, the operationally used MTU depends on the interface's type."
                                        },
                                        "address": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "The list of IPv6 addresses on the interface.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "ip": {
                                                "type": "string",
                                                "pattern": "^[0-9a-fA-F:\\.]*$",
                                                "description": "The IPv6 address on the interface."
                                              },
                                              "prefix-length": {
                                                "type": "integer",
                                                "format": "uint8",
                                                "minimum": 0,
                                                "maximum": 128,
                                                "description": "The length of the subnet prefix."
                                              }
                                            },
                                            "required": [
                                              "ip",
                                              "prefix-length"
                                            ]
                                          }
                                        },
                                        "neighbor": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "A list of mappings from IPv6 addresses to link-layer addresses. Entries in this list in the intended configuration are used as static entries in the Neighbor Cache. In the operational state, this list represents the Neighbor Cache.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "ip": {
                                                "type": "string",
                                                "pattern": "^[0-9a-fA-F:\\.]*$",
                                                "description": "The IPv6 address of the neighbor node."
                                              },
                                              "link-layer-address": {
                                                "type": "string",
                                                "pattern": "^([0-9a-fA-F]{2}(:[0-9a-fA-F]{2})*)?$",
                                                "description": "The link-layer address of the neighbor node. In the operational state, if the neighbor's 'state' leaf is 'incomplete', this leaf is not instantiated."
                                              },
                                              "is-router": {
                                                "type": "string",
                                                "description": "Indicates that the neighbor node acts as a router."
                                              }
                                            },
                                            "required": [
                                              "ip",
                                              "link-layer-address"
                                            ]
                                          }
                                        },
                                        "dup-addr-detect-transmits": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 4294967295,
                                          "description": "The number of consecutive Neighbor Solicitation messages sent while performing Duplicate Address Detection on a tentative address. A value of zero indicates that Duplicate Address Detection is not performed on tentative addresses. A value of one indicates a single transmission with no follow-up retransmissions.",
                                          "default": 1
                                        },
                                        "autoconf": {
                                          "type": "object",
                                          "description": "Parameters to control the autoconfiguration of IPv6 addresses, as described in RFC 4862.",
                                          "properties": {
                                            "create-global-addresses": {
                                              "type": "boolean",
                                              "description": "If enabled, the host creates global addresses as described in RFC 4862.",
                                              "default": true
                                            },
                                            "create-temporary-addresses": {
                                              "type": "boolean",
                                              "description": "If enabled, the host creates temporary addresses as described in RFC 4941.",
                                              "default": false
                                            },
                                            "temporary-valid-lifetime": {
                                              "type": "integer",
                                              "format": "uint32",
                                              "minimum": 0,
                                              "maximum": 4294967295,
                                              "description": "The time period during which the temporary address is valid.",
                                              "default": 604800
                                            },
                                            "temporary-preferred-lifetime": {
                                              "type": "integer",
                                              "format": "uint32",
                                              "minimum": 0,
                                              "maximum": 4294967295,
                                              "description": "The time period during which the temporary address is preferred.",
                                              "default": 86400
                                            }
                                          }
                                        },
                                        "bind-ni-name": {
                                          "type": "string",
                                          "description": "Network instance to which IPv6 interface is bound."
                                        }
                                      }
                                    },
                                    "bind-ni-name": {
                                      "type": "string",
                                      "description": "Network instance to which an interface is bound."
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type"
                                  ]
                                }
                              }
                            }
                          },
                          "keystore": {
                            "type": "object",
                            "description": "The keystore contains a list of keys.",
                            "properties": {
                              "cmp": {
                                "type": "object",
                                "description": "Configuration of CMPv2 servers and authorities.",
                                "properties": {
                                  "certificate-authorities": {
                                    "type": "object",
                                    "description": "A list of Certificate Authorities.",
                                    "properties": {
                                      "certificate-authority": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "description": "A Certificate Authority.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                                              "description": "Specifies the name of the issuing CA. The X.501 distinguished name of the issuing CA used for addressing and reference identity."
                                            }
                                          },
                                          "required": [
                                            "name"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "cmp-server-groups": {
                                    "type": "object",
                                    "description": "A list of CMPv2 server groups.",
                                    "properties": {
                                      "cmp-server-group": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "description": "A CMPv2 server group.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the CMPv2 server group."
                                            },
                                            "cmp-server": {
                                              "type": "array",
                                              "uniqueItems": true,
                                              "minItems": 1,
                                              "description": "A CMPv2 server, which can be implemented by either a Registration Authority or a Certificate Authority.",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the CMPv2 server."
                                                  },
                                                  "uri": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "The URI of the CMPv2 server. Example: http://192.168.33.27:8080 or cmp://192.168.33.27"
                                                  },
                                                  "ca-certs": {
                                                    "type": "string",
                                                    "description": "A reference to a list of certificate authority (CA) certificates used by the CMPv2 client to authenticate the CMPv2 server certificates. A CMPv2 server certificate is authenticated if it has a valid chain of trust to a configured CA certificate."
                                                  },
                                                  "certificate-authority": {
                                                    "type": "string",
                                                    "description": "The Certificate Authority used by this CMPv2 server."
                                                  },
                                                  "priority": {
                                                    "type": "integer",
                                                    "format": "uint8",
                                                    "minimum": 1,
                                                    "maximum": 255,
                                                    "description": "A priority assigned to a CMPv2 server. A smaller number signifies higher priority. A server with a lower priority is chosen when servers with higher priority are not accessible. In the case when CMPv2 servers have the same priority, then the server is chosen with round robin.",
                                                    "default": 1
                                                  },
                                                  "ra-mode-enabled": {
                                                    "type": "boolean",
                                                    "description": "If set to true, RA mode is used when performing CMPv2 online enrollment towards this CMP server. Requires that ra-client-identity is configured with key and certificate or password.",
                                                    "default": false
                                                  },
                                                  "ra-client-identity": {
                                                    "type": "object",
                                                    "description": "Reference to credentials to be used when authenticating as Registration Authority (RA).",
                                                    "properties": {
                                                      "certificate": {
                                                        "type": "object",
                                                        "description": "References to RA private key and certificate.",
                                                        "properties": {
                                                          "asymmetric-key": {
                                                            "type": "string",
                                                            "description": "A reference to an asymmetric key in the keystore."
                                                          },
                                                          "certificate": {
                                                            "type": "string",
                                                            "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                                          }
                                                        }
                                                      },
                                                      "ra-password": {
                                                        "type": "string",
                                                        "description": "RA password.",
                                                        "eric-adp-is-passphrase": "true",
                                                        "format": "eric-adp-cm-secret"
                                                      }
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "ca-certs",
                                                  "certificate-authority",
                                                  "name",
                                                  "uri"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "cmp-server",
                                            "name"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "scep": {
                                "type": "object",
                                "description": "Configuration of SCEP servers",
                                "properties": {
                                  "scep-server-groups": {
                                    "type": "object",
                                    "description": "A list of SCEP server groups.",
                                    "properties": {
                                      "scep-server-group": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "description": "A SCEP server group.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of the SCEP server group."
                                            },
                                            "scep-server": {
                                              "type": "array",
                                              "uniqueItems": true,
                                              "minItems": 1,
                                              "description": "A SCEP server, which can be implemented by either a Registration Authority or a Certificate Authority.",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The name of the SCEP server."
                                                  },
                                                  "uri": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "description": "The URI of the SCEP server. Example: http://scep.groob.io:2016/scep"
                                                  },
                                                  "ca-certs": {
                                                    "type": "string",
                                                    "description": "A reference to a list of certificate authority (CA) certificates used by the SCEP client to authenticate the SCEP server certificates. A SCEP server certificate is authenticated if it has a valid chain of trust to a configured CA certificate."
                                                  },
                                                  "certificate-authority": {
                                                    "type": "string",
                                                    "description": "The Certificate Authority used by this SCEP server. If not set, the SCEP server must be able to handle GetCACert and GetCACaps requests with empty message"
                                                  },
                                                  "priority": {
                                                    "type": "integer",
                                                    "format": "uint8",
                                                    "minimum": 1,
                                                    "maximum": 255,
                                                    "description": "A priority assigned to a SCEP server. A smaller number signifies higher priority. A server with a lower priority is chosen when servers with higher priority are not accessible. In the case when SCEP servers have the same priority, then the server is chosen with round robin.",
                                                    "default": 1
                                                  },
                                                  "ra-mode-enabled": {
                                                    "type": "boolean",
                                                    "description": "If set to true, RA mode is used when performing SCEP online enrollment towards this SCEP server. Requires that ra-client-identity is configured with key and certificate or password.",
                                                    "default": false
                                                  },
                                                  "ra-client-identity": {
                                                    "type": "object",
                                                    "description": "Reference to credentials to be used when authenticating as Registration Authority (RA).",
                                                    "properties": {
                                                      "certificate": {
                                                        "type": "object",
                                                        "description": "References to RA private key and certificate.",
                                                        "properties": {
                                                          "asymmetric-key": {
                                                            "type": "string",
                                                            "description": "A reference to an asymmetric key in the keystore."
                                                          },
                                                          "certificate": {
                                                            "type": "string",
                                                            "description": "A reference to a specific certificate of the asymmetric key in the keystore."
                                                          }
                                                        }
                                                      },
                                                      "ra-password": {
                                                        "type": "string",
                                                        "description": "RA password.",
                                                        "eric-adp-is-passphrase": "true",
                                                        "format": "eric-adp-cm-secret"
                                                      }
                                                    }
                                                  }
                                                },
                                                "required": [
                                                  "ca-certs",
                                                  "name",
                                                  "uri"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "scep-server"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "thresholds": {
                                "type": "object",
                                "description": "Expiration threshold configuration",
                                "properties": {
                                  "expiration-threshold": {
                                    "type": "integer",
                                    "format": "uint32",
                                    "minimum": 3,
                                    "maximum": 4294967295,
                                    "description": "The threshold specifies the number of days before the certificate expires to start sending expiration alarms. The alarm severity increases closer to expiration: WARNING when the certificate expires within the threshold MINOR when the certificate expires within 1/3 of the threshold MAJOR when the certificate expires within 1/6 of the threshold CRITICAL when the certificate expires within 1/30 of the threshold or 3 days, whichever is largest. This severity is used also after certificate expiration.",
                                    "default": 90
                                  }
                                }
                              },
                              "asymmetric-keys": {
                                "type": "object",
                                "description": "A list of asymmetric keys.",
                                "properties": {
                                  "asymmetric-key": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "An asymmetric key.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "An arbitrary name for the asymmetric key."
                                        },
                                        "cmp": {
                                          "type": "object",
                                          "description": "CMPv2 configuration and actions for an asymmetric key.",
                                          "properties": {
                                            "cmp-server-group": {
                                              "type": "string",
                                              "description": "A CMPv2 server group used for CMPv2 enrollment."
                                            },
                                            "renewal-mode": {
                                              "enum": [
                                                "manual",
                                                "automatic"
                                              ],
                                              "description": "Sets renewal mode to manual or automatic. In automatic case the device attempts to renew the certificate before expiration by authenticating to the CMPv2 server with the current certificate and keeping the current key algorithm for the new certificate. If a change in the algorithm or subject alternative name is needed then renew-cmp action can be used.",
                                              "default": "manual"
                                            }
                                          },
                                          "required": [
                                            "cmp-server-group"
                                          ]
                                        },
                                        "scep": {
                                          "type": "object",
                                          "description": "SCEP configuration and actions for an asymmetric key.",
                                          "properties": {
                                            "scep-server-group": {
                                              "type": "string",
                                              "description": "A SCEP server group used for SCEP enrollment."
                                            },
                                            "renewal-mode": {
                                              "enum": [
                                                "manual",
                                                "automatic"
                                              ],
                                              "description": "Sets renewal mode to manual or automatic. In automatic case the device attempts to renew the certificate before expiration by authenticating to the SCEP server with the current certificate and keeping the current key algorithm for the new certificate. If a change in the algorithm or subject alternative name is needed then renew-scep action can be used.",
                                              "default": "manual"
                                            }
                                          },
                                          "required": [
                                            "scep-server-group"
                                          ]
                                        },
                                        "cert-manager": {
                                          "type": "object",
                                          "description": "cert-manager enrollment data and action for manual renewal.",
                                          "properties": {
                                            "issuer-name": {
                                              "type": "string",
                                              "description": "The issuer name to use in the CertificateRequest"
                                            },
                                            "issuer-kind": {
                                              "type": "string",
                                              "description": "The issuer kind to use in the CertificateRequest"
                                            },
                                            "issuer-group": {
                                              "type": "string",
                                              "description": "The issuer group to use in the CertificateRequest"
                                            }
                                          },
                                          "required": [
                                            "issuer-group",
                                            "issuer-kind",
                                            "issuer-name"
                                          ]
                                        },
                                        "certificates": {
                                          "type": "object",
                                          "description": "Certificates associated with this asymmetric key. More than one certificate supports, for instance, a TPM-protected asymmetric key that has both IDevID and LDevID certificates associated.",
                                          "properties": {
                                            "certificate": {
                                              "type": "array",
                                              "uniqueItems": true,
                                              "description": "A certificate for this asymmetric key.",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "An arbitrary name for the certificate. If the name matches the name of a certificate that exists independently in <operational> (i.e., an IDevID), then the 'cert' node MUST NOT be configured."
                                                  },
                                                  "cert": {
                                                    "type": "string",
                                                    "description": "The binary certificate data for this certificate."
                                                  }
                                                },
                                                "required": [
                                                  "name"
                                                ]
                                              }
                                            },
                                            "expiration-threshold": {
                                              "type": "integer",
                                              "format": "uint32",
                                              "minimum": 3,
                                              "maximum": 4294967295,
                                              "description": "The threshold specifies the number of days before the certificate expires to start sending expiration alarms. The alarm severity increases closer to expiration: WARNING when the certificate expires within the threshold MINOR when the certificate expires within 1/3 of the threshold MAJOR when the certificate expires within 1/6 of the threshold CRITICAL when the certificate expires within 1/30 of the threshold or 3 days, whichever is largest. This severity is used also after certificate expiration. This leaf takes precedence over /keystore/thresholds/expiration-threshold"
                                            }
                                          }
                                        },
                                        "private-key-format": {
                                          "type": "string",
                                          "description": "Identifies the key's format."
                                        },
                                        "algorithm": {
                                          "enum": [
                                            "rsa1024",
                                            "rsa2048",
                                            "rsa3072",
                                            "rsa4096",
                                            "rsa7680",
                                            "rsa15360",
                                            "secp192r1",
                                            "secp224r1",
                                            "secp256r1",
                                            "secp384r1",
                                            "secp521r1",
                                            "x25519",
                                            "x448"
                                          ],
                                          "description": "Identifies the key's algorithm."
                                        },
                                        "public-key-format": {
                                          "type": "string",
                                          "description": "Identifies the key's format."
                                        },
                                        "public-key": {
                                          "type": "string",
                                          "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                        },
                                        "private-key": {
                                          "type": "string",
                                          "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                          "eric-adp-is-passphrase": "true",
                                          "format": "eric-adp-cm-secret"
                                        },
                                        "hidden-private-key": {
                                          "type": "string",
                                          "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                        }
                                      },
                                      "required": [
                                        "algorithm",
                                        "name",
                                        "public-key"
                                      ]
                                    }
                                  },
                                  "cmp": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "scep": {
                                    "type": "object",
                                    "properties": {}
                                  },
                                  "cert-manager": {
                                    "type": "object",
                                    "properties": {}
                                  }
                                }
                              },
                              "symmetric-keys": {
                                "type": "object",
                                "description": "A list of symmetric keys.",
                                "properties": {
                                  "symmetric-key": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A symmetric key.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "An arbitrary name for the symmetric key."
                                        },
                                        "algorithm": {
                                          "enum": [
                                            "aes-128-cbc",
                                            "aes-192-cbc",
                                            "aes-256-cbc",
                                            "aes-128-ctr",
                                            "aes-192-ctr",
                                            "aes-256-ctr",
                                            "des3-cbc-sha1-kd",
                                            "rc4-hmac",
                                            "rc4-hmac-exp"
                                          ],
                                          "description": "The algorithm to be used when generating the key."
                                        },
                                        "key-format": {
                                          "type": "string",
                                          "description": "Identifies the symmetric key's format."
                                        },
                                        "encrypted-key": {
                                          "type": "object",
                                          "description": "A container for the encrypted symmetric key value.",
                                          "properties": {
                                            "value": {
                                              "type": "string",
                                              "description": "The private key, encrypted using the specified symmetric or asymmetric key."
                                            },
                                            "symmetric-key-ref": {
                                              "type": "string",
                                              "description": "Identifies a symmetric key used to encrypt this key."
                                            },
                                            "asymmetric-key-ref": {
                                              "type": "string",
                                              "description": "Identifies an asymmetric key used to encrypt this key."
                                            }
                                          }
                                        },
                                        "key": {
                                          "type": "string",
                                          "description": "The binary value of the key. The interpretation of the value is defined by 'key-format'. For example, FIXME."
                                        },
                                        "hidden-key": {
                                          "type": "string",
                                          "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                        }
                                      },
                                      "required": [
                                        "algorithm",
                                        "name"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "nacm": {
                            "type": "object",
                            "description": "Parameters for NETCONF access control model.",
                            "properties": {
                              "groups": {
                                "type": "object",
                                "description": "NETCONF access control groups.",
                                "properties": {
                                  "group": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "One NACM group entry. This list will only contain configured entries, not any entries learned from any transport protocols.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "pattern": "^[^\\*].*$",
                                          "description": "Group name associated with this entry."
                                        },
                                        "user-name": {
                                          "type": "array",
                                          "description": "Each entry identifies the username of a member of the group associated with this entry.",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "gid": {
                                          "type": "integer",
                                          "format": "int32",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647,
                                          "description": "This leaf associates a numerical group ID with the group. When a OS command is executed on behalf of a user, supplementary group IDs are assigned based on 'gid' values for the groups that the use is a member of."
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  }
                                }
                              },
                              "rule-list": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "An ordered collection of access control rules.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Arbitrary name assigned to the rule-list."
                                    },
                                    "group": {
                                      "type": "array",
                                      "description": "List of administrative groups that will be assigned the associated access rights defined by the 'rule' list. The string '*' indicates that all groups apply to the entry.",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "type": "string",
                                            "pattern": "^\\*$"
                                          },
                                          {
                                            "type": "string",
                                            "pattern": "^[^\\*].*$"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ]
                                      }
                                    },
                                    "rule": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "One access control rule. Rules are processed in user-defined order until a match is found. A rule matches if 'module-name', 'rule-type', and 'access-operations' match the request. If a rule matches, the 'action' leaf determines whether or not access is granted.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Arbitrary name assigned to the rule."
                                          },
                                          "module-name": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^\\*$"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "description": "Name of the module associated with this rule. This leaf matches if it has the value '*' or if the object being accessed is defined in the module with the specified module name.",
                                            "default": "*"
                                          },
                                          "access-operations": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^\\*$"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "description": "Access operations associated with this rule. This leaf matches if it has the value '*' or if the bit corresponding to the requested operation is set.",
                                            "default": "*"
                                          },
                                          "action": {
                                            "enum": [
                                              "permit",
                                              "deny"
                                            ],
                                            "description": "The access control action associated with the rule. If a rule has been determined to match a particular request, then this object is used to determine whether to permit or deny the request."
                                          },
                                          "comment": {
                                            "type": "string",
                                            "description": "A textual description of the access rule."
                                          },
                                          "context": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^\\*$"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "description": "This leaf matches if it has the value '*' or if its value identifies the agent that is requesting access, e.g. 'netconf' for NETCONF, 'cli' for CLI, or 'webui' for Web UI.",
                                            "default": "*"
                                          },
                                          "log-if-permit": {
                                            "type": "string",
                                            "description": "If this leaf is present, access granted due to this rule is logged in the developer log. Otherwise, only denied access is logged. Mainly intended for debugging of rules."
                                          },
                                          "rpc-name": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^\\*$"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "description": "This leaf matches if it has the value '*' or if its value equals the requested protocol operation name."
                                          },
                                          "notification-name": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^\\*$"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "description": "This leaf matches if it has the value '*' or if its value equals the requested notification name."
                                          },
                                          "path": {
                                            "type": "string",
                                            "description": "Data node instance-identifier associated with the data node, action, or notification controlled by this rule. Configuration data or state data instance-identifiers start with a top-level data node. A complete instance-identifier is required for this type of path value. The special value '/' refers to all possible datastore contents."
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "name"
                                        ]
                                      }
                                    },
                                    "cmdrule": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "One command access control rule. Command rules control access to CLI commands and Web UI functions. Rules are processed in user-defined order until a match is found. A rule matches if 'context', 'command', and 'access-operations' match the request. If a rule matches, the 'action' leaf determines if access is granted or not.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Arbitrary name assigned to the rule."
                                          },
                                          "context": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^\\*$"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "description": "This leaf matches if it has the value '*' or if its value identifies the agent that is requesting access, i.e. 'cli' for CLI or 'webui' for Web UI.",
                                            "default": "*"
                                          },
                                          "command": {
                                            "type": "string",
                                            "description": "Space-separated tokens representing the command. Refer to the Tail-f AAA documentation for further details.",
                                            "default": "*"
                                          },
                                          "access-operations": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "pattern": "^\\*$"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "description": "Access operations associated with this rule. This leaf matches if it has the value '*' or if the bit corresponding to the requested operation is set.",
                                            "default": "*"
                                          },
                                          "action": {
                                            "enum": [
                                              "permit",
                                              "deny"
                                            ],
                                            "description": "The access control action associated with the rule. If a rule is determined to match a particular request, then this object is used to determine whether to permit or deny the request."
                                          },
                                          "log-if-permit": {
                                            "type": "string",
                                            "description": "If this leaf is present, access granted due to this rule is logged in the developer log. Otherwise, only denied access is logged. Mainly intended for debugging of rules."
                                          },
                                          "comment": {
                                            "type": "string",
                                            "description": "A textual description of the access rule."
                                          }
                                        },
                                        "required": [
                                          "action",
                                          "name"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              },
                              "cmd-read-default": {
                                "enum": [
                                  "permit",
                                  "deny"
                                ],
                                "description": "Controls whether command read access is granted if no appropriate cmdrule is found for a particular command read request.",
                                "default": "permit"
                              },
                              "cmd-exec-default": {
                                "enum": [
                                  "permit",
                                  "deny"
                                ],
                                "description": "Controls whether command exec access is granted if no appropriate cmdrule is found for a particular command exec request.",
                                "default": "permit"
                              },
                              "log-if-default-permit": {
                                "type": "string",
                                "description": "If this leaf is present, access granted due to one of /nacm/read-default, /nacm/write-default, /nacm/exec-default /nacm/cmd-read-default, or /nacm/cmd-exec-default being set to 'permit' is logged in the developer log. Otherwise, only denied access is logged. Mainly intended for debugging of rules."
                              }
                            }
                          },
                          "network-instances": {
                            "type": "object",
                            "description": "Network instances, each of which consists of VRFs and/or VSIs.",
                            "properties": {
                              "network-instance": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "List of network instances.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "device-scoped identifier for the network instance."
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "Flag indicating whether or not the network instance is enabled.",
                                      "default": true
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Description of the network instance and its intended purpose."
                                    },
                                    "vrf-root": {
                                      "type": "object",
                                      "description": "Container for mount point.",
                                      "properties": {}
                                    },
                                    "vsi-root": {
                                      "type": "object",
                                      "description": "Container for mount point.",
                                      "properties": {}
                                    },
                                    "vv-root": {
                                      "type": "object",
                                      "description": "Container for mount point.",
                                      "properties": {}
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              }
                            }
                          },
                          "system": {
                            "type": "object",
                            "description": "System group configuration.",
                            "properties": {
                              "ntp": {
                                "type": "object",
                                "description": "Configuration of the NTP client.",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Indicates that the system should attempt to synchronize the system clock with an NTP server from the 'ntp/server' list.",
                                    "default": true
                                  },
                                  "server": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "List of NTP servers to use for system clock synchronization. If '/system/ntp/enabled' is 'true', then the system will attempt to contact and utilize the specified NTP servers.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "An arbitrary name for the NTP server."
                                        },
                                        "association-type": {
                                          "enum": [
                                            "server",
                                            "peer",
                                            "pool"
                                          ],
                                          "description": "The desired association type for this NTP server.",
                                          "default": "server"
                                        },
                                        "iburst": {
                                          "type": "boolean",
                                          "description": "Indicates whether this server should enable burst synchronization or not.",
                                          "default": false
                                        },
                                        "prefer": {
                                          "type": "boolean",
                                          "description": "Indicates whether this server should be preferred or not.",
                                          "default": false
                                        },
                                        "administrative-state": {
                                          "enum": [
                                            "locked",
                                            "unlocked"
                                          ],
                                          "description": "Locks or unlocks the administrative state of the NTP client function. This is a convenience function to permit some or all NtpServer instances to be temporarily locked without the need to delete the object List of supported key algorithms by the ME.",
                                          "default": "unlocked"
                                        },
                                        "mac-algorithm": {
                                          "type": "array",
                                          "description": "The hash algorithm used towards the corresponding NTP Server.",
                                          "items": {
                                            "enum": [
                                              "hmac-sha2-224",
                                              "hmac-sha2-256",
                                              "hmac-sha2-256-128",
                                              "hmac-sha2-384",
                                              "hmac-sha2-384-192",
                                              "hmac-sha2-512",
                                              "hmac-sha2-512-256"
                                            ]
                                          }
                                        },
                                        "pre-shared-key": {
                                          "type": "string",
                                          "description": "The pre shared key for the NTP authentication.",
                                          "eric-adp-is-passphrase": "true",
                                          "format": "eric-adp-cm-secret"
                                        },
                                        "key-id": {
                                          "type": "string",
                                          "format": "uint64",
                                          "description": "The key ID for the NTP authentication. This is an integer identifying the cryptographic key used to generate the message authentication code."
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "udp": {
                                          "type": "object",
                                          "description": "Contains UDP-specific configuration parameters for NTP.",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "anyOf": [
                                                {
                                                  "format": "ipv4"
                                                },
                                                {
                                                  "format": "ipv6"
                                                },
                                                {
                                                  "format": "hostname"
                                                }
                                              ],
                                              "description": "The address of the NTP server."
                                            },
                                            "port": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 65535,
                                              "description": "The port number of the NTP server.",
                                              "default": 123
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  }
                                }
                              },
                              "radius": {
                                "type": "object",
                                "description": "Configuration of the RADIUS client.",
                                "properties": {
                                  "server": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "List of RADIUS servers used by the device. When the RADIUS client is invoked by a calling application, it sends the query to the first server in this list. If no response has been received within 'timeout' seconds, the client continues with the next server in the list. If no response is received from any server, the client continues with the first server again. When the client has traversed the list 'attempts' times without receiving any response, it gives up and returns an error to the calling application.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "An arbitrary name for the RADIUS server."
                                        },
                                        "authentication-type": {
                                          "type": "string",
                                          "description": "The authentication type requested from the RADIUS server.",
                                          "default": "radius-pap"
                                        },
                                        "udp": {
                                          "type": "object",
                                          "description": "Contains UDP-specific configuration parameters for RADIUS.",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "anyOf": [
                                                {
                                                  "format": "ipv4"
                                                },
                                                {
                                                  "format": "ipv6"
                                                },
                                                {
                                                  "format": "hostname"
                                                }
                                              ],
                                              "description": "The address of the RADIUS server."
                                            },
                                            "authentication-port": {
                                              "type": "integer",
                                              "format": "uint16",
                                              "minimum": 0,
                                              "maximum": 65535,
                                              "description": "The port number of the RADIUS server.",
                                              "default": 1812
                                            },
                                            "shared-secret": {
                                              "type": "string",
                                              "description": "The shared secret, which is known to both the RADIUS client and server."
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "RADIUS client options.",
                                    "properties": {
                                      "timeout": {
                                        "type": "integer",
                                        "format": "uint8",
                                        "minimum": 1,
                                        "maximum": 255,
                                        "description": "The number of seconds the device will wait for a response from each RADIUS server before trying with a different server.",
                                        "default": 5
                                      },
                                      "attempts": {
                                        "type": "integer",
                                        "format": "uint8",
                                        "minimum": 1,
                                        "maximum": 255,
                                        "description": "The number of times the device will send a query to all of its RADIUS servers before giving up.",
                                        "default": 2
                                      }
                                    }
                                  }
                                }
                              },
                              "authentication": {
                                "type": "object",
                                "description": "The authentication configuration subtree.",
                                "properties": {
                                  "user": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "The list of local users configured on this device.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z_][a-zA-Z0-9_.-]*$",
                                          "description": "The user name string identifying this entry."
                                        },
                                        "password": {
                                          "type": "string",
                                          "description": "The password for this entry.",
                                          "eric-adp-is-passphrase": "true",
                                          "format": "eric-adp-cm-secret"
                                        },
                                        "authorized-key": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "description": "A list of public SSH keys for this user. These keys are allowed for SSH authentication, as described in RFC 4253.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "An arbitrary name for the SSH key."
                                              },
                                              "algorithm": {
                                                "type": "string",
                                                "description": "The public key algorithm name for this SSH key. Valid values are the values in the IANA 'Secure Shell (SSH) Protocol Parameters' registry, Public Key Algorithm Names."
                                              },
                                              "key-data": {
                                                "type": "string",
                                                "description": "The binary public key data for this SSH key, as specified by RFC 4253, Section 6.6, i.e.: string certificate or public key format identifier byte[n] key/certificate data."
                                              }
                                            },
                                            "required": [
                                              "algorithm",
                                              "key-data",
                                              "name"
                                            ]
                                          }
                                        },
                                        "password-policy": {
                                          "type": "string",
                                          "description": "The password policy. If not defined, the default-password-policy is used."
                                        },
                                        "account-policy": {
                                          "type": "string",
                                          "description": "The user account policy. If not defined, the default-account-policy is used."
                                        },
                                        "administrative-state": {
                                          "enum": [
                                            "locked",
                                            "unlocked"
                                          ],
                                          "description": "The administrative state of the user account. Specifies the state of the user account based on administration performed by the MS. If set to unlocked but account state is locked, unlock-operational-lock must be invoked.",
                                          "default": "unlocked"
                                        },
                                        "groups": {
                                          "type": "array",
                                          "description": "Together with 'privacy-groups' leaf these are the groups of the user provided for the NACM module if /nacm/enable-external-groups is true.",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_.-]*[a-zA-Z0-9]$"
                                          }
                                        },
                                        "privacy-groups": {
                                          "type": "array",
                                          "description": "Togeter with 'groups' leaf these are the groups of the user provided for the NACM module if /nacm/enable-external-groups is true. The groups here define access to privacy classified data in the model.",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_.-]*[a-zA-Z0-9]$"
                                          }
                                        },
                                        "full-name": {
                                          "type": "string",
                                          "description": "The full name of the user assigned to the user account."
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "authentication-failure-delay": {
                                    "type": "integer",
                                    "format": "uint8",
                                    "minimum": 0,
                                    "maximum": 255,
                                    "description": "Average delay after a failed login attempt in seconds. Value 0 means no delay.",
                                    "default": 3
                                  },
                                  "target-types": {
                                    "type": "array",
                                    "description": "Lists the target types of the ME for Target Based Access Control (TBAC). Authentication methods use TBAC to determine whether a user can be authorized in the ME, and which groups apply to the user in the ME, based on the target types specified in this attribute. This leaf can contain any classifier string for the ME such as geographical, network, or functional identifiers.",
                                    "items": {
                                      "type": "string",
                                      "pattern": "^(\\\\\\\\[a-fA-F0-9]{2}|[A-Za-z0-9!$%&'./:=?@^_`{|}~-])((\\\\\\\\[a-fA-F0-9]{2}|[A-Za-z0-9!$%&'./:=?@^_`{|}~\\-# ])*(\\\\\\\\[a-fA-F0-9]{2}|[A-Za-z0-9!$%&'./:=?@^_`{|}~\\-#]))?$"
                                    }
                                  },
                                  "legal-notice": {
                                    "type": "string",
                                    "description": "The legal notice presented to the user when starting a session. The message is presented to the client before authentication takes place. Depends on the client capability and configuration if the message is presented to the user. The user receives this information before authentication. The purpose of the message is to warn the user about the consequences of unauthorized access.",
                                    "default": "IF YOU ARE NOT AN AUTHORIZED USER,\n           PLEASE EXIT IMMEDIATELY"
                                  },
                                  "privacy-notice": {
                                    "type": "string",
                                    "description": "The privacy notice presented to the user.",
                                    "default": "This system processes sensitive personal data.\n           The misuse of such data may generate considerable\n           harm to the data subjects. Be reminded of the\n           confidentiality obligations you have when accessing\n           this kind of data and the disciplinary consequences\n           of improper handling.\n           Version: 1.0, Last Updated: May 21, 2019"
                                  },
                                  "post-login-notice": {
                                    "type": "string",
                                    "description": "A legal notice that, for any reason related to specific regulations, must be accessible only after users log in.",
                                    "default": ""
                                  },
                                  "default-password-quality": {
                                    "type": "object",
                                    "description": "The default password quality.",
                                    "properties": {
                                      "max-consecutive-characters-per-class": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Maximum consecutive characters per class in a password. Specifies the maximum number of characters that can appear consecutively from a given character class. Value 0 means that consecutive character classes are not checked. Possible character classes are digits, uppercase, lowercase, and other characters."
                                      },
                                      "min-digit": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Minimum number of digits in passwords. Minimum number of digits a new password must have to be accepted by the ME. Value 0 means the check is disabled."
                                      },
                                      "min-lower": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Minimum number of lower case characters in passwords. Minimum number of lower case characters a new password must have to be accepted by the ME. Value 0 means the check is disabled."
                                      },
                                      "min-upper": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Minimum number of upper case characters in passwords. Minimum number of upper case characters a new password must have to be accepted by the ME. Value 0 means the check is disabled."
                                      },
                                      "min-other": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Minimum number of non-alphanumeric characters in passwords. Minimum number of non-alphanumeric characters a new password must have to be accepted by the ME. Value 0 means the check is disabled. Only the following characters are considered as non-alphanumeric: ! \\\" # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \\\\ ] ^ _ ` { | } ~"
                                      },
                                      "min-points": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 1,
                                        "maximum": 4,
                                        "description": "Minimum password quality points. Minimum number of quality points a new password must have to be accepted by the ME. One quality point is awarded for each character class used in the password. Possible character classes are digits, uppercase, lowercase, and other characters. min-points takes effect when its value is higher than the number of specific character attributes (min-digit, min-upper, min-lower, min-other) that are not set to 0"
                                      }
                                    }
                                  },
                                  "default-password-policy": {
                                    "type": "object",
                                    "description": "The default password policy. By default it uses the default-password-quality configuration.",
                                    "properties": {
                                      "expiry-warning": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 24855,
                                        "description": "Password expiry warning in days. Specifies the number of days before the expiry date when the ME starts to notify the user at authentication to change password due to approaching expiry date. Value 0 means expiry warnings are never sent.",
                                        "default": 7
                                      },
                                      "failure-count-interval": {
                                        "type": "integer",
                                        "format": "uint32",
                                        "minimum": 0,
                                        "maximum": 2147483647,
                                        "description": "The time interval within which consecutive failed login attempts count in seconds. Specifies the time interval it takes to obsolete records in password-failure-times used for leaf max-failure. Value 0 means the failure counter is reset only on successful authentication.",
                                        "default": 1800
                                      },
                                      "history-length": {
                                        "type": "integer",
                                        "format": "uint32",
                                        "minimum": 0,
                                        "maximum": 2147483647,
                                        "description": "Specifies the number of passwords remembered by the ME to avoid the reuse of old passwords. Value 0 means old passwords are not recorded.",
                                        "default": 12
                                      },
                                      "lockout-duration": {
                                        "type": "integer",
                                        "format": "uint32",
                                        "minimum": 0,
                                        "maximum": 2147483647,
                                        "description": "Account lockout duration in seconds due to password failures. Specifies the time in seconds after an automatically locked user account is unlocked automatically. Value 0 means that only the administrator can unlock a user account manually by invoking unlock-operational-lock action on the user account.",
                                        "default": 0
                                      },
                                      "max-age": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 24855,
                                        "description": "Password maximum age in days.Specifies the number of days after a password is considered expired. Value 0 means passwords never expire.",
                                        "default": 90
                                      },
                                      "max-failure": {
                                        "type": "integer",
                                        "format": "uint32",
                                        "minimum": 0,
                                        "maximum": 2147483647,
                                        "description": "Maximum failed login attempts to lock a user account. Specifies the number of consecutive failed login attempts which locks the user account automatically, as counted in password-failure-times of the respective users. Value 0 means that an unlimited number of failed attempts is allowed, the user account is not locked by failures.",
                                        "default": 5
                                      },
                                      "min-age": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 24855,
                                        "description": "Password minimum age in days. Specifies the minimum number of days that need to pass before a password can be changed. Value 0 means there is no control on the minimum age of passwords.",
                                        "default": 15
                                      },
                                      "min-length": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Minimum length of passwords. Specifies the minimum character lengths of passwords that the ME can accept.",
                                        "default": 12
                                      },
                                      "must-change": {
                                        "type": "boolean",
                                        "description": "Indicates if the password must change after password set or reset by administrator.",
                                        "default": true
                                      }
                                    }
                                  },
                                  "password-policy": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "List of password policies. The leaves that do not get a value use the defaults configured in default-password-policy.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the policy configuration."
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "expiry-warning": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 24855,
                                          "description": "Password expiry warning in days. Specifies the number of days before the expiry date when the ME starts to notify the user at authentication to change password due to approaching expiry date. Value 0 means expiry warnings are never sent.",
                                          "default": 7
                                        },
                                        "failure-count-interval": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 2147483647,
                                          "description": "The time interval within which consecutive failed login attempts count in seconds. Specifies the time interval it takes to obsolete records in password-failure-times used for leaf max-failure. Value 0 means the failure counter is reset only on successful authentication.",
                                          "default": 1800
                                        },
                                        "history-length": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 2147483647,
                                          "description": "Specifies the number of passwords remembered by the ME to avoid the reuse of old passwords. Value 0 means old passwords are not recorded.",
                                          "default": 12
                                        },
                                        "lockout-duration": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 2147483647,
                                          "description": "Account lockout duration in seconds due to password failures. Specifies the time in seconds after an automatically locked user account is unlocked automatically. Value 0 means that only the administrator can unlock a user account manually by invoking unlock-operational-lock action on the user account.",
                                          "default": 0
                                        },
                                        "max-age": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 24855,
                                          "description": "Password maximum age in days.Specifies the number of days after a password is considered expired. Value 0 means passwords never expire.",
                                          "default": 90
                                        },
                                        "max-failure": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 0,
                                          "maximum": 2147483647,
                                          "description": "Maximum failed login attempts to lock a user account. Specifies the number of consecutive failed login attempts which locks the user account automatically, as counted in password-failure-times of the respective users. Value 0 means that an unlimited number of failed attempts is allowed, the user account is not locked by failures.",
                                          "default": 5
                                        },
                                        "min-age": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 24855,
                                          "description": "Password minimum age in days. Specifies the minimum number of days that need to pass before a password can be changed. Value 0 means there is no control on the minimum age of passwords.",
                                          "default": 15
                                        },
                                        "min-length": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 65535,
                                          "description": "Minimum length of passwords. Specifies the minimum character lengths of passwords that the ME can accept.",
                                          "default": 12
                                        },
                                        "must-change": {
                                          "type": "boolean",
                                          "description": "Indicates if the password must change after password set or reset by administrator.",
                                          "default": true
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "default-account-policy": {
                                    "type": "object",
                                    "description": "The default user account policy.",
                                    "properties": {
                                      "dormant-timer": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Account dormant timer in days. Specifies the number of days it takes for the ME to automatically set the user account into dormant status when the account was not used in this time period. Dormant status results the ME to automatically lock and/or delete the user account. Value 0 means the dormant time is not measured which implies that the account cannot become dormant.",
                                        "default": 180
                                      },
                                      "dormant-action": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 1,
                                        "description": "Action taken by the ME after an account has been locked due to dormancy by the ME. Value 0: No action. The account remains in locked state. Value 1: Delete the account automatically. See also the attribute dormant-action-timer. The attribute has no meaning if dormant-timer has value 0.",
                                        "default": 0
                                      },
                                      "dormant-action-timer": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "The time delay in days for ME to apply dormant action. After an account gets into dormant status and gets locked, the ME waits this many days before performing the action defined by attribute dormant-action. Value 0 means that the action is applied immediatelly. The attribute has no significance if dormant-timer or dormant-action has value 0",
                                        "default": 90
                                      }
                                    }
                                  },
                                  "account-policy": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "List of user account policies. The leaves that do not get a value use the defaults configured in default-account-policy.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of the user account policy."
                                        },
                                        "user-label": {
                                          "type": "string",
                                          "description": "Label for free use."
                                        },
                                        "dormant-timer": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 65535,
                                          "description": "Account dormant timer in days. Specifies the number of days it takes for the ME to automatically set the user account into dormant status when the account was not used in this time period. Dormant status results the ME to automatically lock and/or delete the user account. Value 0 means the dormant time is not measured which implies that the account cannot become dormant.",
                                          "default": 180
                                        },
                                        "dormant-action": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 1,
                                          "description": "Action taken by the ME after an account has been locked due to dormancy by the ME. Value 0: No action. The account remains in locked state. Value 1: Delete the account automatically. See also the attribute dormant-action-timer. The attribute has no meaning if dormant-timer has value 0.",
                                          "default": 0
                                        },
                                        "dormant-action-timer": {
                                          "type": "integer",
                                          "format": "uint16",
                                          "minimum": 0,
                                          "maximum": 65535,
                                          "description": "The time delay in days for ME to apply dormant action. After an account gets into dormant status and gets locked, the ME waits this many days before performing the action defined by attribute dormant-action. Value 0 means that the action is applied immediatelly. The attribute has no significance if dormant-timer or dormant-action has value 0",
                                          "default": 90
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "admin-user": {
                                    "type": "object",
                                    "description": "The administrator user. Used for initial and recovery scenarios when authentication to regular user accounts is inaccessible. Password is first set at deployment. Change of password requires a backup to be able to revert to last state.",
                                    "properties": {
                                      "password": {
                                        "type": "string",
                                        "description": "The password for this entry.",
                                        "eric-adp-is-passphrase": "true",
                                        "format": "eric-adp-cm-secret"
                                      },
                                      "authorized-key": {
                                        "type": "array",
                                        "uniqueItems": true,
                                        "description": "A list of public SSH keys for this user. These keys are allowed for SSH authentication, as described in RFC 4253.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "An arbitrary name for the SSH key."
                                            },
                                            "algorithm": {
                                              "type": "string",
                                              "description": "The public key algorithm name for this SSH key. Valid values are the values in the IANA 'Secure Shell (SSH) Protocol Parameters' registry, Public Key Algorithm Names."
                                            },
                                            "key-data": {
                                              "type": "string",
                                              "description": "The binary public key data for this SSH key, as specified by RFC 4253, Section 6.6, i.e.: string certificate or public key format identifier byte[n] key/certificate data."
                                            }
                                          },
                                          "required": [
                                            "algorithm",
                                            "key-data",
                                            "name"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "oauth2-client": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A list of OAuth2 clients configured in this device.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "client-id": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z_][a-zA-Z0-9_.-]*$",
                                          "description": "The client identifier to be registered."
                                        },
                                        "groups": {
                                          "type": "array",
                                          "description": "The authorization groups that the OAuth2 client can access in a token request as scope.",
                                          "items": {
                                            "type": "string",
                                            "pattern": "^[!\\[\\]\\^_`#-Za-~]+$"
                                          }
                                        },
                                        "client-secret": {
                                          "type": "string",
                                          "description": "A client secret to authenticate an OAuth2 client.",
                                          "eric-adp-is-passphrase": "true",
                                          "format": "eric-adp-cm-secret"
                                        },
                                        "private-key-jwt": {
                                          "type": "object",
                                          "description": "A set of raw public keys used by the OAuth2 server to authenticate an OAuth2 client using JWT.",
                                          "properties": {
                                            "local-definition": {
                                              "type": "object",
                                              "description": "Container to hold local raw public key definitions.",
                                              "properties": {
                                                "raw-public-key": {
                                                  "type": "array",
                                                  "uniqueItems": true,
                                                  "description": "A raw public key definition.",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "type": "string",
                                                        "description": "An arbitrary name for this raw public key."
                                                      },
                                                      "algorithm": {
                                                        "enum": [
                                                          "rsa1024",
                                                          "rsa2048",
                                                          "rsa3072",
                                                          "rsa4096",
                                                          "rsa7680",
                                                          "rsa15360",
                                                          "secp192r1",
                                                          "secp224r1",
                                                          "secp256r1",
                                                          "secp384r1",
                                                          "secp521r1",
                                                          "x25519",
                                                          "x448"
                                                        ],
                                                        "description": "Identifies the key's algorithm."
                                                      },
                                                      "public-key-format": {
                                                        "type": "string",
                                                        "description": "Identifies the key's format."
                                                      },
                                                      "public-key": {
                                                        "type": "string",
                                                        "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                                      }
                                                    },
                                                    "required": [
                                                      "algorithm",
                                                      "public-key"
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            "truststore-reference": {
                                              "type": "string",
                                              "description": "A reference to a set of raw public keys that exist in the truststore."
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "client-id"
                                      ]
                                    }
                                  }
                                }
                              },
                              "ldap": {
                                "type": "object",
                                "description": "Configuration of the LDAP client. At least one server must be configured with common configuration of transport security, LDAP authentication method, and user search base.",
                                "properties": {
                                  "server": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "minItems": 1,
                                    "description": "List of LDAP servers used by the ME. When the LDAP client is invoked by a calling application, it sends the query to the first server in this list. If no response has been received within 'timeout' seconds, the client continues with the next server in the list. If no response is received from any server, it gives up and returns an error to the calling application.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "An arbitrary name for the LDAP server."
                                        },
                                        "tcp": {
                                          "type": "object",
                                          "description": "Contains TCP-specific configuration parameters for LDAP.",
                                          "properties": {
                                            "address": {
                                              "type": "string",
                                              "anyOf": [
                                                {
                                                  "format": "ipv4"
                                                },
                                                {
                                                  "format": "ipv6"
                                                },
                                                {
                                                  "format": "hostname"
                                                }
                                              ],
                                              "description": "The address of the LDAP server."
                                            },
                                            "ldap": {
                                              "type": "object",
                                              "description": "The connection is established by using the ldap protocol. The client is using StartTLS operation if TLS is configured.",
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "The port number of the LDAP server.",
                                                  "default": 389
                                                }
                                              }
                                            },
                                            "ldaps": {
                                              "type": "object",
                                              "description": "The connection is established by using the ldaps protocol. Configuration of TLS is mandatory for ldaps.",
                                              "properties": {
                                                "port": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "The port number of the LDAP server.",
                                                  "default": 636
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "security": {
                                    "type": "object",
                                    "description": "Container for LDAP security options.",
                                    "properties": {
                                      "user-base-dn": {
                                        "type": "string",
                                        "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                                        "description": "Default base DN to use in LDAP operations. The base DN must be specified in an LDAP DN format, for example, 'ou=people,dc=mycompany,dc=com'. All LDAP objects used for authentication must be accessible from the base DN."
                                      },
                                      "clear": {
                                        "type": "string",
                                        "description": "LDAP insecure clear connection. User passwords are sent in cleartext."
                                      },
                                      "tls": {
                                        "type": "object",
                                        "description": "LDAP secure TLS connection",
                                        "properties": {}
                                      },
                                      "simple-authenticated": {
                                        "type": "object",
                                        "description": "The ME requests unauthenticated simple bind from the LDAP server.",
                                        "properties": {
                                          "bind-dn": {
                                            "type": "string",
                                            "pattern": "^([a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?[,\\+])*[a-zA-Z][a-zA-Z0-9-]*=(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,# ])((\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+,])*(\\\\( |#|\\\\|>|<|;|\"|\\+|,|[a-fA-F0-9]{2})|[^\\\\><;\"+, ]))?$",
                                            "description": "Default bind DN used to access the LDAP servers. When configured, the ME uses the specified DN as the bind name for LDAP searches. The bind DN must be specified in an LDAP DN format, for example 'cn=bindaccount,dc=mycomp,dc=com'."
                                          },
                                          "bind-password": {
                                            "type": "string",
                                            "description": "The password used with binddn to authenticate.",
                                            "eric-adp-is-passphrase": "true",
                                            "format": "eric-adp-cm-secret"
                                          }
                                        }
                                      },
                                      "sasl-external": {
                                        "type": "string",
                                        "description": "The ME requests SASL EXTERNAL bind from the LDAP server. For this authentication type, TLS is mandatory."
                                      }
                                    },
                                    "required": [
                                      "user-base-dn"
                                    ]
                                  },
                                  "options": {
                                    "type": "object",
                                    "description": "LDAP client options.",
                                    "properties": {
                                      "timeout": {
                                        "type": "integer",
                                        "format": "uint8",
                                        "minimum": 1,
                                        "maximum": 255,
                                        "description": "The number of seconds the ME will wait for a response from each LDAP server before trying with a different server.",
                                        "default": 5
                                      },
                                      "enable-referrals": {
                                        "type": "boolean",
                                        "description": "Toggle to enable the use of referrals. When set to false, the ME ignores referrals returned by the LDAP server. When set to true, the ME follows referrals. Referrals can be used for authentication and authorization only if the referral URI refers back to a directory tree within the same LDAP server instance; otherwise, access is denied for referred user accounts.",
                                        "default": false
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "security",
                                  "server"
                                ]
                              }
                            }
                          },
                          "truststore": {
                            "type": "object",
                            "description": "The truststore contains sets of X.509 certificates and SSH host keys.",
                            "properties": {
                              "thresholds": {
                                "type": "object",
                                "description": "Expiration threshold configuration",
                                "properties": {
                                  "expiration-threshold": {
                                    "type": "integer",
                                    "format": "uint32",
                                    "minimum": 3,
                                    "maximum": 4294967295,
                                    "description": "The threshold specifies the number of days before the certificate expires to start sending expiration alarms. The alarm severity increases closer to expiration: WARNING when the certificate expires within the threshold MINOR when the certificate expires within 1/3 of the threshold MAJOR when the certificate expires within 1/6 of the threshold CRITICAL when the certificate expires within 1/30 of the threshold or 3 days, whichever is largest. This severity is used also after certificate expiration.",
                                    "default": 90
                                  }
                                }
                              },
                              "certificate-revocations": {
                                "type": "object",
                                "properties": {
                                  "certificate-revocation": {
                                    "type": "array",
                                    "uniqueItems": true,
                                    "description": "A certificate revocation list (CRL).",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the certificate revocation list."
                                        },
                                        "crl": {
                                          "type": "string",
                                          "description": "The binary data for the CRL, used when the CRL is manually installed."
                                        },
                                        "uri": {
                                          "type": "string",
                                          "format": "uri",
                                          "description": "The URI of where to fetch the CRL. Only http:// and ldap:// are allowed. Example: http://crl.verisign.com/class1.crl or ldap://192.168.33.27/example_crl.crl"
                                        },
                                        "refresh-interval": {
                                          "type": "integer",
                                          "format": "uint32",
                                          "minimum": 1,
                                          "maximum": 2400,
                                          "description": "The CRL refresh interval in hours.",
                                          "default": 24
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  }
                                }
                              },
                              "certificates": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A list of certificates. These certificates can be used by a server to authenticate clients, or by a client to authenticate servers. Each list of certificates SHOULD be specific to a purpose, as the list as a whole may be referenced by other modules. For instance, a RESTCONF server's configuration might use a specific list of certificates for when authenticating RESTCONF client connections.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "An arbitrary name for this list of certificates."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "An arbitrary description for this list of certificates."
                                    },
                                    "certificate": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "A certificate.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "An arbitrary name for this certificate. The name must be unique across all lists of certificates (not just this list) so that leafrefs from another module can resolve to unique values."
                                          },
                                          "state": {
                                            "enum": [
                                              "disabled",
                                              "enabled"
                                            ],
                                            "description": "A disabled certificate is excluded from validation",
                                            "default": "enabled"
                                          },
                                          "crl": {
                                            "type": "array",
                                            "description": "Reference to the CRLs to use for this certificate.",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "cert": {
                                            "type": "string",
                                            "description": "The binary certificate data for this certificate."
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              },
                              "host-keys": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A list of host keys. These host-keys can be used by clients to authenticate SSH servers. Each list of host keys SHOULD be specific to a purpose, so the list as a whole may be referenced by other modules. For instance, a client's configuration might point to a specific list of host keys for when authenticating specific SSH servers.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "An arbitrary name for this list of SSH host keys."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "An arbitrary description for this list of SSH host keys."
                                    },
                                    "host-key": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "A host key.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "An arbitrary name for this host-key."
                                          },
                                          "host-key": {
                                            "type": "string",
                                            "description": "The binary public key data for this host key."
                                          }
                                        },
                                        "required": [
                                          "host-key",
                                          "name"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              },
                              "raw-public-keys": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "A list of raw public keys. These raw public keys can be used by a server to authenticate clients, or by a client to authenticate servers. Each list of raw public keys SHOULD be specific to a purpose, so the list as a whole may be referenced by other modules. For instance, a client's configuration might point to a specific list of raw public keys for when authenticating specific TLS endpoints.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "An arbitrary name for this list of raw public keys."
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "An arbitrary description for this list raw public keys."
                                    },
                                    "raw-public-key": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "A raw public key.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "An arbitrary name for this raw public key."
                                          },
                                          "algorithm": {
                                            "enum": [
                                              "rsa1024",
                                              "rsa2048",
                                              "rsa3072",
                                              "rsa4096",
                                              "rsa7680",
                                              "rsa15360",
                                              "secp192r1",
                                              "secp224r1",
                                              "secp256r1",
                                              "secp384r1",
                                              "secp521r1",
                                              "x25519",
                                              "x448"
                                            ],
                                            "description": "Identifies the key's algorithm."
                                          },
                                          "public-key-format": {
                                            "type": "string",
                                            "description": "Identifies the key's format."
                                          },
                                          "public-key": {
                                            "type": "string",
                                            "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                          }
                                        },
                                        "required": [
                                          "algorithm",
                                          "name",
                                          "public-key"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "description": "Inline Config content."
                      },
                      "default-operation": {
                        "enum": [
                          "merge",
                          "replace",
                          "none"
                        ],
                        "description": "The default operation to use.",
                        "default": "merge"
                      },
                      "test-option": {
                        "enum": [
                          "test-then-set",
                          "set",
                          "test-only"
                        ],
                        "description": "The test option to use.",
                        "default": "test-then-set"
                      },
                      "error-option": {
                        "enum": [
                          "stop-on-error",
                          "continue-on-error",
                          "rollback-on-error"
                        ],
                        "description": "The error option to use.",
                        "default": "stop-on-error"
                      },
                      "url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL-based config content."
                      }
                    }
                  },
                  "get-schema": {
                    "type": "object",
                    "properties": {
                      "identifier": {
                        "type": "string",
                        "description": "Identifier for the schema list entry."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the schema requested. If this parameter is not present, and more than one version of the schema exists on the server, a 'data-not-unique' error is returned, as described above."
                      },
                      "format": {
                        "type": "string",
                        "description": "The data modeling language of the schema. If this parameter is not present, and more than one formats of the schema exists on the server, a 'data-not-unique' error is returned, as described above."
                      }
                    }
                  },
                  "cancel-commit": {
                    "type": "object",
                    "properties": {
                      "persist-id": {
                        "type": "string",
                        "description": "This parameter is given in order to cancel a persistent confirmed commit. The value must be equal to the value given in the 'persist' parameter to the <commit> operation. If it does not match, the operation fails with an 'invalid-value' error."
                      }
                    }
                  },
                  "close-session": {
                    "type": "object",
                    "properties": {}
                  },
                  "commit": {
                    "type": "object",
                    "properties": {
                      "confirmed": {
                        "type": "string",
                        "description": "Requests a confirmed commit."
                      },
                      "confirm-timeout": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 1,
                        "maximum": 4294967295,
                        "description": "The timeout interval for a confirmed commit.",
                        "default": 600
                      },
                      "persist": {
                        "type": "string",
                        "description": "This parameter is used to make a confirmed commit persistent. A persistent confirmed commit is not aborted if the NETCONF session terminates. The only way to abort a persistent confirmed commit is to let the timer expire, or to use the <cancel-commit> operation. The value of this parameter is a token that must be given in the 'persist-id' parameter of <commit> or <cancel-commit> operations in order to confirm or cancel the persistent confirmed commit. The token should be a random string."
                      },
                      "persist-id": {
                        "type": "string",
                        "description": "This parameter is given in order to commit a persistent confirmed commit. The value must be equal to the value given in the 'persist' parameter to the <commit> operation. If it does not match, the operation fails with an 'invalid-value' error."
                      }
                    }
                  },
                  "copy-config": {
                    "type": "object",
                    "properties": {
                      "target": {
                        "type": "object",
                        "description": "Particular configuration to copy to.",
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "The candidate configuration is the config target."
                          },
                          "running": {
                            "type": "string",
                            "description": "The running configuration is the config target. This is optional-to-implement on the server."
                          },
                          "startup": {
                            "type": "string",
                            "description": "The startup configuration is the config target."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL-based configuration is the config target."
                          }
                        }
                      },
                      "source": {
                        "type": "object",
                        "description": "Particular configuration to copy from.",
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "The candidate configuration is the config source."
                          },
                          "running": {
                            "type": "string",
                            "description": "The running configuration is the config source."
                          },
                          "startup": {
                            "type": "string",
                            "description": "The startup configuration is the config source."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL-based configuration is the config source."
                          },
                          "config": {
                            "type": "string",
                            "description": "Inline Config content: <config> element. Represents an entire configuration datastore, not a subset of the running datastore."
                          }
                        }
                      },
                      "with-defaults": {
                        "enum": [
                          "report-all",
                          "report-all-tagged",
                          "trim",
                          "explicit"
                        ],
                        "description": "The explicit defaults processing mode requested."
                      }
                    }
                  },
                  "delete-config": {
                    "type": "object",
                    "properties": {
                      "target": {
                        "type": "object",
                        "description": "Particular configuration to delete.",
                        "properties": {
                          "startup": {
                            "type": "string",
                            "description": "The startup configuration is the config target."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL-based configuration is the config target."
                          }
                        }
                      }
                    }
                  },
                  "discard-changes": {
                    "type": "object",
                    "properties": {}
                  },
                  "get-config": {
                    "type": "object",
                    "properties": {
                      "source": {
                        "type": "object",
                        "description": "Particular configuration to retrieve.",
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "The candidate configuration is the config source."
                          },
                          "running": {
                            "type": "string",
                            "description": "The running configuration is the config source."
                          },
                          "startup": {
                            "type": "string",
                            "description": "The startup configuration is the config source. This is optional-to-implement on the server because not all servers will support filtering for this datastore."
                          }
                        }
                      },
                      "filter": {
                        "type": "string",
                        "description": "Subtree or XPath filter to use."
                      },
                      "with-defaults": {
                        "enum": [
                          "report-all",
                          "report-all-tagged",
                          "trim",
                          "explicit"
                        ],
                        "description": "The explicit defaults processing mode requested."
                      }
                    }
                  },
                  "get": {
                    "type": "object",
                    "properties": {
                      "filter": {
                        "type": "string",
                        "description": "This parameter specifies the portion of the system configuration and state data to retrieve."
                      },
                      "with-defaults": {
                        "enum": [
                          "report-all",
                          "report-all-tagged",
                          "trim",
                          "explicit"
                        ],
                        "description": "The explicit defaults processing mode requested."
                      }
                    }
                  },
                  "kill-session": {
                    "type": "object",
                    "properties": {
                      "session-id": {
                        "type": "integer",
                        "format": "uint32",
                        "minimum": 1,
                        "maximum": 4294967295,
                        "description": "Particular session to kill."
                      }
                    }
                  },
                  "lock": {
                    "type": "object",
                    "properties": {
                      "target": {
                        "type": "object",
                        "description": "Particular configuration to lock.",
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "The candidate configuration is the config target."
                          },
                          "running": {
                            "type": "string",
                            "description": "The running configuration is the config target."
                          },
                          "startup": {
                            "type": "string",
                            "description": "The startup configuration is the config target."
                          }
                        }
                      }
                    }
                  },
                  "unlock": {
                    "type": "object",
                    "properties": {
                      "target": {
                        "type": "object",
                        "description": "Particular configuration to unlock.",
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "The candidate configuration is the config target."
                          },
                          "running": {
                            "type": "string",
                            "description": "The running configuration is the config target."
                          },
                          "startup": {
                            "type": "string",
                            "description": "The startup configuration is the config target."
                          }
                        }
                      }
                    }
                  },
                  "validate": {
                    "type": "object",
                    "properties": {
                      "source": {
                        "type": "object",
                        "description": "Particular configuration to validate.",
                        "properties": {
                          "candidate": {
                            "type": "string",
                            "description": "The candidate configuration is the config source."
                          },
                          "running": {
                            "type": "string",
                            "description": "The running configuration is the config source."
                          },
                          "startup": {
                            "type": "string",
                            "description": "The startup configuration is the config source."
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The URL-based configuration is the config source."
                          },
                          "config": {
                            "type": "string",
                            "description": "Inline Config content: <config> element. Represents an entire configuration datastore, not a subset of the running datastore."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}