{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by jsonschema-generator (1.27.0-124 2023-06-15 16:50:09 CEST) from Yang module ericsson-scp (6.0.2) on Mar 5, 2024, 3:56:51 PM. Features: [ericsson-brm:failsafe-backups, ericsson-brm:housekeeping, ericsson-brm:label-store, ericsson-brm:rollback-at-restore, ericsson-brm:scheduler, ericsson-brm:sftp-client-authentication, ericsson-fm:alert, ericsson-keystore-ext:cmp, ericsson-keystore-ext:manual-renewal, ericsson-keystore-ext:pkcs10, ericsson-keystore-ext:pkcs12, ericsson-keystore-ext:pkcs8, ericsson-keystore-ext:scep, ericsson-notifications:netconf-state-change, ericsson-pm:measurement-jobs, ericsson-pm:realtime-jobs, ericsson-pm:threshold-jobs, ericsson-snmp:dtls, ericsson-snmp:network-prefix-validation, ericsson-snmp:no-auth-no-priv-feature, ericsson-system-ext:authentication-failure-alarm, ericsson-system-ext:ldap, ericsson-system-ext:ldap-authentication, ericsson-system-ext:ldap-clear, ericsson-system-ext:ldap-custom-filter, ericsson-system-ext:ldap-posix-filter, ericsson-system-ext:ldap-sasl-external, ericsson-system-ext:local-target-classes, ericsson-system-ext:ntp-security, ericsson-system-ext:oauth2-client-authentication, iana-crypt-hash:crypt-hash-md5, iana-crypt-hash:crypt-hash-sha-256, iana-crypt-hash:crypt-hash-sha-512, ietf-crypto-types:one-asymmetric-key-format, ietf-crypto-types:one-symmetric-key-format, ietf-crypto-types:encrypted-one-symmetric-key-format, ietf-crypto-types:encrypted-one-asymmetric-key-format, ietf-interfaces:arbitrary-names, ietf-interfaces:if-mib, ietf-interfaces:pre-provisioning, ietf-ip:ipv4-non-contiguous-netmasks, ietf-ip:ipv6-privacy-autoconf, ietf-keystore:key-generation, ietf-keystore:keystore-supported, ietf-keystore:local-definitions-supported, ietf-keystore:keystore-supported, ietf-netconf:candidate, ietf-netconf:confirmed-commit, ietf-netconf:rollback-on-error, ietf-netconf:startup, ietf-netconf:url, ietf-netconf:validate, ietf-netconf:writable-running, ietf-netconf:xpath, ietf-ssh-client:ssh-client-transport-params-config, ietf-ssh-client:ssh-client-keepalives, ietf-ssh-common:ssh-ctr, ietf-ssh-common:ssh-dh-group-exchange, ietf-ssh-common:ssh-ecc, ietf-ssh-common:ssh-sha2, ietf-ssh-common:ssh-x509-certs, ietf-system:authentication, ietf-system:dns-udp-tcp-port, ietf-system:local-users, ietf-system:ntp, ietf-system:ntp-udp-port, ietf-system:radius, ietf-system:radius-authentication, ietf-system:timezone-name, ietf-system:authentication, ietf-system:local-users, ietf-system:ntp, ietf-tls-client:tls-client-hello-params-config, ietf-tls-client:tls-client-keepalives, ietf-tls-client:x509-certificate-auth, ietf-tls-client:raw-public-key-auth, ietf-tls-client:psk-auth, ietf-tls-common:tls-1_0, ietf-tls-common:tls-1_1, ietf-tls-common:tls-1_2, ietf-tls-common:tls-1_3, ietf-tls-common:tls-3des, ietf-tls-common:tls-dhe, ietf-tls-common:tls-ecc, ietf-tls-common:tls-gcm, ietf-tls-common:tls-sha2, ietf-tls-server:tls-server-hello-params-config, ietf-tls-server:tls-server-keepalives, ietf-tls-server:client-auth-config-supported, ietf-tls-server:external-client-auth-supported, ietf-tls-server:x509-certificate-auth, ietf-tls-server:raw-public-key-auth, ietf-tls-server:psk-auth, ietf-truststore:local-definitions-supported, ietf-truststore:raw-public-keys, ietf-truststore:ssh-host-keys, ietf-truststore:truststore-supported, ietf-truststore:x509-certificates, ietf-truststore:truststore-supported, ietf-truststore:ssh-host-keys, ietf-truststore:x509-certificates]. Deviations/extensions: [ericsson-brm-ext-adp, ericsson-data-collector-ext-adp, ericsson-fm-ext-adp, ericsson-keystore-ext, ericsson-netconf-acm-ext, ericsson-pm-dev-adp, ericsson-system-ext-aum, ericsson-system-ext, ericsson-truststore-ext, ericsson-yang-library-ext, ietf-ip, ietf-netconf-with-defaults, ietf-network-instance, tailf-acm]",
  "title": "ericsson-scp",
  "type": "object",
  "properties": {
    "ericsson-scp:scp-function": {
      "type": "object",
      "description": "Configuration settings for the Service Communication Proxy NF",
      "properties": {
        "nf-instance": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 1,
          "description": "The SCP instance defines the behavior of the SCP NF as well as the NRF registration behavior",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "pattern": "^[^.]+$",
                "description": "Name identifying the SCP instance"
              },
              "nf-peer-info": {
                "type": "object",
                "description": "Defines the required data for 3gpp-Sbi-NF-Peer-Info header in a global level",
                "properties": {
                  "out-message-handling": {
                    "enum": [
                      "on",
                      "off"
                    ],
                    "description": "A switch to define the header handling in a global level",
                    "default": "off"
                  }
                }
              },
              "nf-instance-id": {
                "type": "string",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "description": "A Universally Unique IDentifier in the string representation defined in RFC 4122. The canonical representation uses lower case characters. The following is an example of a UUID in string representation: f81d4fae-7dec-11d0-a765-00a0c91e6bf6 Setting this property is optional. It has a meaning for how the SCP registers in its NRF(s): If not set, an automatically generated NF instance ID (a different one for each NRF group) is used for the registration. If set, this is used for the registration rather than the automatically generated NF instance IDs of the NRF groups."
              },
              "dns-profile": {
                "type": "array",
                "uniqueItems": true,
                "description": "Settings for DNS resolution of producers.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the dns-profile"
                    },
                    "ip-family-resolution": {
                      "type": "array",
                      "minItems": 1,
                      "maxItems": 2,
                      "description": "IP family for the DNS resolution of an FQDN",
                      "items": {
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    }
                  },
                  "required": [
                    "ip-family-resolution",
                    "name"
                  ]
                }
              },
              "dns-profile-ref": {
                "type": "string",
                "description": "Reference to a defined dns-profile that will be used for DNS resolution on producers of all nf-pools."
              },
              "ingress-connection-profile": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "description": "Connection profile for ingress traffic cases",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the ingress-connection-profile"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "max-connection-duration": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "The maximum duration of an incoming TCP connection. The duration is defined as a period since a connection was established. Default value zero means that no time limit is imposed",
                      "default": "0"
                    },
                    "hpack-table-size": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 2147483647,
                      "description": "Maximum table size (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values range from 0 to 2147483647 (2^31 - 1). 0 effectively disables header compression."
                    },
                    "max-concurrent-streams": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 2147483647,
                      "description": "Maximum concurrent streams allowed for peer on one HTTP/2 connection. If the limit is reached, it is treated as stream error",
                      "default": "2147483647"
                    },
                    "connection-idle-timeout": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 2147483647,
                      "description": "The period in which there are no active HTTP requests. When the idle timeout is reached the connection will be closed. To disable idle timeouts explicitly set this to 0.",
                      "default": "3600"
                    },
                    "tcp-keepalive": {
                      "type": "object",
                      "description": "TCP-keepalive settings",
                      "properties": {
                        "probes": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead",
                          "default": "6"
                        },
                        "time": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "The number of seconds a connection needs to be idle before keep-alive probes start being sent",
                          "default": "5"
                        },
                        "interval": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "The number of seconds between keep-alive probes",
                          "default": "5"
                        }
                      }
                    },
                    "dscp-marking": {
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0,
                      "maximum": 63,
                      "description": "DSCP value used for IP packets sent over this connection"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "ingress-connection-profile-ref": {
                "type": "string",
                "description": "Reference to a defined ingress-connection-profile"
              },
              "egress-connection-profile": {
                "type": "array",
                "uniqueItems": true,
                "description": "Connection profile for egress traffic cases",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the egress-connection-profile"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "hpack-table-size": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 2147483647,
                      "description": "Maximum table size (in octets) that the encoder is permitted to use for the dynamic HPACK table. Valid values range from 0 to 2147483647 (2^31 - 1). 0 effectively disables header compression."
                    },
                    "max-requests": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 16384,
                      "description": "The maximum number of requests that can be outstanding per worker pod to all members of a pool",
                      "default": "16384"
                    },
                    "max-pending-requests": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 16384,
                      "description": "The maximum number of requests per worker pod that can be waiting for establishment of a connection",
                      "default": "16384"
                    },
                    "max-connections": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 16384,
                      "description": "The maximum number of connections per worker pod that can be established to all members of a pool",
                      "default": "16384"
                    },
                    "max-connection-duration": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "The maximum duration of an outgoing TCP connection. The duration is defined as a period since a connection was established. Default value zero means that no time limit is imposed",
                      "default": "0"
                    },
                    "max-concurrent-streams": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 2147483647,
                      "description": "Maximum concurrent streams allowed for peer on one HTTP/2 connection. If the limit is reached, SCP may queue requests or establish additional connections (as allowed per circuit breaker limits).",
                      "default": "2147483647"
                    },
                    "tcp-connect-timeout": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 86400,
                      "description": "Timeout for setting up a new connection",
                      "default": "2"
                    },
                    "connection-idle-timeout": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 2147483647,
                      "description": "The period in which there are no active HTTP requests. When the idle timeout is reached the connection will be closed. To disable idle timeouts explicitly set this to 0.",
                      "default": "3600"
                    },
                    "tcp-keepalive": {
                      "type": "object",
                      "description": "TCP-keepalive settings",
                      "properties": {
                        "probes": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead",
                          "default": "6"
                        },
                        "time": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "The number of seconds a connection needs to be idle before keep-alive probes start being sent",
                          "default": "5"
                        },
                        "interval": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "The number of seconds between keep-alive probes",
                          "default": "5"
                        }
                      }
                    },
                    "enable-message-size-measurement": {
                      "type": "boolean",
                      "description": "A switch that allows the operator to enable or disable upstream traffic counters for message size",
                      "default": "false"
                    },
                    "dscp-marking": {
                      "type": "integer",
                      "format": "uint8",
                      "minimum": 0,
                      "maximum": 63,
                      "description": "DSCP value used for IP packets sent over this connection"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "egress-connection-profile-ref": {
                "type": "string",
                "description": "Reference to a defined egress-connection-profile"
              },
              "local-rate-limit-profile": {
                "type": "array",
                "uniqueItems": true,
                "description": "Contains the necessary parameters for local rate limiting to be applied. Referenced from own-network",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the local-rate-limit-profile"
                    },
                    "token-bucket": {
                      "type": "object",
                      "description": "Token bucket configuration based on which local rate limiting will be applied",
                      "properties": {
                        "max-tokens": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "The maximum tokens that the bucket can hold, as well as the number of tokens the bucket initially contains"
                        },
                        "tokens-per-fill": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 0,
                          "maximum": 2147483647,
                          "description": "The number of tokens added to the bucket at the beginning of each fill-interval"
                        },
                        "fill-interval": {
                          "type": "integer",
                          "format": "uint32",
                          "minimum": 51,
                          "maximum": 2147483647,
                          "description": "The fill interval at which tokens are added to the bucket, defined in milliseconds"
                        }
                      },
                      "required": [
                        "fill-interval",
                        "max-tokens",
                        "tokens-per-fill"
                      ]
                    },
                    "add-response-header": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "Headers to be added on the response to a request that is rejected due to rate limiting",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the header"
                          },
                          "value": {
                            "type": "string",
                            "description": "Value of the header. In case the header is already present, the value is appended."
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "token-bucket"
                  ]
                }
              },
              "global-rate-limit-profile": {
                "type": "array",
                "uniqueItems": true,
                "description": "Define the necessary parameters for global rate limiting to be applied.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the rate limit profile."
                    },
                    "sustainable-rate": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 2147483647,
                      "description": "The number of incoming requests that can be sustainably received from a peer within an one second interval"
                    },
                    "max-burst-size": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 0,
                      "maximum": 2147483647,
                      "description": "The maximum number of the incoming requests, beyond the sustainable rate, that can be received from a peer in a burst"
                    },
                    "action-reject-message": {
                      "type": "object",
                      "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                      "properties": {
                        "status": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 100,
                          "maximum": 999,
                          "description": "Status-code of the reply",
                          "default": "429"
                        },
                        "title": {
                          "type": "string",
                          "description": "A short, human-readable summary of the problem",
                          "default": "Too Many Requests"
                        },
                        "cause": {
                          "type": "string",
                          "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500).",
                          "default": "NF_CONGESTION_RISK"
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'",
                          "default": "request_rate_limit"
                        },
                        "format": {
                          "enum": [
                            "text",
                            "json"
                          ],
                          "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored.",
                          "default": "json"
                        },
                        "retry-after-header": {
                          "enum": [
                            "delay-seconds",
                            "HTTP-date",
                            "disabled"
                          ],
                          "description": "Format of the retry-after header. If the default value 'delay-seconds' is used, the retry-after-header is formatted according to RFC 7231. If the retry-after-header value used is 'HTTP-date', the corresponding format according to RFC 7231 is used. If the value used is 'disabled' then the retry-after-header is disabled",
                          "default": "delay-seconds"
                        }
                      }
                    },
                    "action-drop-message": {
                      "type": "object",
                      "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                      "properties": {}
                    }
                  },
                  "required": [
                    "max-burst-size",
                    "name",
                    "sustainable-rate"
                  ]
                }
              },
              "message-body-limits": {
                "type": "object",
                "description": "Defines the limits for the message body",
                "properties": {
                  "max-bytes": {
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0,
                    "maximum": 16000000,
                    "description": "Maximum message body size in bytes"
                  },
                  "max-leaves": {
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0,
                    "maximum": 16000,
                    "description": "Maximum number of leaves in the JSON message body"
                  },
                  "max-nesting-depth": {
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0,
                    "maximum": 32,
                    "description": "Maximum nesting depth of the leaves in the JSON message body"
                  }
                }
              },
              "vtap": {
                "type": "object",
                "description": "Defines the required data for traffic tapping",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "A switch that allows the operator to enable or disable traffic tapping in a global level",
                    "default": "true"
                  },
                  "vtap-configuration": {
                    "type": "object",
                    "description": "Defines the required settings for traffic tapping",
                    "properties": {
                      "proxy": {
                        "type": "object",
                        "description": "Defines the required data for tapping on the proxy traffic",
                        "properties": {
                          "ingress": {
                            "type": "array",
                            "uniqueItems": true,
                            "maxItems": 2,
                            "description": "Defines the configuration data required for tapping ingress traffic",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "own-network-ref": {
                                  "type": "array",
                                  "minItems": 1,
                                  "maxItems": 2,
                                  "description": "Reference to the own-network the traffic of which is taken into account for tapping",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "A switch that allows the operator to enable or disable traffic tapping for the specific element",
                                  "default": "true"
                                }
                              },
                              "required": [
                                "name",
                                "own-network-ref"
                              ]
                            }
                          },
                          "egress": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "Defines the configuration data required for tapping egress traffic",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "A switch that allows the operator to enable or disable traffic tapping for the specific element",
                                  "default": "true"
                                },
                                "all-nf-pools": {
                                  "type": "object",
                                  "description": "If present , it applies egress vtap configuration to all nf-pools",
                                  "properties": {}
                                },
                                "nf-pool-ref": {
                                  "type": "array",
                                  "description": "Reference to the nf-pool the traffic of which is taken into account for tapping",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "slf-lookup-profile": {
                "type": "array",
                "uniqueItems": true,
                "description": "Service Lookup Function (SLF) configuration parameters",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the SLF lookup profile"
                    },
                    "request-timeout": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 65535,
                      "description": "The timeout of SLF interrogation requests",
                      "default": "10000"
                    },
                    "identity-type": {
                      "enum": [
                        "supi",
                        "gpsi"
                      ],
                      "description": "The type of subscriber identifier based on which messages should be routed",
                      "default": "supi"
                    },
                    "requester-nf-type": {
                      "type": "string",
                      "description": "The NF type of the NF requesting the SLF interrogation (according to TS 29.510)",
                      "default": "SMF"
                    },
                    "target-nf-type": {
                      "type": "string",
                      "description": "The NF type of the targeted NF for SLF interrogation (according to TS 29.510)",
                      "default": "CHF"
                    },
                    "message-data-ref": {
                      "type": "string",
                      "description": "Reference to message-data MO that defines the data to extract from a message"
                    },
                    "result-variable-name": {
                      "type": "string",
                      "description": "Variable name to store the outcome of the SLF interrogation",
                      "default": "region"
                    },
                    "routing-case-identity-not-found": {
                      "type": "string",
                      "description": "Routing case where the execution will continue when the interrogated supi/gpsi is not found in the SLF lookup"
                    },
                    "routing-case-destination-unknown": {
                      "type": "string",
                      "description": "Routing case where the execution will continue when the SLF interrogation result does not exist"
                    },
                    "routing-case-identity-missing": {
                      "type": "string",
                      "description": "Routing case where the execution will continue when the subscriber identity cannot be retrieved from the request message"
                    },
                    "routing-case-lookup-failure": {
                      "type": "string",
                      "description": "Routing case where the execution will continue when the SLF interrogation fails"
                    }
                  },
                  "required": [
                    "message-data-ref",
                    "name"
                  ]
                }
              },
              "service-address": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "maxItems": 2,
                "description": "Listening address of the SCP, referenced in own-network as well as the nf-profile and nf-service sent to the NRF",
                "items": {
                  "type": "object",
                  "properties": {
                    "ipv4-address": {
                      "type": "string",
                      "pattern": "^[0-9\\.]*$",
                      "description": "IPv4 address of the SCP service"
                    },
                    "ipv6-address": {
                      "type": "string",
                      "pattern": "^[0-9a-fA-F:\\.]*$",
                      "description": "IPv6 address of the SCP service"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^[^.]+$",
                      "description": "Name uniquely identifying the service address."
                    },
                    "fqdn": {
                      "type": "string",
                      "format": "hostname",
                      "description": "FQDN of the nf-service, for example chf.op.com"
                    },
                    "port": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "This port is used to receive non-TLS traffic."
                    },
                    "tls-port": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "This port is used to receive TLS traffic."
                    }
                  }
                }
              },
              "own-network": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "maxItems": 2,
                "description": "Definition of an own, internal network of this SCP instance",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "pattern": "^[^.]+$",
                      "description": "Name identifying the own network"
                    },
                    "service-address-ref": {
                      "type": "string",
                      "description": "Reference to a defined service-address"
                    },
                    "in-request-screening-case-ref": {
                      "type": "string",
                      "description": "Reference to the request screening case that is applied when a request is received from an NF instance in the own PLMN"
                    },
                    "out-response-screening-case-ref": {
                      "type": "string",
                      "description": "Reference to the response screening case that is applied when the response is targeting an NF instance in the own PLMN"
                    },
                    "routing-case-ref": {
                      "type": "string",
                      "description": "Reference to a defined routing case, used for all traffic originating from own PLMN"
                    },
                    "ingress-connection-profile-ref": {
                      "type": "string",
                      "description": "Reference to a defined ingress-connection-profile"
                    },
                    "local-rate-limit-profile-ref": {
                      "type": "string",
                      "description": "Reference to a defined local-rate-limit-profile"
                    },
                    "global-ingress-rate-limit-profile-ref": {
                      "type": "array",
                      "maxItems": 1,
                      "description": "Reference to a defined global-rate-limit-profile",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "name",
                    "routing-case-ref",
                    "service-address-ref"
                  ]
                }
              },
              "message-data": {
                "type": "array",
                "uniqueItems": true,
                "description": "Data extracted from incoming requests, used in routing rules to determine the appropriate routing action",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the message data set"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "path": {
                      "type": "object",
                      "description": "If present, specifies that the content of the URL path is used as the source",
                      "properties": {}
                    },
                    "request-header": {
                      "type": "string",
                      "description": "If present, specifies the name of the request header from which to read the content"
                    },
                    "response-header": {
                      "type": "string",
                      "description": "If present, specifies the name of the response header from which to read the content"
                    },
                    "header": {
                      "type": "string",
                      "description": "If present, specifies the name of the request or response header from which to read the content depending on if it is used in the request or response path"
                    },
                    "body-json-pointer": {
                      "type": "string",
                      "description": "If configured, specifies the element that will be extracted from a JSON-formatted body with a JSON-Pointer specification according to RFC 6901"
                    },
                    "variable-name": {
                      "type": "string",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                      "description": "The name of the variable in which to store the extracted data"
                    },
                    "extractor-regex": {
                      "type": "string",
                      "description": "Regular expression name captures (?<name>re) used to extract data into the variable 'name'. If the regular expression does not match, all variables are left undefined. The names of named-captures’ respective variables must begin with a letter and contain only letters, digits, or underscore"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "request-screening-case": {
                "type": "array",
                "uniqueItems": true,
                "description": "Entry point to a list of screening rules which are evaluated in sequence to filter a request message",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "pattern": "^[^.]+$",
                      "description": "Name identifying the request-screening-case"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "message-data-ref": {
                      "type": "array",
                      "description": "Reference to defined message-data which has extracted the data to be used in screening rule conditions",
                      "items": {
                        "type": "string"
                      }
                    },
                    "screening-rule": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "The screening rules are evaluated in sequence once the request-screening-case is referenced",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "pattern": "^[^.]+$",
                            "description": "Name identifying the screening-rule"
                          },
                          "condition": {
                            "type": "string",
                            "description": "A logical expression which is evaluated using the collected data from incoming requests as stored in message-data, and determines whether the screening-rule shall be executed. If no condition is defined, the screening-rule is always executed"
                          },
                          "screening-action": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "description": "The screening-actions are executed in sequence once the condition of the screening-rule evaluates to true",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name identifying the screening-action"
                                },
                                "action-add-header": {
                                  "type": "object",
                                  "description": "Adds an HTTP header to a message",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Specifies the header to be added to the request"
                                    },
                                    "if-exists": {
                                      "enum": [
                                        "replace",
                                        "add",
                                        "no-action"
                                      ],
                                      "description": "Defines the behavior when the header exists",
                                      "default": "no-action"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Specifies the value of the header to be added to the request"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "value"
                                  ]
                                },
                                "action-modify-header": {
                                  "type": "object",
                                  "description": "Either replaces the value of an existing HTTP header with a new one or prepends/appends a value to the existing value of a header",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Specifies the header to be modified"
                                    },
                                    "replace-value": {
                                      "type": "string",
                                      "description": "Specifies the value to replace the header's old value"
                                    },
                                    "replace-from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Specifies the name of the variable from which to fetch the value to replace the header's old value"
                                    },
                                    "prepend-value": {
                                      "type": "string",
                                      "description": "Specifies the value to be prepended to the header's old value"
                                    },
                                    "prepend-from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Specifies the name of the variable from which to fetch the value to be prepended to the header's old value"
                                    },
                                    "append-value": {
                                      "type": "string",
                                      "description": "Specifies the value to be appended to the header's old value"
                                    },
                                    "append-from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Specifies the name of the variable from which to fetch the value to be appended to the header's old value"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "action-remove-header": {
                                  "type": "object",
                                  "description": "Removes an HTTP header from a message",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Specifies the header to be removed from the request"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "action-drop-message": {
                                  "type": "object",
                                  "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                  "properties": {}
                                },
                                "action-exit-screening-case": {
                                  "type": "object",
                                  "description": "Exits from a screening-case and terminates message screening processing",
                                  "properties": {}
                                },
                                "action-reject-message": {
                                  "type": "object",
                                  "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                  "properties": {
                                    "status": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 100,
                                      "maximum": 999,
                                      "description": "Status-code of the reply"
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "A short, human-readable summary of the problem"
                                    },
                                    "cause": {
                                      "type": "string",
                                      "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                    },
                                    "detail": {
                                      "type": "string",
                                      "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                    },
                                    "format": {
                                      "enum": [
                                        "text",
                                        "json"
                                      ],
                                      "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                      "default": "json"
                                    }
                                  },
                                  "required": [
                                    "status"
                                  ]
                                },
                                "action-go-to": {
                                  "type": "object",
                                  "description": "Jump to another request-screening-case",
                                  "properties": {
                                    "request-screening-case-ref": {
                                      "type": "string",
                                      "description": "The name of the request-screening-case where the execution continues"
                                    }
                                  }
                                },
                                "action-log": {
                                  "type": "object",
                                  "description": "Logs a user-defined message with the configured log-level",
                                  "properties": {
                                    "text": {
                                      "type": "string",
                                      "description": "The text to be used for troubleshooting"
                                    },
                                    "max-log-message-length": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 1,
                                      "maximum": 10000,
                                      "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                      "default": "250"
                                    },
                                    "log-level": {
                                      "enum": [
                                        "debug",
                                        "info",
                                        "trace",
                                        "warn",
                                        "error"
                                      ],
                                      "description": "Define the log level for troubleshooting",
                                      "default": "debug"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ]
                                },
                                "action-modify-json-body": {
                                  "type": "object",
                                  "description": "Performs modifications on JSON body elements by either adding new elements, replacing the value of existing elements, appending/prepending strings to existing elements or removing the elements from the JSON body",
                                  "properties": {
                                    "json-pointer": {
                                      "type": "string",
                                      "description": "Specifies the path inside the JSON body where an element will be added or modified or removed"
                                    },
                                    "add-value": {
                                      "type": "object",
                                      "description": "Adds a new element to the path specified by the json-pointer attribute. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body, it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the value of the element to be added"
                                        },
                                        "if-path-not-exists": {
                                          "enum": [
                                            "create",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                          "default": "create"
                                        },
                                        "if-element-exists": {
                                          "enum": [
                                            "replace",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the value of an existing element will be replaced or not",
                                          "default": "no-action"
                                        }
                                      }
                                    },
                                    "add-from-var-name": {
                                      "type": "object",
                                      "description": "Adds a new element to the path specified by the json-pointer attribute. The value of the new element is stored on a variable. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                      "properties": {
                                        "if-path-not-exists": {
                                          "enum": [
                                            "create",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                          "default": "create"
                                        },
                                        "if-element-exists": {
                                          "enum": [
                                            "replace",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the value of an existing element will be replaced or not",
                                          "default": "no-action"
                                        },
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the value to add to the path specified by the json-pointer attribute"
                                        }
                                      }
                                    },
                                    "replace-value": {
                                      "type": "object",
                                      "description": "Replaces an element's old value with a new value specified in the value attribute",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the new value that will replace the element's old value"
                                        }
                                      }
                                    },
                                    "replace-from-var-name": {
                                      "type": "object",
                                      "description": "Replaces an element's old value with a new value that is stored on a variable",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the value that will replace the element’s old value"
                                        }
                                      }
                                    },
                                    "prepend-value": {
                                      "type": "object",
                                      "description": "Prepends a string to an element's old value",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the string value to be prepended to the element's old value"
                                        }
                                      }
                                    },
                                    "prepend-from-var-name": {
                                      "type": "object",
                                      "description": "Prepends a string stored in a variable to an element's old value",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the string value to be prepended to the element's old value"
                                        }
                                      }
                                    },
                                    "append-value": {
                                      "type": "object",
                                      "description": "Appends a string to an element's old value",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the string value to be appended to the elements's old value"
                                        }
                                      }
                                    },
                                    "append-from-var-name": {
                                      "type": "object",
                                      "description": "Appends a string stored in a variable to an element's old value",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the string value to be appended to the element's old value"
                                        }
                                      }
                                    },
                                    "search-replace-string": {
                                      "type": "object",
                                      "description": "Searches for a string using the path specified by the json-pointer attribute. If the string is found in the JSON body, it is being replaced with the string specified using the configured options",
                                      "properties": {
                                        "case-sensitive": {
                                          "type": "boolean",
                                          "description": "If true, the search operation will be perfomed in case sensitive mode.",
                                          "default": "true"
                                        },
                                        "full-match": {
                                          "type": "boolean",
                                          "description": "If true, the search operation requires full match to proceed with the replace.",
                                          "default": "false"
                                        },
                                        "search-backwards": {
                                          "type": "boolean",
                                          "description": "If true, the search operation will start from the end of the json body toward the top.",
                                          "default": "false"
                                        },
                                        "replace-all-occurrences": {
                                          "type": "boolean",
                                          "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                          "default": "false"
                                        },
                                        "search-value": {
                                          "type": "string",
                                          "description": "Specifies specific string as the search value"
                                        },
                                        "search-from-var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the variable name where the search string is stored."
                                        },
                                        "replace-value": {
                                          "type": "string",
                                          "description": "Specifies specific string as the replace value"
                                        },
                                        "replace-from-var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the variable name where the replace string is stored."
                                        }
                                      }
                                    },
                                    "search-replace-regex": {
                                      "type": "object",
                                      "description": "Searches for a pattern using the path specified by the json-pointer attribute. If the pattern matches in the JSON body, it is being replaced with the matched text specified using the configured options",
                                      "properties": {
                                        "search-regex": {
                                          "type": "string",
                                          "description": "Specifies the regular expression used to search for string patterns."
                                        },
                                        "replace-all-occurrences": {
                                          "type": "boolean",
                                          "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                          "default": "false"
                                        },
                                        "replace-value": {
                                          "type": "string",
                                          "description": "Specifies how the replacement will be performed based on the matched text as result of search-regex attribute. If the regular expression did not match, no replacement is applied."
                                        },
                                        "replace-from-var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the variable name where the replace value is stored."
                                        }
                                      }
                                    },
                                    "remove": {
                                      "type": "object",
                                      "description": "Removes the element, including its contents if any, that is specified by the json-pointer attribute",
                                      "properties": {}
                                    }
                                  },
                                  "required": [
                                    "json-pointer"
                                  ]
                                },
                                "action-create-json-body": {
                                  "type": "object",
                                  "description": "Creates a valid JSON body from scratch",
                                  "properties": {
                                    "json-body": {
                                      "type": "string",
                                      "description": "Specifies the entire JSON body that will be created"
                                    }
                                  },
                                  "required": [
                                    "json-body"
                                  ]
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          }
                        },
                        "required": [
                          "condition",
                          "name",
                          "screening-action"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "screening-rule"
                  ]
                }
              },
              "response-screening-case": {
                "type": "array",
                "uniqueItems": true,
                "description": "Entry point to a list of screening rules which are evaluated in sequence on response messages",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "pattern": "^[^.]+$",
                      "description": "Name identifying the response-screening-case"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "message-data-ref": {
                      "type": "array",
                      "description": "Reference to defined message-data which has extracted the data to be used in screening rule conditions",
                      "items": {
                        "type": "string"
                      }
                    },
                    "screening-rule": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "The screening rules are evaluated in sequence once the response-screening-case is referenced",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "pattern": "^[^.]+$",
                            "description": "Name identifying the screening-rule"
                          },
                          "condition": {
                            "type": "string",
                            "description": "A logical expression which is evaluated using the collected data from incoming responses as stored in message-data, and determines whether the screening-rule shall be executed. If no condition is defined, the screening-rule is always executed"
                          },
                          "screening-action": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "description": "The screening-actions are executed in sequence once the condition of the screening-rule evaluates to true",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name identifying the screening-action"
                                },
                                "action-add-header": {
                                  "type": "object",
                                  "description": "Adds an HTTP header to a message",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Specifies the header to be added to the response"
                                    },
                                    "if-exists": {
                                      "enum": [
                                        "replace",
                                        "add",
                                        "no-action"
                                      ],
                                      "description": "Defines the behavior when the header exists",
                                      "default": "no-action"
                                    },
                                    "value": {
                                      "type": "string",
                                      "description": "Specifies the value of the header to be added to the response"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "value"
                                  ]
                                },
                                "action-modify-header": {
                                  "type": "object",
                                  "description": "Either replaces the value of an existing HTTP header with a new one or prepends/appends a value to the existing value of a header",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Specifies the header to be modified"
                                    },
                                    "replace-value": {
                                      "type": "string",
                                      "description": "Specifies the value to replace the header's old value"
                                    },
                                    "replace-from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Specifies the name of the variable from which to fetch the value to replace the header's old value"
                                    },
                                    "prepend-value": {
                                      "type": "string",
                                      "description": "Specifies the value to be prepended to the header's old value"
                                    },
                                    "prepend-from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Specifies the name of the variable from which to fetch the value to be prepended to the header's old value"
                                    },
                                    "append-value": {
                                      "type": "string",
                                      "description": "Specifies the value to be appended to the header's old value"
                                    },
                                    "append-from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Specifies the name of the variable from which to fetch the value to be appended to the header's old value"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "action-remove-header": {
                                  "type": "object",
                                  "description": "Removes an HTTP header from a message",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Specifies the header to be removed from the response"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "action-exit-screening-case": {
                                  "type": "object",
                                  "description": "Exits from a screening-case and terminates message screening processing",
                                  "properties": {}
                                },
                                "action-modify-status-code": {
                                  "type": "object",
                                  "description": "Modify the response status-code",
                                  "properties": {
                                    "status": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 100,
                                      "maximum": 999,
                                      "description": "Status-code of the response message"
                                    },
                                    "cause": {
                                      "type": "string",
                                      "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                    },
                                    "detail": {
                                      "type": "string",
                                      "description": "A human-readable explanation of the problem"
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "A short, human-readable summary of the problem"
                                    },
                                    "format": {
                                      "enum": [
                                        "text",
                                        "json"
                                      ],
                                      "description": "Format of the response message. The default is json",
                                      "default": "json"
                                    }
                                  }
                                },
                                "action-go-to": {
                                  "type": "object",
                                  "description": "Jump to another response screening case",
                                  "properties": {
                                    "response-screening-case-ref": {
                                      "type": "string",
                                      "description": "The name of the response-screening-case where the execution continues"
                                    }
                                  }
                                },
                                "action-log": {
                                  "type": "object",
                                  "description": "Logs a user-defined message with the configured log-level",
                                  "properties": {
                                    "text": {
                                      "type": "string",
                                      "description": "The text to be used for troubleshooting"
                                    },
                                    "max-log-message-length": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 1,
                                      "maximum": 10000,
                                      "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                      "default": "250"
                                    },
                                    "log-level": {
                                      "enum": [
                                        "debug",
                                        "info",
                                        "trace",
                                        "warn",
                                        "error"
                                      ],
                                      "description": "Define the log level for troubleshooting",
                                      "default": "debug"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ]
                                },
                                "action-modify-json-body": {
                                  "type": "object",
                                  "description": "Performs modifications on JSON body elements by either adding new elements, replacing the value of existing elements, appending/prepending strings to existing elements or removing the elements from the JSON body",
                                  "properties": {
                                    "json-pointer": {
                                      "type": "string",
                                      "description": "Specifies the path inside the JSON body where an element will be added or modified or removed"
                                    },
                                    "add-value": {
                                      "type": "object",
                                      "description": "Adds a new element to the path specified by the json-pointer attribute. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body, it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the value of the element to be added"
                                        },
                                        "if-path-not-exists": {
                                          "enum": [
                                            "create",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                          "default": "create"
                                        },
                                        "if-element-exists": {
                                          "enum": [
                                            "replace",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the value of an existing element will be replaced or not",
                                          "default": "no-action"
                                        }
                                      }
                                    },
                                    "add-from-var-name": {
                                      "type": "object",
                                      "description": "Adds a new element to the path specified by the json-pointer attribute. The value of the new element is stored on a variable. If the element already exists in the JSON body, it provides the possibility to either replace the existing value or not. If the path where the element is to be added does not already exist in the JSON body it provides the possibility to either create the path and add the element or do nothing and not add the element to the JSON body",
                                      "properties": {
                                        "if-path-not-exists": {
                                          "enum": [
                                            "create",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the non-existing path, specified by the json-pointer attribute, will be created and the element will be added or nothing will be done and neither the path nor the element will be added to the JSON body",
                                          "default": "create"
                                        },
                                        "if-element-exists": {
                                          "enum": [
                                            "replace",
                                            "no-action"
                                          ],
                                          "description": "Specifies whether the value of an existing element will be replaced or not",
                                          "default": "no-action"
                                        },
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the value to add to the path specified by the json-pointer attribute"
                                        }
                                      }
                                    },
                                    "replace-value": {
                                      "type": "object",
                                      "description": "Replaces an element's old value with a new value specified in the value attribute",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the new value that will replace the element's old value"
                                        }
                                      }
                                    },
                                    "replace-from-var-name": {
                                      "type": "object",
                                      "description": "Replaces an element's old value with a new value that is stored on a variable",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the value that will replace the element’s old value"
                                        }
                                      }
                                    },
                                    "prepend-value": {
                                      "type": "object",
                                      "description": "Prepends a string to an element's old value",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the string value to be prepended to the elements's old value"
                                        }
                                      }
                                    },
                                    "prepend-from-var-name": {
                                      "type": "object",
                                      "description": "Prepends a string stored in a variable to an element's old value",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the string value to be prepended to the element's old value"
                                        }
                                      }
                                    },
                                    "append-value": {
                                      "type": "object",
                                      "description": "Appends a string to an element's old value",
                                      "properties": {
                                        "value": {
                                          "type": "string",
                                          "description": "Specifies the string value to be appended to the elements's old value"
                                        }
                                      }
                                    },
                                    "append-from-var-name": {
                                      "type": "object",
                                      "description": "Appends a string stored in a variable to an element's old value",
                                      "properties": {
                                        "variable": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the name of the variable from which to fetch the string value to be appended to the element's old value"
                                        }
                                      }
                                    },
                                    "search-replace-string": {
                                      "type": "object",
                                      "description": "Searches for a string using the path specified by the json-pointer attribute. If the string is found in the JSON body, it is being replaced with the string specified using the configured options",
                                      "properties": {
                                        "case-sensitive": {
                                          "type": "boolean",
                                          "description": "If true, the search operation will be perfomed in case sensitive mode.",
                                          "default": "true"
                                        },
                                        "full-match": {
                                          "type": "boolean",
                                          "description": "If true, the search operation requires full match to proceed with the replace.",
                                          "default": "false"
                                        },
                                        "search-backwards": {
                                          "type": "boolean",
                                          "description": "If true, the search operation will start from the end of the json body toward the top.",
                                          "default": "false"
                                        },
                                        "replace-all-occurrences": {
                                          "type": "boolean",
                                          "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                          "default": "false"
                                        },
                                        "search-value": {
                                          "type": "string",
                                          "description": "Specifies specific string as the search value"
                                        },
                                        "search-from-var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the variable name where the search string is stored."
                                        },
                                        "replace-value": {
                                          "type": "string",
                                          "description": "Specifies specific string as the replace value"
                                        },
                                        "replace-from-var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the variable name where the replace string is stored."
                                        }
                                      }
                                    },
                                    "search-replace-regex": {
                                      "type": "object",
                                      "description": "Searches for a pattern using the path specified by the json-pointer attribute. If the pattern matches in the JSON body, it is being replaced with the matched text specified using the configured options",
                                      "properties": {
                                        "search-regex": {
                                          "type": "string",
                                          "description": "Specifies the regular expression used to search for string patterns."
                                        },
                                        "replace-all-occurrences": {
                                          "type": "boolean",
                                          "description": "If true, the replace operation will be applied on all occurrences of the search item. Otherwise, only the first occurrence will be replaced",
                                          "default": "false"
                                        },
                                        "replace-value": {
                                          "type": "string",
                                          "description": "Specifies how the replacement will be performed based on the matched text as result of search-regex attribute. If the regular expression did not match, no replacement is applied."
                                        },
                                        "replace-from-var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Specifies the variable name where the replace value is stored."
                                        }
                                      }
                                    },
                                    "remove": {
                                      "type": "object",
                                      "description": "Removes the element, including its contents if any, that is specified by the json-pointer attribute",
                                      "properties": {}
                                    }
                                  },
                                  "required": [
                                    "json-pointer"
                                  ]
                                },
                                "action-create-json-body": {
                                  "type": "object",
                                  "description": "Creates a valid JSON body from scratch",
                                  "properties": {
                                    "json-body": {
                                      "type": "string",
                                      "description": "Specifies the entire JSON body that will be created"
                                    }
                                  },
                                  "required": [
                                    "json-body"
                                  ]
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          }
                        },
                        "required": [
                          "condition",
                          "name",
                          "screening-action"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "screening-rule"
                  ]
                }
              },
              "routing-case": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "description": "Entry point to a list of routing rules which are evaluated in sequence",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the routing-case"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "message-data-ref": {
                      "type": "array",
                      "description": "Reference to defined message-data which has extracted the data to be used in routing rule conditions",
                      "items": {
                        "type": "string"
                      }
                    },
                    "routing-rule": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Routing rules executed in sequence",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name identifying the routing-rule"
                          },
                          "user-label": {
                            "type": "string",
                            "description": "Label for free use"
                          },
                          "condition": {
                            "type": "string",
                            "description": "The evaluation of the condition determines, using the collected data from incoming requests, whether the actions in this routing rule shall be executed. If empty, the condition always evaluates to true"
                          },
                          "routing-action": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "Routing actions that are executed in sequence once the routing rule is used if the condition is true",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name identifying the routing-action"
                                },
                                "action-slf-lookup": {
                                  "type": "object",
                                  "description": "Perform SLF interrogation",
                                  "properties": {
                                    "slf-lookup-profile-ref": {
                                      "type": "string",
                                      "description": "Specifies the slf-lookup-profile used for the SLF interrogation"
                                    }
                                  }
                                },
                                "action-nf-discovery": {
                                  "type": "object",
                                  "description": "Perform delegated NF discovery by querying the NRF with the parameters from the received request.Specific discovery parameters or all the discovery parameters are extracted from the received request based on the configuration of either use-discovery-parameter or add-discovery-parameter.",
                                  "properties": {
                                    "nrf-group-ref": {
                                      "type": "string",
                                      "description": "The group of NRFs providing the Nnrf_NFDiscovery service"
                                    },
                                    "request-timeout": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 1,
                                      "maximum": 65535,
                                      "description": "The timeout of delegated discovery requests",
                                      "default": "10000"
                                    },
                                    "endpoint-ip-family": {
                                      "type": "array",
                                      "maxItems": 2,
                                      "description": "IP family of the discovered endpoints to be used. Applicable only when FQDN is not present.",
                                      "items": {
                                        "enum": [
                                          "ipv4",
                                          "ipv6"
                                        ]
                                      }
                                    },
                                    "use-discovery-parameter": {
                                      "type": "object",
                                      "description": "Discovery parameters from the received request that are used in the delegated discovery",
                                      "properties": {
                                        "use-selected": {
                                          "type": "object",
                                          "description": "Explicitly selected discovery parameters from the received request that are used in the delegated discovery",
                                          "properties": {
                                            "name": {
                                              "type": "array",
                                              "description": "The selected discovery parameter to use in the delegated discovery",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "use-all": {
                                          "type": "object",
                                          "description": "Use all discovery parameters present in the received request when performing delegated discovery.",
                                          "properties": {}
                                        }
                                      }
                                    },
                                    "add-discovery-parameter": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Discovery parameters and values to be used in addition or instead of the parameters from the received request",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The discovery parameter name"
                                          },
                                          "value": {
                                            "type": "string",
                                            "description": "The specific value of the discovery parameter. Strings as well as valid JSON data structures are allowed"
                                          },
                                          "from-var-name": {
                                            "type": "string",
                                            "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                            "description": "The name of the variable that holds the discovery parameter's value"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "nf-selection-on-priority": {
                                      "type": "object",
                                      "description": "From the discovered list of NF-profiles, choose one NF from those with the highest priority and store it as the preferred host in the variable given in ‘variable-name-selected-host’. The nf-set-if of the chosen host is stored in the variable given in ‘variable-name-nfset’.",
                                      "properties": {
                                        "variable-name-selected-host": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "The name of the variable used for storing the host name:port of the selected NF"
                                        },
                                        "variable-name-nfset": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "The name of the variable used for storing the nf-set-id of the selected NF"
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "nrf-group-ref"
                                  ]
                                },
                                "action-route-strict": {
                                  "type": "object",
                                  "description": "Route strictly to the targeted host",
                                  "properties": {
                                    "keep-authority-header": {
                                      "type": "object",
                                      "description": "If present, keep the authority header of the request without modifying",
                                      "properties": {}
                                    },
                                    "preserve-if-indirect-routing": {
                                      "enum": [
                                        "target-api-root-header",
                                        "absolute-uri-path"
                                      ],
                                      "description": "Selected attributes value to preserve in case of indirect routing"
                                    },
                                    "failover-profile-ref": {
                                      "type": "string",
                                      "description": "Name of the referenced failover-profile"
                                    },
                                    "target-nf-pool": {
                                      "type": "object",
                                      "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                      "properties": {
                                        "var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Variable that holds the pool name"
                                        },
                                        "nf-pool-ref": {
                                          "type": "string",
                                          "description": "Name of the referenced configured nf-pool"
                                        }
                                      }
                                    },
                                    "from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Route the request based on the defined variable"
                                    },
                                    "from-target-api-root-header": {
                                      "type": "object",
                                      "description": "If present, route the request based on the target-api-root-header's value",
                                      "properties": {}
                                    },
                                    "from-authority-header": {
                                      "type": "object",
                                      "description": "If present, route the request based on the authority-header's value",
                                      "properties": {}
                                    }
                                  }
                                },
                                "action-route-preferred": {
                                  "type": "object",
                                  "description": "Route to the targeted host which belongs to the specified nf-pool. In case of failure, re-select among the rest of the hosts in this nf-pool",
                                  "properties": {
                                    "keep-authority-header": {
                                      "type": "object",
                                      "description": "If present, keep the authority header of the request without modifying",
                                      "properties": {}
                                    },
                                    "preserve-if-indirect-routing": {
                                      "enum": [
                                        "target-api-root-header",
                                        "absolute-uri-path"
                                      ],
                                      "description": "Selected attribute's value to preserve in case of indirect routing"
                                    },
                                    "preserve-disc-param-if-indirect": {
                                      "type": "object",
                                      "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                      "properties": {
                                        "preserve-selected": {
                                          "type": "object",
                                          "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {
                                            "name": {
                                              "type": "array",
                                              "description": "The discovery parameter to preserve in the request",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "preserve-all": {
                                          "type": "object",
                                          "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {}
                                        }
                                      }
                                    },
                                    "failover-profile-ref": {
                                      "type": "string",
                                      "description": "Name of the referenced failover-profile"
                                    },
                                    "target-nf-pool": {
                                      "type": "object",
                                      "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                      "properties": {
                                        "var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Variable that holds the pool name"
                                        },
                                        "nf-pool-ref": {
                                          "type": "string",
                                          "description": "Name of the referenced configured nf-pool"
                                        }
                                      }
                                    },
                                    "last-resort-nf-pool-ref": {
                                      "type": "string",
                                      "description": "Last nf-pool of hosts to try in case of multiple failures"
                                    },
                                    "from-var-name": {
                                      "type": "string",
                                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                      "description": "Route the request based on the defined variable"
                                    },
                                    "from-target-api-root-header": {
                                      "type": "object",
                                      "description": "If present, route the request based on the target-api-root-header's value",
                                      "properties": {}
                                    },
                                    "from-authority-header": {
                                      "type": "object",
                                      "description": "If present, route the request based on the authority-header's value",
                                      "properties": {}
                                    }
                                  }
                                },
                                "action-route-round-robin": {
                                  "type": "object",
                                  "description": "Route indirectly in a round-robin fashion. Set the target-apiRoot header to the selected target, based on the result of the preceding nf-discovery action. The target-apiRoot header is replaced for every reselection to another target.",
                                  "properties": {
                                    "keep-authority-header": {
                                      "type": "object",
                                      "description": "If present, keep the authority header of the request without modifying",
                                      "properties": {}
                                    },
                                    "preserve-if-indirect-routing": {
                                      "enum": [
                                        "target-api-root-header",
                                        "absolute-uri-path"
                                      ],
                                      "description": "Selected attribute's value to preserve in case of indirect routing"
                                    },
                                    "preserve-disc-param-if-indirect": {
                                      "type": "object",
                                      "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                      "properties": {
                                        "preserve-selected": {
                                          "type": "object",
                                          "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {
                                            "name": {
                                              "type": "array",
                                              "description": "The discovery parameter to preserve in the request",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "preserve-all": {
                                          "type": "object",
                                          "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {}
                                        }
                                      }
                                    },
                                    "failover-profile-ref": {
                                      "type": "string",
                                      "description": "Name of the referenced failover-profile"
                                    },
                                    "target-nf-pool": {
                                      "type": "object",
                                      "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                      "properties": {
                                        "var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Variable that holds the pool name"
                                        },
                                        "nf-pool-ref": {
                                          "type": "string",
                                          "description": "Name of the referenced configured nf-pool"
                                        }
                                      }
                                    },
                                    "last-resort-nf-pool-ref": {
                                      "type": "string",
                                      "description": "Last nf-pool of hosts to try in case of multiple failures"
                                    }
                                  }
                                },
                                "action-route-remote-round-robin": {
                                  "type": "object",
                                  "description": "Select the host name to include in the target-api-root header and route the request to any of the hosts in the specified target-nf-pool. The target-api-root header is replaced on reselects in a round-robin fashion.",
                                  "properties": {
                                    "preserve-disc-param-if-indirect": {
                                      "type": "object",
                                      "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                      "properties": {
                                        "preserve-selected": {
                                          "type": "object",
                                          "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {
                                            "name": {
                                              "type": "array",
                                              "description": "The discovery parameter to preserve in the request",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "preserve-all": {
                                          "type": "object",
                                          "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {}
                                        }
                                      }
                                    },
                                    "failover-profile-ref": {
                                      "type": "string",
                                      "description": "Name of the referenced failover-profile"
                                    },
                                    "target-nf-pool": {
                                      "type": "object",
                                      "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                      "properties": {
                                        "var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Variable that holds the pool name"
                                        },
                                        "nf-pool-ref": {
                                          "type": "string",
                                          "description": "Name of the referenced configured nf-pool"
                                        }
                                      }
                                    },
                                    "last-resort-nf-pool-ref": {
                                      "type": "string",
                                      "description": "Last nf-pool of hosts to try in case of multiple failures"
                                    }
                                  }
                                },
                                "action-route-remote-preferred": {
                                  "type": "object",
                                  "description": "Route indirectly to the preferred host as specified in the target-api-root-header. In cases where a re-selection of the target is needed, select the host name to include in the target-api-root header based on the result of the preceding nf-discovery action. The target-api-root header is replaced in a round-robin fashion for every subsequent re-selection",
                                  "properties": {
                                    "preserve-if-indirect-routing": {
                                      "enum": [
                                        "target-api-root-header",
                                        "absolute-uri-path"
                                      ],
                                      "description": "Selected attribute's value to preserve in case of indirect routing"
                                    },
                                    "preserve-disc-param-if-indirect": {
                                      "type": "object",
                                      "description": "The discovery parameters of the received request to preserve in case of indirect routing. By default no parameters are preserved",
                                      "properties": {
                                        "preserve-selected": {
                                          "type": "object",
                                          "description": "List of specific discovery parameters to preserve in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {
                                            "name": {
                                              "type": "array",
                                              "description": "The discovery parameter to preserve in the request",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "preserve-all": {
                                          "type": "object",
                                          "description": "Preserve all discovery parameters in the request before forwarding it to the next-hop SCP or SEPP",
                                          "properties": {}
                                        }
                                      }
                                    },
                                    "failover-profile-ref": {
                                      "type": "string",
                                      "description": "Name of the referenced failover-profile"
                                    },
                                    "target-nf-pool": {
                                      "type": "object",
                                      "description": "Route via the referenced configured nf-pool or variable that holds the nf-pool name",
                                      "properties": {
                                        "var-name": {
                                          "type": "string",
                                          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$",
                                          "description": "Variable that holds the pool name"
                                        },
                                        "nf-pool-ref": {
                                          "type": "string",
                                          "description": "Name of the referenced configured nf-pool"
                                        }
                                      }
                                    },
                                    "last-resort-nf-pool-ref": {
                                      "type": "string",
                                      "description": "Last nf-pool of hosts to try in case of multiple failures"
                                    },
                                    "from-target-api-root-header": {
                                      "type": "object",
                                      "description": "If present, route the request based on the target-api-root-header's value",
                                      "properties": {}
                                    }
                                  }
                                },
                                "action-reject-message": {
                                  "type": "object",
                                  "description": "Rejects an http request and sends back a response with an operator defined status code and title with detailed explanation",
                                  "properties": {
                                    "status": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 100,
                                      "maximum": 999,
                                      "description": "Status-code of the reply"
                                    },
                                    "title": {
                                      "type": "string",
                                      "description": "A short, human-readable summary of the problem"
                                    },
                                    "cause": {
                                      "type": "string",
                                      "description": "The cause attribute in the json ProblemDetails element of HTTP error messages (according to TS 29.500)."
                                    },
                                    "detail": {
                                      "type": "string",
                                      "description": "A human-readable explanation of the problem. Only used when the format attribute has the value 'json'"
                                    },
                                    "format": {
                                      "enum": [
                                        "text",
                                        "json"
                                      ],
                                      "description": "Format of the error message. If the default value 'json' is used, the response body is formatted according to RFC 7807. If the format value used is 'text', a header 'content-type: text/plain' is added in the response body and only the value of the title attribute is stored",
                                      "default": "json"
                                    }
                                  },
                                  "required": [
                                    "status"
                                  ]
                                },
                                "action-log": {
                                  "type": "object",
                                  "description": "Logs a user-defined message with the configured log-level",
                                  "properties": {
                                    "text": {
                                      "type": "string",
                                      "description": "The text to be used for troubleshooting"
                                    },
                                    "max-log-message-length": {
                                      "type": "integer",
                                      "format": "uint32",
                                      "minimum": 1,
                                      "maximum": 10000,
                                      "description": "Max length of action-log message; any message longer than the limit will be truncated and only the beginning up until the limit will be kept.",
                                      "default": "250"
                                    },
                                    "log-level": {
                                      "enum": [
                                        "debug",
                                        "info",
                                        "trace",
                                        "warn",
                                        "error"
                                      ],
                                      "description": "Define the log level for troubleshooting",
                                      "default": "debug"
                                    }
                                  },
                                  "required": [
                                    "text"
                                  ]
                                },
                                "action-drop-message": {
                                  "type": "object",
                                  "description": "Drops an http request message and the HTTP/2 stream is reset gracefully",
                                  "properties": {}
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          }
                        },
                        "required": [
                          "condition",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "routing-rule"
                  ]
                }
              },
              "static-nf-instance-data": {
                "type": "array",
                "uniqueItems": true,
                "description": "Statically defined NF instances to be referenced in a nf-pool",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the static NF instance data set"
                    },
                    "static-nf-instance": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Static NF instances in this data set",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nf-instance-id": {
                            "type": "string",
                            "description": "The NF instance identity"
                          },
                          "static-nf-service": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "The service for which an NF has registered",
                            "items": {
                              "type": "object",
                              "properties": {
                                "nf-service-id": {
                                  "type": "string",
                                  "description": "The NF service identity"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name identifying the service supported"
                                },
                                "capacity": {
                                  "type": "integer",
                                  "format": "uint16",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "Specifies the capacity of this service"
                                },
                                "priority": {
                                  "type": "integer",
                                  "format": "uint16",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "The priority of the service. Lower values indicate a higher priority"
                                },
                                "set-id": {
                                  "type": "array",
                                  "description": "The set identity of the service",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "address": {
                                  "type": "object",
                                  "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                  "properties": {
                                    "scheme": {
                                      "enum": [
                                        "http",
                                        "https"
                                      ],
                                      "description": "The URI scheme (i.e. 'http' or 'https')"
                                    },
                                    "fqdn": {
                                      "type": "string",
                                      "format": "hostname",
                                      "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                    },
                                    "inter-plmn-fqdn": {
                                      "type": "string",
                                      "format": "hostname",
                                      "description": "FQDN of the service used for inter-PLMN routing. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                    },
                                    "multiple-ip-endpoint": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the ip-endpoint"
                                          },
                                          "transport": {
                                            "enum": [
                                              "tcp"
                                            ],
                                            "description": "Transport protocol"
                                          },
                                          "port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Port number"
                                          },
                                          "ipv4-address": {
                                            "type": "array",
                                            "description": "IPv4 address",
                                            "items": {
                                              "type": "string",
                                              "pattern": "^[0-9\\.]*$"
                                            }
                                          },
                                          "ipv6-address": {
                                            "type": "array",
                                            "description": "IPv6 address",
                                            "items": {
                                              "type": "string",
                                              "pattern": "^[0-9a-fA-F:\\.]*$"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Human readable name of the NF"
                          },
                          "nf-type": {
                            "type": "string",
                            "description": "The type of the NF (according to TS 29.510)"
                          },
                          "locality": {
                            "type": "string",
                            "description": "The geographic locality of the NF"
                          },
                          "nf-set-id": {
                            "type": "array",
                            "description": "The set identity of the NF",
                            "items": {
                              "type": "string"
                            }
                          },
                          "scp-domain": {
                            "type": "array",
                            "description": "The SCP domains this NF is associated with",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "static-nf-instance"
                  ]
                }
              },
              "static-scp-instance-data": {
                "type": "array",
                "uniqueItems": true,
                "description": "Statically defined SCP instances to be referenced in a nf-pool",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the static SCP instance data set"
                    },
                    "static-scp-instance": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Static SCP instances in this data set",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nf-instance-id": {
                            "type": "string",
                            "description": "The NF instance identity"
                          },
                          "served-nf-set-id": {
                            "type": "array",
                            "description": "The set identity of the NFs served by the SCP",
                            "items": {
                              "type": "string"
                            }
                          },
                          "static-nf-service": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "The service for which the SCP has registered",
                            "items": {
                              "type": "object",
                              "properties": {
                                "nf-service-id": {
                                  "type": "string",
                                  "description": "The NF service identity"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name identifying the service supported"
                                },
                                "capacity": {
                                  "type": "integer",
                                  "format": "uint16",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "Specifies the capacity of this service"
                                },
                                "priority": {
                                  "type": "integer",
                                  "format": "uint16",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "The priority of the service. Lower values indicate a higher priority"
                                },
                                "set-id": {
                                  "type": "array",
                                  "description": "The set identity of the service",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "address": {
                                  "type": "object",
                                  "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                  "properties": {
                                    "scheme": {
                                      "enum": [
                                        "http",
                                        "https"
                                      ],
                                      "description": "The URI scheme (i.e. 'http' or 'https')"
                                    },
                                    "fqdn": {
                                      "type": "string",
                                      "format": "hostname",
                                      "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                    },
                                    "inter-plmn-fqdn": {
                                      "type": "string",
                                      "format": "hostname",
                                      "description": "FQDN of the service used for inter-PLMN routing. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                    },
                                    "multiple-ip-endpoint": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the ip-endpoint"
                                          },
                                          "transport": {
                                            "enum": [
                                              "tcp"
                                            ],
                                            "description": "Transport protocol"
                                          },
                                          "port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Port number"
                                          },
                                          "ipv4-address": {
                                            "type": "array",
                                            "description": "IPv4 address",
                                            "items": {
                                              "type": "string",
                                              "pattern": "^[0-9\\.]*$"
                                            }
                                          },
                                          "ipv6-address": {
                                            "type": "array",
                                            "description": "IPv6 address",
                                            "items": {
                                              "type": "string",
                                              "pattern": "^[0-9a-fA-F:\\.]*$"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "static-scp-domain-info": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "The info about the static scp domain",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name identifying the static scp domain"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "Domain of the static scp",
                                  "default": "default"
                                },
                                "capacity": {
                                  "type": "integer",
                                  "format": "uint16",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "Specifies the capacity of this service"
                                },
                                "priority": {
                                  "type": "integer",
                                  "format": "uint16",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "The priority of the service. Lower values indicate a higher priority"
                                },
                                "address": {
                                  "type": "object",
                                  "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                  "properties": {
                                    "scheme": {
                                      "enum": [
                                        "http",
                                        "https"
                                      ],
                                      "description": "The URI scheme (i.e. 'http' or 'https')"
                                    },
                                    "fqdn": {
                                      "type": "string",
                                      "format": "hostname",
                                      "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                    },
                                    "multiple-ip-endpoint": {
                                      "type": "array",
                                      "uniqueItems": true,
                                      "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name identifying the ip-endpoint"
                                          },
                                          "transport": {
                                            "enum": [
                                              "tcp"
                                            ],
                                            "description": "Transport protocol"
                                          },
                                          "port": {
                                            "type": "integer",
                                            "format": "uint16",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Port number"
                                          },
                                          "ipv4-address": {
                                            "type": "array",
                                            "description": "IPv4 address",
                                            "items": {
                                              "type": "string",
                                              "pattern": "^[0-9\\.]*$"
                                            }
                                          },
                                          "ipv6-address": {
                                            "type": "array",
                                            "description": "IPv6 address",
                                            "items": {
                                              "type": "string",
                                              "pattern": "^[0-9a-fA-F:\\.]*$"
                                            }
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Human readable name of the NF"
                          },
                          "nf-type": {
                            "type": "string",
                            "description": "The type of the NF (according to TS 29.510)"
                          },
                          "locality": {
                            "type": "string",
                            "description": "The geographic locality of the NF"
                          },
                          "nf-set-id": {
                            "type": "array",
                            "description": "The set identity of the NF",
                            "items": {
                              "type": "string"
                            }
                          },
                          "scp-domain": {
                            "type": "array",
                            "description": "The SCP domains this NF is associated with",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "static-scp-instance"
                  ]
                }
              },
              "static-sepp-instance-data": {
                "type": "array",
                "uniqueItems": true,
                "description": "Statically defined SEPP instances to be referenced in an nf-pool",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the static SEPP instance data set"
                    },
                    "static-sepp-instance": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "Static SEPP instances in this data set",
                      "items": {
                        "type": "object",
                        "properties": {
                          "nf-instance-id": {
                            "type": "string",
                            "description": "The NF instance identity"
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0,
                            "maximum": 65535,
                            "description": "Specifies the capacity of this static sepp instance"
                          },
                          "priority": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0,
                            "maximum": 65535,
                            "description": "The priority of the static sepp instance. Lower values indicate a higher priority"
                          },
                          "address": {
                            "type": "object",
                            "description": "Address of the static sepp instance, at least one of FQDN or IPv4 or IPv6 address must be given",
                            "properties": {
                              "scheme": {
                                "enum": [
                                  "http",
                                  "https"
                                ],
                                "description": "The URI scheme (i.e. 'http' or 'https')",
                                "default": "http"
                              },
                              "fqdn": {
                                "type": "string",
                                "format": "hostname",
                                "description": "FQDN of the static sepp instance. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                              },
                              "multiple-ip-endpoint": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "Multiple IP endpoint(s) of the static sepp instance, all with the same port and transport",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name identifying the ip-endpoint"
                                    },
                                    "transport": {
                                      "enum": [
                                        "tcp"
                                      ],
                                      "description": "Transport protocol"
                                    },
                                    "port": {
                                      "type": "integer",
                                      "format": "uint16",
                                      "minimum": 0,
                                      "maximum": 65535,
                                      "description": "Port number"
                                    },
                                    "ipv4-address": {
                                      "type": "array",
                                      "description": "IPv4 address",
                                      "items": {
                                        "type": "string",
                                        "pattern": "^[0-9\\.]*$"
                                      }
                                    },
                                    "ipv6-address": {
                                      "type": "array",
                                      "description": "IPv6 address",
                                      "items": {
                                        "type": "string",
                                        "pattern": "^[0-9a-fA-F:\\.]*$"
                                      }
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "Human readable name of the NF"
                          },
                          "nf-type": {
                            "type": "string",
                            "description": "The type of the NF (according to TS 29.510)"
                          },
                          "locality": {
                            "type": "string",
                            "description": "The geographic locality of the NF"
                          },
                          "nf-set-id": {
                            "type": "array",
                            "description": "The set identity of the NF",
                            "items": {
                              "type": "string"
                            }
                          },
                          "scp-domain": {
                            "type": "array",
                            "description": "The SCP domains this NF is associated with",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "static-sepp-instance"
                  ]
                }
              },
              "nf-pool": {
                "type": "array",
                "uniqueItems": true,
                "description": "Grouping of defined or dynamically discovered NF instances",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "pattern": "^[^.]+$",
                      "description": "Name identifying the nf-pool"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "dns-profile-ref": {
                      "type": "string",
                      "description": "Reference to a defined dns-profile that will be used for DNS resolution on producers of this nf-pool. This setting overrides the global setting."
                    },
                    "preferred-ip-family": {
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ],
                      "description": "Preferred IP version for routing."
                    },
                    "enable-stats-per-nf-instance": {
                      "type": "boolean",
                      "description": "If set to true, then counters per NF instance are activated",
                      "default": "false"
                    },
                    "threshold-for-nf-unavailable-alarm": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 1,
                      "maximum": 65535,
                      "description": "Threshold for the number of 5xx errors and timeouts received within 15 seconds time interval, that lead to raising the alarm: SCP, NF Instance Unavailable"
                    },
                    "add-non-matching-as-lowest-priority": {
                      "type": "boolean",
                      "description": "If true, last priority-group is created with non-matching instances or endpoints.",
                      "default": "true"
                    },
                    "nf-match-condition": {
                      "type": "string",
                      "description": "Only the NF instances that satisfy the nf-match-condition are included in the NF pool. Applicable only to dynamically discovered NF instances"
                    },
                    "scp-match-condition": {
                      "type": "string",
                      "description": "Only the SCP instances that satisfy the scp-match-condition are included in the NF pool. Applicable only to dynamically discovered SCP instances"
                    },
                    "nf-pool-discovery": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "Attributes to define discovery and grouping of NF instances",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name identifying the nf-pool-discovery"
                          },
                          "nrf-query": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "NRF queries used to discover NF instances that then get stored in attribute discovered-nf-instance of this nf-pool",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name identifying the nrf-query"
                                },
                                "requester-nf-type": {
                                  "type": "string",
                                  "description": "The NF type of the requester NF (according to TS 29.510)",
                                  "default": "SCP"
                                },
                                "nf-type": {
                                  "type": "string",
                                  "description": "The NF type of the targeted NF (according to TS 29.510)"
                                },
                                "nf-set-id": {
                                  "type": "string",
                                  "description": "The set identity of the targeted NF"
                                },
                                "nf-service-set-id": {
                                  "type": "string",
                                  "description": "The set identity of the targeted NF service"
                                },
                                "preferred-locality": {
                                  "type": "string",
                                  "description": "The preferred locality of the targeted NF"
                                },
                                "requester-plmn": {
                                  "type": "array",
                                  "description": "The PLMN identity of the requester NF. Format: MCC (3 digits) followed by MNC (2 or 3 digits). Example for MCC=123 and MNC=45: 12345",
                                  "items": {
                                    "type": "string",
                                    "pattern": "^[0-9]{5,6}$"
                                  }
                                },
                                "requester-snssai": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "description": "Slice info of the requester NF",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "sst": {
                                        "type": "integer",
                                        "format": "uint8",
                                        "minimum": 0,
                                        "maximum": 255,
                                        "description": "Specifies the slice service type of the S-NSSAI"
                                      },
                                      "sd": {
                                        "type": "string",
                                        "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                        "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                        "default": "-"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "sst"
                                    ]
                                  }
                                },
                                "scp-domain": {
                                  "type": "array",
                                  "description": "The SCP domain the target NF or SCP belongs to",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "service-name": {
                                  "type": "array",
                                  "description": "The name of the service offered by the targeted NF",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "query-parameter": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "description": "Custom query parameter used for parameters not covered by non-custom attributes in nrf-query. Query parameter names already covered may not be used. Apart from this, possible name and value are according to TS 29.510",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "nf-type"
                              ]
                            }
                          },
                          "static-nf-instance-data-ref": {
                            "type": "array",
                            "description": "Reference to a list of statically configured NF instances",
                            "items": {
                              "type": "string"
                            }
                          },
                          "update-interval": {
                            "enum": [
                              "infinite",
                              "24h",
                              "12h",
                              "6h",
                              "4h",
                              "3h",
                              "2h",
                              "1h",
                              "30min",
                              "20min",
                              "15min",
                              "10min",
                              "5min",
                              "1min",
                              "30s",
                              "20s",
                              "15s",
                              "10s",
                              "5s"
                            ],
                            "description": "Time span between two nf-pool updates. Use special value infinite to stop regular nf-pool updates",
                            "default": "1h"
                          },
                          "last-update": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "Date and time of the last update of the discovered NF instances in this nf-pool"
                          },
                          "discovered-nf-instance": {
                            "type": "array",
                            "readOnly": true,
                            "uniqueItems": true,
                            "description": "Discovered NF instances in this nf-pool",
                            "items": {
                              "type": "object",
                              "properties": {
                                "nf-instance-id": {
                                  "type": "string",
                                  "description": "The NF instance identity"
                                },
                                "nf-status": {
                                  "enum": [
                                    "registered",
                                    "suspended",
                                    "undiscoverable"
                                  ],
                                  "readOnly": true,
                                  "description": "The status of the NF"
                                },
                                "discovered-nf-service": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "description": "The service for which an NF has registered",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "nf-service-id": {
                                        "type": "string",
                                        "description": "The NF service identity"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name identifying the service supported"
                                      },
                                      "status": {
                                        "enum": [
                                          "registered",
                                          "suspended",
                                          "undiscoverable"
                                        ],
                                        "readOnly": true,
                                        "description": "The status of the service"
                                      },
                                      "capacity": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Specifies the capacity of this service"
                                      },
                                      "priority": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                      },
                                      "set-id": {
                                        "type": "array",
                                        "description": "The set identity of the service",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "address": {
                                        "type": "object",
                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                        "properties": {
                                          "scheme": {
                                            "enum": [
                                              "http",
                                              "https"
                                            ],
                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                          },
                                          "fqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                          },
                                          "inter-plmn-fqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "FQDN of the service used for inter-PLMN routing. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                          },
                                          "multiple-ip-endpoint": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the ip-endpoint"
                                                },
                                                "transport": {
                                                  "enum": [
                                                    "tcp"
                                                  ],
                                                  "description": "Transport protocol"
                                                },
                                                "port": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "Port number"
                                                },
                                                "ipv4-address": {
                                                  "type": "array",
                                                  "description": "IPv4 address",
                                                  "items": {
                                                    "type": "string",
                                                    "pattern": "^[0-9\\.]*$"
                                                  }
                                                },
                                                "ipv6-address": {
                                                  "type": "array",
                                                  "description": "IPv6 address",
                                                  "items": {
                                                    "type": "string",
                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Human readable name of the NF"
                                },
                                "nf-type": {
                                  "type": "string",
                                  "description": "The type of the NF (according to TS 29.510)"
                                },
                                "locality": {
                                  "type": "string",
                                  "description": "The geographic locality of the NF"
                                },
                                "nf-set-id": {
                                  "type": "array",
                                  "description": "The set identity of the NF",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "scp-domain": {
                                  "type": "array",
                                  "description": "The SCP domains this NF is associated with",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          },
                          "discovered-scp-instance": {
                            "type": "array",
                            "readOnly": true,
                            "uniqueItems": true,
                            "description": "Discovered SCP instances in this nf-pool",
                            "items": {
                              "type": "object",
                              "properties": {
                                "nf-instance-id": {
                                  "type": "string",
                                  "description": "The NF instance identity"
                                },
                                "nf-status": {
                                  "enum": [
                                    "registered",
                                    "suspended",
                                    "undiscoverable"
                                  ],
                                  "description": "The status of the NF"
                                },
                                "served-nf-set-id": {
                                  "type": "array",
                                  "description": "The set identity of the NFs served by the SCP",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "discovered-scp-domain-info": {
                                  "type": "array",
                                  "uniqueItems": true,
                                  "description": "The info about the discovered scp domain",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name identifying the discovered scp domain"
                                      },
                                      "domain": {
                                        "type": "string",
                                        "description": "Domain of the discovered scp"
                                      },
                                      "capacity": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "Specifies the capacity of this service"
                                      },
                                      "priority": {
                                        "type": "integer",
                                        "format": "uint16",
                                        "minimum": 0,
                                        "maximum": 65535,
                                        "description": "The priority of the service. Lower values indicate a higher priority"
                                      },
                                      "address": {
                                        "type": "object",
                                        "description": "Address of the service, at least one of FQDN or IPv4 or IPv6 address must be given",
                                        "properties": {
                                          "scheme": {
                                            "enum": [
                                              "http",
                                              "https"
                                            ],
                                            "description": "The URI scheme (i.e. 'http' or 'https')"
                                          },
                                          "fqdn": {
                                            "type": "string",
                                            "format": "hostname",
                                            "description": "FQDN of the service. According to RFC 1035 only letters, digits and hyphen (-) are allowed."
                                          },
                                          "multiple-ip-endpoint": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "description": "Multiple IP endpoint(s) of the service, all with the same port and transport",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "Name identifying the ip-endpoint"
                                                },
                                                "transport": {
                                                  "enum": [
                                                    "tcp"
                                                  ],
                                                  "description": "Transport protocol"
                                                },
                                                "port": {
                                                  "type": "integer",
                                                  "format": "uint16",
                                                  "minimum": 0,
                                                  "maximum": 65535,
                                                  "description": "Port number"
                                                },
                                                "ipv4-address": {
                                                  "type": "array",
                                                  "description": "IPv4 address",
                                                  "items": {
                                                    "type": "string",
                                                    "pattern": "^[0-9\\.]*$"
                                                  }
                                                },
                                                "ipv6-address": {
                                                  "type": "array",
                                                  "description": "IPv6 address",
                                                  "items": {
                                                    "type": "string",
                                                    "pattern": "^[0-9a-fA-F:\\.]*$"
                                                  }
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Human readable name of the NF"
                                },
                                "nf-type": {
                                  "type": "string",
                                  "description": "The type of the NF (according to TS 29.510)"
                                },
                                "locality": {
                                  "type": "string",
                                  "description": "The geographic locality of the NF"
                                },
                                "nf-set-id": {
                                  "type": "array",
                                  "description": "The set identity of the NF",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "scp-domain": {
                                  "type": "array",
                                  "description": "The SCP domains this NF is associated with",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    },
                    "priority-group": {
                      "type": "array",
                      "uniqueItems": true,
                      "maxItems": 10,
                      "description": "Group of NF instances that satisfy specific selection criteria and belong to the same priority",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name identifying the priority group"
                          },
                          "priority": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 0,
                            "maximum": 65535,
                            "description": "The priority assigned to the group of NF instances, with a lower value indicating higher priority"
                          },
                          "static-scp-instance-data-ref": {
                            "type": "array",
                            "description": "Reference to an SCP instance data set",
                            "items": {
                              "type": "string"
                            }
                          },
                          "static-sepp-instance-data-ref": {
                            "type": "array",
                            "description": "Reference to a SEPP instance data set",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nf-match-condition": {
                            "type": "string",
                            "description": "NF instances of this nf-pool which satisfy the nf-match-condition are prioritized according to priority-group priority"
                          },
                          "scp-match-condition": {
                            "type": "string",
                            "description": "SCP instances of this nf-pool which satisfy the scp-match-condition are prioritized according to priority-group priority"
                          },
                          "sepp-match-condition": {
                            "type": "string",
                            "description": "SEPP instances of this nf-pool which satisfy the sepp-match-condition are prioritized according to priority-group priority"
                          }
                        },
                        "required": [
                          "name",
                          "priority"
                        ]
                      }
                    },
                    "static-scp-instance-data-ref": {
                      "type": "array",
                      "description": "Reference to an SCP instance data set",
                      "items": {
                        "type": "string"
                      }
                    },
                    "static-sepp-instance-data-ref": {
                      "type": "array",
                      "description": "Reference to a SEPP instance data set",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pool-retry-budget": {
                      "type": "object",
                      "description": "Specifies a limit per pool on concurrent retries in relation to the number of active requests",
                      "properties": {
                        "concurrent-retries-percentage": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 100,
                          "description": "Specifies the limit on concurrent retries as a percentage of the sum of active requests and active pending requests.For example, if there are 100 active requests and the budget_percent is set to 25, there may be 25 active retries",
                          "default": "20"
                        },
                        "min-concurrent-retries": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "Specifies the minimum retry concurrency allowed for the retry budget. The limit on the number of active retries may never go below this number.",
                          "default": "10"
                        }
                      }
                    },
                    "temporary-blocking": {
                      "type": "object",
                      "description": "Temporary blocking allows the dynamic blocking of NFs which are not reachable, based on configurable and preset attributes",
                      "properties": {
                        "blocking-time": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The duration of time for which a NF is blocked",
                          "default": "5"
                        },
                        "consecutive-failures": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The number of consecutive 5xx errors from a NF node before it is temporarily blocked. If consecutive-local-failures parameter is not configured, then this value also represents the locally originated failures",
                          "default": "5"
                        },
                        "consecutive-local-failures": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The number of consecutive locally originated failures per worker pod before an NF is temporary blocked. If this parameter is configured, then the locally originated failures are counted separately from the consecutive 5xx errors for temporary blocking. If this parameter is set to zero then locally originated failures do not lead to temporary blocking in this pool"
                        },
                        "consecutive-gateway-failures": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The number of consecutive gateway failures (502, 503, 504 status codes) before a consecutive gateway failure ejection occurs. If this parameter is configured, then the consecutive gateway failures are counted separately from the consecutive 5xx errors for temporary blocking. If this parameter is set to zero then consecutive gateway failures do not lead to temporary blocking in this pool"
                        }
                      }
                    },
                    "egress-connection-profile-ref": {
                      "type": "string",
                      "description": "Reference to a defined egress-connection-profile."
                    },
                    "out-request-screening-case-ref": {
                      "type": "string",
                      "description": "Reference to the request screening case that is applied when the request is targeting an NF instance in this nf-pool"
                    },
                    "in-response-screening-case-ref": {
                      "type": "string",
                      "description": "Reference to the response screening case that is applied when the response is received from an NF instance in this nf-pool"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "failover-profile": {
                "type": "array",
                "uniqueItems": true,
                "description": "Determines the failover behaviour in case of failure such as lack of response or error response from peer",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the failover-profile"
                    },
                    "user-label": {
                      "type": "string",
                      "description": "Label for free use"
                    },
                    "request-time-budget": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 65535,
                      "description": "The maximum time in milliseconds a single request is allowed to take including retries, before SEPP considers it as timed out. The time starts when the request enters the SCP Worker and ends when the response leaves the SCP Worker. It includes the time for an SLF-lookup if one is required.",
                      "default": "2000"
                    },
                    "retry-condition": {
                      "type": "object",
                      "description": "Criteria for attempting a retry",
                      "properties": {
                        "http-status": {
                          "type": "array",
                          "description": "HTTP Status codes to trigger a retry",
                          "items": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 100,
                            "maximum": 999
                          }
                        },
                        "reset": {
                          "type": "boolean",
                          "description": "If defined, retry when the peer does not respond at all",
                          "default": "true"
                        },
                        "connect-failure": {
                          "type": "boolean",
                          "description": "If defined, retry in case of connection timeout or connection refused",
                          "default": "true"
                        },
                        "refused-stream": {
                          "type": "boolean",
                          "description": "If defined, retry in case of response HTTP2 REFUSED_STREAM received from peer",
                          "default": "true"
                        }
                      }
                    },
                    "target-timeout": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 65535,
                      "description": "Specifies the maximum time in milliseconds a single request towards a specific target is allowed to take before considered to be timed out",
                      "default": "2000"
                    },
                    "preferred-host-retries-max": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Specifies the number of times to perform a retry to the preferred host",
                      "default": "3"
                    },
                    "preferred-host-retry-multiple-addresses": {
                      "type": "boolean",
                      "description": "Retry multiple addresses of preferred host. If set to true, retries will be spread across all addresses of the selected host.",
                      "default": "true"
                    },
                    "target-nf-pool-reselects-max": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Specifies the number of reselects to perform among the hosts of the target-nf-pool",
                      "default": "3"
                    },
                    "last-resort-nf-pool-reselects-max": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Specifies the number of reselects to perform among the hosts of the last-resort nf-pool",
                      "default": "3"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "nf-profile": {
                "type": "array",
                "uniqueItems": true,
                "description": "Profile consisting of general parameters of the SCP instance and the services exposed by it, sent to the NRF at registration",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the NF profile"
                    },
                    "service-address-ref": {
                      "type": "string",
                      "description": "Service address on which the SCP listens for incoming requests"
                    },
                    "associated-nf-pool-ref": {
                      "type": "array",
                      "maxItems": 1,
                      "description": "Reference to the associated nf-pool to be considered at NRF registration for discovered NF instances capacity aggregation. If it is not present, the configured capacity will be used instead.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "chf-info": {
                      "type": "object",
                      "description": "Specific data for the CHF NF",
                      "properties": {
                        "supi-range": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "Specifies the list of ranges of SUPIs that can be served by the CHF instance. If not specified, the CHF can serve any SUPI",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "uint32",
                                "minimum": 0,
                                "maximum": 2147483647,
                                "description": "ID uniquely identifying the SUPI range"
                              },
                              "supi-start": {
                                "type": "string",
                                "pattern": "^[0-9]+$",
                                "description": "First value identifying the start of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                              },
                              "supi-end": {
                                "type": "string",
                                "pattern": "^[0-9]+$",
                                "description": "Last value identifying the end of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                              },
                              "pattern": {
                                "type": "string",
                                "description": "Regular expression pattern representing the set of SUPIs belonging to this range. A SUPI value is considered part of the range if, and only if, the SUPI string fully matches the regular expression."
                              }
                            }
                          }
                        },
                        "gpsi-range": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "Specifies the list of ranges of GPSIs that can be served by the CHF instance. If not specified, the CHF can serve any GPSI",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "uint32",
                                "minimum": 0,
                                "maximum": 2147483647
                              },
                              "identity-start": {
                                "type": "string",
                                "pattern": "^[0-9]+$",
                                "description": "First value identifying the start of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                              },
                              "identity-end": {
                                "type": "string",
                                "pattern": "^[0-9]+$",
                                "description": "Last value identifying the end of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                              },
                              "pattern": {
                                "type": "string",
                                "description": "Regular expression pattern representing the set of identities belonging to this range. An identity value is considered part of the range if and only if the identity string fully matches the regular expression. To be used when identity is External Identifier or External Group Identifier or MSISDN."
                              }
                            }
                          }
                        },
                        "plmn-range": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "Specifies the list of ranges of PLMNs that can be served by the CHF instance. If not specified, the CHF can serve any PLMN",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "uint32",
                                "minimum": 0,
                                "maximum": 2147483647
                              },
                              "plmn-start": {
                                "type": "string",
                                "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                "description": "First value identifying the start of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12340'."
                              },
                              "plmn-end": {
                                "type": "string",
                                "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                "description": "Last value identifying the end of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12349'."
                              },
                              "pattern": {
                                "type": "string",
                                "description": "Regular expression pattern representing the set of PLMNs belonging to this range. A PLMN value is considered part of the range if and only if the PLMN string, formatted as <MCC><MNC>, fully matches the regular expression. For example '^1234[0-9]$'"
                              }
                            }
                          }
                        }
                      }
                    },
                    "scp-info": {
                      "type": "object",
                      "description": "Specific data for the SCP NF",
                      "properties": {
                        "scp-prefix": {
                          "type": "string",
                          "description": "Optional deployment-specific string used to construct the apiRoot of this SCP"
                        },
                        "ipv4-address": {
                          "type": "array",
                          "description": "IPv4 address reachable through the SCP",
                          "items": {
                            "type": "string",
                            "pattern": "^[0-9\\.]*$"
                          }
                        },
                        "ipv6-prefix": {
                          "type": "array",
                          "description": "IPv6 prefix reachable through the SCP",
                          "items": {
                            "type": "string",
                            "allOf": [
                              {
                                "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                              },
                              {
                                "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                              }
                            ]
                          }
                        },
                        "ipv4-addr-range": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "IPv4 address range reachable through the SCP",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ipv4-addr-start": {
                                "type": "string",
                                "format": "ipv4"
                              },
                              "ipv4-addr-end": {
                                "type": "string",
                                "format": "ipv4"
                              }
                            }
                          }
                        },
                        "ipv6-prefix-range": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "IPv6 prefix range reachable through the SCP",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ipv6-prefix-start": {
                                "type": "string",
                                "allOf": [
                                  {
                                    "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                  },
                                  {
                                    "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                  }
                                ]
                              },
                              "ipv6-prefix-end": {
                                "type": "string",
                                "allOf": [
                                  {
                                    "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                  },
                                  {
                                    "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "served-nf-set-id": {
                          "type": "array",
                          "description": "The set identity of the NF served by the SCP",
                          "items": {
                            "type": "string"
                          }
                        },
                        "address-domain": {
                          "type": "array",
                          "description": "Address domain name(s) reachable through the SCP",
                          "items": {
                            "type": "string"
                          }
                        },
                        "remote-plmn": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "Remote PLMN(s) reachable through the SCP",
                          "items": {
                            "type": "object",
                            "properties": {
                              "mcc": {
                                "type": "string",
                                "pattern": "^[0-9]{3}$",
                                "description": "Specifies the mobile country code of the PLMN"
                              },
                              "mnc": {
                                "type": "string",
                                "pattern": "^[0-9]{2,3}$",
                                "description": "Specifies the mobile network code of the PLMN"
                              }
                            }
                          }
                        },
                        "scp-capabilities": {
                          "type": "object",
                          "description": "If present, scp capabilities are published in nrf during registration. If present but no scp capabilities are defined, then an empty array is sent to NRF.",
                          "properties": {
                            "indirect-com-with-deleg-disc": {
                              "type": "boolean",
                              "description": "If true, scp has the capability for delegated discovery support"
                            }
                          }
                        },
                        "ip-reachability": {
                          "type": "string",
                          "description": "Type of IP addresses reachable through the SCP in the SCP domain(s) it belongs to"
                        },
                        "scp-domain-info": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "SCP domain specific information of the SCP",
                          "items": {
                            "type": "object",
                            "properties": {
                              "scp-domain-ref": {
                                "type": "string",
                                "description": "Reference to a defined SCP domain"
                              },
                              "scp-prefix": {
                                "type": "string",
                                "description": "Optional deployment-specific string used to construct the apiRoot of this SCP"
                              },
                              "service-address-ref": {
                                "type": "array",
                                "maxItems": 1,
                                "description": "Reference to a defined service-address",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "nf-service": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "The configuration of NF services, proxied through the SCP NF instance, which can be discovered by other NFs",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service-version": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "The supported versions of this NF service. Detailed information on the default versions used can be found in CPI document 'Configuring the SCP'.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "api-version-in-uri": {
                                  "type": "string",
                                  "description": "Version of the service instance to be used in the URI for accessing the API"
                                },
                                "api-full-version": {
                                  "type": "string",
                                  "description": "Full version number of the API"
                                }
                              },
                              "required": [
                                "api-full-version",
                                "api-version-in-uri"
                              ]
                            }
                          },
                          "service-address-ref": {
                            "type": "array",
                            "maxItems": 1,
                            "description": "Service address on which the SCP listens for incoming requests",
                            "items": {
                              "type": "string"
                            }
                          },
                          "service-instance-id": {
                            "type": "string",
                            "description": "Name uniquely identifying this service instance."
                          },
                          "service-name": {
                            "enum": [
                              "default",
                              "nnrf-nfm",
                              "nnrf-disc",
                              "nnrf-oauth2",
                              "nudm-sdm",
                              "nudm-uecm",
                              "nudm-ueau",
                              "nudm-ee",
                              "nudm-pp",
                              "nudm-niddau",
                              "nudm-mt",
                              "namf-comm",
                              "namf-evts",
                              "namf-mt",
                              "namf-loc",
                              "nsmf-pdusession",
                              "nsmf-event-exposure",
                              "nsmf-nidd",
                              "nausf-auth",
                              "nausf-sorprotection",
                              "nausf-upuprotection",
                              "nnef-pfdmanagement",
                              "nnef-smcontext",
                              "nnef-eventexposure",
                              "npcf-am-policy-control",
                              "npcf-smpolicycontrol",
                              "npcf-policyauthorization",
                              "npcf-bdtpolicycontrol",
                              "npcf-eventexposure",
                              "npcf-ue-policy-control",
                              "nsmsf-sms",
                              "nnssf-nsselection",
                              "nnssf-nssaiavailability",
                              "nudr-dr",
                              "nudr-group-id-map",
                              "nlmf-loc",
                              "n5g-eir-eic",
                              "nbsf-management",
                              "nchf-spendinglimitcontrol",
                              "nchf-convergedcharging",
                              "nchf-offlineonlycharging",
                              "nnwdaf-eventssubscription",
                              "nnwdaf-analyticsinfo",
                              "ngmlc-loc",
                              "nucmf-provisioning",
                              "nucmf-uecapabilitymanagement",
                              "nhss-sdm",
                              "nhss-uecm",
                              "nhss-ueau",
                              "nhss-ee",
                              "nhss-ims-sdm",
                              "nhss-ims-uecm",
                              "nhss-ims-ueau",
                              "nsepp-telescopic",
                              "nsoraf-sor",
                              "nspaf-secured-packet",
                              "nudsf-dr",
                              "nnssaaf-nssaa"
                            ],
                            "description": "Name identifying the type of NF service."
                          },
                          "scheme": {
                            "enum": [
                              "http",
                              "https"
                            ],
                            "description": "Specifies the URI scheme"
                          },
                          "admin-state": {
                            "enum": [
                              "active",
                              "undiscoverable"
                            ],
                            "description": "Administrative state on NFService level"
                          },
                          "api-prefix": {
                            "type": "string",
                            "description": "Optional path used to construct the API URI for this service"
                          },
                          "allowed-plmn": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mcc": {
                                  "type": "string",
                                  "pattern": "^[0-9]{3}$",
                                  "description": "Specifies the mobile country code of the PLMN"
                                },
                                "mnc": {
                                  "type": "string",
                                  "pattern": "^[0-9]{2,3}$",
                                  "description": "Specifies the mobile network code of the PLMN"
                                }
                              }
                            }
                          },
                          "allowed-nf-type": {
                            "type": "array",
                            "description": "NF types (according to TS 29.510) which are allowed to access the NF service. If not specified, NFs of any type are allowed to access the NF service.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed-nf-domain": {
                            "type": "array",
                            "description": "NF domain names which are allowed to access the NF service. If not specified, If not specified, NFs in any domain are allowed to access the NF",
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed-nssai": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                            "items": {
                              "type": "object",
                              "properties": {
                                "sst": {
                                  "type": "integer",
                                  "format": "uint8",
                                  "minimum": 0,
                                  "maximum": 255,
                                  "description": "Specifies the slice service type of the S-NSSAI"
                                },
                                "sd": {
                                  "type": "string",
                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                }
                              },
                              "required": [
                                "sst"
                              ]
                            }
                          },
                          "allowed-nssai-1": {
                            "type": "array",
                            "uniqueItems": true,
                            "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "sst": {
                                  "type": "integer",
                                  "format": "uint8",
                                  "minimum": 0,
                                  "maximum": 255,
                                  "description": "Specifies the slice service type of the S-NSSAI"
                                },
                                "sd": {
                                  "type": "string",
                                  "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                                  "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                                  "default": "-"
                                }
                              },
                              "required": [
                                "name",
                                "sst"
                              ]
                            }
                          },
                          "service-priority": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "Service priority of this NF service relative to other NF services of the same type, to be used for NF service selection. Lower values indicate a higher priority"
                          },
                          "capacity": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "Static capacity information of this NF service expressed as a weight relative to other services of the same type, to be used for NF selection"
                          },
                          "recovery-time": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "Timestamp when the NF was (re)started - This attribute is not used."
                          }
                        },
                        "required": [
                          "scheme",
                          "service-instance-id",
                          "service-name"
                        ]
                      }
                    },
                    "nf-instance-name": {
                      "type": "string",
                      "description": "Human readable name of the NF instance"
                    },
                    "nf-type": {
                      "type": "string",
                      "description": "The type of the NF instance (according to TS 29.510)"
                    },
                    "admin-state": {
                      "enum": [
                        "active",
                        "undiscoverable"
                      ],
                      "description": "Administrative state on NF level"
                    },
                    "nf-specific-info": {
                      "type": "object",
                      "description": "Deprecated, use nf-profile->chf-info and nf-profile->bsf-info instead, specific data for the NF instance type",
                      "properties": {
                        "chf-info": {
                          "type": "object",
                          "description": "Specific data for the CHF NF",
                          "properties": {
                            "supi-range": {
                              "type": "array",
                              "uniqueItems": true,
                              "description": "Specifies the list of ranges of SUPIs that can be served by the CHF instance. If not specified, the CHF can serve any SUPI",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "uint32",
                                    "minimum": 0,
                                    "maximum": 4294967295,
                                    "description": "ID uniquely identifying the SUPI range"
                                  },
                                  "supi-start": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "First value identifying the start of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                  },
                                  "supi-end": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "Last value identifying the end of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                  },
                                  "pattern": {
                                    "type": "string",
                                    "description": "Regular expression pattern representing the set of SUPIs belonging to this range. A SUPI value is considered part of the range if, and only if, the SUPI string fully matches the regular expression."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "gpsi-range": {
                              "type": "array",
                              "uniqueItems": true,
                              "description": "Specifies the list of ranges of GPSIs that can be served by the CHF instance. If not specified, the CHF can serve any GPSI",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "uint32",
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  },
                                  "identity-start": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "First value identifying the start of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                  },
                                  "identity-end": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "Last value identifying the end of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                  },
                                  "pattern": {
                                    "type": "string",
                                    "description": "Regular expression pattern representing the set of identities belonging to this range. An identity value is considered part of the range if and only if the identity string fully matches the regular expression. To be used when identity is External Identifier or External Group Identifier or MSISDN."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "plmn-range": {
                              "type": "array",
                              "uniqueItems": true,
                              "description": "Specifies the list of ranges of PLMNs that can be served by the CHF instance. If not specified, the CHF can serve any PLMN",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "format": "uint32",
                                    "minimum": 0,
                                    "maximum": 4294967295
                                  },
                                  "plmn-start": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                    "description": "First value identifying the start of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12340'."
                                  },
                                  "plmn-end": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                    "description": "Last value identifying the end of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12349'."
                                  },
                                  "pattern": {
                                    "type": "string",
                                    "description": "Regular expression pattern representing the set of PLMNs belonging to this range. A PLMN value is considered part of the range if and only if the PLMN string, formatted as <MCC><MNC>, fully matches the regular expression. For example '^1234[0-9]$'"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            }
                          }
                        },
                        "bsf-info": {
                          "type": "object",
                          "description": "Specific data for the BSF NF",
                          "properties": {
                            "dnn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ip-domain": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipv4-addr-range": {
                              "type": "object",
                              "properties": {
                                "ipv4-addr-start": {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                "ipv4-addr-end": {
                                  "type": "string",
                                  "format": "ipv4"
                                }
                              }
                            },
                            "ipv6-prefix-range": {
                              "type": "object",
                              "properties": {
                                "ipv6-prefix-start": {
                                  "type": "string",
                                  "allOf": [
                                    {
                                      "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                    },
                                    {
                                      "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                    }
                                  ]
                                },
                                "ipv6-prefix-end": {
                                  "type": "string",
                                  "allOf": [
                                    {
                                      "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                    },
                                    {
                                      "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "requested-heartbeat-timer": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 1,
                      "maximum": 65535,
                      "description": "Requested time, in seconds, expected between two heart-beat messages from the NF instance to the NRF"
                    },
                    "plmn": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "PLMN(s) of the NF instance. If not provided, the PLMN ID(s) of the PLMN of the NRF are assumed for this NF",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mcc": {
                            "type": "string",
                            "pattern": "^[0-9]{3}$",
                            "description": "Specifies the mobile country code of the PLMN"
                          },
                          "mnc": {
                            "type": "string",
                            "pattern": "^[0-9]{2,3}$",
                            "description": "Specifies the mobile network code of the PLMN"
                          }
                        }
                      }
                    },
                    "snssai": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "Deprecated, use snssai-1 instead. S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sst": {
                            "type": "integer",
                            "format": "uint8",
                            "minimum": 0,
                            "maximum": 255,
                            "description": "Specifies the slice service type of the S-NSSAI"
                          },
                          "sd": {
                            "type": "string",
                            "pattern": "^[A-Fa-f0-9]{6}$",
                            "description": "Specifies the optional slice differentiator of the S-NSSAI"
                          }
                        },
                        "required": [
                          "sst"
                        ]
                      }
                    },
                    "snssai-1": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "sst": {
                            "type": "integer",
                            "format": "uint8",
                            "minimum": 0,
                            "maximum": 255,
                            "description": "Specifies the slice service type of the S-NSSAI"
                          },
                          "sd": {
                            "type": "string",
                            "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                            "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                            "default": "-"
                          }
                        },
                        "required": [
                          "name",
                          "sst"
                        ]
                      }
                    },
                    "allowed-plmn": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mcc": {
                            "type": "string",
                            "pattern": "^[0-9]{3}$",
                            "description": "Specifies the mobile country code of the PLMN"
                          },
                          "mnc": {
                            "type": "string",
                            "pattern": "^[0-9]{2,3}$",
                            "description": "Specifies the mobile network code of the PLMN"
                          }
                        }
                      }
                    },
                    "allowed-nf-type": {
                      "type": "array",
                      "description": "NF types (according to TS 29.510) which are allowed to access the NF instance. If not specified, NFs of any type are allowed to access the NF",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowed-nf-domain": {
                      "type": "array",
                      "description": "NF domain names which are allowed to access the NF instance. If not specified, NFs in any domain are allowed to access the NF",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowed-nssai": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "Deprecated, use allowed-nssai-1 instead. NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sst": {
                            "type": "integer",
                            "format": "uint8",
                            "minimum": 0,
                            "maximum": 255,
                            "description": "Specifies the slice service type of the S-NSSAI"
                          },
                          "sd": {
                            "type": "string",
                            "pattern": "^[A-Fa-f0-9]{6}$",
                            "description": "Specifies the optional slice differentiator of the S-NSSAI"
                          }
                        },
                        "required": [
                          "sst"
                        ]
                      }
                    },
                    "allowed-nssai-1": {
                      "type": "array",
                      "uniqueItems": true,
                      "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "sst": {
                            "type": "integer",
                            "format": "uint8",
                            "minimum": 0,
                            "maximum": 255,
                            "description": "Specifies the slice service type of the S-NSSAI"
                          },
                          "sd": {
                            "type": "string",
                            "pattern": "^[-]|[A-Fa-f0-9]{6}$",
                            "description": "Specifies the slice differentiator of the S-NSSAI. Special character '-' indicates an unspecified slice differentiator",
                            "default": "-"
                          }
                        },
                        "required": [
                          "name",
                          "sst"
                        ]
                      }
                    },
                    "nf-set-id": {
                      "type": "array",
                      "description": "NF Set Identifiers for this NF used for NF registration",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nsi": {
                      "type": "array",
                      "description": "NSI identities of the Network Function. If not provided, the NF can serve any NSI",
                      "items": {
                        "type": "string"
                      }
                    },
                    "service-priority": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Service priority of this NF instance, in the range of 0-65535, relative to other NF instances of the same type, to be used for NF selection. Lower values indicate a higher priority"
                    },
                    "capacity": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Static capacity information of this NF instance, in the range of 0-65535, expressed as a weight relative to other NF instances of the same type"
                    },
                    "locality": {
                      "type": "string",
                      "description": "Operator defined information about the location of the NF instance. This information can be used by requesting NFs which prefer services of those NFs in the same geographical location or data center"
                    },
                    "recovery-time": {
                      "type": "string",
                      "readOnly": true,
                      "format": "date-time",
                      "description": "Timestamp when the NF was (re)started - This attribute is not used."
                    },
                    "scp-domain": {
                      "type": "array",
                      "description": "The SCP domain(s) the SCP belongs to or the SCP domain the NF (other than SCP) belongs to",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "name",
                    "nf-type",
                    "service-address-ref"
                  ]
                }
              },
              "nrf-group": {
                "type": "array",
                "uniqueItems": true,
                "description": "The NRF group specifies all relevant information of NRFs that are available to this SCP instance. Regarding the Nnrf_NFManagement interface, it determines the NRF registration behavior and triggers the NRF registration for the NF instance specified in the nf-profile",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name identifying the NRF registration group"
                    },
                    "nf-instance-id": {
                      "type": "string",
                      "readOnly": true,
                      "description": "ID uniquely identifying the NF Profile of this SCP instance, given per NRF Group"
                    },
                    "nf-profile-ref": {
                      "type": "string",
                      "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on NRF level will override the corresponding attributes of the NF profile on NRF group level"
                    },
                    "dns-profile-ref": {
                      "type": "string",
                      "description": "Reference to a defined dns-profile that will be used for DNS resolution of the FQDN of the NRFs in the NRF group"
                    },
                    "nrf": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "description": "The configuration for a single NRF within this NRF group",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name identifying the NRF"
                          },
                          "nf-profile-ref": {
                            "type": "string",
                            "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on the individual NRF level will override the corresponding attributes of the NF profile on the NRF group level"
                          },
                          "priority": {
                            "type": "integer",
                            "format": "uint8",
                            "minimum": 0,
                            "maximum": 99,
                            "description": "Priority of this NRF for NF registration and other NRF service requests, relative to other NRFs in the same NRF group. In regard to the Nnrf_NFManagement service, the NRF with the highest priority is the primary NRF to which the NF instance will register. The remaining NRFs are used in case of failover, in order of priority. Lower values indicate a higher priority."
                          },
                          "fqdn": {
                            "type": "string",
                            "format": "hostname",
                            "description": "FQDN of the NRF"
                          },
                          "scheme": {
                            "enum": [
                              "http",
                              "https"
                            ],
                            "description": "Specifies the URI scheme to be used when contacting this NRF"
                          },
                          "ip-endpoint": {
                            "type": "array",
                            "uniqueItems": true,
                            "minItems": 1,
                            "description": "IP endpoint of the NRF",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name uniquely identifying the ip-endpoint."
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "uint16",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "Port number"
                                },
                                "ipv4-address": {
                                  "type": "string",
                                  "pattern": "^[0-9\\.]*$",
                                  "description": "IPv4 address"
                                },
                                "ipv6-address": {
                                  "type": "string",
                                  "pattern": "^[0-9a-fA-F:\\.]*$",
                                  "description": "IPv6 address"
                                }
                              },
                              "required": [
                                "name",
                                "port"
                              ]
                            }
                          },
                          "retry-timeout": {
                            "type": "integer",
                            "format": "uint16",
                            "minimum": 1000,
                            "maximum": 65535,
                            "description": "The time duration in milliseconds after which a request is considered unsuccessful and a retry to the same NRF is sent.",
                            "default": "1500"
                          },
                          "max-retries": {
                            "type": "integer",
                            "format": "uint8",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "The number of retries sent to the same NRF before failover to another NRF.",
                            "default": "0"
                          },
                          "nrf-instance-id": {
                            "type": "string",
                            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                            "description": "NRF instance id uniquely identifying the NRF"
                          }
                        },
                        "required": [
                          "ip-endpoint",
                          "name",
                          "priority",
                          "scheme"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "nrf"
                  ]
                }
              },
              "nrf-service": {
                "type": "object",
                "description": "Defines which NRF services are used by this NF instance, referencing groups of NRFs that provide the respective service",
                "properties": {
                  "nf-management": {
                    "type": "object",
                    "description": "Triggers the registration of this NF instance towards NRF and the usage of the Nnrf_NfManagement service",
                    "properties": {
                      "nrf-group-ref": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 32,
                        "description": "The groups of NRFs providing the Nnrf_NFManagement service",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "nrf-group-ref"
                    ]
                  },
                  "nf-discovery": {
                    "type": "object",
                    "description": "Enables the usage of the Nnrf_NfDiscovery service",
                    "properties": {
                      "nrf-group-ref": {
                        "type": "string",
                        "description": "The group of NRFs providing the Nnrf_NFDiscovery service"
                      }
                    },
                    "required": [
                      "nrf-group-ref"
                    ]
                  }
                }
              }
            },
            "required": [
              "ingress-connection-profile",
              "ingress-connection-profile-ref",
              "name",
              "own-network",
              "routing-case",
              "service-address"
            ]
          }
        }
      }
    }
  },
  "eric-adp-genoptions": [
    {
      "module-prefixing": false
    },
    {
      "encoding-format": "eric-rfc7951-json"
    },
    {
      "generate-submodule-jsonschema": false
    },
    {
      "additional-properties": true
    }
  ],
  "eric-adp-encoding-format": "eric-rfc7951-json",
  "eric-adp-yang-module": "ericsson-scp"
}