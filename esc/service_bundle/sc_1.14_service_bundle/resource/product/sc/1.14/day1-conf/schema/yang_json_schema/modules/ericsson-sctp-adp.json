{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by jsonschema-generator (1.27.0-124 2023-06-15 16:50:09 CEST) from Yang module ericsson-sctp-adp (2.1.0) on Mar 5, 2024, 3:56:51 PM. Features: [ericsson-brm:failsafe-backups, ericsson-brm:housekeeping, ericsson-brm:label-store, ericsson-brm:rollback-at-restore, ericsson-brm:scheduler, ericsson-brm:sftp-client-authentication, ericsson-fm:alert, ericsson-keystore-ext:cmp, ericsson-keystore-ext:manual-renewal, ericsson-keystore-ext:pkcs10, ericsson-keystore-ext:pkcs12, ericsson-keystore-ext:pkcs8, ericsson-keystore-ext:scep, ericsson-notifications:netconf-state-change, ericsson-pm:measurement-jobs, ericsson-pm:realtime-jobs, ericsson-pm:threshold-jobs, ericsson-snmp:dtls, ericsson-snmp:network-prefix-validation, ericsson-snmp:no-auth-no-priv-feature, ericsson-system-ext:authentication-failure-alarm, ericsson-system-ext:ldap, ericsson-system-ext:ldap-authentication, ericsson-system-ext:ldap-clear, ericsson-system-ext:ldap-custom-filter, ericsson-system-ext:ldap-posix-filter, ericsson-system-ext:ldap-sasl-external, ericsson-system-ext:local-target-classes, ericsson-system-ext:ntp-security, ericsson-system-ext:oauth2-client-authentication, iana-crypt-hash:crypt-hash-md5, iana-crypt-hash:crypt-hash-sha-256, iana-crypt-hash:crypt-hash-sha-512, ietf-crypto-types:one-asymmetric-key-format, ietf-crypto-types:one-symmetric-key-format, ietf-crypto-types:encrypted-one-symmetric-key-format, ietf-crypto-types:encrypted-one-asymmetric-key-format, ietf-interfaces:arbitrary-names, ietf-interfaces:if-mib, ietf-interfaces:pre-provisioning, ietf-ip:ipv4-non-contiguous-netmasks, ietf-ip:ipv6-privacy-autoconf, ietf-keystore:key-generation, ietf-keystore:keystore-supported, ietf-keystore:local-definitions-supported, ietf-keystore:keystore-supported, ietf-netconf:candidate, ietf-netconf:confirmed-commit, ietf-netconf:rollback-on-error, ietf-netconf:startup, ietf-netconf:url, ietf-netconf:validate, ietf-netconf:writable-running, ietf-netconf:xpath, ietf-ssh-client:ssh-client-transport-params-config, ietf-ssh-client:ssh-client-keepalives, ietf-ssh-common:ssh-ctr, ietf-ssh-common:ssh-dh-group-exchange, ietf-ssh-common:ssh-ecc, ietf-ssh-common:ssh-sha2, ietf-ssh-common:ssh-x509-certs, ietf-system:authentication, ietf-system:dns-udp-tcp-port, ietf-system:local-users, ietf-system:ntp, ietf-system:ntp-udp-port, ietf-system:radius, ietf-system:radius-authentication, ietf-system:timezone-name, ietf-system:authentication, ietf-system:local-users, ietf-system:ntp, ietf-tls-client:tls-client-hello-params-config, ietf-tls-client:tls-client-keepalives, ietf-tls-client:x509-certificate-auth, ietf-tls-client:raw-public-key-auth, ietf-tls-client:psk-auth, ietf-tls-common:tls-1_0, ietf-tls-common:tls-1_1, ietf-tls-common:tls-1_2, ietf-tls-common:tls-1_3, ietf-tls-common:tls-3des, ietf-tls-common:tls-dhe, ietf-tls-common:tls-ecc, ietf-tls-common:tls-gcm, ietf-tls-common:tls-sha2, ietf-tls-server:tls-server-hello-params-config, ietf-tls-server:tls-server-keepalives, ietf-tls-server:client-auth-config-supported, ietf-tls-server:external-client-auth-supported, ietf-tls-server:x509-certificate-auth, ietf-tls-server:raw-public-key-auth, ietf-tls-server:psk-auth, ietf-truststore:local-definitions-supported, ietf-truststore:raw-public-keys, ietf-truststore:ssh-host-keys, ietf-truststore:truststore-supported, ietf-truststore:x509-certificates, ietf-truststore:truststore-supported, ietf-truststore:ssh-host-keys, ietf-truststore:x509-certificates]. Deviations/extensions: [ericsson-brm-ext-adp, ericsson-data-collector-ext-adp, ericsson-fm-ext-adp, ericsson-keystore-ext, ericsson-netconf-acm-ext, ericsson-pm-dev-adp, ericsson-system-ext-aum, ericsson-system-ext, ericsson-truststore-ext, ericsson-yang-library-ext, ietf-ip, ietf-netconf-with-defaults, ietf-network-instance, tailf-acm]",
  "title": "ericsson-sctp-adp",
  "type": "object",
  "properties": {
    "ericsson-sctp-adp:sctp": {
      "type": "object",
      "description": "The sctp is an abstraction of SCTP configuration.",
      "properties": {
        "user-label": {
          "type": "string",
          "description": "Label for free use."
        },
        "sctp-profile": {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 255,
          "description": "Part of the configuration applied to SCTP entities. The sctp-profile can be shared by one or more sctp-remote-endpoint. sctp-profile id 0 is created automatically and can not be removed, this profile is used as default if another one is not specified by an SCTP user",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0,
                "maximum": 254,
                "description": "The identifier of the sctp-profile."
              },
              "min-rto": {
                "type": "integer",
                "format": "uint16",
                "minimum": 10,
                "maximum": 5000,
                "description": "The minimum allowed value for RTO. RFC 4960 defines this parameter as RTO.Min.",
                "default": "400"
              },
              "max-rto": {
                "type": "integer",
                "format": "uint32",
                "minimum": 11,
                "maximum": 120000,
                "description": "The maximum allowed value for RTO. RFC 4960 defines this parameter as RTO.Max.",
                "default": "3200"
              },
              "init-rto": {
                "type": "integer",
                "format": "uint32",
                "minimum": 10,
                "maximum": 120000,
                "description": "The initial value for RTO. RFC 4960 defines this parameter as RTO.Initial.",
                "default": "500"
              },
              "rto-alpha-index": {
                "enum": [
                  "alpha-1-2nd",
                  "alpha-1-4th",
                  "alpha-1-8th",
                  "alpha-1-16th"
                ],
                "description": "RTO alpha index (mapped to RTO.Alpha). This parameter is used to compute the value of the SRTT (Smoothed Round-Trip Time) for a particular destination address. It is used to weight up the RTT (Round-Trip Time) measures and its value must be between zero and one. A value close to one gives more importance to the last RTT measure. See init-rto",
                "default": "alpha-1-8th"
              },
              "rto-beta-index": {
                "enum": [
                  "beta-1-2nd",
                  "beta-1-4th",
                  "beta-1-8th",
                  "beta-1-16th"
                ],
                "description": "RTO beta index (mapped to RTO.Beta). This parameter is used to compute the value of the RTTVar (Round-Trip Time Variation) of a destination address. Similarly to rto-alpha-index, it is used to weight up some of the terms within the equation used to compute the RTTVar: RTTVar = (1 - RTO.Beta)*RTTVar + RTO.Beta*|SRTT - lastRTT| A value close to 1 gives more importance to the last observed variation. See init-rto",
                "default": "beta-1-4th"
              },
              "cookie-life": {
                "type": "integer",
                "format": "uint32",
                "minimum": 1000,
                "maximum": 180000,
                "description": "Valid cookie life. RFC 4960 defines this parameter as Valid.Cookie.Life. The lifespan of the State Cookie sent in the INIT_ACK chunk. It is used to limit the valid amount of time between the sending of the INIT_ACK chunk and the reception of a COOKIE_ECHO chunk when establishing an association. If a COOKIE_ECHO chunk arrives after cookie-life delay since the INIT_ACK was sent, it is discarded and, therefore, no association is established.",
                "default": "60000"
              },
              "increment-cookie-life": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0,
                "maximum": 180000,
                "description": "Allowed increment of parameter cookie-life. The sender of an INIT chunk may request the remote endpoint to increase a cookie life-span (for instance, if a previous attempt to connect failed due to a stale-cookie error). If the value sent in the \"Cookie Preservative\" field of the INIT chunk is less than or equal to this parameter, the receiver of the INIT will increase the valid cookie life in the number of milliseconds specified. If the value present in the \"Cookie Preservative\" is greater than this parameter, the cookie life shall be incremented in the number of milliseconds specified by the parameter. Some considerations about this parameter: for security reasons the server may want to ignore any increase on the cookie life-span (increasing the value of the cookie life-span means more time for an attacker to break our key), so the value of this parameter would be set to zero.",
                "default": "0"
              },
              "assoc-max-rtx": {
                "type": "integer",
                "format": "uint8",
                "minimum": 1,
                "maximum": 20,
                "description": "Association maximum number of consecutive unsuccessful retransmissions packets. RFC 4960 defines this parameter as Association.Max.Retrans. If the number of retransmissions becomes greater than this value, the remote peer is considered as unreachable and the association is closed down.",
                "default": "4"
              },
              "max-init-rtx": {
                "type": "integer",
                "format": "uint8",
                "minimum": 1,
                "maximum": 16,
                "description": "Maximum number of retransmissions during the establishing phase of an association. RFC 4960 defines this parameter as Max.Init.Retransmits.",
                "default": "8"
              },
              "max-shutdown-rtx": {
                "type": "integer",
                "format": "uint8",
                "minimum": 1,
                "maximum": 20,
                "description": "Maximum number of retransmissions during the shutdown phase of an association.",
                "default": "5"
              },
              "heartbeat-enabled": {
                "type": "boolean",
                "description": "States whether sending of HEARTBEAT is activated. true: Activates HEARTBEATs for SCTP endpoint. false: Disables HEARTBEATs for SCTP endpoint.",
                "default": "true"
              },
              "heartbeat-interval": {
                "type": "integer",
                "format": "uint32",
                "minimum": 10,
                "maximum": 1800000,
                "description": "SCTP HEARTBEAT interval. RFC 4960 defines this parameter as HB.interval. A duration of time interval between cyclic HEARTBEATs",
                "default": "5000"
              },
              "heartbeat-timer-reduction-rate": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0,
                "maximum": 100,
                "description": "Adjusts HEARTBEAT interval decreasing. This parameter sets the number of percents on which current HEARTBEAT interval should be decreased (comparing to current value) with each new HEARTBEAT attempt if no HEARTBEAT acknowledgment is received.",
                "default": "50"
              },
              "heartbeat-smooth-factor": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0,
                "maximum": 100,
                "description": "Allows to smooth HEARTBEATs in time. It is recommended to setup non-zero heartbeat-smooth-factor to avoid burst of HEARTBEATs.",
                "default": "50"
              },
              "max-in-streams": {
                "type": "integer",
                "format": "uint16",
                "minimum": 1,
                "maximum": 65535,
                "description": "Maximum number of inbound streams for an association. A Stream is a unidirectional logical channel established between two SCTP endpoints, within which all user messages are delivered in sequence except for those submitted to the unordered delivery service. At SCTP association establishment the SCTP endpoints negotiate the number of Streams used in each direction within the SCTP association.",
                "default": "17"
              },
              "max-out-streams": {
                "type": "integer",
                "format": "uint16",
                "minimum": 1,
                "maximum": 65535,
                "description": "Maximum number of outbound streams for an association. A Stream is a unidirectional logical channel established between two SCTP endpoints, within which all user messages are delivered in sequence except for those submitted to the unordered delivery service. At SCTP association establishment the SCTP endpoints negotiate the number of Streams used in each direction within the SCTP association.",
                "default": "17"
              },
              "transmit-buffer-size": {
                "type": "integer",
                "format": "uint16",
                "minimum": 2,
                "maximum": 10000,
                "description": "Outgoing buffer size of an association. Also known as \"M\". The maximum amount of data that SCTP can store before discarding user messages. A new user-data is accepted if its size is not greater than (transmit-buffer-size - size of currently buffered data), otherwise it is discarded.",
                "default": "10000"
              },
              "transmit-buffer-threshold": {
                "type": "integer",
                "format": "uint16",
                "minimum": 1,
                "maximum": 10000,
                "description": "Congestion threshold of transmit-buffer-size. Upon exceeding this threshold the user of SCTP will be asked to stop sending data. This condition will persist until the occupancy of the transmit buffer drops below congestion-ceased-percent * transmit-buffer-threshold.",
                "default": "7500"
              },
              "congestion-ceased-percent": {
                "type": "integer",
                "format": "uint8",
                "minimum": 1,
                "maximum": 100,
                "description": "Congestion ceased level of transmit-buffer-threshold in percent. See also description of transmit-buffer-threshold and transmit-buffer-size.",
                "default": "85"
              },
              "initial-arwnd": {
                "type": "integer",
                "format": "uint32",
                "minimum": 1500,
                "maximum": 1048576,
                "description": "Value of the initial advertised receiver window credit (a-rwnd sent in the INIT message). The Advertised Receiver Window Credit is the field in INIT, INIT ACK and SACK chunks that indicates the current available space in the receiver buffer for a specific association. The a-rwnd is at all times equal to or less than the total allocated size of the receiver buffer for specific association. During lifetime of association, receiver buffer space advertised by a-rwnd in INIT or INIT ACK chunks can only be decreased due to received DATA (and not due to some administrative, configuration or management actions).",
                "default": "60000"
              },
              "max-burst": {
                "type": "integer",
                "format": "uint16",
                "minimum": 1,
                "maximum": 16384,
                "description": "Maximum number of burst packets (Max.Burst).",
                "default": "4"
              },
              "sack-timer": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0,
                "maximum": 500,
                "description": "Time delay for sending the Selective Acknowledgement (SACK). Time is measured from reception of the DATA chunk to sending of the SACK chunk. If sack-timer is zero then SACK will be sent immediately.",
                "default": "40"
              },
              "bundling-enabled": {
                "type": "boolean",
                "description": "States whether bundling is allowed for an endpoint. Bundling is the act of placing more than one chunk within an SCTP packet. The bundled chunks can be chunks carrying SCTP user's data or chunks caring SCTP control information such as, for example, data reception selective acknowledgement (SACK). Whether bundling of the DATA chunks occurs depends on the number of DATA chunks available for transmission in the send buffer as well as on whether the Bundling feature is invoked. true: An endpoint bundles chunks by including multiple chunks in one outbound SCTP packet. false: Bundling is not used.",
                "default": "true"
              },
              "bundling-timer": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0,
                "maximum": 10000,
                "description": "Time interval to bundle data to one SCTP packet. Interval during which SCTP buffers data chunks in order to send them bundled in one SCTP packet. SCTP will buffer data chunks until either of the following occurs: - The bundling delay time expires. - The size of buffered data chunks reaches or exceeds the maximum size of the SCTP packet. In case there are data chunks still buffered after the transmission of a maximum sized SCTP packet, the bundling timer is restarted. Otherwise, if the send buffer is emptied, the bundling timer is stopped and restarted again when the first data chunk is received and buffered for bundling purpose. For SCTP implementations that implement the Nagle-like algorithm (RFC 6458), upon arrival of a SACK that acknowledges all outstanding data, if the bundling timer is running and data chunks are stored in the send buffer, the bundling delay timer is stopped and the buffered data chunks are bundled and sent in one SCTP packet. Note that Nagle algorithm is specified in RFC 1122. If bundling-timer is zero then bundled packet will be sent with no delay.",
                "default": "16"
              },
              "path-selection-adjustment": {
                "type": "string",
                "description": "Bitmask which defines path selection properties",
                "default": ""
              },
              "ipv4-pdu": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0,
                "maximum": 65515,
                "description": "Maximum size of the SCTP PDU for IPv4 paths. This is the size of IP MTU without underlying overhead like regular IPv4 header, IPsec, etc. For example, if vNIC MTU is 1500, then this parameter shall be calculated as: - if over IP: 1500 - 20 = 1480; - if IPIP over IPSec (AES, SHA-256): 1500 - 86 - 20 = 1394; If this parameter is set to zero, MTU size will be retrieved from network interface (which corresponds to the used IP address) and SCTP PDU size will be calculated as MTU minus regular IPv4 header size. Setting this parameter to zero requires the parameter ipv6-pdu to be also set to zero.",
                "default": "1300"
              },
              "ipv6-pdu": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0,
                "maximum": 65495,
                "description": "Maximum size of the SCTP PDU for IPv6 paths. This is the size of IP MTU without underlying overhead like regular IPv6 header, IPsec, etc. For example, if vNIC MTU is 1500, then this parameter shall be calculated as: - if over IP: 1500 - 40 = 1460; - if IPIP over IPSec (AES, SHA-256): 1500 - 106 - 40 = 1354; If this parameter is set to zero, MTU size will be retrieved from network interface (which corresponds to the used IP address) and SCTP PDU size will be calculated as MTU minus regular IPv6 header size. Setting this parameter to zero requires the parameter ipv4-pdu to be also set to zero.",
                "default": "1300"
              },
              "dscp": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0,
                "maximum": 64,
                "description": "Differentiated Service Code Point This value represents the DSCP related to the Quality of Service. The dscp value is applied to all outgoing traffic. 64 is special value: if DSCP value is not provided in EINSS7_00SctpXInitializeReq then zero DSCP value will be used on a socket. If DSCP value is provided in EINSS7_00SctpXInitializeReq then the value from EINSS7_00SctpXInitializeReq will be used on a socket. If dscp is not equal to 64 in the configuration then any DSCP value provided through EINSS7_00SctpXInitializeReq call will be ignored and the value from the configuration will be used instead.",
                "default": "64"
              },
              "user-label": {
                "type": "string",
                "description": "Label for free use."
              }
            },
            "required": [
              "id"
            ]
          }
        },
        "incoming-association-handling": {
          "type": "array",
          "uniqueItems": true,
          "maxItems": 65535,
          "description": "Settings for incoming association handling. Defines action for handling of incoming SCTP INIT (associations established by the remote side). Each instance is used to associate incoming association (which is established by the remote side) with sctp-profile or drop incoming association.",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "uint16",
                "minimum": 1,
                "maximum": 65535
              },
              "port-number": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0,
                "maximum": 65535,
                "description": "Port number of the remote endpoint. Zero value means the port number will not be used to match incoming INIT, address will be matched only.",
                "default": "2905"
              },
              "address": {
                "type": "array",
                "minItems": 1,
                "maxItems": 16,
                "description": "List of peer addresses or peer host names. Wildcards are supported in IP address: \"*\" means zero or more decimal (in IPv4) or hexadecimal (in IPv6) numbers; \"?\" means any decimal (in IPv4) or hexadecimal (in IPv6) number. Examples: 192.168.*.1 match 192.168.0.1-192.168.255.1 192.168.1*.1 match 192.168.10.1-192.168.199.1 192.168.1?.1 match 192.168.10.1-192.168.19.1 192.168.??.1 match 192.168.10.1-192.168.99.1 2031:0:130F:0:0:9C:8A:* match 2031:0:130F:0:0:9C:8A:0-2031:0:130F:0:0:9C:8A:FFFF 2031:0:130F:0:0:9C:8A:? match 2031:0:130F:0:0:9C:8A:0-2031:0:130F:0:0:9C:8A:F",
                "items": {
                  "anyOf": [
                    {
                      "type": "string",
                      "anyOf": [
                        {
                          "anyOf": [
                            {
                              "format": "ipv4"
                            },
                            {
                              "format": "ipv6"
                            }
                          ]
                        },
                        {
                          "format": "hostname"
                        }
                      ]
                    },
                    {
                      "type": "string",
                      "pattern": "^(([0-9\\?]\\*?|\\*[0-9\\?]|[1-9\\?][0-9\\?]\\*?|\\*[1-9\\?][0-9\\?]|[1\\?][0-9\\?\\*][0-9\\?]|2[0-4\\?][0-9\\?]|25[0-5\\?]|\\*)\\.){3}([0-9\\?]\\*?|\\*[0-9\\?]|[1-9\\?][0-9\\?]\\*?|\\*[1-9\\?][0-9\\?]|[1\\?][0-9\\?\\*][0-9\\?]|2[0-4\\?\\*][0-9\\?]|25[0-5\\?]|\\*)(%[\\p{N}\\p{L}]+)?$"
                    },
                    {
                      "type": "string",
                      "pattern": "^((:|[0-9a-fA-F\\?]{0,4}|[0-9a-fA-F\\?]{0,3}\\*|\\*[0-9a-fA-F\\?]{0,3}|[0-9a-fA-F\\?]\\*[0-9a-fA-F\\?]{0,2}|[0-9a-fA-F\\?]{0,2}\\*[0-9a-fA-F\\?]):)(([0-9a-fA-F\\?]{0,4}|[0-9a-fA-F\\?]{0,3}\\*|\\*[0-9a-fA-F\\?]{0,3}|[0-9a-fA-F\\?]\\*[0-9a-fA-F\\?]{0,2}|[0-9a-fA-F\\?]{0,2}\\*[0-9a-fA-F\\?]):){0,5}(((([0-9a-fA-F\\?]{0,4}|[0-9a-fA-F\\?]{0,3}\\*|\\*[0-9a-fA-F\\?]{0,3}|[0-9a-fA-F\\?]\\*[0-9a-fA-F\\?]{0,2}|[0-9a-fA-F\\?]{0,2}\\*[0-9a-fA-F\\?]):)?(:|[0-9a-fA-F\\?]{0,4}|[0-9a-fA-F\\?]{0,3}\\*|\\*[0-9a-fA-F\\?]{0,3}|[0-9a-fA-F\\?]\\*[0-9a-fA-F\\?]{0,2}|[0-9a-fA-F\\?]{0,2}\\*[0-9a-fA-F\\?]))|(((25[0-5\\?]|2[0-4\\?\\*][0-9\\?]|[01\\?\\*]?[0-9\\?]?[0-9\\?]|[01\\?]?[0-9\\?\\*]?[0-9\\?]|[0-9\\?]?[0-9\\?]\\*?|\\*)\\.){3}(25[0-5\\?]|2[0-4\\?\\*][0-9\\?]|[01\\?\\*]?[0-9\\?]?[0-9\\?]|[01\\?]?[0-9\\?\\*]?[0-9\\?]|[0-9\\?]?[0-9\\?]\\*?|\\*)))(%[\\p{N}\\p{L}]+)?$"
                    },
                    {
                      "type": "string"
                    }
                  ]
                }
              },
              "profile": {
                "type": "integer",
                "description": "Reference to sctp-profile.",
                "default": "0"
              },
              "init-chunk-processing-mode": {
                "enum": [
                  "use-association-sctp-profile",
                  "use-endpoint-sctp-profile",
                  "drop-incoming-init"
                ],
                "description": "Defines how SCTP shall handle incoming INIT chunk matched by port-number, address and match-type.",
                "default": "use-association-sctp-profile"
              },
              "match-type": {
                "enum": [
                  "all",
                  "any"
                ],
                "description": "Defines IP addresses matching type.",
                "default": "all"
              },
              "user-label": {
                "type": "string",
                "description": "Label for free use."
              }
            },
            "required": [
              "address",
              "id"
            ]
          }
        }
      },
      "required": [
        "sctp-profile"
      ]
    }
  },
  "eric-adp-genoptions": [
    {
      "module-prefixing": false
    },
    {
      "encoding-format": "eric-rfc7951-json"
    },
    {
      "generate-submodule-jsonschema": false
    },
    {
      "additional-properties": true
    }
  ],
  "eric-adp-encoding-format": "eric-rfc7951-json",
  "eric-adp-yang-module": "ericsson-sctp-adp"
}