{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by jsonschema-generator (1.27.0-124 2023-06-15 16:50:09 CEST) from Yang module ericsson-data-collector-adp (1.9.0) on Mar 5, 2024, 3:56:51 PM. Features: [ericsson-brm:failsafe-backups, ericsson-brm:housekeeping, ericsson-brm:label-store, ericsson-brm:rollback-at-restore, ericsson-brm:scheduler, ericsson-brm:sftp-client-authentication, ericsson-fm:alert, ericsson-keystore-ext:cmp, ericsson-keystore-ext:manual-renewal, ericsson-keystore-ext:pkcs10, ericsson-keystore-ext:pkcs12, ericsson-keystore-ext:pkcs8, ericsson-keystore-ext:scep, ericsson-notifications:netconf-state-change, ericsson-pm:measurement-jobs, ericsson-pm:realtime-jobs, ericsson-pm:threshold-jobs, ericsson-snmp:dtls, ericsson-snmp:network-prefix-validation, ericsson-snmp:no-auth-no-priv-feature, ericsson-system-ext:authentication-failure-alarm, ericsson-system-ext:ldap, ericsson-system-ext:ldap-authentication, ericsson-system-ext:ldap-clear, ericsson-system-ext:ldap-custom-filter, ericsson-system-ext:ldap-posix-filter, ericsson-system-ext:ldap-sasl-external, ericsson-system-ext:local-target-classes, ericsson-system-ext:ntp-security, ericsson-system-ext:oauth2-client-authentication, iana-crypt-hash:crypt-hash-md5, iana-crypt-hash:crypt-hash-sha-256, iana-crypt-hash:crypt-hash-sha-512, ietf-crypto-types:one-asymmetric-key-format, ietf-crypto-types:one-symmetric-key-format, ietf-crypto-types:encrypted-one-symmetric-key-format, ietf-crypto-types:encrypted-one-asymmetric-key-format, ietf-interfaces:arbitrary-names, ietf-interfaces:if-mib, ietf-interfaces:pre-provisioning, ietf-ip:ipv4-non-contiguous-netmasks, ietf-ip:ipv6-privacy-autoconf, ietf-keystore:key-generation, ietf-keystore:keystore-supported, ietf-keystore:local-definitions-supported, ietf-keystore:keystore-supported, ietf-netconf:candidate, ietf-netconf:confirmed-commit, ietf-netconf:rollback-on-error, ietf-netconf:startup, ietf-netconf:url, ietf-netconf:validate, ietf-netconf:writable-running, ietf-netconf:xpath, ietf-ssh-client:ssh-client-transport-params-config, ietf-ssh-client:ssh-client-keepalives, ietf-ssh-common:ssh-ctr, ietf-ssh-common:ssh-dh-group-exchange, ietf-ssh-common:ssh-ecc, ietf-ssh-common:ssh-sha2, ietf-ssh-common:ssh-x509-certs, ietf-system:authentication, ietf-system:dns-udp-tcp-port, ietf-system:local-users, ietf-system:ntp, ietf-system:ntp-udp-port, ietf-system:radius, ietf-system:radius-authentication, ietf-system:timezone-name, ietf-system:authentication, ietf-system:local-users, ietf-system:ntp, ietf-tls-client:tls-client-hello-params-config, ietf-tls-client:tls-client-keepalives, ietf-tls-client:x509-certificate-auth, ietf-tls-client:raw-public-key-auth, ietf-tls-client:psk-auth, ietf-tls-common:tls-1_0, ietf-tls-common:tls-1_1, ietf-tls-common:tls-1_2, ietf-tls-common:tls-1_3, ietf-tls-common:tls-3des, ietf-tls-common:tls-dhe, ietf-tls-common:tls-ecc, ietf-tls-common:tls-gcm, ietf-tls-common:tls-sha2, ietf-tls-server:tls-server-hello-params-config, ietf-tls-server:tls-server-keepalives, ietf-tls-server:client-auth-config-supported, ietf-tls-server:external-client-auth-supported, ietf-tls-server:x509-certificate-auth, ietf-tls-server:raw-public-key-auth, ietf-tls-server:psk-auth, ietf-truststore:local-definitions-supported, ietf-truststore:raw-public-keys, ietf-truststore:ssh-host-keys, ietf-truststore:truststore-supported, ietf-truststore:x509-certificates, ietf-truststore:truststore-supported, ietf-truststore:ssh-host-keys, ietf-truststore:x509-certificates]. Deviations/extensions: [ericsson-brm-ext-adp, ericsson-data-collector-ext-adp, ericsson-fm-ext-adp, ericsson-keystore-ext, ericsson-netconf-acm-ext, ericsson-pm-dev-adp, ericsson-system-ext-aum, ericsson-system-ext, ericsson-truststore-ext, ericsson-yang-library-ext, ietf-ip, ietf-netconf-with-defaults, ietf-network-instance, tailf-acm]",
  "title": "ericsson-data-collector-adp",
  "type": "object",
  "properties": {
    "ericsson-data-collector-adp:diagnostic-data-collection": {
      "type": "object",
      "description": "Configuration of the DDC service. Data collection can be done periodically or immediately triggered by an action",
      "properties": {
        "collector-profile": {
          "type": "array",
          "uniqueItems": true,
          "description": "Properties of a DDB to be collected. The profile can be created by the system or the operator. System created profiles should not be removed.",
          "items": {
            "type": "object",
            "properties": {
              "profile-id": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9]+$"
              },
              "name": {
                "type": "string",
                "description": "A name for the collector profile."
              },
              "profile-type": {
                "enum": [
                  "collection-profile",
                  "action-profile"
                ]
              },
              "data-to-collect": {
                "type": "array",
                "minItems": 1,
                "description": "One or more data types to collect.",
                "items": {
                  "enum": [
                    "logs",
                    "metrics",
                    "files",
                    "software-information",
                    "fixed-files",
                    "kubernetes-information",
                    "extended-logs"
                  ]
                }
              },
              "export-ddb-to": {
                "type": "array",
                "description": "Zero or more destinations where to send the DDB.",
                "items": {
                  "enum": [
                    "sftp",
                    "persistent-storage"
                  ]
                }
              },
              "persistent-storage-maximum-size": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0,
                "maximum": 4294967295,
                "description": "Maximum size that all DDBs based on this profile can occupy in persistent storage in gigabytes. If limit is exceeded the oldest DDB will be deleted. 0 means no limit.",
                "default": "100"
              },
              "files-to-collect": {
                "type": "array",
                "minItems": 1,
                "description": "Files to be collected. The list can contain individual files or directories.",
                "items": {
                  "type": "string"
                }
              },
              "fixed-files-to-collect": {
                "type": "array",
                "minItems": 1,
                "description": "Files to be always collected regardless of the time stamp. The list can contain individual files or directories.",
                "items": {
                  "type": "string"
                }
              },
              "log-plane": {
                "type": "array",
                "minItems": 1,
                "description": "Log planes from which the log records are collected.",
                "items": {
                  "type": "string"
                }
              },
              "extended-log-plane": {
                "type": "array",
                "uniqueItems": true,
                "minItems": 1,
                "description": "List of logplanes from which the log records are collected for an extended time period beyond profile's 'collection-window'.",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Logplane to collect."
                    },
                    "window": {
                      "type": "integer",
                      "format": "uint16",
                      "minimum": 1,
                      "maximum": 65535,
                      "description": "Time period of log entries which will be collected from the specified logplane.",
                      "default": "7"
                    },
                    "limit": {
                      "type": "integer",
                      "format": "uint32",
                      "minimum": 1,
                      "maximum": 4294967295,
                      "description": "Maximum amount of log entries which will be collected from the specified logplane.",
                      "default": "100000"
                    }
                  }
                }
              },
              "sftp": {
                "type": "string",
                "description": "A reference to a defined SFTP server."
              },
              "log-filter": {
                "type": "string",
                "description": "A filter to apply when collecting logs. Must be formatted according to Elasticsearch query string syntax."
              },
              "collection-window": {
                "type": "integer",
                "format": "uint32",
                "minimum": 1,
                "maximum": 4294967295,
                "description": "When a DDB is created, it contains data about the previous period of collection-window minutes. If collection-window is greater than collection-interval, some data can be included in multiple DDBs. The system may not support huge collection windows.",
                "default": "15"
              }
            },
            "required": [
              "data-to-collect",
              "profile-id"
            ]
          }
        },
        "progress-report": {
          "type": "array",
          "readOnly": true,
          "uniqueItems": true,
          "description": "Represents the progress report and final result of the ongoing (asynchronous) collect-ddb action. Only one action can be executed at a time.",
          "items": {
            "type": "object",
            "properties": {
              "action-name": {
                "type": "string",
                "description": "Name of the invoked asynchronous action."
              },
              "additional-info": {
                "type": "array",
                "description": "Used for logging significant messages during execution of an action.",
                "items": {
                  "type": "string"
                }
              },
              "progress-info": {
                "type": "string",
                "description": "Textual information that describes the actual state of the action execution."
              },
              "progress-percentage": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0,
                "maximum": 100,
                "description": "Progress of the action."
              },
              "result": {
                "enum": [
                  "success",
                  "failure",
                  "not-available"
                ],
                "description": "Result state of a completed action. This field has value not-available if the action is not finished."
              },
              "result-info": {
                "type": "string",
                "description": "Textual description of the outcome/result of the action containing useful information for the NMS. If the action failed, it can contain an error message."
              },
              "state": {
                "enum": [
                  "cancelling",
                  "running",
                  "finished",
                  "cancelled"
                ],
                "description": "Current state of the action."
              },
              "action-id": {
                "type": "integer",
                "format": "uint16",
                "minimum": 0,
                "maximum": 65535,
                "description": "Uniquely identifies the invocation of an action. Identifies the invocation of an action when the managed object allows invocation of more than one action at a time."
              },
              "time-action-started": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time when the current action was started."
              },
              "time-action-completed": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time when the action was completed (successfully or unsuccessfully)."
              },
              "time-of-last-status-update": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time when the struct member state was last updated."
              }
            },
            "required": [
              "time-action-started",
              "time-of-last-status-update"
            ]
          }
        },
        "data-collector": {
          "type": "object",
          "description": "Configuration and state data for periodic data-collection.",
          "properties": {
            "profile": {
              "type": "string",
              "description": "A reference to a defined collector profile."
            },
            "collection-interval": {
              "type": "integer",
              "format": "uint32",
              "minimum": 1,
              "maximum": 4294967295,
              "description": "At the end of each collection interval a DDB is created and exported.",
              "default": "10"
            },
            "administrative-state": {
              "enum": [
                "locked",
                "unlocked"
              ],
              "description": "The administrative state of the data collection.",
              "default": "locked"
            },
            "transfer-status": {
              "anyOf": [
                {
                  "enum": [
                    "ok"
                  ],
                  "readOnly": true
                },
                {
                  "type": "string",
                  "readOnly": true
                },
                {
                  "type": "string"
                }
              ],
              "description": "The status of the lastattempted transfer. Either it is 'ok' or an error string describing the reason of the failure.",
              "default": "ok"
            },
            "last-successful-transfer": {
              "type": "string",
              "readOnly": true,
              "format": "date-time",
              "description": "The date and time of the last successful transfer."
            }
          }
        },
        "sftp-server": {
          "type": "array",
          "uniqueItems": true,
          "description": "List of SFTP servers the SFTP client is to initiate connections to in parallel.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "An arbitrary name for the SFTP server."
              },
              "endpoints": {
                "type": "object",
                "description": "Container for the list of endpoints.",
                "properties": {
                  "endpoint": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "maxItems": 1,
                    "description": "A user-ordered list of endpoints that the SFTP client may attempt to connect to (one at a time) swithcing to the next in case the connection failed. Each endpoint has its own security configuration.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "remote-address": {
                          "type": "string",
                          "anyOf": [
                            {
                              "anyOf": [
                                {
                                  "format": "ipv4"
                                },
                                {
                                  "format": "ipv6"
                                }
                              ]
                            },
                            {
                              "format": "hostname"
                            }
                          ],
                          "description": "The IP address or hostname of the endpoint. If a domain name is configured, then the DNS resolution should happen on each usage attempt. If the DNS resolution results in multiple IP addresses, the IP addresses will be tried according to local preference order until a connection has been established or until all IP addresses have failed."
                        },
                        "remote-port": {
                          "type": "integer",
                          "format": "uint16",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The IP port for this endpoint. The NETCONF client will use the IANA-assigned well-known port for 'sftp' (22) if no value is specified.",
                          "default": "22"
                        },
                        "remote-path": {
                          "type": "string",
                          "description": "Specifies the location or path where the file(s) will be stored."
                        },
                        "client-identity": {
                          "type": "object",
                          "description": "The credentials used by the client to authenticate to the SSH server.",
                          "properties": {
                            "username": {
                              "type": "string",
                              "description": "The username of this user. This will be the username used, for instance, to log into an SSH server."
                            },
                            "password": {
                              "type": "string",
                              "description": "A password to be used for client authentication.",
                              "eric-adp-is-passphrase": "true",
                              "format": "eric-adp-cm-secret"
                            },
                            "public-key": {
                              "type": "object",
                              "description": "A locally-defined or referenced asymmetric key pair to be used for client authentication.",
                              "properties": {
                                "local-definition": {
                                  "type": "object",
                                  "description": "Container to hold the local key definition.",
                                  "properties": {
                                    "private-key-format": {
                                      "type": "string",
                                      "description": "Identifies the key's format."
                                    },
                                    "algorithm": {
                                      "enum": [
                                        "rsa1024",
                                        "rsa2048",
                                        "rsa3072",
                                        "rsa4096",
                                        "rsa7680",
                                        "rsa15360",
                                        "secp192r1",
                                        "secp224r1",
                                        "secp256r1",
                                        "secp384r1",
                                        "secp521r1",
                                        "x25519",
                                        "x448"
                                      ],
                                      "description": "Identifies the key's algorithm."
                                    },
                                    "public-key-format": {
                                      "type": "string",
                                      "description": "Identifies the key's format."
                                    },
                                    "public-key": {
                                      "type": "string",
                                      "description": "The binary value of the public key. The interpretation of the value is defined by 'public-key-format' field."
                                    },
                                    "private-key": {
                                      "type": "string",
                                      "description": "The value of the binary key The key's value is interpreted by the 'private-key-format' field.",
                                      "eric-adp-is-passphrase": "true",
                                      "format": "eric-adp-cm-secret"
                                    },
                                    "hidden-private-key": {
                                      "type": "array",
                                      "items": {
                                        "type": "null"
                                      },
                                      "description": "A permanently hidden key. How such keys are created is outside the scope of this module."
                                    }
                                  },
                                  "required": [
                                    "algorithm",
                                    "public-key"
                                  ]
                                },
                                "keystore-reference": {
                                  "type": "string",
                                  "description": "A reference to an asymmetric key that exists in the keystore. The intent is to reference just the asymmetric key without any regard for any certificates that may be associated with it."
                                }
                              },
                              "required": [
                                "local-definition"
                              ]
                            }
                          }
                        },
                        "server-authentication": {
                          "type": "object",
                          "description": "Specifies how the SSH client can authenticate SSH servers. Any combination of credentials is additive and unordered.",
                          "properties": {
                            "ssh-host-keys": {
                              "type": "object",
                              "description": "A list of SSH host keys used by the SSH client to authenticate SSH server host keys. A server host key is authenticated if it is an exact match to a configured SSH host key.",
                              "properties": {
                                "local-definition": {
                                  "type": "object",
                                  "description": "Container to hold local host key definitions.",
                                  "properties": {
                                    "host-key": {
                                      "type": "array",
                                      "description": "The binary public key data for this host key.",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "truststore-reference": {
                                  "type": "string",
                                  "description": "A reference to a set of host keys that exist in the truststore."
                                }
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "name",
                        "remote-address"
                      ]
                    }
                  }
                },
                "required": [
                  "endpoint"
                ]
              }
            },
            "required": [
              "endpoints",
              "name"
            ]
          }
        }
      }
    }
  },
  "eric-adp-genoptions": [
    {
      "module-prefixing": false
    },
    {
      "encoding-format": "eric-rfc7951-json"
    },
    {
      "generate-submodule-jsonschema": false
    },
    {
      "additional-properties": true
    }
  ],
  "eric-adp-encoding-format": "eric-rfc7951-json",
  "eric-adp-yang-module": "ericsson-data-collector-adp"
}