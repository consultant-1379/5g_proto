{
  "definitions": {
    "VIP_OAM": "",
    "VIP_SIG_SCP": "",
    "VIP_SIG2_SCP": "",
    "VIP_SIG_SEPP": "",
    "VIP_SIG2_SEPP": "",
    "VIP_SIG_BSF": "",
    "VIP_SIG_Diameter": "",
    "oam_storage_class": "network-block",
    "shared_vip_oam_label": "shared-vip-oam"
  },
  "global": {
    "timezone": "UTC",
    "nodeSelector": {},
    "pullSecret": "",
    "registry": {
      "url": "armdocker.rnd.ericsson.se"
    },
    "externalIPv4": {
      "enabled": false
    },
    "externalIPv6": {
      "enabled": false
    },
    "ipFamilyPolicy": "SingleStack",
    "internalIPFamily": "",
    "annotations": {},
    "labels": {},
    "licensing": {
      "sites": [
        {
          "hostname": "",
          "ip": "",
          "priority": 10
        }
      ]
    },
    "ericsson": {
      "bsf": {
        "enabled": false
      },
      "bsfdiameter": {
        "enabled": false
      },
      "nlf": {
        "enabled": false
      },
      "scp": {
        "enabled": false
      },
      "sepp": {
        "enabled": false
      },
      "rlf": {
        "enabled": false
      },
      "slf": {
        "enabled": false
      },
      "wcdb": {
        "enabled": false
      },
      "pvtb": {
        "enabled": false
      },
      "objectStorage": {
        "enabled": false
      },
      "sftp": {
        "enabled": false
      },
      "licensing": {
        "licenseDomains": [
          {
            "productType": "SIGNALING_CONTROLLER",
            "customerId": "",
            "swltId": ""
          }
        ]
      }
    },
    "networkPolicy": {
      "enabled": false
    },
    "log": {
      "outputs": [
        "stdout",
        "k8sLevel"
      ],
      "streamingMethod": "indirect"
    }
  },
  "eric-sc": {
    "routes": {
      "nbi": {
        "fqdn": "",
        "security": {
          "tls": {
            "clientValidation": {
              "enabled": true
            }
          }
        }
      }
    },
    "certificates": {
      "nbi": {
        "key": "sc-nbi-default-key",
        "certificate": "sc-nbi-default-cert"
      },
      "trustedCAs": {
        "certificateList": "sc-trusted-default-cas"
      }
    }
  },
  "eric-scp": {
    "service": {
      "worker": {
        "ipFamilyPolicy": "",
        "loadBalancerIP": "",
        "annotations": {
          "cloudProviderLB": {},
          "loadBalancerIPs": ""
        },
        "externalTrafficPolicy": "Local",
        "port": 80,
        "tlsport": 443,
        "externalIPv4": {
          "enabled": false
        },
        "externalIPv6": {
          "enabled": false
        },
        "multiVpn": {
          "ipFamilyPolicy": "",
          "enabled": false,
          "loadBalancerIP": "",
          "annotations": {
            "cloudProviderLB": {},
            "loadBalancerIPs": ""
          },
          "externalTrafficPolicy": "Local",
          "port": 80,
          "tlsport": 443,
          "externalIPv4": {
            "enabled": false
          },
          "externalIPv6": {
            "enabled": false
          }
        }
      }
    },
    "egress": {
      "nrf": {
        "dscp": 0
      }
    },
    "spec": {
      "worker": {
        "replicaCount": 2,
        "max_active_tcp_connections": "500",
        "concurrency": "2",
        "send_goaway_for_premature_rst_streams": "true",
        "premature_reset_total_stream_count": "500",
        "premature_reset_min_stream_lifetime_seconds": "1",
        "max_requests_per_io_cycle": "0",
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ],
        "podDisruptionBudget": {
          "minAvailable": 1
        },
        "resources": {
          "requests": {
            "memory": "512Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "1024Mi",
            "cpu": 1.5,
            "ephemeral-storage": ""
          }
        }
      },
      "manager": {
        "replicaCount": 1,
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "resources": {
          "requests": {
            "memory": "512Mi",
            "cpu": 0.5,
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "1024Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          }
        },
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ],
        "podDisruptionBudget": {
          "minAvailable": 0
        }
      },
      "logfwdr": {
        "resources": {
          "requests": {
            "memory": "32Mi",
            "cpu": "50m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "64Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          }
        }
      },
      "sds": {
        "resources": {
          "requests": {
            "memory": "64Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "128Mi",
            "cpu": "200m",
            "ephemeral-storage": ""
          }
        }
      },
      "certnotifier": {
        "resources": {
          "requests": {
            "memory": "128Mi",
            "cpu": "80m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "256Mi",
            "cpu": "160m",
            "ephemeral-storage": ""
          }
        }
      },
      "tapagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      },
      "tlskeylogagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      },
      "tapcollector": {
        "resources": {
          "requests": {
            "memory": "256Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "2560Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          }
        }
      }
    },
    "probes": {
      "manager": {
        "livenessProbe": {
          "initialDelaySeconds": 180,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "worker": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 3,
          "timeoutSeconds": 2,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 4,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 1,
          "failureThreshold": 30
        }
      }
    },
    "maxRequestBytes": "65535",
    "applicationId": "sc-testnode",
    "certificates": {
      "traf": {
        "key": "sc-traf-default-key",
        "certificate": "sc-traf-default-cert"
      },
      "nrf": {
        "key": "sc-nrf-default-key",
        "certificate": "sc-nrf-default-cert"
      }
    },
    "manager": {
      "leaderElection": {
        "enabled": false
      }
    },
    "tapagent": {
      "manager": {
        "enabled": false
      },
      "worker": {
        "enabled": false
      }
    },
    "tapcollector": {
      "worker": {
        "enabled": false,
        "replaceLocalSocketAddress": true
      }
    },
    "nodeSelector": {
      "worker": {},
      "manager": {}
    },
    "annotations": {},
    "labels": {},
    "resources": {
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    }
  },
  "eric-bsf": {
    "service": {
      "worker": {
        "ipFamilyPolicy": "",
        "loadBalancerIP": "",
        "annotations": {
          "cloudProviderLB": {},
          "loadBalancerIPs": ""
        },
        "externalTrafficPolicy": "Local",
        "port": 80,
        "tlsport": 443,
        "externalIPv4": {
          "enabled": false
        },
        "externalIPv6": {
          "enabled": false
        }
      }
    },
    "egress": {
      "nrf": {
        "dscp": 0
      }
    },
    "spec": {
      "cddjmxexporter": {
        "resources": {
          "requests": {
            "memory": "128Mi",
            "cpu": "50m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "256Mi",
            "cpu": "200m",
            "ephemeral-storage": ""
          }
        }
      },
      "certnotifier": {
        "resources": {
          "requests": {
            "memory": "128Mi",
            "cpu": "80m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "256Mi",
            "cpu": "160m",
            "ephemeral-storage": ""
          }
        }
      },
      "tapagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      },
      "tapcollector": {
        "resources": {
          "requests": {
            "memory": "256Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "2560Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          }
        }
      },
      "tlskeylogagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      },
      "manager": {
        "replicaCount": 1,
        "resources": {
          "requests": {
            "memory": "512Mi",
            "cpu": 0.5,
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "1024Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          }
        },
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ]
      },
      "worker": {
        "replicaCount": 2,
        "resources": {
          "requests": {
            "memory": "512Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "1024Mi",
            "cpu": 1.5,
            "ephemeral-storage": ""
          }
        },
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ],
        "podDisruptionBudget": {
          "minAvailable": 1
        }
      }
    },
    "probes": {
      "manager": {
        "livenessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "worker": {
        "livenessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 3,
          "timeoutSeconds": 3,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 3,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "cassandra": {
      "contact_point": "eric-data-wide-column-database-cd-datacenter1-rack1:9042",
      "datacenter": "datacenter1",
      "throttler": {
        "class": "ConcurrencyLimitingRequestThrottler",
        "max_queue_size": "1000",
        "max_concurrent_requests": "50"
      },
      "consistency": "ONE"
    },
    "certificates": {
      "traf": {
        "key": "sc-traf-default-key",
        "certificate": "sc-traf-default-cert"
      },
      "nrf": {
        "key": "sc-nrf-default-key",
        "certificate": "sc-nrf-default-cert"
      }
    },
    "manager": {
      "leaderElection": {
        "enabled": false
      },
      "pcfRecoveryTimeTTL": "2592000"
    },
    "worker": {
      "pcfRecoveryTimeTTL": "2592000",
      "dscp": "0"
    },
    "tapcollector": {
      "worker": {
        "enabled": false,
        "replaceLocalSocketAddress": true
      }
    },
    "tapagent": {
      "manager": {
        "enabled": false
      },
      "worker": {
        "enabled": false
      }
    },
    "nodeSelector": {
      "worker": {},
      "manager": {}
    },
    "annotations": {},
    "labels": {},
    "resources": {
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    }
  },
  "eric-bsf-diameter": {
    "resources": {
      "diameterproxygrpc": {
        "limits": {
          "cpu": "4",
          "ephemeral-storage": "",
          "memory": "4Gi"
        },
        "requests": {
          "cpu": "0.3",
          "ephemeral-storage": "",
          "memory": "384Mi"
        }
      },
      "dsl": {
        "limits": {
          "cpu": "2",
          "ephemeral-storage": "",
          "memory": "4Gi"
        },
        "requests": {
          "cpu": "0.25",
          "ephemeral-storage": "",
          "memory": "100Mi"
        }
      },
      "bsfdiameter": {
        "requests": {
          "cpu": "0.35",
          "memory": "320Mi"
        },
        "limits": {
          "cpu": "2",
          "memory": "3Gi"
        }
      },
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "diameterproxygrpc": {
        "livenessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 2,
          "timeoutSeconds": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 2,
          "timeoutSeconds": 1,
          "failureThreshold": 3
        }
      },
      "dsl": {
        "livenessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 2,
          "timeoutSeconds": 1,
          "failureThreshold": 3
        }
      },
      "bsfdiameter": {
        "livenessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "initialConfig": {
      "dsl": {
        "enableIPv6": false
      }
    },
    "replicaCount": 2,
    "cassandra": {
      "contact_point": "eric-data-wide-column-database-cd-datacenter1-rack1:9042",
      "datacenter": "datacenter1",
      "throttler": {
        "class": "ConcurrencyLimitingRequestThrottler",
        "max_queue_size": "1000",
        "max_concurrent_requests": "50"
      },
      "consistency": "ONE"
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "nodeSelector": {},
    "tolerations": [
      {
        "key": "node.kubernetes.io/unreachable",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 30
      }
    ],
    "podDisruptionBudget": {
      "minAvailable": 1
    },
    "annotations": {},
    "labels": {},
    "spec": {
      "pcfRecoveryTimeTTL": "2592000"
    }
  },
  "eric-sepp": {
    "service": {
      "worker": {
        "ipFamilyPolicy": "",
        "loadBalancerIP": "",
        "annotations": {
          "cloudProviderLB": {},
          "loadBalancerIPs": ""
        },
        "externalTrafficPolicy": "Local",
        "port": 80,
        "tlsport": 443,
        "externalIPv4": {
          "enabled": false
        },
        "externalIPv6": {
          "enabled": false
        },
        "multiVpn": {
          "ipFamilyPolicy": "",
          "enabled": true,
          "loadBalancerIP": "",
          "annotations": {
            "cloudProviderLB": {},
            "loadBalancerIPs": ""
          },
          "externalTrafficPolicy": "Local",
          "port": 80,
          "tlsport": 443,
          "externalIPv4": {
            "enabled": false
          },
          "externalIPv6": {
            "enabled": false
          }
        }
      }
    },
    "egress": {
      "nrf": {
        "dscp": 0
      }
    },
    "spec": {
      "manager": {
        "replicaCount": 1,
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "resources": {
          "requests": {
            "memory": "512Mi",
            "cpu": 0.5,
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "1024Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          }
        }
      },
      "worker": {
        "resources": {
          "requests": {
            "memory": "512Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "1024Mi",
            "cpu": 1.5,
            "ephemeral-storage": ""
          }
        },
        "replicaCount": 2,
        "max_active_tcp_connections": "500",
        "concurrency": "2",
        "send_goaway_for_premature_rst_streams": "true",
        "premature_reset_total_stream_count": "500",
        "premature_reset_min_stream_lifetime_seconds": "1",
        "max_requests_per_io_cycle": "0",
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ],
        "podDisruptionBudget": {
          "minAvailable": 1
        }
      },
      "logfwdr": {
        "resources": {
          "requests": {
            "memory": "32Mi",
            "cpu": "50m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "64Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          }
        }
      },
      "sds": {
        "resources": {
          "requests": {
            "memory": "64Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "128Mi",
            "cpu": "200m",
            "ephemeral-storage": ""
          }
        }
      },
      "certnotifier": {
        "resources": {
          "requests": {
            "memory": "128Mi",
            "cpu": "80m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "256Mi",
            "cpu": "160m",
            "ephemeral-storage": ""
          }
        }
      },
      "tapagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      },
      "tlskeylogagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      },
      "tapcollector": {
        "resources": {
          "requests": {
            "memory": "256Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "2560Mi",
            "cpu": 1,
            "ephemeral-storage": ""
          }
        }
      }
    },
    "probes": {
      "manager": {
        "livenessProbe": {
          "initialDelaySeconds": 180,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "worker": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 3,
          "timeoutSeconds": 2,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 4,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 1,
          "failureThreshold": 30
        }
      }
    },
    "maxRequestBytes": "65535",
    "certificates": {
      "traf": {
        "asymmetric": [
          {
            "key": "sc-traf-default-key1",
            "certificate": "sc-traf-default-cert1"
          },
          {
            "key": "sc-traf-default-key2",
            "certificate": "sc-traf-default-cert2"
          }
        ],
        "trustedAuthority": [
          {
            "caList": "sc-traf-root-ca-list1"
          },
          {
            "caList": "sc-traf-root-ca-list2"
          }
        ]
      },
      "nrf": {
        "key": "sc-nrf-default-key",
        "certificate": "sc-nrf-default-cert"
      }
    },
    "manager": {
      "leaderElection": {
        "enabled": false
      }
    },
    "tapagent": {
      "manager": {
        "enabled": false
      },
      "worker": {
        "enabled": false
      }
    },
    "tapcollector": {
      "worker": {
        "enabled": false,
        "replaceLocalSocketAddress": true
      }
    },
    "nodeSelector": {
      "worker": {},
      "manager": {}
    },
    "annotations": {},
    "labels": {},
    "resources": {
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    }
  },
  "eric-sc-nlf": {
    "replicaCount": 2,
    "egress": {
      "nrf": {
        "dscp": 0
      }
    },
    "resources": {
      "nlf": {
        "requests": {
          "memory": "1Gi",
          "cpu": "1500m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "2Gi",
          "cpu": "3",
          "ephemeral-storage": ""
        }
      },
      "tapagent": {
        "requests": {
          "memory": "100Mi",
          "cpu": "100m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "500Mi",
          "cpu": "500m",
          "ephemeral-storage": ""
        }
      },
      "tlskeylogagent": {
        "requests": {
          "memory": "100Mi",
          "cpu": "100m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "500Mi",
          "cpu": "500m"
        }
      },
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    },
    "affinity": {
      "podAntiAffinity": "hard"
    },
    "tolerations": [
      {
        "key": "node.kubernetes.io/not-ready",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 0
      },
      {
        "key": "node.kubernetes.io/unreachable",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 0
      }
    ],
    "podDisruptionBudget": {
      "minAvailable": 1
    },
    "probes": {
      "nlf": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "certificates": {
      "nrf": {
        "key": "sc-nrf-default-key",
        "certificate": "sc-nrf-default-cert"
      }
    },
    "tapagent": {
      "enabled": false
    },
    "leaderElection": {
      "enabled": true
    },
    "nodeSelector": {},
    "annotations": {},
    "labels": {}
  },
  "eric-sc-rlf": {
    "spec": {
      "rlf": {
        "replicaCount": 2,
        "resources": {
          "requests": {
            "memory": "1Gi",
            "cpu": "1500m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "2Gi",
            "cpu": 3,
            "ephemeral-storage": ""
          }
        },
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ],
        "podDisruptionBudget": {
          "minAvailable": 1
        }
      }
    },
    "probes": {
      "rlf": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "leaderElection": {
      "enabled": true
    },
    "nodeSelector": {},
    "annotations": {},
    "labels": {},
    "resources": {
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    }
  },
  "eric-sc-slf": {
    "egress": {
      "nrf": {
        "dscp": 0
      }
    },
    "spec": {
      "slf": {
        "replicaCount": 2,
        "resources": {
          "requests": {
            "memory": "256Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "1024Mi",
            "cpu": "1000m",
            "ephemeral-storage": ""
          }
        },
        "affinity": {
          "podAntiAffinity": "soft"
        },
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ],
        "podDisruptionBudget": {
          "minAvailable": 1
        }
      },
      "tapagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      },
      "tlskeylogagent": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "500Mi",
            "cpu": "500m",
            "ephemeral-storage": ""
          }
        }
      }
    },
    "probes": {
      "slf": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "leaderElection": {
        "enabled": true
      },
    "certificates": {
      "nrf": {
        "key": "sc-nrf-default-key",
        "certificate": "sc-nrf-default-cert"
      }
    },
    "tapagent": {
      "enabled": false
    },
    "nodeSelector": {},
    "annotations": {},
    "labels": {},
    "resources": {
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    }
  },
  "eric-sc-hcagent": {
    "resources": {
      "hcagent": {
        "requests": {
          "cpu": "50m",
          "memory": "100Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "250m",
          "memory": "500Mi",
          "ephemeral-storage": ""
        }
      },
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    },
    "export": {
      "alarmExpirationTimer": 60
    },
    "spec": {
      "hcagent": {
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 0
          }
        ]
      }
    },
    "nodeSelector": {},
    "annotations": {},
    "labels": {}
  },
  "eric-sc-monitor": {
    "resources": {
      "monitor": {
        "requests": {
          "memory": "100Mi",
          "cpu": "100m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "256Mi",
          "cpu": "200m",
          "ephemeral-storage": ""
        }
      },
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    },
    "tolerations": {
      "monitor": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "nodeSelector": {},
    "annotations": {},
    "labels": {}
  },
  "eric-sc-manager": {
    "spec": {
      "scmanager": {
        "resources": {
          "requests": {
            "memory": "100Mi",
            "cpu": "100m",
            "ephemeral-storage": ""
          },
          "limits": {
            "memory": "256Mi",
            "cpu": "200m",
            "ephemeral-storage": ""
          }
        }
      }
    },
    "nodeSelector": {},
    "tolerations": [
      {
        "key": "node.kubernetes.io/not-ready",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 0
      },
      {
        "key": "node.kubernetes.io/unreachable",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 0
      }
    ],
    "annotations": {},
    "labels": {},
    "resources": {
      "logshipper": {
        "requests": {
          "memory": "20Mi",
          "cpu": "33m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "30Mi",
          "cpu": "40m",
          "ephemeral-storage": ""
        }
      }
    }
  },
  "eric-data-distributed-coordinator-ed-sc": {
    "env": {
      "dced": {
        "ETCD_HEARTBEAT_INTERVAL": 100,
        "ETCD_ELECTION_TIMEOUT": 1000
      }
    },
    "resources": {
      "init": {
        "requests": {
          "cpu": "200m",
          "memory": "200Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "500m",
          "memory": "500Mi",
          "ephemeral-storage": ""
        }
      },
      "dced": {
        "requests": {
          "cpu": "400m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "1Gi",
          "ephemeral-storage": ""
        }
      },
      "metricsexporter": {
        "requests": {
          "cpu": "100m",
          "memory": "8Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "200m",
          "memory": "32Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "dced": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 12
        }
      },
      "metricsexporter": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "persistence": {
      "persistentVolumeClaim": {
        "storageClassName": "network-block",
        "size": "1Gi"
      }
    },
    "affinity": {
      "podAntiAffinity": "hard"
    },
    "nodeSelector": {
      "dced": {}
    },
    "labels": {},
    "annotations": {}
  },
  "eric-stm-diameter": {
    "replicaCount": 2,
    "service": {
      "loadBalancerIP": "",
      "externalIPv4": {
        "enabled": true,
        "loadBalancerIPDiameterOverTCP": ""
      },
      "externalIPv6": {
        "enabled": true,
        "loadBalancerIPDiameterOverTCP": ""
      },
      "externalTrafficPolicy": {
        "tcp": "Cluster"
      },
      "certificates": {
        "asymmetricKeyCertificateName": "diameter-key-cert",
        "trustedCertificateListName": "sc-trusted-default-cas"
      },
      "diameter": {
        "ports": {
          "tcp": [
            {
              "port": 3868,
              "targetPort": 3868
            }
          ]
        }
      }
    },
    "nodeSelector": {},
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "tolerations": [],
    "initialConfig": {
      "dsl": {
        "enableIPv6": false
      }
    },
    "resources": {
      "diameter": {
        "requests": {
          "memory": "100Mi",
          "cpu": "0.25"
        },
        "limits": {
          "memory": "4Gi",
          "cpu": "2"
        }
      },
      "dsl": {
        "requests": {
          "memory": "100Mi",
          "cpu": "0.25"
        },
        "limits": {
          "memory": "4Gi",
          "cpu": "2"
        }
      }
    },
    "probes": {
      "diameter": {
        "livenessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 2,
          "timeoutSeconds": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 2,
          "timeoutSeconds": 1,
          "failureThreshold": 3
        }
      },
      "dsl": {
        "livenessProbe": {
          "initialDelaySeconds": 2,
          "periodSeconds": 2,
          "timeoutSeconds": 1,
          "failureThreshold": 3
        }
      }
    },
    "annotations": {},
    "labels": {}
  },
  "eric-ctrl-bro": {
    "persistence": {
      "persistentVolumeClaim": {
        "storageClassName": "network-block",
        "size": "15Gi"
      }
    },
    "imageCredentials": {
      "bro": {
        "registry": {
          "url": "",
          "imagePullPolicy": ""
        },
        "repoPath": ""
      }
    },
    "nodeSelector": {
      "backupAndRestore": {}
    },
    "resources": {
      "backupAndRestore": {
        "limits": {
          "cpu": "2",
          "memory": "4Gi",
          "ephemeral-storage": "250Mi"
        },
        "requests": {
          "cpu": "1",
          "memory": "2Gi",
          "ephemeral-storage": "100Mi"
        }
      }
    },
    "probes": {
      "backupAndRestore": {
        "livenessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 30
        }
      }
    },
    "tolerations": {
      "backupAndRestore": []
    },
    "labels": {}
  },
  "eric-sec-admin-user-management": {
    "resources": {
      "aum": {
        "requests": {
          "memory": "256Mi",
          "cpu": "250m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "512Mi",
          "cpu": "500m",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "aum": {
        "livenessProbe": {
          "periodSeconds": 5,
          "timeoutSeconds": 2,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "periodSeconds": 5,
          "timeoutSeconds": 2,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 2,
          "failureThreshold": 180
        }
      }
    },
    "nodeSelector": {
      "aum": {},
      "hooklauncher": {}
    },
    "tolerations": {
      "aum": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ],
      "hooklauncher": []
    },
    "egress": {
      "iamAuthenticationLdapClient": {
        "certificates": {
          "asymmetricKeyCertificateName": "sc-ldap-default-cert",
          "trustedCertificateListName": "sc-trusted-default-cas"
        }
      }
    },
    "labels": {},
    "annotations": {}
  },
  "eric-sec-ldap-server": {
    "persistentVolumeClaim": {
      "storageClassName": "network-block",
      "size": "8Gi"
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "replicaCount": 2,
    "nodeSelector": {
      "ldap": {},
      "ldapProxy": {}
    },
    "tolerations": {
      "ldap": [],
      "ldapproxy": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ],
      "preupgrade": []
    },
    "podDisruptionBudget": {
      "minAvailable": "50%"
    },
    "resources": {
      "preupgrade": {
        "requests": {
          "memory": "50Mi",
          "cpu": "50m",
          "ephemeral-storage": "500Mi"
        },
        "limits": {
          "memory": "100Mi",
          "cpu": "100m",
          "ephemeral-storage": "1Gi"
        }
      },
      "ldap": {
        "requests": {
          "memory": "512Mi",
          "cpu": "300m",
          "ephemeral-storage": "1Gi"
        },
        "limits": {
          "memory": "2036Mi",
          "cpu": "1000m",
          "ephemeral-storage": "2Gi"
        }
      },
      "ldapagent": {
        "requests": {
          "memory": "512Mi",
          "cpu": "50m",
          "ephemeral-storage": "512Mi"
        },
        "limits": {
          "memory": "1024Mi",
          "cpu": "300m",
          "ephemeral-storage": "1Gi"
        }
      },
      "ldapproxy": {
        "requests": {
          "memory": "512Mi",
          "cpu": "500m",
          "ephemeral-storage": "512Mi"
        },
        "limits": {
          "memory": "2036Mi",
          "cpu": "1000m",
          "ephemeral-storage": "1Gi"
        }
      },
      "ldapinit": {
        "requests": {
          "memory": "512Mi",
          "cpu": "100m",
          "ephemeral-storage": "1Gi"
        },
        "limits": {
          "memory": "2036Mi",
          "cpu": "500m",
          "ephemeral-storage": "2Gi"
        }
      },
      "metricsExporter": {
        "requests": {
          "memory": "96Mi",
          "cpu": "50m",
          "ephemeral-storage": "196Mi"
        },
        "limits": {
          "memory": "128Mi",
          "cpu": "100m",
          "ephemeral-storage": "256Mi"
        }
      }
    },
    "probes": {
      "ldap": {
        "livenessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 70,
          "failureThreshold": 10
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 25
        }
      },
      "ldapmetrics": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        }
      },
      "ldapproxy": {
        "livenessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 5
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 25
        }
      },
      "ldapagent": {
        "livenessProbe": {
          "initialDelaySeconds": 20,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 20,
          "periodSeconds": 3,
          "timeoutSeconds": 15,
          "failureThreshold": 1
        }
      }
    },
    "annotations": {},
    "labels": {}
  },
  "eric-tm-ingress-controller-cr": {
    "resources": {
      "contour": {
        "requests": {
          "cpu": "50m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "100m",
          "memory": "300Mi",
          "ephemeral-storage": ""
        }
      },
      "envoy": {
        "requests": {
          "cpu": "100m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "300Mi",
          "ephemeral-storage": ""
        }
      },
      "initconfig": {
        "requests": {
          "cpu": "300m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "500m",
          "memory": "350Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "contour": {
        "livenessProbe": {
          "initialDelaySeconds": 20,
          "periodSeconds": 10,
          "timeoutSeconds": 2,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 20,
          "periodSeconds": 10,
          "timeoutSeconds": 2,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "envoy": {
        "readinessProbe": {
          "initialDelaySeconds": 3,
          "periodSeconds": 3,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "service": {
      "annotations": {
        "sharedVIPLabel": "shared-vip-oam",
        "addressPoolName": "",
        "cloudProviderLB": {}
      },
      "loadBalancerIP": "",
      "externalIPv4": {
        "enabled": false,
        "loadBalancerIP": "",
        "annotations": {
          "addressPoolName": "",
          "sharedVIPLabel": "shared-vip-oam"
        }
      },
      "externalIPv6": {
        "enabled": false,
        "loadBalancerIP": "",
        "annotations": {
          "addressPoolName": "",
          "sharedVIPLabel": "shared-vip-oam"
        }
      }
    },
    "nodeSelector": {
      "contour": {},
      "envoy": {}
    },
    "affinity": {
      "contour": {
        "podAntiAffinity": "soft"
      },
      "envoy": {
        "podAntiAffinity": "soft"
      }
    },
    "tolerations": {
      "contour": [],
      "envoy": []
    },
    "podDisruptionBudget": {
      "contour": {
        "minAvailable": 1
      },
      "envoy": {
        "minAvailable": 1
      }
    },
    "replicaCount": {
      "contour": 2,
      "envoy": 2
    },
    "ingressClass": "sc",
    "annotations": {},
    "labels": {}
  },
  "eric-sec-certm": {
    "nodeSelector": {},
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "annotations": {},
    "labels": {},
    "resources": {
      "certm": {
        "limits": {
          "cpu": "1000m",
          "memory": "2Gi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "500m",
          "memory": "1Gi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "certm": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 4,
          "failureThreshold": 6
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 4,
          "timeoutSeconds": 3,
          "successThreshold": 1,
          "failureThreshold": 5
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 2,
          "timeoutSeconds": 5,
          "failureThreshold": 150
        }
      }
    }
  },
  "eric-sec-key-management": {
    "replicaCount": {
      "kms": 2
    },
    "resources": {
      "ca": {
        "requests": {
          "cpu": "100m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "100m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        }
      },
      "unsealer": {
        "requests": {
          "cpu": "100m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "100m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        }
      },
      "shelter": {
        "requests": {
          "cpu": "100m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "300m",
          "memory": "1200Mi",
          "ephemeral-storage": ""
        }
      },
      "vault": {
        "requests": {
          "cpu": "100m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "300m",
          "memory": "1200Mi",
          "ephemeral-storage": ""
        }
      },
      "metrics": {
        "requests": {
          "cpu": "10m",
          "memory": "10Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "shelter": {
        "livenessProbe": {
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 4,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "failureThreshold": 30
        }
      },
      "vault": {
        "livenessProbe": {
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 4,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "failureThreshold": 30
        }
      },
      "metrics": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 4,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 4,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "nodeSelector": {
      "kms": {},
      "bootstrapJob": {},
      "hooklauncher": {}
    },
    "podDisruptionBudget": {
      "minAvailable": 1
    },
    "tolerations": {
      "kms": [],
      "bootstrapJob": [],
      "hooklauncher": []
    },
    "annotations": {},
    "labels": {}
  },
  "eric-sec-sip-tls": {
    "resources": {
      "sip-tls": {
        "requests": {
          "memory": "200Mi",
          "cpu": "100m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "400Mi",
          "cpu": "1000m",
          "ephemeral-storage": ""
        }
      },
      "sip-tls-supervisor": {
        "requests": {
          "memory": "200Mi",
          "cpu": "100m",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "400Mi",
          "cpu": "300m",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "sip-tls": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "failureThreshold": 3
        }
      },
      "sip-tls-supervisor": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "failureThreshold": 5
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "failureThreshold": 3
        }
      }
    },
    "nodeSelector": {
      "sip-tls": {}
    },
    "tolerations": {
      "sip-tls": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "labels": {},
    "annotations": {}
  },
  "eric-data-distributed-coordinator-ed": {
    "env": {
      "dced": {
        "ETCD_HEARTBEAT_INTERVAL": 100,
        "ETCD_ELECTION_TIMEOUT": 1000
      }
    },
    "persistence": {
      "persistentVolumeClaim": {
        "storageClassName": "network-block",
        "size": "1Gi"
      }
    },
    "affinity": {
      "podAntiAffinity": "hard"
    },
    "nodeSelector": {
      "dced": {},
      "brAgent": {}
    },
    "resources": {
      "init": {
        "requests": {
          "cpu": "200m",
          "memory": "200Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "500m",
          "memory": "500Mi",
          "ephemeral-storage": ""
        }
      },
      "dced": {
        "requests": {
          "cpu": "400m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "1Gi",
          "ephemeral-storage": ""
        }
      },
      "brAgent": {
        "requests": {
          "cpu": "400m",
          "memory": "400Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "2Gi",
          "ephemeral-storage": ""
        }
      },
      "metricsexporter": {
        "requests": {
          "cpu": "100m",
          "memory": "8Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "200m",
          "memory": "32Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "dced": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 12
        }
      },
      "brAgent": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "metricsexporter": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "labels": {},
    "annotations": {}
  },
  "eric-cm-mediator": {
    "backend": {
      "dbuser": "scusr"
    },
    "resources": {
      "eric-cm-mediator": {
        "requests": {
          "memory": "256Mi",
          "cpu": "500m",
          "ephemeral-storage": "250Mi"
        },
        "limits": {
          "memory": "512Mi",
          "cpu": "2000m",
          "ephemeral-storage": "500Mi"
        }
      },
      "eric-cm-mediator-notifier": {
        "requests": {
          "memory": "256Mi",
          "cpu": "250m",
          "ephemeral-storage": "200Mi"
        },
        "limits": {
          "memory": "512Mi",
          "cpu": "2000m",
          "ephemeral-storage": "250Mi"
        }
      },
      "eric-cm-key-init": {
        "requests": {
          "memory": "32Mi",
          "cpu": "100m",
          "ephemeral-storage": "10Mi"
        },
        "limits": {
          "memory": "64Mi",
          "cpu": "200m",
          "ephemeral-storage": "10Mi"
        }
      },
      "eric-cm-mediator-init-container": {
        "requests": {
          "memory": "16Mi",
          "cpu": "50m",
          "ephemeral-storage": "10Mi"
        },
        "limits": {
          "memory": "32Mi",
          "cpu": "100m",
          "ephemeral-storage": "10Mi"
        }
      }
    },
    "probes": {
      "eric-cm-mediator": {
        "livenessProbe": {
          "initialDelaySeconds": 7,
          "periodSeconds": 17,
          "timeoutSeconds": 10,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "eric-cm-mediator-notifier": {
        "livenessProbe": {
          "initialDelaySeconds": 7,
          "periodSeconds": 17,
          "timeoutSeconds": 10,
          "failureThreshold": 3
        }
      }
    },
    "nodeSelector": {
      "eric-cm-mediator": {},
      "eric-cm-mediator-notifier": {},
      "eric-cm-key-init": {}
    },
    "tolerations": {
      "eric-cm-mediator": [],
      "eric-cm-mediator-notifier": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ],
      "eric-cm-key-init": []
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "podDisruptionBudget": {
      "eric-cm-mediator": {
        "minAvailable": "50%"
      }
    },
    "replicaCount": 2,
    "labels": {},
    "annotations": {}
  },
  "eric-cm-yang-provider": {
    "externaldb": {
      "dbuser": "scusr"
    },
    "nbiNotifications": {
      "notifyInternalChanges": true
    },
    "resources": {
      "initContainer": {
        "limits": {
          "cpu": "500m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      },
      "yangEngine": {
        "limits": {
          "cpu": "4000m",
          "memory": "2Gi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "250m",
          "memory": "500Mi",
          "ephemeral-storage": ""
        }
      },
      "yangDbAdapter": {
        "limits": {
          "cpu": "2000m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "100Mi",
          "ephemeral-storage": ""
        }
      },
      "sshd": {
        "limits": {
          "cpu": "1000m",
          "memory": "1200Mi",
          "ephemeral-storage": "500Mi"
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      },
      "schemaSynchronizer": {
        "limits": {
          "cpu": "4000m",
          "memory": "2Gi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      },
      "externalNotifSender": {
        "limits": {
          "cpu": "1000m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      },
      "yangLibExt": {
        "limits": {
          "cpu": "1000m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      },
      "notificationController": {
        "limits": {
          "cpu": "1000m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      },
      "pmMetrics": {
        "limits": {
          "cpu": "1000m",
          "memory": "250Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      },
      "cliExtensionCmds": {
        "limits": {
          "cpu": "500m",
          "memory": "128Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "yangEngine": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 15
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 15
        },
        "startupProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 30
        }
      },
      "externalNotifSender": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "failureThreshold": 30
        }
      },
      "yangLibExt": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 15
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 30
        }
      },
      "yangDbAdapter": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "startupProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "failureThreshold": 30
        }
      },
      "schemaSynchronizer": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 60
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 2,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "failureThreshold": 30
        }
      },
      "sshd": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "failureThreshold": 30
        }
      },
      "pmMetrics": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "failureThreshold": 30
        }
      },
      "cliExtensionCmds": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "failureThreshold": 30
        }
      },
      "notificationController": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 2,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "failureThreshold": 30
        }
      }
    },
    "service": {
      "cmNbiPorts": {
        "dscp": 0
      },
      "sshHostKeys": {
        "name": "cm-cliNetconf-ssh-server"
      },
      "annotations": {
        "cloudProviderLB": "",
        "sharedVIPLabel": "shared-vip-oam",
        "addressPoolName": ""
      },
      "loadBalancerIP": "",
      "externalIPv4": {
        "enabled": false,
        "loadBalancerIP": "",
        "annotations": {
          "sharedVIPLabel": "shared-vip-oam",
          "addressPoolName": ""
        }
      },
      "externalIPv6": {
        "enabled": false,
        "loadBalancerIP": "",
        "annotations": {
          "sharedVIPLabel": "shared-vip-oam",
          "addressPoolName": ""
        }
      },
      "certificates": {
        "asymmetricKeyCertificateName": "netconf-default-key-cert",
        "trustedCertificateListName": "sc-trusted-default-cas"
      }
    },
    "externalTls": {
      "netconf": {
        "enabled": true
      }
    },
    "ldap": {
      "ipv6Enabled": false
    },
    "nodeSelector": {},
    "tolerations": {
      "eric-cm-yang-provider": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 30
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "podDisruptionBudget": {
      "minAvailable": 0
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "annotations": {},
    "labels": {},
    "certManagement": {
      "sshKeys": {
        "enabled": false
      }
    }
  },
  "eric-data-coordinator-zk": {
    "persistence": {
      "persistentVolumeClaim": {
        "storageClassName": "network-block",
        "size": "5Gi"
      }
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "nodeSelector": {
      "datacoordinatorzk": {}
    },
    "resources": {
      "datacoordinatorzk": {
        "requests": {
          "cpu": "1",
          "memory": "2Gi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "2",
          "memory": "4Gi",
          "ephemeral-storage": ""
        }
      },
      "metricsexporter": {
        "requests": {
          "cpu": "100m",
          "memory": "8Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "200m",
          "memory": "32Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "datacoordinatorzk": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "metricsexporter": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "tolerations": {
      "datacoordinatorzk": []
    },
    "podDisruptionBudget": {
      "minAvailable": "51%"
    },
    "annotations": {},
    "labels": {}
  },
  "eric-data-document-database-pg": {
    "persistentVolumeClaim": {
      "storageClassName": "network-block",
      "size": "8Gi"
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "nodeSelector": {
      "postgres": {},
      "brAgent": {},
      "cleanuphook": {}
    },
    "tolerations": {
      "postgres": [],
      "brAgent": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ],
      "cleanuphook": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "podDisruptionBudget": {
      "minAvailable": "50%"
    },
    "resources": {
      "postgres": {
        "requests": {
          "memory": "256Mi",
          "cpu": "100m",
          "hugepages-2Mi": "",
          "hugepages-1Gi": "",
          "ephemeral-storage": ""
        },
        "limits": {
          "memory": "2560Mi",
          "cpu": "1",
          "hugepages-2Mi": "",
          "hugepages-1Gi": "",
          "ephemeral-storage": ""
        }
      },
      "logshipper": {
        "requests": {
          "ephemeral-storage": ""
        },
        "limits": {
          "ephemeral-storage": ""
        }
      },
      "metrics": {
        "requests": {
          "memory": "128Mi",
          "cpu": "100m",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "200m",
          "memory": "256Mi",
          "ephemeral-storage": ""
        }
      },
      "kube_client": {
        "requests": {
          "memory": "256Mi",
          "cpu": "100m",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "200m",
          "memory": "512Mi",
          "ephemeral-storage": ""
        }
      },
      "brm": {
        "requests": {
          "memory": "256Mi",
          "cpu": "300m",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "512Mi",
          "ephemeral-storage": ""
        }
      },
      "hooklauncher": {
        "requests": {
          "ephemeral-storage": ""
        },
        "limits": {
          "ephemeral-storage": ""
        }
      },
      "bra": {
        "requests": {
          "memory": "1Gi",
          "cpu": "500m",
          "ephemeral-storage": "10Gi"
        },
        "limits": {
          "cpu": "1",
          "memory": "2Gi",
          "ephemeral-storage": "12Gi"
        }
      }
    },
    "probes": {
      "postgres": {
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 32,
          "failureThreshold": 70
        },
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "failureThreshold": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 6
        }
      },
      "metrics": {
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 10,
          "failureThreshold": 70
        },
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "failureThreshold": 20
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 15
        }
      },
      "brm": {
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 10,
          "failureThreshold": 25
        },
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 10,
          "failureThreshold": 6
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 10
        }
      },
      "bra": {
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 10,
          "failureThreshold": 20
        },
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 10,
          "failureThreshold": 6
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 6
        }
      }
    },
    "annotations": {},
    "labels": {}
  },
  "eric-data-message-bus-kf": {
    "persistence": {
      "persistentVolumeClaim": {
        "storageClassName": "network-block",
        "size": "15Gi"
      }
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "nodeSelector": {},
    "tolerations": {
      "messagebuskf": []
    },
    "resources": {
      "checkzkready": {
        "requests": {
          "cpu": "500m",
          "memory": "512Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "3Gi",
          "ephemeral-storage": ""
        }
      },
      "messagebuskf": {
        "requests": {
          "cpu": "1",
          "memory": "1Gi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "2",
          "memory": "6Gi",
          "ephemeral-storage": ""
        }
      },
      "metricsexporter": {
        "requests": {
          "cpu": "100m",
          "memory": "8Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "200m",
          "memory": "32Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "messagebuskf": {
        "livenessProbe": {
          "initialDelaySeconds": 60,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 60,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "metricsexporter": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "podDisruptionBudget": {
      "minAvailable": 2
    },
    "replicaCount": 3,
    "annotations": {},
    "labels": {}
  },
  "eric-data-wide-column-database-cd": {
    "metrics": {
      "cassandra": {
        "enabled": true,
        "excluded": ""
      }
    },
    "sysctls": {
      "cassandra": []
    },
    "persistence": {
      "dataVolume": {
        "persistentVolumeClaim": {
          "storageClassName": "network-block",
          "size": "100Gi"
        }
      }
    },
    "replicaCount": 2,
    "resources": {
      "cassandra": {
        "limits": {
          "cpu": "4",
          "memory": "16Gi"
        },
        "requests": {
          "cpu": "4",
          "memory": "16Gi"
        }
      },
      "ecchronos": {
        "limits": {
          "cpu": 1,
          "memory": "512Mi"
        },
        "requests": {
          "cpu": "200m",
          "memory": "256Mi"
        }
      },
      "brsc": {
        "requests": {
          "cpu": "0.2",
          "memory": "256Mi"
        },
        "limits": {
          "cpu": "0.5",
          "memory": "512Mi"
        }
      }
    },
    "probes": {
      "brsc": {
        "livenessProbe": {
          "initialDelaySeconds": 60,
          "periodSeconds": 20,
          "timeoutSeconds": 10,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": "",
          "failureThreshold": 6
        }
      },
      "cassandra": {
        "livenessProbe": {
          "initialDelaySeconds": 120,
          "periodSeconds": 20,
          "timeoutSeconds": 10,
          "failureThreshold": 6
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": "",
          "failureThreshold": 6
        }
      },
      "ecchronos": {
        "livenessProbe": {
          "initialDelaySeconds": 7200,
          "periodSeconds": 20,
          "timeoutSeconds": 10,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "failureThreshold": 6
        }
      }
    },
    "affinity": {
      "podAntiAffinity": "hard"
    },
    "nodeSelector": {
      "cassandra": {},
      "configureKeyspacesJob": {},
      "tlsRestarter": {},
      "annotator": {},
      "operator": {}
    },
    "tolerations": {
      "cassandra": {},
      "configureKeyspacesJob": {},
      "tlsRestarter": {},
      "annotator": {},
      "operator": {}
    },
    "cassandra": {
      "remoteSeedNodes": "",
      "jvmOptions": {
        "set": [
          "Dmv_enable_coordinator_batchlog=true",
          "Xms8G",
          "Xmx8G",
          "Xmn800M"
        ],
        "unset": [
          "Xms1G",
          "Xmx1G",
          "Xmn100M",
          "Xms4G",
          "Xmx4G",
          "Xmn400M"
        ]
      }
    },
    "dataCenters": [
      {
        "name": "datacenter1",
        "statefulSetNameOverride": "eric-data-wide-column-database-cd",
        "service": {
          "externalIP": {
            "annotations": {
              "addressPoolName": ""
            }
          }
        }
      }
    ],
    "georeplication": {
      "certificates": {
        "asymmetricKeyCertificateName": "internode-external-key/internode-external-cert",
        "trustedCertificateListName": "sc-trusted-default-cas"
      }
    },
    "egress": {
      "certificates": {
        "asymmetricKeyCertificateName": "cql-client-external-key/cql-client-external-cert",
        "trustedCertificateListName": "sc-trusted-default-cas"
      }
    },
    "service": {
      "certificates": {
        "asymmetricKeyCertificateName": "cql-server-external-key/cql-server-external-cert",
        "trustedCertificateListName": "sc-trusted-default-cas",
        "internal": {
          "timeToLive": "15778800",
          "renewalLeadTime": "15692400"
        }
      },
      "externalTrafficPolicy": "Local",
      "externalIP": {
        "enabled": false
      },
      "endpoints": {
        "cql": {
          "tls": {
            "enforced": "optional"
          }
        }
      }
    },
    "annotations": {},
    "labels": {},
    "repairAgent": {
      "enabled": true,
      "ecchronos": {
        "yaml": {
          "statistics": {
            "enabled": false
          },
          "repair": {
            "unwind_ratio": 0.5,
            "interval": {
              "time": 7,
              "unit": "days"
            },
            "alarm": {
              "warn": {
                "time": 8,
                "unit": "days"
              },
              "error": {
                "time": 10,
                "unit": "days"
              }
            }
          }
        },
        "jvmOptions": {
          "set": [
            "Xms16M",
            "Xmx32M",
            "Xmn10M"
          ]
        }
      }
    }
  },
  "eric-fh-alarm-handler": {
    "backend": {
      "dbuser": "scusr"
    },
    "resources": {
      "alarmhandler": {
        "requests": {
          "memory": "384Mi",
          "cpu": "500m",
          "ephemeral-storage": "2Gi"
        },
        "limits": {
          "memory": "512Mi",
          "cpu": "1000m",
          "ephemeral-storage": "4Gi"
        }
      },
      "topiccreator": {
        "requests": {
          "memory": "384Mi",
          "cpu": "500m",
          "ephemeral-storage": "1Gi"
        },
        "limits": {
          "memory": "512Mi",
          "cpu": "1000m",
          "ephemeral-storage": "2Gi"
        }
      }
    },
    "probes": {
      "alarmHandler": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 17,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 5
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 5,
          "timeoutSeconds": 5,
          "failureThreshold": 30
        }
      }
    },
    "alarmhandler": {
      "alarmExpirationTimer": 30,
      "alarmHistorySize": "10"
    },
    "nodeSelector": {
      "alarmhandler": {},
      "hooklauncher": {}
    },
    "tolerations": {
      "alarmhandler": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "affinity": {
      "podAntiAffinity": "hard"
    },
    "replicaCount": 2,
    "annotations": {},
    "labels": {}
  },
  "eric-fh-snmp-alarm-provider": {
    "service": {
      "annotations": {
        "cloudProviderLB": {},
        "sharedVIPLabel": "shared-vip-oam",
        "addressPoolName": ""
      },
      "loadBalancerIP": "",
      "externalIPv4": {
        "enabled": false,
        "cloudProviderLB": {},
        "loadBalancerIP": "",
        "annotations": {
          "addressPoolName": "",
          "sharedVIPLabel": "shared-vip-oam"
        }
      },
      "externalIPv6": {
        "enabled": false,
        "cloudProviderLB": {},
        "loadBalancerIP": "",
        "annotations": {
          "addressPoolName": "",
          "sharedVIPLabel": "shared-vip-oam"
        }
      },
      "secretName": ""
    },
    "nodeSelector": {
      "snmpAP": {},
      "hooklauncher": {}
    },
    "sourceIdentifierType": 1,
    "sourceIdentifier": "127.0.0.1",
    "annotations": {},
    "labels": {},
    "resources": {
      "alarmprovider": {
        "requests": {
          "memory": "384Mi",
          "cpu": "0.1",
          "ephemeral-storage": "2Gi"
        },
        "limits": {
          "memory": "1.5Gi",
          "cpu": "0.2",
          "ephemeral-storage": "4Gi"
        }
      }
    }
  },
  "eric-pm-server": {
    "resources": {
      "eric-pm-server": {
        "limits": {
          "cpu": "2",
          "memory": "8Gi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "250m",
          "memory": "4Gi",
          "ephemeral-storage": ""
        }
      },
      "eric-pm-configmap-reload": {
        "limits": {
          "cpu": "200m",
          "memory": "32Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "8Mi",
          "ephemeral-storage": ""
        }
      },
      "eric-pm-exporter": {
        "limits": {
          "cpu": "200m",
          "memory": "32Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "8Mi",
          "ephemeral-storage": ""
        }
      },
      "eric-pm-reverseproxy": {
        "limits": {
          "cpu": "2",
          "memory": "128Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "32Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "server": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 10,
          "timeoutSeconds": 30,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "reverseproxy": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        }
      },
      "exporter": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        }
      },
      "configmapreload": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "failureThreshold": 3
        }
      }
    },
    "server": {
      "persistentVolume": {
        "storageClass": "network-block",
        "size": "80Gi"
      },
      "replicaCount": 1
    },
    "tolerations": {
      "eric-pm-server": []
    },
    "nodeSelector": {
      "eric-pm-server": [],
      "eric-pm-server-promxy": []
    },
    "podDisruptionBudget": {
      "minAvailable": 0
    },
    "topologySpreadConstraints": {
      "eric-pm-server": [],
      "eric-pm-server-promxy": [],
      "hooklauncher": []
    },
    "annotations": {},
    "labels": {},
    "externalRemoteWrite": [],
    "config": {
      "certm_tls": []
    }
  },
  "eric-log-transformer": {
    "tolerations": {
      "logtransformer": []
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "egress": {
      "lumberjack": {
        "enabled": false,
        "certificates": {
          "trustedCertificateListName": "sc-trusted-default-cas"
        },
        "remoteHosts": []
      },
      "syslog": {
        "enabled": false,
        "tls": {
          "enabled": true
        },
        "certificates": {
          "asymmetricKeyCertificateName": "syslog-default-key-cert",
          "trustedCertificateListName": "sc-trusted-default-cas"
        },
        "remoteHosts": [],
        "inclusions": [],
        "exclusions": []
      }
    },
    "nodeSelector": {},
    "resources": {
      "logtransformer": {
        "requests": {
          "cpu": "250m",
          "memory": "8Gi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "2000m",
          "memory": "8Gi",
          "ephemeral-storage": ""
        },
        "jvm": {
          "initialMemoryAllocationPercentage": 67,
          "smallMemoryAllocationMaxPercentage": 50,
          "largeMemoryAllocationMaxPercentage": 67
        }
      },
      "metrics": {
        "limits": {
          "cpu": "100m",
          "memory": "256Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "25m",
          "memory": "64Mi",
          "ephemeral-storage": ""
        },
        "jvm": {
          "initialMemoryAllocationPercentage": 15,
          "smallMemoryAllocationMaxPercentage": 30,
          "largeMemoryAllocationMaxPercentage": 30
        }
      },
      "tlsproxy": {
        "limits": {
          "cpu": "100m",
          "memory": "128Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "25m",
          "memory": "64Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "logtransformer": {
        "livenessProbe": {
          "initialDelaySeconds": 600,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 80,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "metrics": {
        "livenessProbe": {
          "initialDelaySeconds": 600,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 80,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "tlsproxy": {
        "livenessProbe": {
          "initialDelaySeconds": 600,
          "periodSeconds": 5,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 80,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "replicaCount": 2,
    "jvmHeap": "4096m",
    "annotations": {},
    "labels": {}
  },
  "eric-log-shipper": {
    "resources": {
      "logshipper": {
        "limits": {
          "cpu": "250m",
          "memory": "500Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "100Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "nodeSelector": {},
    "tolerations": {
      "logshipper": []
    },
    "annotations": {},
    "labels": {}
  },
  "eric-data-search-engine": {
    "jvmHeap": {
      "ingest": "1024m",
      "master": "512m",
      "data": "2048m"
    },
    "resources": {
      "ingest": {
        "limits": {
          "cpu": "500m",
          "memory": "2Gi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "500m",
          "memory": "2Gi",
          "ephemeral-storage": ""
        }
      },
      "master": {
        "limits": {
          "cpu": "500m",
          "memory": "1.5Gi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "500m",
          "memory": "1.5Gi",
          "ephemeral-storage": ""
        }
      },
      "data": {
        "limits": {
          "cpu": "750m",
          "memory": "4Gi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "750m",
          "memory": "4Gi",
          "ephemeral-storage": ""
        }
      },
      "metrics": {
        "limits": {
          "cpu": "100m",
          "memory": "128Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "25m",
          "memory": "64Mi",
          "ephemeral-storage": ""
        }
      },
      "tlsproxy": {
        "limits": {
          "cpu": "100m",
          "memory": "128Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "25m",
          "memory": "64Mi",
          "ephemeral-storage": ""
        }
      },
      "sysctl": {
        "limits": {
          "cpu": "100m",
          "memory": "128Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "25m",
          "memory": "64Mi",
          "ephemeral-storage": ""
        }
      },
      "preupgradehook": {
        "limits": {
          "cpu": "100m",
          "memory": "128Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "25m",
          "memory": "64Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "ingest": {
        "livenessProbe": {
          "initialDelaySeconds": 600,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "master": {
        "livenessProbe": {
          "initialDelaySeconds": 600,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "data": {
        "livenessProbe": {
          "initialDelaySeconds": 600,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 1,
          "periodSeconds": 30,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3000
        }
      },
      "metrics": {
        "livenessProbe": {
          "initialDelaySeconds": 300,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 20,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 300
        }
      },
      "tlsproxy": {
        "livenessProbe": {
          "initialDelaySeconds": 300,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 300
        }
      }
    },
    "persistence": {
      "data": {
        "persistentVolumeClaim": {
          "size": "100Gi",
          "storageClassName": "network-block"
        }
      },
      "master": {
        "persistentVolumeClaim": {
          "size": "64Mi",
          "storageClassName": "network-block"
        }
      }
    },
    "service": {
      "network": {
        "protocol": {
          "IPv6": false
        }
      }
    },
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "nodeSelector": {
      "ingest": {},
      "master": {},
      "data": {}
    },
    "podDisruptionBudget": {
      "data": {
        "maxUnavailable": 1
      },
      "ingest": {
        "maxUnavailable": 1
      },
      "master": {
        "maxUnavailable": 1
      }
    },
    "tolerations": {
      "data": [],
      "ingest": [],
      "master": [],
      "preupgradehook": []
    },
    "replicaCount": {
      "ingest": 1,
      "master": 3,
      "data": 2
    },
    "annotations": {},
    "labels": {}
  },
  "eric-data-search-engine-curator": {
    "actions": "1:\n  action: delete_indices\n  description: Remove indices containing bsf logs older than 7 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-bsf-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 7\n2:\n  action: delete_indices\n  description: Remove bsf indices when accumulated index with this prefix reaches 12 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-bsf-logs-\n    - filtertype: space\n      disk_space: 12\n3:\n  action: delete_indices\n  description: Remove indices containing scp logs older than 7 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-scp-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 7\n4:\n  action: delete_indices\n  description: Remove scp indices when accumulated index with this prefix reaches 12 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-scp-logs-\n    - filtertype: space\n      disk_space: 12\n5:\n  action: delete_indices\n  description: Remove indices containing sepp logs older than 7 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-sepp-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 7\n6:\n  action: delete_indices\n  description: Remove sepp indices when accumulated index with this prefix reaches 12 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-sepp-logs-\n    - filtertype: space\n      disk_space: 12\n7:\n  action: delete_indices\n  description: Remove indices containing sc logs older than 7 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 7\n8:\n  action: delete_indices\n  description: Remove sc indices when accumulated index with this prefix reaches 12 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: sc-logs-\n    - filtertype: space\n      disk_space: 12\n9:\n  action: delete_indices\n  description: Remove indices containing adp generic services logs older than 15 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 15\n10:\n  action: delete_indices\n  description: Remove adp generic services indices when accumulated index with this prefix reaches 15 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-logs-\n    - filtertype: space\n      disk_space: 15\n11:\n  action: delete_indices\n  description: Remove indices containing audit logs older than 30 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-audit-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 30\n12:\n  action: delete_indices\n  description: Remove audit indices when accumulated index with this prefix reaches 1 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-audit-logs-\n    - filtertype: space\n      disk_space: 1\n13:\n  action: delete_indices\n  description: Remove indices containing asi logs older than 30 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-asi-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 30\n14:\n  action: delete_indices\n  description: Remove asi indices when accumulated index with this prefix reaches 1 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-asi-logs-\n    - filtertype: space\n      disk_space: 1\n15:\n  action: delete_indices\n  description: Remove indices containing debug logs older than 3 days\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-debug-logs-\n    - filtertype: age\n      source: name\n      direction: older\n      timestring: '%Y.%m.%d'\n      unit: days\n      unit_count: 3\n16:\n  action: delete_indices\n  description: Remove debug indices when accumulated index with this prefix reaches 8 GB\n  options:\n    disable_action: false\n    ignore_empty_list: true\n  filters:\n    - filtertype: pattern\n      kind: prefix\n      value: adp-app-debug-logs-\n    - filtertype: space\n      disk_space: 8\n",
    "nodeSelector": {},
    "resources": {
      "curator": {
        "limits": {
          "cpu": "100m",
          "memory": "100Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "100Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "annotations": {},
    "labels": {},
    "tolerations": []
  },
  "eric-cnom-server": {
    "features": {
      "serviceCommunicationProxy": false
    },
    "resources": {
      "server": {
        "requests": {
          "memory": "400Mi",
          "cpu": "500m"
        },
        "limits": {
          "memory": "400Mi",
          "cpu": "500m"
        }
      }
    },
    "probes": {
      "server": {
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "failureThreshold": 180
        },
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 5,
          "failureThreshold": 10
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 1,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "podPriority": {
      "server": {
        "priorityClassName": ""
      }
    },
    "nodeSelector": {
      "server": {}
    },
    "tolerations": {
      "server": []
    },
    "topologySpreadConstraints": {
      "server": []
    },
    "annotations": {},
    "labels": {},
    "authentication": {
      "session": {
        "singleSession": true
      }
    }
  },
  "eric-pm-bulk-reporter": {
    "resources": {
      "initcontainer": {
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "200Mi",
          "ephemeral-storage": ""
        }
      },
      "bulkreporter": {
        "requests": {
          "cpu": "100m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "200Mi",
          "ephemeral-storage": ""
        }
      },
      "alarmreporter": {
        "requests": {
          "cpu": "100m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "200Mi",
          "ephemeral-storage": ""
        }
      },
      "pmsftp": {
        "requests": {
          "cpu": "50m",
          "memory": "50Mi",
          "ephemeral-storage": ""
        },
        "limits": {
          "cpu": "1",
          "memory": "200Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "bulkreporter": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "alarmreporter": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      },
      "pmsftp": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 20,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "persistentVolumeClaim": {
      "storageClassName": "network-block",
      "size": "10Gi"
    },
    "service": {
      "annotations": {
        "cloudProviderLB": {},
        "sharedVIPLabel": "shared-vip-oam",
        "addressPoolName": ""
      },
      "loadBalancerIP": "",
      "externalIPv4": {
        "enabled": false,
        "externalTrafficPolicy": "Cluster",
        "loadBalancerIP": "",
        "annotations": {
          "cloudProviderLB": {},
          "sharedVIPLabel": "shared-vip-oam",
          "addressPoolName": ""
        }
      },
      "externalIPv6": {
        "enabled": false,
        "externalTrafficPolicy": "Cluster",
        "loadBalancerIP": "",
        "annotations": {
          "cloudProviderLB": {},
          "sharedVIPLabel": "shared-vip-oam",
          "addressPoolName": ""
        }
      },
      "sshHostKeys": {
        "name": "pm-rop-sftp-server"
      }
    },
    "userConfig": {
      "ldap": {
        "useIPv6DNSFirst": false
      }
    },
    "env": {
      "iscompressed": false,
      "nodeType": "Signaling_Controller",
      "maxNoOfPmFiles": 1000
    },
    "nodeSelector": {
      "eric-pm-bulk-reporter": {},
      "hooklauncher": {}
    },
    "tolerations": {
      "eric-pm-bulk-reporter": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "podDisruptionBudget": {
      "minAvailable": 0
    },
    "annotations": {},
    "labels": {},
    "objectStorage": {
      "enabled": false
    },
    "security": {
      "keyManagement": {
        "enabled": true
      },
      "certificateManagement": {
        "enabled": false
      }
    }
  },
  "eric-lm-combined-server": {
    "licenseServerClient": {
      "licenseServer": {
        "thrift": {
          "host": ""
        }
      },
      "affinity": {}
    },
    "podDisruptionBudget": {
      "licenseConsumerHandler": {
        "minAvailable": 1
      }
    },
    "service": {
      "licenseConsumerHandler": {
        "type": "ClusterIP"
      }
    },
    "licenseConsumerHandler": {
      "affinity": {}
    },
    "replicaCount": {
      "licenseConsumerHandler": 2,
      "licenseServerClient": 1
    },
    "resources": {
      "eric-lm-license-consumer-handler": {
        "limits": {
          "cpu": "2000m",
          "memory": "2048Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "1000m",
          "memory": "512Mi",
          "ephemeral-storage": ""
        }
      },
      "eric-lm-license-server-client": {
        "limits": {
          "cpu": "1000m",
          "memory": "2048Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "100m",
          "memory": "512Mi",
          "ephemeral-storage": ""
        }
      },
      "eric-lm-database-migration": {
        "limits": {
          "cpu": "2000m",
          "memory": "2048Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "500m",
          "memory": "128Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "probes": {
      "eric-lm-license-consumer-handler": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "failureThreshold": 1
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 1
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 1,
          "timeoutSeconds": 1,
          "failureThreshold": 300
        }
      },
      "eric-lm-license-server-client": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "failureThreshold": 1
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 10,
          "timeoutSeconds": 10,
          "successThreshold": 1,
          "failureThreshold": 1
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 1,
          "timeoutSeconds": 1,
          "failureThreshold": 300
        }
      }
    },
    "nodeSelector": {
      "licenseServerClient": {},
      "licenseConsumerHandler": {}
    },
    "licenseServerIpAddresses": {
      "ip1": "",
      "ip2": ""
    },
    "database": {
      "userName": "scusr"
    },
    "affinity": {
      "podAntiAffinity": "hard"
    },
    "tolerations": {
      "licenceConsumerHandler": [],
      "licenseServerClient": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "annotations": {},
    "labels": {}
  },
  "eric-odca-diagnostic-data-collector": {
    "resources": {
      "diagnostic-data-collector": {
        "requests": {
          "memory": "100M",
          "cpu": "100m",
          "ephemeral-storage": "1Gi"
        },
        "limits": {
          "memory": "1.5G",
          "cpu": 1.5,
          "ephemeral-storage": "10Gi"
        }
      },
      "diagnostic-data-collector-manual": {
        "requests": {
          "memory": "100M",
          "cpu": "100m",
          "ephemeral-storage": "1Gi"
        },
        "limits": {
          "memory": "250M",
          "cpu": "500m",
          "ephemeral-storage": "10Gi"
        }
      }
    },
    "probes": {
      "interval": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 3,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 3,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 1,
          "timeoutSeconds": 1,
          "failureThreshold": 480
        }
      },
      "manual": {
        "livenessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 3,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 3,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "startupProbe": {
          "initialDelaySeconds": 0,
          "periodSeconds": 1,
          "timeoutSeconds": 1,
          "failureThreshold": 480
        }
      }
    },
    "annotations": {},
    "labels": {},
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "tolerations": {
      "interval": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ],
      "manual": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ]
    },
    "nodeSelector": {
      "interval": {},
      "manual": {}
    }
  },
  "eric-data-object-storage-mn": {
    "replicas": 4,
    "persistence": {
      "persistentVolumeClaim": {
        "storageClassName": "network-block",
		"size": "10Gi"
      }
    },
    "imageCredentials": {
      "osmn": {
        "registry": {
          "imagePullPolicy": ""
        }
      },
      "init": {
        "registry": {
          "imagePullPolicy": ""
        }
      },
      "bra": {
        "registry": {
          "imagePullPolicy": ""
        }
      }
    },
    "nodeSelector": {},
    "tolerations": [],
    "affinity": {
      "podAntiAffinity": "soft"
    },
    "resources": {
      "server": {
        "requests": {
          "memory": "2Gi",
          "cpu": "250m"
        },
        "limits": {
          "memory": "8Gi",
          "cpu": "500m"
        }
      },
      "mgt": {
        "requests": {
          "memory": "256Mi",
          "cpu": "250m"
        },
        "limits": {
          "memory": "512Mi",
          "cpu": "500m"
        }
      }
    },
    "probes": {
      "server": {
        "livenessProbe": {
          "initialDelaySeconds": 30,
          "periodSeconds": 5,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 60,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 1
        }
      },
      "mgt": {
        "livenessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 5,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 15,
          "periodSeconds": 5,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "podDisruptionBudget": {
      "maxUnavailable": 1
    },
    "labels": {}
  },
  "eric-data-sftp-server": {
    "replicaCount": 1,
    "nodeSelector": {},
    "tolerations": [],
    "service": {
      "sshHostkeys": {
        "name": "eric-data-sftp-server-ssh-server-key"
      },
      "annotations": {
        "sharedVIPLabel": "shared-vip-oam",
        "addressPoolName": "",
        "cloudProviderLB": {}
      },
      "loadBalancerIP": "",
      "port": 9023
    },
    "resources": {
      "sftpServer": {
        "requests": {
          "memory": "256Mi",
          "cpu": "50m"
        },
        "limits": {
          "memory": "1024Mi",
          "cpu": "500m"
        }
      }
    },
    "probes": {
      "sftpServer": {
        "livenessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 5,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        },
        "readinessProbe": {
          "initialDelaySeconds": 5,
          "periodSeconds": 15,
          "timeoutSeconds": 15,
          "successThreshold": 1,
          "failureThreshold": 3
        }
      }
    },
    "podDisruptionBudget": {
      "minAvailable": 0
    },
    "labels": {},
    "annotations": {},
    "certmHostKey": {
      "enabled": false
    },
    "userManagement": {
      "ldap": {
        "lookupFamilyOrder": "ipv4_first"
      }
    }
  },
  "eric-si-application-sys-info-handler": {
    "nodeSelector": {
      "eric-si-application-sys-info-handler": {},
      "hooklauncher": {}
    },
    "tolerations": {
      "eric-si-application-sys-info-handler": [
        {
          "key": "node.kubernetes.io/not-ready",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        },
        {
          "key": "node.kubernetes.io/unreachable",
          "operator": "Exists",
          "effect": "NoExecute",
          "tolerationSeconds": 0
        }
      ],
      "hooklauncher": []
    },
    "podPriority": {
      "asih": {
        "priorityClassName": ""
      },
      "hooklauncher": {
        "priorityClassName": ""
      }
    },
    "labels": {},
    "annotations": {},
    "resources": {
      "eric-si-application-sys-info-handler": {
        "limits": {
          "cpu": "100m",
          "memory": "100Mi"
        },
        "requests": {
          "cpu": "50m",
          "memory": "50Mi"
        }
      }
    },
    "probes": {
      "eric-si-application-sys-info-handler": {
        "livenessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 30,
          "timeoutSeconds": 20,
          "successThreshold": 1,
          "failureThreshold": 5
        },
        "readinessProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 30,
          "timeoutSeconds": 20,
          "successThreshold": 1,
          "failureThreshold": 25
        },
        "startupProbe": {
          "initialDelaySeconds": 10,
          "periodSeconds": 10,
          "timeoutSeconds": 20,
          "failureThreshold": 30
        }
      }
    },
    "asih": {
      "applicationId": "sc-testnode"
    },
    "applicationInfoService": {
      "port": 9095
    }
  },
  "eric-probe-virtual-tap-broker": {
    "replicaCount": 1,
    "dtls": {
        "enabled": false
    },
    "egress": {
      "probeVtapUDPClient": {
        "certificates": {
          "asymmetricKeyCertificateName": "probe-vtap-udp-client",
          "trustedCertificateListName": "probe-vtap-udp-client"
        }
      }
    },
    "resources": {
      "VirtualTapBroker": {
        "limits": {
          "cpu": "4000m",
          "memory": "512Mi",
          "ephemeral-storage": ""
        },
        "requests": {
          "cpu": "4000m",
          "memory": "512Mi",
          "ephemeral-storage": ""
        }
      }
    },
    "tolerations": [],
    "labels": {
      "eric-cm-mediator-access": "true",
      "eric-si-application-sys-info-handler-access": "true"
    },
    "timeorder": {
      "enabled": false,
      "maxWaitTime": 25
    }
  }
}