{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Generated by Yang2JsonSchema (1.14.0-483 2020-02-21 12:30:25 CET) on Apr 2, 2021, 4:09:49 PM from Yang module: ericsson-csa (2.1.1), with features: [], and with deviations/extensions: [ericsson-complete-ext.yang]",
  "title": "ericsson-csa",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "ericsson-csa:scp-function": {
      "type": "object",
      "description": "Configuration settings for the Service Communication Proxy NF",
      "additionalProperties": false,
      "properties": {
        "nf-instance": {
          "type": "array",
          "maxItems": 1,
          "description": "The SCP instance defines the behavior of the SCP NF as well as the NRF registration behavior",
          "additionalProperties": false,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "description": "Name uniquely identifying the SCP instance"
              },
              "nf-profile": {
                "type": "array",
                "description": "Profile consisting of general parameters of the SCP instance and the services exposed by it, sent to the NRF at registration",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name uniquely identifying the NF profile"
                    },
                    "service-address-ref": {
                      "type": "string",
                      "description": "Service address on which the SCP listens for incoming requests"
                    },
                    "nf-service": {
                      "type": "array",
                      "description": "The configuration of NF services, proxied through the SCP NF instance, which can be discovered by other NFs",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "service-address-ref": {
                            "type": "array",
                            "description": "Service address on which the SCP listens for incoming requests",
                            "additionalItems": false,
                            "items": {
                              "type": "string"
                            }
                          },
                          "service-instance-id": {
                            "type": "string",
                            "description": "Name uniquely identifying this service instance."
                          },
                          "service-name": {
                            "enum": [
                              "nchf-spendinglimitcontrol",
                              "nchf-convergedcharging",
                              "nbsf-management"
                            ],
                            "description": "Name identifying the type of NF service."
                          },
                          "scheme": {
                            "enum": [
                              "http",
                              "https"
                            ],
                            "description": "Specifies the URI scheme"
                          },
                          "api-prefix": {
                            "type": "string",
                            "description": "Optional path used to construct the API URI for this service"
                          },
                          "allowed-plmn": {
                            "type": "array",
                            "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                            "additionalProperties": false,
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "mcc": {
                                  "type": "string",
                                  "pattern": "^[0-9]{3}$",
                                  "description": "Specifies the mobile country code of the PLMN"
                                },
                                "mnc": {
                                  "type": "string",
                                  "pattern": "^[0-9]{2,3}$",
                                  "description": "Specifies the mobile network code of the PLMN"
                                }
                              },
                              "required": [
                                "mcc",
                                "mnc"
                              ]
                            }
                          },
                          "allowed-nf-type": {
                            "type": "array",
                            "description": "NF types which are allowed to access the NF service. If not specified, NFs of any type are allowed to access the NF service.",
                            "additionalItems": false,
                            "items": {
                              "enum": [
                                "nrf",
                                "udm",
                                "amf",
                                "smf",
                                "ausf",
                                "nef",
                                "pcf",
                                "smsf",
                                "nssf",
                                "udr",
                                "lmf",
                                "gmlc",
                                "5g-eir",
                                "sepp",
                                "upf",
                                "n3iwf",
                                "af",
                                "udsf",
                                "bsf",
                                "chf",
                                "nwdaf"
                              ]
                            }
                          },
                          "allowed-nf-domain": {
                            "type": "array",
                            "description": "NF domain names which are allowed to access the NF service. If not specified, If not specified, NFs in any domain are allowed to access the NF",
                            "additionalItems": false,
                            "items": {
                              "type": "string"
                            }
                          },
                          "allowed-nssai": {
                            "type": "array",
                            "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                            "additionalProperties": false,
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "sst": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 255,
                                  "description": "Specifies the slice service type of the S-NSSAI"
                                },
                                "sd": {
                                  "type": "string",
                                  "pattern": "^[A-Fa-f0-9]{6}$",
                                  "description": "Specifies the optional slice differentiator of the S-NSSAI"
                                }
                              },
                              "required": [
                                "sst"
                              ]
                            }
                          },
                          "service-priority": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "Service priority of this NF service relative to other NF services of the same type, to be used for NF service selection. Lower values indicate a higher priority"
                          },
                          "capacity": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "Static capacity information of this NF service expressed as a weight relative to other services of the same type, to be used for NF selection"
                          },
                          "recovery-time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp when the NF was (re)started"
                          }
                        },
                        "required": [
                          "scheme",
                          "service-instance-id",
                          "service-name"
                        ]
                      }
                    },
                    "nf-type": {
                      "enum": [
                        "nrf",
                        "udm",
                        "amf",
                        "smf",
                        "ausf",
                        "nef",
                        "pcf",
                        "smsf",
                        "nssf",
                        "udr",
                        "lmf",
                        "gmlc",
                        "5g-eir",
                        "sepp",
                        "upf",
                        "n3iwf",
                        "af",
                        "udsf",
                        "bsf",
                        "chf",
                        "nwdaf"
                      ],
                      "description": "NF types"
                    },
                    "nf-specific-info": {
                      "type": "object",
                      "description": "Specific data for the NF instance type",
                      "additionalProperties": false,
                      "properties": {
                        "chf-info": {
                          "type": "object",
                          "description": "Specific data for the CHF NF",
                          "additionalProperties": false,
                          "properties": {
                            "supi-range": {
                              "type": "array",
                              "description": "Specifies the list of ranges of SUPIs that can be served by the CHF instance. If not specified, the CHF can serve any SUPI",
                              "additionalProperties": false,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "ID uniquely identifying the SUPI range"
                                  },
                                  "supi-start": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "First value identifying the start of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                  },
                                  "supi-end": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "Last value identifying the end of a SUPI range, to be used when the range of SUPI's can be represented as a numeric range, IMSI ranges for example. This string shall consist only of digits."
                                  },
                                  "pattern": {
                                    "type": "string",
                                    "description": "Regular expression pattern representing the set of SUPIs belonging to this range. A SUPI value is considered part of the range if, and only if, the SUPI string fully matches the regular expression."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "gpsi-range": {
                              "type": "array",
                              "description": "Specifies the list of ranges of GPSIs that can be served by the CHF instance. If not specified, the CHF can serve any GPSI",
                              "additionalProperties": false,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "identity-start": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "First value identifying the start of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                  },
                                  "identity-end": {
                                    "type": "string",
                                    "pattern": "^[0-9]+$",
                                    "description": "Last value identifying the end of an identity range, to be used when the range of identities can be represented as a numeric range, MSISDN ranges for example. This string shall consist only of digits."
                                  },
                                  "pattern": {
                                    "type": "string",
                                    "description": "Regular expression pattern representing the set of identities belonging to this range. An identity value is considered part of the range if and only if the identity string fully matches the regular expression. To be used when identity is External Identifier or External Group Identifier or MSISDN."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "plmn-range": {
                              "type": "array",
                              "description": "Specifies the list of ranges of PLMNs that can be served by the CHF instance. If not specified, the CHF can serve any PLMN",
                              "additionalProperties": false,
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "plmn-start": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                    "description": "First value identifying the start of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12340'."
                                  },
                                  "plmn-end": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3}[0-9]{2,3}$",
                                    "description": "Last value identifying the end of a PLMN range. The string shall be encoded as follows: <MCC><MNC>. For example '12349'."
                                  },
                                  "pattern": {
                                    "type": "string",
                                    "description": "Regular expression pattern representing the set of PLMNs belonging to this range. A PLMN value is considered part of the range if and only if the PLMN string, formatted as <MCC><MNC>, fully matches the regular expression. For example '^1234[0-9]$'"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            }
                          }
                        },
                        "bsf-info": {
                          "type": "object",
                          "description": "Specific data for the BSF NF",
                          "additionalProperties": false,
                          "properties": {
                            "dnn": {
                              "type": "array",
                              "additionalItems": false,
                              "items": {
                                "type": "string"
                              }
                            },
                            "ip-domain": {
                              "type": "array",
                              "additionalItems": false,
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipv4-addr-range": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "ipv4-addr-start": {
                                  "type": "string",
                                  "format": "ipv4"
                                },
                                "ipv4-addr-end": {
                                  "type": "string",
                                  "format": "ipv4"
                                }
                              }
                            },
                            "ipv6-prefix-range": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "ipv6-prefix-start": {
                                  "type": "string",
                                  "allOf": [
                                    {
                                      "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                    },
                                    {
                                      "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                    }
                                  ]
                                },
                                "ipv6-prefix-end": {
                                  "type": "string",
                                  "allOf": [
                                    {
                                      "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                    },
                                    {
                                      "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "requested-heartbeat-timer": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Requested time, in seconds, expected between two heart-beat messages from the NF instance to the NRF"
                    },
                    "plmn": {
                      "type": "array",
                      "description": "PLMN(s) of the NF instance. If not provided, the PLMN ID(s) of the PLMN of the NRF are assumed for this NF",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "mcc": {
                            "type": "string",
                            "pattern": "^[0-9]{3}$",
                            "description": "Specifies the mobile country code of the PLMN"
                          },
                          "mnc": {
                            "type": "string",
                            "pattern": "^[0-9]{2,3}$",
                            "description": "Specifies the mobile network code of the PLMN"
                          }
                        },
                        "required": [
                          "mcc",
                          "mnc"
                        ]
                      }
                    },
                    "snssai": {
                      "type": "array",
                      "description": "S-NSSAIs of the NF instance. If present, this attribute represents the list of S-NSSAIs supported in all the PLMNs configured for this NF instance. If not provided, the NF instance can serve any S-NSSAI",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "sst": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 255,
                            "description": "Specifies the slice service type of the S-NSSAI"
                          },
                          "sd": {
                            "type": "string",
                            "pattern": "^[A-Fa-f0-9]{6}$",
                            "description": "Specifies the optional slice differentiator of the S-NSSAI"
                          }
                        },
                        "required": [
                          "sst"
                        ]
                      }
                    },
                    "allowed-plmn": {
                      "type": "array",
                      "description": "PLMNs allowed to access the NF instance. If not specified, NFs of any PLMN are allowed to access the NF",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "mcc": {
                            "type": "string",
                            "pattern": "^[0-9]{3}$",
                            "description": "Specifies the mobile country code of the PLMN"
                          },
                          "mnc": {
                            "type": "string",
                            "pattern": "^[0-9]{2,3}$",
                            "description": "Specifies the mobile network code of the PLMN"
                          }
                        },
                        "required": [
                          "mcc",
                          "mnc"
                        ]
                      }
                    },
                    "allowed-nf-type": {
                      "type": "array",
                      "description": "NF types which are allowed to access the NF instance. If not specified, NFs of any type are allowed to access the NF",
                      "additionalItems": false,
                      "items": {
                        "enum": [
                          "nrf",
                          "udm",
                          "amf",
                          "smf",
                          "ausf",
                          "nef",
                          "pcf",
                          "smsf",
                          "nssf",
                          "udr",
                          "lmf",
                          "gmlc",
                          "5g-eir",
                          "sepp",
                          "upf",
                          "n3iwf",
                          "af",
                          "udsf",
                          "bsf",
                          "chf",
                          "nwdaf"
                        ]
                      }
                    },
                    "allowed-nf-domain": {
                      "type": "array",
                      "description": "NF domain names which are allowed to access the NF instance. If not specified, NFs in any domain are allowed to access the NF",
                      "additionalItems": false,
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowed-nssai": {
                      "type": "array",
                      "description": "NSSAIs which are allowed to access the NF instance. If not specified, NFs in any NSSAI are allowed to access the NF",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "sst": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 255,
                            "description": "Specifies the slice service type of the S-NSSAI"
                          },
                          "sd": {
                            "type": "string",
                            "pattern": "^[A-Fa-f0-9]{6}$",
                            "description": "Specifies the optional slice differentiator of the S-NSSAI"
                          }
                        },
                        "required": [
                          "sst"
                        ]
                      }
                    },
                    "service-priority": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Service priority of this NF instance, in the range of 0-65535, relative to other NF instances of the same type, to be used for NF selection. Lower values indicate a higher priority"
                    },
                    "capacity": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Static capacity information of this NF instance, in the range of 0-65535, expressed as a weight relative to other NF instances of the same type"
                    },
                    "locality": {
                      "type": "string",
                      "description": "Operator defined information about the location of the NF instance. This information can be used by requesting NFs which prefer services of those NFs in the same geographical location or data center"
                    },
                    "recovery-time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the NF was (re)started"
                    }
                  },
                  "required": [
                    "name",
                    "nf-type",
                    "service-address-ref"
                  ]
                }
              },
              "dynamic-producer-registration": {
                "type": "object",
                "description": "The settings for registration of dynamic producers",
                "additionalProperties": false,
                "properties": {
                  "producer-heartbeat": {
                    "type": "integer",
                    "minimum": 5,
                    "maximum": 65535,
                    "description": "The time interval of heartbeat messages expected from the dynamic producers in seconds",
                    "default": "30"
                  },
                  "deregistration-time": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535,
                    "description": "When no message has been received from a dynamic producer for this time interval (minutes) then this producer will be automatically deregistered from the SCP.",
                    "default": "2880"
                  }
                }
              },
              "service-address": {
                "type": "array",
                "maxItems": 1,
                "description": "Listening address of the SCP, referenced in the nf-profile and nf-service sent to the NRF and the service-selector node of the SCP service",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "ipv4-address": {
                      "type": "string",
                      "pattern": "^[0-9\\.]*$",
                      "description": "IPv4 address of the SCP service"
                    },
                    "ipv6-address": {
                      "type": "string",
                      "pattern": "^[0-9a-fA-F:\\.]*$",
                      "description": "IPv6 address of the SCP endpoint"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name uniquely identifying the service address."
                    },
                    "fqdn": {
                      "type": "string",
                      "format": "hostname",
                      "description": "FQDN of the nf-service, for example chf.op.com"
                    },
                    "port": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "This port is used to receive non-TLS traffic."
                    },
                    "tls-port": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "This port is used to receive TLS traffic."
                    }
                  }
                }
              },
              "failover-profile": {
                "type": "array",
                "description": "A failover profile defines a set of parameters to be considered when SCP is routing messages. It takes effect for a certain routing context whenever it is referenced from within a service handler.",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name uniquely identifying this failover profile"
                    },
                    "request-timeout": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "The maximum time a single request is allowed to take before SCP considers it as timed out. This is an overall timeout considering the total time of handling a request including all possible retries and reselections. This attribute might overrule the producer-timeout as well as the notification-timeout in the case that the request-timeout is reached first. This attribute is applicable for all requests handled in this context of the service handler.",
                      "default": "2000"
                    },
                    "producer-timeout": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "The maximum time a request is allowed to take per (dynamic) producer before SCP considers it as timed out for the respective producer and eventually initiates a retry or reselection. This attribute is applicable for all requests handled in this context of the service handler.",
                      "default": "2000"
                    },
                    "producer-reselects-max": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "The allowed integer of reselects, in case of failover, to other producers or dynamic producers within the same pool to handle a request. This attribute is applicable for all requests handled in this context of the service handler.",
                      "default": "2"
                    },
                    "notification-timeout": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "The maximum time allowed for a single notification before timing out. This attribute is applicable for all notifications handled in this context of the service handler.",
                      "default": "2000"
                    },
                    "notification-retries-max": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "The allowed integer of retries for a single notification message. This attribute is applicable for all notifications handled in this context of the service handler.",
                      "default": "3"
                    },
                    "temporary-blocking": {
                      "type": "object",
                      "description": "Temporary blocking allows the dynamic blocking of producers or dynamic producers which are not reachable, based on configurable and preset attributes.",
                      "additionalProperties": false,
                      "properties": {
                        "blocking-time": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The duration of time for which a producer or dynamic producer is blocked.",
                          "default": "5"
                        },
                        "consecutive-failures": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 65535,
                          "description": "The integer of consecutive 5xx errors from, as well as locally originating failures toward, a producer or dynamic producer node before it is temporarily blocked.",
                          "default": "5"
                        }
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "error-code-profile": {
                "type": "array",
                "description": "An error code profile defines a configurable set of HTTP status codes for SCP generated errors",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name uniquely identifying this error code profile"
                    },
                    "internal-error": {
                      "type": "object",
                      "description": "This error code is returned when the request is internally rejected by the SCP.",
                      "additionalProperties": false,
                      "properties": {
                        "error-code": {
                          "type": "integer",
                          "minimum": 400,
                          "maximum": 511,
                          "description": "This is a configurable error code for the internal error.",
                          "default": "500"
                        },
                        "internal-error-message": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "This is a configurable message for each error code"
                            },
                            "format": {
                              "enum": [
                                "text",
                                "json"
                              ],
                              "description": "This is a configurable format for the error message",
                              "default": "json"
                            }
                          }
                        }
                      }
                    },
                    "gateway-timeout": {
                      "type": "object",
                      "description": "This error code is returned by the SCP when the time window for servicing a request (configured by the request-timeout parameter) is exceeded, for example when the targeted NF service producer drops the request",
                      "additionalProperties": false,
                      "properties": {
                        "error-code": {
                          "type": "integer",
                          "minimum": 400,
                          "maximum": 511,
                          "description": "This is a configurable error code for the gateway timeout error.",
                          "default": "504"
                        },
                        "gateway-error-message": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "This is a configurable message for each error code"
                            },
                            "format": {
                              "enum": [
                                "text",
                                "json"
                              ],
                              "description": "This is a configurable format for the error message",
                              "default": "json"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "producer-pool": {
                "type": "array",
                "description": "Producers provide the services which are proxied through the SCP NF. They are configured in a pool structure, with each pool containing one or more producers. The producer pool is referenced by the service handlers belonging to the scp-service.",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name uniquely identifying the producer pool"
                    },
                    "priority": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Priority of the producer pool relative to other pools, considered by service handlers when distributing service requests among the configured pools. Lower values indicate a higher priority",
                      "default": "1"
                    },
                    "producer": {
                      "type": "array",
                      "description": "Producer belonging to this pool",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name uniquely identifying the producer"
                          },
                          "address": {
                            "type": "object",
                            "description": "Address of the producer",
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name uniquely identifying the producer address."
                              },
                              "fqdn": {
                                "type": "string",
                                "format": "hostname",
                                "description": "FQDN of the producer"
                              },
                              "port": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "Port integer of the producer, for example 80"
                              },
                              "tls": {
                                "enum": [
                                  "off",
                                  "mutual"
                                ],
                                "description": "The TLS setting used towards the producer address",
                                "default": "off"
                              },
                              "ipv4-address": {
                                "type": "string",
                                "pattern": "^[0-9\\.]*$",
                                "description": "IPv4 address of the producer"
                              },
                              "ipv6-address": {
                                "type": "string",
                                "pattern": "^[0-9a-fA-F:\\.]*$",
                                "description": "IPv6 address of the producer"
                              },
                              "ipv6-subnet": {
                                "type": "string",
                                "allOf": [
                                  {
                                    "pattern": "^((:|[0-9a-fA-F]{0,4}):)([0-9a-fA-F]{0,4}:){0,5}((([0-9a-fA-F]{0,4}:)?(:|[0-9a-fA-F]{0,4}))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])))(/(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
                                  },
                                  {
                                    "pattern": "^(([^:]+:){6}(([^:]+:[^:]+)|(.*\\..*)))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?)(/.+)$"
                                  }
                                ],
                                "description": "IPv6 subnet of the producer"
                              }
                            }
                          },
                          "capacity": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "Defines the capacity of this service node, expressed as a weight relative to other service nodes within the pool",
                            "default": "100"
                          },
                          "label": {
                            "type": "string",
                            "description": "Additional label used as a prefix which producer nodes add to the charging data reference in the Converged Charging service case. It is used to directly route update and release messages to the producer node handling that particular charging data reference."
                          }
                        },
                        "required": [
                          "label",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "dynamic-producer-pool": {
                "type": "array",
                "description": "Dynamic producers provide the services which are proxied through the SCP NF. Dynamic producers register in the SCP and are allocated to the corresponding configured dynamic producer pool. The dynamic producer pool is referenced by the service handlers belonging to the scp-service.",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name uniquely identifying the dynamic producer pool"
                    },
                    "priority": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "Priority of the dynamic producer pool relative to other pools, considered by service handlers when distributing service requests among the producer pools. Lower values indicate a higher priority",
                      "default": "1"
                    },
                    "pool-id": {
                      "type": "string",
                      "description": "The pool-id is received in the customInfo attribute when a dynamic producer registers in the SCP. It is used to allocate the dynamic producer to the correct dynamic producer pool"
                    },
                    "dynamic-producer": {
                      "type": "array",
                      "description": "Dynamic producer belonging to this pool",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name uniquely identifying the dynamic producer"
                          },
                          "label": {
                            "type": "string",
                            "description": "Additional label used as a prefix which dynamic producer nodes add to the charging data reference in the Converged Charging service case. It is used to directly route update and release messages to the dynamic producer node handling that particular charging data reference."
                          },
                          "service": {
                            "type": "array",
                            "description": "NF service for which the dynamic producer has registered.",
                            "additionalProperties": false,
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "service-name": {
                                  "enum": [
                                    "nchf-spendinglimitcontrol",
                                    "nchf-convergedcharging"
                                  ],
                                  "description": "Name identifying the service supported."
                                },
                                "capacity": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 65535,
                                  "description": "Specifies the capacity of the dynamic producer for this service."
                                },
                                "operational-state": {
                                  "enum": [
                                    "registered",
                                    "suspended",
                                    "undiscoverable"
                                  ],
                                  "description": "The operational state of the service."
                                },
                                "dynamic-producer-address": {
                                  "type": "object",
                                  "description": "Address of the dynamic producer for this service, at least one of FQDN or IPv4 address must be given.",
                                  "additionalProperties": false,
                                  "properties": {
                                    "fqdn": {
                                      "type": "string",
                                      "format": "hostname",
                                      "description": "FQDN of the dynamic producer for this service."
                                    },
                                    "tls": {
                                      "enum": [
                                        "off",
                                        "mutual"
                                      ],
                                      "description": "The TLS settings used towards the dynamic producer for this service."
                                    },
                                    "ip-endpoint": {
                                      "type": "array",
                                      "maxItems": 1,
                                      "description": "IP endpoint of the dynamic producer for this service.",
                                      "additionalProperties": false,
                                      "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Name of this IP endpoint, unique within this list."
                                          },
                                          "ipv4-address": {
                                            "type": "string",
                                            "pattern": "^[0-9\\.]*$",
                                            "description": "IPv4 address of this IP endpoint."
                                          },
                                          "ipv6-address": {
                                            "type": "string",
                                            "pattern": "^[0-9a-fA-F:\\.]*$",
                                            "description": "IPv6 address of this IP endpoint."
                                          },
                                          "port": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 65535,
                                            "description": "Port used for this IP endpoint."
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "name",
                    "pool-id"
                  ]
                }
              },
              "nrf-group": {
                "type": "array",
                "description": "The NRF group specifies all relevant information of NRFs that are available to this SCP instance. Regarding the Nnrf_NFManagement interface, it determines the NRF registration behavior and triggers the NRF registration for the NF instance specified in the nf-profile.",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name uniquely identifying the NRF registration group"
                    },
                    "nf-instance-id": {
                      "type": "string",
                      "description": "ID uniquely identifying the NF Profile of this SCP instance, given per NRF Group."
                    },
                    "nf-profile-ref": {
                      "type": "string",
                      "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on the individual NRF level will override the corresponding attributes of the NF profile on the NRF group level."
                    },
                    "nrf": {
                      "type": "array",
                      "minItems": 1,
                      "description": "The configuration for a single NRF within this NRF group",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name uniquely identifying the NRF"
                          },
                          "nf-profile-ref": {
                            "type": "string",
                            "description": "The NF profile with which to register to the NRF for the Nnrf_NFManagement service. If specified, the attributes configured in the NF profile on the individual NRF level will override the corresponding attributes of the NF profile on the NRF group level."
                          },
                          "oauth2-profile": {
                            "type": "array",
                            "description": "Key profiles used by the SCP authorization service to verify the signature of access tokens",
                            "additionalProperties": false,
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "key-id": {
                                  "type": "string",
                                  "description": "The identifier of the OAuth2.0 key"
                                },
                                "algorithm": {
                                  "enum": [
                                    "ES256"
                                  ],
                                  "description": "Name of the algorithm to be used for OAuth2"
                                },
                                "public-key": {
                                  "type": "string",
                                  "description": "Public key for the specified algorithm"
                                }
                              },
                              "required": [
                                "algorithm",
                                "key-id",
                                "public-key"
                              ]
                            }
                          },
                          "priority": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 99,
                            "description": "Priority of this NRF for NF registration and other NRF service requests, relative to other NRFs in the same NRF group. In regard to the Nnrf_NFManagement service, the NRF with the highest priority is the primary NRF to which the NF instance will register. The remaining NRFs are used in case of failover, in order of priority. Lower values indicate a higher priority."
                          },
                          "fqdn": {
                            "type": "string",
                            "format": "hostname",
                            "description": "FQDN of the NRF"
                          },
                          "scheme": {
                            "enum": [
                              "http",
                              "https"
                            ],
                            "description": "Specifies the URI scheme to be used when contacting this NRF"
                          },
                          "ip-endpoint": {
                            "type": "array",
                            "minItems": 1,
                            "description": "IP endpoint of the NRF",
                            "additionalProperties": false,
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name uniquely identifying the ip-endpoint."
                                },
                                "port": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 65535,
                                  "description": "Port integer"
                                },
                                "ipv4-address": {
                                  "type": "string",
                                  "pattern": "^[0-9\\.]*$",
                                  "description": "IPv4 address"
                                },
                                "ipv6-address": {
                                  "type": "string",
                                  "pattern": "^[0-9a-fA-F:\\.]*$",
                                  "description": "IPv6 address"
                                }
                              },
                              "required": [
                                "port"
                              ]
                            }
                          },
                          "retry-timeout": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 65535,
                            "description": "The time duration in milliseconds after which a request is considered unsuccessful and a retry to the same NRF is sent.",
                            "default": "1500"
                          },
                          "max-retries": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "The integer of retries sent to the same NRF before failover to another NRF.",
                            "default": "0"
                          }
                        },
                        "required": [
                          "ip-endpoint",
                          "name",
                          "priority",
                          "scheme"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "nrf"
                  ]
                }
              },
              "nrf-service": {
                "type": "object",
                "description": "Defines which NRF services are used by this NF instance, referencing groups of NRFs that provide the respective service.",
                "additionalProperties": false,
                "properties": {
                  "nf-management": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nrf-group-ref": {
                        "type": "array",
                        "description": "The groups of NRFs providing the Nnrf_NFManagement service",
                        "additionalItems": false,
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "nrf-group-ref"
                    ]
                  },
                  "nf-discovery": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "nrf-group-ref": {
                        "type": "string",
                        "description": "The group of NRFs providing the Nnrf_NFDiscovery service"
                      }
                    },
                    "required": [
                      "nrf-group-ref"
                    ]
                  }
                }
              },
              "scp-service": {
                "type": "array",
                "description": "The SCP service determines what actions to take on all incoming request messages. This is realized through the use of a selector, which matches the URL pattern of incoming request messages to configured attributes and specifies which handler to use. The handler then determines which actions to take.",
                "additionalProperties": false,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name uniquely identifying the SCP service"
                    },
                    "selector": {
                      "type": "array",
                      "description": "The selector determines to which service each of the incoming messages belong and matches them to the corresponding handler",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name uniquely identifying the SCP selector"
                          },
                          "handler-ref": {
                            "type": "string",
                            "description": "The name of the handler responsible for all incoming request messages which match the configured criteria of this selector"
                          },
                          "simple-selector": {
                            "type": "object",
                            "description": "The simple selector provides a predefined list of configurable attributes to filter incoming request messages based on the service requested, the service address, and the api prefix",
                            "additionalProperties": false,
                            "properties": {
                              "service-address-ref": {
                                "type": "string",
                                "description": "The service address of the SCP to be matched by incoming request messages"
                              },
                              "api-prefix": {
                                "type": "string",
                                "description": "The api-prefix to be matched by incoming request messages"
                              },
                              "api-name": {
                                "enum": [
                                  "nchf-spendinglimitcontrol",
                                  "nchf-convergedcharging"
                                ],
                                "description": "The api-name, identifying the service, to be matched by incoming request messages"
                              }
                            },
                            "required": [
                              "api-name",
                              "service-address-ref"
                            ]
                          }
                        },
                        "required": [
                          "handler-ref",
                          "name",
                          "simple-selector"
                        ]
                      }
                    },
                    "handler": {
                      "type": "array",
                      "description": "The handler determines the behavior of the SCP service and what actions are to be taken for incoming request messages",
                      "additionalProperties": false,
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name uniquely identifying the SCP handler"
                          },
                          "service-authorization": {
                            "enum": [
                              "disabled",
                              "enabled"
                            ],
                            "description": "The setting in order to enable or disable OAuth2 authorization for this service",
                            "default": "disabled"
                          },
                          "handler-type": {
                            "enum": [
                              "converged-charging",
                              "spending-limit-control",
                              "regional-converged-charging"
                            ],
                            "description": "The type of the handler to configure"
                          },
                          "spending-limit-control-handler": {
                            "type": "object",
                            "description": "The service handler for the Spending Limit Control service",
                            "additionalProperties": false,
                            "properties": {
                              "producer-pool-ref": {
                                "type": "array",
                                "description": "The producer pool configuration for this Spending Limit Control service handler",
                                "additionalItems": false,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "dynamic-producer-pool-ref": {
                                "type": "array",
                                "description": "The dynamic producer pool configuration for this Spending Limit Control service handler",
                                "additionalItems": false,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "request-timeout": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The maximum time a single request is allowed to take before SCP considers it as timed out. This is an overall timeout considering the total time of handling a request including all possible retries and reselections. This attribute might overrule the producer-timeout as well as the notification-timeout in the case that the request-timeout is reached first. This attribute is applicable for all requests handled in this context of the service handler.",
                                "default": "2000"
                              },
                              "producer-timeout": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The maximum time a request is allowed to take per (dynamic) producer before SCP considers it as timed out for the respective producer and eventually initiates a retry or reselection. This attribute is applicable for all requests handled in this context of the service handler.",
                                "default": "2000"
                              },
                              "producer-reselects-max": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The allowed integer of reselects, in case of failover, to other producers or dynamic producers within the same pool to handle a request. This attribute is applicable for all requests handled in this context of the service handler.",
                                "default": "2"
                              },
                              "notification-timeout": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The maximum time allowed for a single notification before timing out. This attribute is applicable for all notifications handled in this context of the service handler.",
                                "default": "2000"
                              },
                              "notification-retries-max": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The allowed integer of retries for a single notification message. This attribute is applicable for all notifications handled in this context of the service handler.",
                                "default": "3"
                              },
                              "temporary-blocking": {
                                "type": "object",
                                "description": "Temporary blocking allows the dynamic blocking of producers or dynamic producers which are not reachable, based on configurable and preset attributes.",
                                "additionalProperties": false,
                                "properties": {
                                  "blocking-time": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 65535,
                                    "description": "The duration of time for which a producer or dynamic producer is blocked.",
                                    "default": "5"
                                  },
                                  "consecutive-failures": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 65535,
                                    "description": "The integer of consecutive 5xx errors from, as well as locally originating failures toward, a producer or dynamic producer node before it is temporarily blocked.",
                                    "default": "5"
                                  }
                                }
                              }
                            }
                          },
                          "converged-charging-handler": {
                            "type": "object",
                            "description": "The service handler for the Converged Charging service",
                            "additionalProperties": false,
                            "properties": {
                              "producer-retries-max": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The allowed integer of retries on the producer or dynamic producer handling an update or release request before failing over to another producer or dynamic producer within the same pool. This attribute is applicable to all update and release requests handled by this service handler.",
                                "default": "3"
                              },
                              "producer-pool-ref": {
                                "type": "array",
                                "description": "The producer pool configuration for this Converged Charging service handler",
                                "additionalItems": false,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "dynamic-producer-pool-ref": {
                                "type": "array",
                                "description": "The dynamic producer pool configuration for this Converged Charging service handler",
                                "additionalItems": false,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "label-selector": {
                                "type": "string",
                                "description": "A regular expression to extract the label prefix, configured in the label attribute of the producer or dynamic producer node, from the charging data reference of incoming converged charging requests. The regular expression must capture the label prefix in the first capture group and follow the syntax of LUA regular expressions. For example, if the charging data reference has the prefix separated by a dash with the ID, then the regular expression would be ([^-]+) capturing one or more non-dash characters."
                              },
                              "request-timeout": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The maximum time a single request is allowed to take before SCP considers it as timed out. This is an overall timeout considering the total time of handling a request including all possible retries and reselections. This attribute might overrule the producer-timeout as well as the notification-timeout in the case that the request-timeout is reached first. This attribute is applicable for all requests handled in this context of the service handler.",
                                "default": "2000"
                              },
                              "producer-timeout": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The maximum time a request is allowed to take per (dynamic) producer before SCP considers it as timed out for the respective producer and eventually initiates a retry or reselection. This attribute is applicable for all requests handled in this context of the service handler.",
                                "default": "2000"
                              },
                              "producer-reselects-max": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The allowed integer of reselects, in case of failover, to other producers or dynamic producers within the same pool to handle a request. This attribute is applicable for all requests handled in this context of the service handler.",
                                "default": "2"
                              },
                              "notification-timeout": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The maximum time allowed for a single notification before timing out. This attribute is applicable for all notifications handled in this context of the service handler.",
                                "default": "2000"
                              },
                              "notification-retries-max": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 65535,
                                "description": "The allowed integer of retries for a single notification message. This attribute is applicable for all notifications handled in this context of the service handler.",
                                "default": "3"
                              },
                              "temporary-blocking": {
                                "type": "object",
                                "description": "Temporary blocking allows the dynamic blocking of producers or dynamic producers which are not reachable, based on configurable and preset attributes.",
                                "additionalProperties": false,
                                "properties": {
                                  "blocking-time": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 65535,
                                    "description": "The duration of time for which a producer or dynamic producer is blocked.",
                                    "default": "5"
                                  },
                                  "consecutive-failures": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 65535,
                                    "description": "The integer of consecutive 5xx errors from, as well as locally originating failures toward, a producer or dynamic producer node before it is temporarily blocked.",
                                    "default": "5"
                                  }
                                }
                              }
                            }
                          },
                          "regional-converged-charging-handler": {
                            "type": "object",
                            "description": "The service handler for the Converged Charging service supporting regional message routing",
                            "additionalProperties": false,
                            "properties": {
                              "routing-criterion": {
                                "enum": [
                                  "SUPI"
                                ],
                                "description": "The type of subscriber identifier based on which messages should be routed to certain regions",
                                "default": "SUPI"
                              },
                              "failover-profile-ref": {
                                "type": "string",
                                "description": "The general failover profile used by this SCP when routing messages to any region. Attributes in this general failover profile can be overriden by attributes in region specific failover profiles, if specified."
                              },
                              "error-code-profile-ref": {
                                "type": "string",
                                "description": "The general error code profile used by this SCP."
                              },
                              "own-region": {
                                "type": "object",
                                "description": "This container defines all information relevant for message routing within the region that this SCP is located in.",
                                "additionalProperties": false,
                                "properties": {
                                  "producer-pool-ref": {
                                    "type": "array",
                                    "description": "The list of producers (CHF) connected to this SCP within the same region. The producers can be grouped in multiple producer pools to allow prioritization.",
                                    "additionalItems": false,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "scp-pool-ref": {
                                    "type": "array",
                                    "description": "The list of other SCPs, connected to this SCP, located in this same region. The SCPs can be grouped in multiple producer pools to allow prioritization.",
                                    "additionalItems": false,
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "consumer-pool-ref": {
                                    "type": "string",
                                    "description": "The list of consumers located in this region, used to route Notify messages"
                                  },
                                  "failover-profile-ref": {
                                    "type": "string",
                                    "description": "The region specific failover profile used by this SCP when routing messages within the own region. If specified, the attributes configured in the failover profile on the individual region level will override the corresponding attributes of the failover profile on the general handler level."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name uniquely identifying this region."
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The label uniquely identifies this region as a destination for message routing based on the subscriber identifier. It should match the routing key returned by NRF and SLF when resolving subscriber identities to regions. Every label should be unique across all regions, including the own region of the SCP."
                                  }
                                },
                                "required": [
                                  "label",
                                  "name"
                                ]
                              },
                              "other-region": {
                                "type": "array",
                                "description": "The definition of all information relevant for message routing from this SCP to other regions",
                                "additionalProperties": false,
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "scp-pool-ref": {
                                      "type": "array",
                                      "description": "The list of SCPs located in this region. The SCPs can be grouped in multiple producer pools to allow prioritization.",
                                      "additionalItems": false,
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "consumer-pool-ref": {
                                      "type": "string",
                                      "description": "The list of consumers located in this region, used to route Notify messages"
                                    },
                                    "failover-profile-ref": {
                                      "type": "string",
                                      "description": "The region specific failover profile used by this SCP when routing messages to this region. If specified, the attributes configured in the failover profile on the individual region level will override the corresponding attributes of the failover profile on the general handler level."
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "Name uniquely identifying this region."
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label uniquely identifies this region as a destination for message routing based on the subscriber identifier. It should match the routing key returned by NRF and SLF when resolving subscriber identities to regions. Every label should be unique across all regions, including the own region of the SCP."
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "name"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "handler-type",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            },
            "required": [
              "name"
            ]
          }
        }
      }
    }
  },
  "eric-adp-genoptions": [
    {
      "descriptions": true
    },
    {
      "eric-adp-actions": true
    },
    {
      "eric-adp-keys": false
    },
    {
      "constraints": true
    },
    {
      "eric-adp-list2object": false
    }
  ]
}