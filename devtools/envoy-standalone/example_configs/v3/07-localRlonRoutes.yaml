# envoy standalone configuration showcasing local rate limiting using descriptors
# A descriptor with key cluster_name and value the x-cluster header content is
# defined on route level. A local rate limit filter is defined on listener level,
# defining the 'default' bucket and also a secondary bucket for when the descriptor
# value matches the cluster name occ_all.
#
# This sample config tries to demonstrate having local rate limiing on route level
# and different limits according to which route is matched. The eric_proxy filter
# normally sets the x-cluster (internal) header, but in our case the header is
# supplied manually.
# Chfsims are used for cluster endpoints (make deploy-sepp in simulators/chfsim)


admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
stats_config:
  stats_tags:
  - regex: "^((?:vhost\\..+?\\.vcluster\\..+?|cluster\\.egress)\\.n8e\\..+?\\.s5e\\.(.+?)\\.)"
    tag_name: service
  - fixed_value: scp
    tag_name: nf_type
  - regex: "^((?:vhost\\..+?\\.vcluster\\..+?|cluster\\.egress|.*?http\\.ingress|http\\.eric_proxy|http\\.lrl)\\.n8e\\.(.+?)\\.)"
    tag_name: nf_instance
  - regex: "^((?:vhost\\..+?\\.vcluster\\..+?|cluster\\.egress|http\\.ingress|http\\.lrl)\\.n8e\\..+?\\.g3p\\.(.+?)\\.)"
    tag_name: group
  - regex: "^((?:listener.+?\\.http\\.ingress)\\.n8e\\..+?\\.g3p\\.(.+?)\\.)"
    tag_name: group_internal
  - regex: "^(vhost\\..*?\\.vcluster\\.(.+?)\\.n8e)"
    tag_name: operation
  - tag_name: network
    regex: "^(http\\.lrl\\.n8e\\..+?\\.g3p\\..+?\\.s6a6\\..+?\\.n5k\\.(.+?)\\.)"
  - tag_name: service_address
    regex: "^(http\\.lrl\\.n8e\\..+?\\.g3p\\..+?\\.s6a6\\.(.+?)\\.)"
  - tag_name: envoy.response_code
  - tag_name: envoy.response_code_class
  - tag_name: envoy.http_user_agent
  - regex: "^(vhost\\..+?\\.vcluster\\.(.+?)\\.n8e)"
    tag_name: envoy.virtual_cluster
  - tag_name: envoy.fault_downstream_cluster
  - tag_name: envoy.ssl_cipher
  - tag_name: cipher_suite
  - tag_name: envoy.tcp_prefix
  - tag_name: envoy.clientssl_prefix
  - tag_name: envoy.ratelimit_prefix
  - tag_name: envoy.cluster_name
  - tag_name: envoy.listener_address
  - regex: "^vhost\\.((.*?)\\.vcluster)"
    tag_name: envoy.virtual_host
  - tag_name: envoy.rds_route_config
  - tag_name: envoy.worker_id
  use_all_default_tags: false
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 80
    connection_balance_config:
      exact_balance: {} 
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          common_http_protocol_options:
            idle_timeout: 3600s
          access_log:
            name: "envoy.access_loggers.file"
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "access.log"
              format: "[%START_TIME(%FT%T.%3f%z)%] %DURATION% %REQUEST_DURATION% %RESPONSE_DURATION% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %REQ(:METHOD)% %PROTOCOL% %RESPONSE_CODE% %RESPONSE_CODE_DETAILS% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% %REQ(USER-AGENT)% %REQ(X-REQUEST-ID)% %REQ(:AUTHORITY)% %ROUTE_NAME% %UPSTREAM_CLUSTER% %UPSTREAM_HOST% %UPSTREAM_TRANSPORT_FAILURE_REASON%\n"
          stat_prefix: ingress.n8e.instance_1.g3p.ingress

          route_config:
            name: vpn_own_routes
            virtual_hosts:
            - domains:
              - "*"
              name: int_fwd_service 
              routes:
              - match: { prefix: "/nchf-convergedcharging/v2" }
                route:
                  cluster: occ_all
                  rate_limits:
                  - actions: # any actions in here
                    - request_headers:
                        header_name: x-cluster
                        descriptor_key: cluster_name
                response_headers_to_add:
                - append: false
                  header:
                    key: x-local-rate-limit
                    value: 'true'        
         
              - match: { prefix: "/nchf-convergedcharging/v1/" }
                route:  
                  cluster: occ_all 
                  rate_limits:
                  - actions: # any actions in here
                    - request_headers:
                        header_name: x-cluster
                        descriptor_key: cluster_name
              - match: { prefix: "/nchf-convergedcharging/v3/" }
                route:  
                  cluster: occ_all 
              
          http_filters:
          - name: envoy.filters.http.buffer
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.buffer.v3.Buffer
              max_request_bytes: 65535
          - name: envoy.filters.http.local_ratelimit
            typed_config:
             "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
             stat_prefix: http.lrl.n8e.instance_1.g3p.ingress.s6a6.internal_network.n5k.own_network
             token_bucket:
               max_tokens: 50
               tokens_per_fill: 50
               fill_interval: 60s
             filter_enabled:
               runtime_key: local_rate_limit_enabled
               default_value:
                 numerator: 100
                 denominator: HUNDRED
             filter_enforced:
               runtime_key: local_rate_limit_enforced
               default_value:
                 numerator: 100
                 denominator: HUNDRED
             response_headers_to_add:
               - append: true
                 header:
                   key: x-local-rate-limit
                   value: 'true'
             descriptors:
             - entries:
               - key: cluster_name
                 value: "occ_all"
               token_bucket:
                max_tokens: 10
                tokens_per_fill: 10
                fill_interval: 60s
          - name: envoy.filters.http.router 
  clusters:
  - name: occ_all
    common_http_protocol_options:
      idle_timeout: 3600s
    connect_timeout: 2s
    dns_lookup_family: V4_ONLY
    http2_protocol_options:
      allow_connect: true
    upstream_bind_config:
      socket_options:
      - description: TCP_USER_TIMEOUT
        int_value: '5030'
        level: '6'
        name: '18'
      source_address:
        address: 0.0.0.0
        port_value: 0
    upstream_connection_options:
      tcp_keepalive:
        keepalive_interval: 5
        keepalive_probes: 6
        keepalive_time: 5
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: occ_all
      endpoints:
        lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: eric-chfsim-1-mnc-123-mcc-123
                port_value: 80
        - endpoint:
            address:
              socket_address:
                address: eric-chfsim-2-mnc-123-mcc-123
                port_value: 80
        - endpoint:
            address:
              socket_address:
                address: eric-chfsim-3-mnc-123-mcc-123
                port_value: 80

