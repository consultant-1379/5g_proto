/*
 * RLF Rate Limiting Service
 * RLF Rate Limiting Service. Â© 2022, Ericsson GmbH. All rights reserved. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.internal.nrlf.ratelimiting;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * PullTokenResult
 */
@JsonPropertyOrder({ PullTokensResult.JSON_PROPERTY_RC, PullTokensResult.JSON_PROPERTY_RA })
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-03-21T10:49:48.438927+01:00[Europe/Berlin]")
public class PullTokensResult
{
    /**
     * The result of the pull operation
     */
    public enum RcEnum
    {
        OK(200),
        TOO_MANY_REQUESTS(429),
        NOT_FOUND(404),
        INTERNAL_SERVER_ERROR(500);

        private Integer value;

        RcEnum(Integer value)
        {
            this.value = value;
        }

        @JsonValue
        public Integer getValue()
        {
            return value;
        }

        @Override
        public String toString()
        {
            return String.valueOf(value);
        }

        @JsonCreator
        public static RcEnum fromValue(Integer value)
        {
            for (RcEnum b : RcEnum.values())
            {
                if (b.value.equals(value))
                {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_RC = "rc";
    private RcEnum rc;

    public static final String JSON_PROPERTY_RA = "ra";
    private Integer ra;

    public PullTokensResult rc(RcEnum rc)
    {
        this.rc = rc;
        return this;
    }

    /**
     * The result of the pull operation
     * 
     * @return rc
     **/
    @ApiModelProperty(required = true, value = "The result of the pull operation")
    @JsonProperty(JSON_PROPERTY_RC)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public RcEnum getRc()
    {
        return rc;
    }

    public void setRc(RcEnum rc)
    {
        this.rc = rc;
    }

    public PullTokensResult ra(Integer ra)
    {

        this.ra = ra;
        return this;
    }

    /**
     * Timespan [ms] after which the next pull operation has higher probability to
     * succeed. Included only for rc &#x3D; 429 (TOO_MANY_REQUESTS) minimum: 0
     * 
     * @return ra
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Timespan [ms] after which the next pull operation has higher probability to succeed. Included only for rc = 429 (TOO_MANY_REQUESTS)")
    @JsonProperty(JSON_PROPERTY_RA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getRa()
    {
        return ra;
    }

    public void setRa(Integer ra)
    {
        this.ra = ra;
    }

    @Override
    public boolean equals(java.lang.Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PullTokensResult pullTokenResult = (PullTokensResult) o;
        return Objects.equals(this.rc, pullTokenResult.rc) && Objects.equals(this.ra, pullTokenResult.ra);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(rc, ra);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PullTokenResult {\n");
        sb.append("    rc: ").append(toIndentedString(rc)).append("\n");
        sb.append("    ra: ").append(toIndentedString(ra)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
