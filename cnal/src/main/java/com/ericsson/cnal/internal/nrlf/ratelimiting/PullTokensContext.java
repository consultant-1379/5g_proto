/*
 * RLF Rate Limiting Service
 * RLF Rate Limiting Service. Â© 2022, Ericsson GmbH. All rights reserved. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.internal.nrlf.ratelimiting;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModelProperty;

/**
 * PullTokenContext
 */
@JsonPropertyOrder({ PullTokensContext.JSON_PROPERTY_NAME, PullTokensContext.JSON_PROPERTY_WATERMARK, PullTokensContext.JSON_PROPERTY_AMOUNT })
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-07T10:49:48.438927+01:00[Europe/Berlin]")
public class PullTokensContext
{
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_WATERMARK = "watermark";
    private Double watermark;

    public static final String JSON_PROPERTY_AMOUNT = "amount";
    private Integer amount = 1;

    public PullTokensContext id(String id)
    {

        this.id = id;
        return this;
    }

    /**
     * The ID of the token bucket, unique within its namespace
     * 
     * @return name
     **/
    @ApiModelProperty(required = false,
                      value = "The ID of the token bucket, unique within its namespace (either the ID or the name of the token bucket must be present)")
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)

    public String getId()
    {
        return id;
    }

    public void setId(String id)
    {
        this.id = id;
    }

    public PullTokensContext name(String name)
    {

        this.name = name;
        return this;
    }

    /**
     * The name of the token bucket, unique within its namespace
     * 
     * @return name
     **/
    @ApiModelProperty(required = false,
                      value = "The name of the token bucket, unique within its namespace (either the ID or the name of the token bucket must be present)")
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.NON_NULL)

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public PullTokensContext watermark(Double watermark)
    {
        this.watermark = watermark;
        return this;
    }

    /**
     * The watermark for which to pull the token(s) from the token bucket minimum: 0
     * 
     * @return watermark
     **/
    @ApiModelProperty(required = true, value = "The watermark for which to pull the token(s) from the token bucket")
    @JsonProperty(JSON_PROPERTY_WATERMARK)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Double getWatermark()
    {
        return watermark;
    }

    public void setWatermark(Double watermark)
    {
        this.watermark = watermark;
    }

    public PullTokensContext amount(Integer amount)
    {

        this.amount = amount;
        return this;
    }

    /**
     * The amount of tokens to pull from the token bucket, default is 1 minimum: 1
     * 
     * @return amount
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The amount of tokens to pull from the token bucket, default is 1")
    @JsonProperty(JSON_PROPERTY_AMOUNT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAmount()
    {
        return amount;
    }

    public void setAmount(Integer amount)
    {
        this.amount = amount;
    }

    @Override
    public boolean equals(java.lang.Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PullTokensContext pullTokenContext = (PullTokensContext) o;
        return Objects.equals(this.id, pullTokenContext.id) && Objects.equals(this.name, pullTokenContext.name)
               && Objects.equals(this.watermark, pullTokenContext.watermark) && Objects.equals(this.amount, pullTokenContext.amount);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(id, name, watermark, amount);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PullTokensContext {\n");
        sb.append("    id: ").append(toIndentedString(name)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    watermark: ").append(toIndentedString(watermark)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
