/*
 * Nudm_EE
 * Nudm Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.ee;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29518.namf.eventexposure.CmInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CmInfoReport
 */
@JsonPropertyOrder({ CmInfoReport.JSON_PROPERTY_OLD_CM_INFO_LIST, CmInfoReport.JSON_PROPERTY_NEW_CM_INFO_LIST })
public class CmInfoReport
{
    public static final String JSON_PROPERTY_OLD_CM_INFO_LIST = "oldCmInfoList";
    private List<CmInfo> oldCmInfoList = null;

    public static final String JSON_PROPERTY_NEW_CM_INFO_LIST = "newCmInfoList";
    private List<CmInfo> newCmInfoList = new ArrayList<>();

    public CmInfoReport()
    {
    }

    public CmInfoReport oldCmInfoList(List<CmInfo> oldCmInfoList)
    {

        this.oldCmInfoList = oldCmInfoList;
        return this;
    }

    public CmInfoReport addOldCmInfoListItem(CmInfo oldCmInfoListItem)
    {
        if (this.oldCmInfoList == null)
        {
            this.oldCmInfoList = new ArrayList<>();
        }
        this.oldCmInfoList.add(oldCmInfoListItem);
        return this;
    }

    /**
     * Get oldCmInfoList
     * 
     * @return oldCmInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_OLD_CM_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<CmInfo> getOldCmInfoList()
    {
        return oldCmInfoList;
    }

    @JsonProperty(JSON_PROPERTY_OLD_CM_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOldCmInfoList(List<CmInfo> oldCmInfoList)
    {
        this.oldCmInfoList = oldCmInfoList;
    }

    public CmInfoReport newCmInfoList(List<CmInfo> newCmInfoList)
    {

        this.newCmInfoList = newCmInfoList;
        return this;
    }

    public CmInfoReport addNewCmInfoListItem(CmInfo newCmInfoListItem)
    {
        this.newCmInfoList.add(newCmInfoListItem);
        return this;
    }

    /**
     * Get newCmInfoList
     * 
     * @return newCmInfoList
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_NEW_CM_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<CmInfo> getNewCmInfoList()
    {
        return newCmInfoList;
    }

    @JsonProperty(JSON_PROPERTY_NEW_CM_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNewCmInfoList(List<CmInfo> newCmInfoList)
    {
        this.newCmInfoList = newCmInfoList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        CmInfoReport cmInfoReport = (CmInfoReport) o;
        return Objects.equals(this.oldCmInfoList, cmInfoReport.oldCmInfoList) && Objects.equals(this.newCmInfoList, cmInfoReport.newCmInfoList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(oldCmInfoList, newCmInfoList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class CmInfoReport {\n");
        sb.append("    oldCmInfoList: ").append(toIndentedString(oldCmInfoList)).append("\n");
        sb.append("    newCmInfoList: ").append(toIndentedString(newCmInfoList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
