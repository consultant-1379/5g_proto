/*
 * Nudm_SDM
 * Nudm Subscriber Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 2.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.sdm;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * CagData
 */
@JsonPropertyOrder({ CagData.JSON_PROPERTY_CAG_INFOS, CagData.JSON_PROPERTY_PROVISIONING_TIME })
public class CagData
{
    public static final String JSON_PROPERTY_CAG_INFOS = "cagInfos";
    private Map<String, CagInfo> cagInfos = new HashMap<>();

    public static final String JSON_PROPERTY_PROVISIONING_TIME = "provisioningTime";
    private OffsetDateTime provisioningTime;

    public CagData()
    {
    }

    public CagData cagInfos(Map<String, CagInfo> cagInfos)
    {

        this.cagInfos = cagInfos;
        return this;
    }

    public CagData putCagInfosItem(String key,
                                   CagInfo cagInfosItem)
    {
        this.cagInfos.put(key, cagInfosItem);
        return this;
    }

    /**
     * A map (list of key-value pairs where PlmnId serves as key) of CagInfo
     * 
     * @return cagInfos
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "A map (list of key-value pairs where PlmnId serves as key) of CagInfo")
    @JsonProperty(JSON_PROPERTY_CAG_INFOS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Map<String, CagInfo> getCagInfos()
    {
        return cagInfos;
    }

    @JsonProperty(JSON_PROPERTY_CAG_INFOS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCagInfos(Map<String, CagInfo> cagInfos)
    {
        this.cagInfos = cagInfos;
    }

    public CagData provisioningTime(OffsetDateTime provisioningTime)
    {

        this.provisioningTime = provisioningTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return provisioningTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_PROVISIONING_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getProvisioningTime()
    {
        return provisioningTime;
    }

    @JsonProperty(JSON_PROPERTY_PROVISIONING_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProvisioningTime(OffsetDateTime provisioningTime)
    {
        this.provisioningTime = provisioningTime;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        CagData cagData = (CagData) o;
        return Objects.equals(this.cagInfos, cagData.cagInfos) && Objects.equals(this.provisioningTime, cagData.provisioningTime);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(cagInfos, provisioningTime);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class CagData {\n");
        sb.append("    cagInfos: ").append(toIndentedString(cagInfos)).append("\n");
        sb.append("    provisioningTime: ").append(toIndentedString(provisioningTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
