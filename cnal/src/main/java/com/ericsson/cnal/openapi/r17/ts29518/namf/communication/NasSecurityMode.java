/*
 * Namf_Communication
 * AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29518.namf.communication;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates the NAS Security Mode
 */
@ApiModel(description = "Indicates the NAS Security Mode")
@JsonPropertyOrder({ NasSecurityMode.JSON_PROPERTY_INTEGRITY_ALGORITHM, NasSecurityMode.JSON_PROPERTY_CIPHERING_ALGORITHM })
public class NasSecurityMode
{
    public static final String JSON_PROPERTY_INTEGRITY_ALGORITHM = "integrityAlgorithm";
    private String integrityAlgorithm;

    public static final String JSON_PROPERTY_CIPHERING_ALGORITHM = "cipheringAlgorithm";
    private String cipheringAlgorithm;

    public NasSecurityMode()
    {
    }

    public NasSecurityMode integrityAlgorithm(String integrityAlgorithm)
    {

        this.integrityAlgorithm = integrityAlgorithm;
        return this;
    }

    /**
     * Indicates the supported Integrity Algorithm
     * 
     * @return integrityAlgorithm
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Indicates the supported Integrity Algorithm")
    @JsonProperty(JSON_PROPERTY_INTEGRITY_ALGORITHM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getIntegrityAlgorithm()
    {
        return integrityAlgorithm;
    }

    @JsonProperty(JSON_PROPERTY_INTEGRITY_ALGORITHM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setIntegrityAlgorithm(String integrityAlgorithm)
    {
        this.integrityAlgorithm = integrityAlgorithm;
    }

    public NasSecurityMode cipheringAlgorithm(String cipheringAlgorithm)
    {

        this.cipheringAlgorithm = cipheringAlgorithm;
        return this;
    }

    /**
     * Indicates the supported Ciphering Algorithm
     * 
     * @return cipheringAlgorithm
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Indicates the supported Ciphering Algorithm")
    @JsonProperty(JSON_PROPERTY_CIPHERING_ALGORITHM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getCipheringAlgorithm()
    {
        return cipheringAlgorithm;
    }

    @JsonProperty(JSON_PROPERTY_CIPHERING_ALGORITHM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCipheringAlgorithm(String cipheringAlgorithm)
    {
        this.cipheringAlgorithm = cipheringAlgorithm;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NasSecurityMode nasSecurityMode = (NasSecurityMode) o;
        return Objects.equals(this.integrityAlgorithm, nasSecurityMode.integrityAlgorithm)
               && Objects.equals(this.cipheringAlgorithm, nasSecurityMode.cipheringAlgorithm);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(integrityAlgorithm, cipheringAlgorithm);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NasSecurityMode {\n");
        sb.append("    integrityAlgorithm: ").append(toIndentedString(integrityAlgorithm)).append("\n");
        sb.append("    cipheringAlgorithm: ").append(toIndentedString(cipheringAlgorithm)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
