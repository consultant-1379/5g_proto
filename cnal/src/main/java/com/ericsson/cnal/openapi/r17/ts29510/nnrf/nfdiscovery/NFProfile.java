/*
 * NRF NFDiscovery Service
 * NRF NFDiscovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfdiscovery;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;
import java.util.function.BiPredicate;

import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.AanfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.AmfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.AusfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.BsfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.ChfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.CollocatedNfInstance;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.DccfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.DefaultNotificationSubscription;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.EasdfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.GmlcInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.HssInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.IdentityRange;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.IwmscInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.LmfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.MbSmfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.MbUpfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.MfafInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.MnpfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.NefInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.NsacfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.NssaafInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.NwdafInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.PcfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.PcscfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.PlmnSnssai;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.ScpInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.SeppInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.SmfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.SupiRange;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.TrustAfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.TsctsfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.UdmInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.UdrInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.UdsfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.UpfInfo;
import com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement.VendorSpecificFeature;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.ExtSnssai;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PlmnId;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PlmnIdNid;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Information of an NF Instance discovered by the NRF
 */
@ApiModel(description = "Information of an NF Instance discovered by the NRF")
@JsonPropertyOrder({ NFProfile.JSON_PROPERTY_NF_INSTANCE_ID,
                     NFProfile.JSON_PROPERTY_NF_INSTANCE_NAME,
                     NFProfile.JSON_PROPERTY_NF_TYPE,
                     NFProfile.JSON_PROPERTY_NF_STATUS,
                     NFProfile.JSON_PROPERTY_COLLOCATED_NF_INSTANCES,
                     NFProfile.JSON_PROPERTY_PLMN_LIST,
                     NFProfile.JSON_PROPERTY_S_NSSAIS,
                     NFProfile.JSON_PROPERTY_PER_PLMN_SNSSAI_LIST,
                     NFProfile.JSON_PROPERTY_NSI_LIST,
                     NFProfile.JSON_PROPERTY_FQDN,
                     NFProfile.JSON_PROPERTY_INTER_PLMN_FQDN,
                     NFProfile.JSON_PROPERTY_IPV4_ADDRESSES,
                     NFProfile.JSON_PROPERTY_IPV6_ADDRESSES,
                     NFProfile.JSON_PROPERTY_CAPACITY,
                     NFProfile.JSON_PROPERTY_LOAD,
                     NFProfile.JSON_PROPERTY_LOAD_TIME_STAMP,
                     NFProfile.JSON_PROPERTY_LOCALITY,
                     NFProfile.JSON_PROPERTY_PRIORITY,
                     NFProfile.JSON_PROPERTY_UDR_INFO,
                     NFProfile.JSON_PROPERTY_UDR_INFO_LIST,
                     NFProfile.JSON_PROPERTY_UDM_INFO,
                     NFProfile.JSON_PROPERTY_UDM_INFO_LIST,
                     NFProfile.JSON_PROPERTY_AUSF_INFO,
                     NFProfile.JSON_PROPERTY_AUSF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_AMF_INFO,
                     NFProfile.JSON_PROPERTY_AMF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_SMF_INFO,
                     NFProfile.JSON_PROPERTY_SMF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_UPF_INFO,
                     NFProfile.JSON_PROPERTY_UPF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_PCF_INFO,
                     NFProfile.JSON_PROPERTY_PCF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_BSF_INFO,
                     NFProfile.JSON_PROPERTY_BSF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_CHF_INFO,
                     NFProfile.JSON_PROPERTY_CHF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_UDSF_INFO,
                     NFProfile.JSON_PROPERTY_UDSF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_NWDAF_INFO,
                     NFProfile.JSON_PROPERTY_NWDAF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_NEF_INFO,
                     NFProfile.JSON_PROPERTY_PCSCF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_HSS_INFO_LIST,
                     NFProfile.JSON_PROPERTY_CUSTOM_INFO,
                     NFProfile.JSON_PROPERTY_RECOVERY_TIME,
                     NFProfile.JSON_PROPERTY_NF_SERVICE_PERSISTENCE,
                     NFProfile.JSON_PROPERTY_NF_SERVICES,
                     NFProfile.JSON_PROPERTY_NF_SERVICE_LIST,
                     NFProfile.JSON_PROPERTY_DEFAULT_NOTIFICATION_SUBSCRIPTIONS,
                     NFProfile.JSON_PROPERTY_LMF_INFO,
                     NFProfile.JSON_PROPERTY_GMLC_INFO,
                     NFProfile.JSON_PROPERTY_SNPN_LIST,
                     NFProfile.JSON_PROPERTY_NF_SET_ID_LIST,
                     NFProfile.JSON_PROPERTY_SERVING_SCOPE,
                     NFProfile.JSON_PROPERTY_LC_H_SUPPORT_IND,
                     NFProfile.JSON_PROPERTY_OLC_H_SUPPORT_IND,
                     NFProfile.JSON_PROPERTY_NF_SET_RECOVERY_TIME_LIST,
                     NFProfile.JSON_PROPERTY_SERVICE_SET_RECOVERY_TIME_LIST,
                     NFProfile.JSON_PROPERTY_SCP_DOMAINS,
                     NFProfile.JSON_PROPERTY_SCP_INFO,
                     NFProfile.JSON_PROPERTY_SEPP_INFO,
                     NFProfile.JSON_PROPERTY_VENDOR_ID,
                     NFProfile.JSON_PROPERTY_SUPPORTED_VENDOR_SPECIFIC_FEATURES,
                     NFProfile.JSON_PROPERTY_AANF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_MFAF_INFO,
                     NFProfile.JSON_PROPERTY_EASDF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_DCCF_INFO,
                     NFProfile.JSON_PROPERTY_NSACF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_MB_SMF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_TSCTSF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_MB_UPF_INFO_LIST,
                     NFProfile.JSON_PROPERTY_TRUST_AF_INFO,
                     NFProfile.JSON_PROPERTY_NSSAAF_INFO,
                     NFProfile.JSON_PROPERTY_HNI_LIST,
                     NFProfile.JSON_PROPERTY_IWMSC_INFO,
                     NFProfile.JSON_PROPERTY_MNPF_INFO })
public class NFProfile implements Comparable<NFProfile>, BiPredicate<String, String>
{
    public static final String JSON_PROPERTY_NF_INSTANCE_ID = "nfInstanceId";
    private UUID nfInstanceId;

    public static final String JSON_PROPERTY_NF_INSTANCE_NAME = "nfInstanceName";
    private String nfInstanceName;

    public static final String JSON_PROPERTY_NF_TYPE = "nfType";
    private String nfType;

    public static final String JSON_PROPERTY_NF_STATUS = "nfStatus";
    private String nfStatus;

    public static final String JSON_PROPERTY_COLLOCATED_NF_INSTANCES = "collocatedNfInstances";
    private List<CollocatedNfInstance> collocatedNfInstances = null;

    public static final String JSON_PROPERTY_PLMN_LIST = "plmnList";
    private List<PlmnId> plmnList = null;

    public static final String JSON_PROPERTY_S_NSSAIS = "sNssais";
    private List<ExtSnssai> sNssais = null;

    public static final String JSON_PROPERTY_PER_PLMN_SNSSAI_LIST = "perPlmnSnssaiList";
    private List<PlmnSnssai> perPlmnSnssaiList = null;

    public static final String JSON_PROPERTY_NSI_LIST = "nsiList";
    private List<String> nsiList = null;

    public static final String JSON_PROPERTY_FQDN = "fqdn";
    private String fqdn;

    public static final String JSON_PROPERTY_INTER_PLMN_FQDN = "interPlmnFqdn";
    private String interPlmnFqdn;

    public static final String JSON_PROPERTY_IPV4_ADDRESSES = "ipv4Addresses";
    private List<String> ipv4Addresses = null;

    public static final String JSON_PROPERTY_IPV6_ADDRESSES = "ipv6Addresses";
    private List<String> ipv6Addresses = null;

    public static final String JSON_PROPERTY_CAPACITY = "capacity";
    private Integer capacity;

    public static final String JSON_PROPERTY_LOAD = "load";
    private Integer load;

    public static final String JSON_PROPERTY_LOAD_TIME_STAMP = "loadTimeStamp";
    private OffsetDateTime loadTimeStamp;

    public static final String JSON_PROPERTY_LOCALITY = "locality";
    private String locality;

    public static final String JSON_PROPERTY_PRIORITY = "priority";
    private Integer priority;

    public static final String JSON_PROPERTY_UDR_INFO = "udrInfo";
    private UdrInfo udrInfo;

    public static final String JSON_PROPERTY_UDR_INFO_LIST = "udrInfoList";
    private Map<String, UdrInfo> udrInfoList = null;

    public static final String JSON_PROPERTY_UDM_INFO = "udmInfo";
    private UdmInfo udmInfo;

    public static final String JSON_PROPERTY_UDM_INFO_LIST = "udmInfoList";
    private Map<String, UdmInfo> udmInfoList = null;

    public static final String JSON_PROPERTY_AUSF_INFO = "ausfInfo";
    private AusfInfo ausfInfo;

    public static final String JSON_PROPERTY_AUSF_INFO_LIST = "ausfInfoList";
    private Map<String, AusfInfo> ausfInfoList = null;

    public static final String JSON_PROPERTY_AMF_INFO = "amfInfo";
    private AmfInfo amfInfo;

    public static final String JSON_PROPERTY_AMF_INFO_LIST = "amfInfoList";
    private Map<String, AmfInfo> amfInfoList = null;

    public static final String JSON_PROPERTY_SMF_INFO = "smfInfo";
    private SmfInfo smfInfo;

    public static final String JSON_PROPERTY_SMF_INFO_LIST = "smfInfoList";
    private Map<String, SmfInfo> smfInfoList = null;

    public static final String JSON_PROPERTY_UPF_INFO = "upfInfo";
    private UpfInfo upfInfo;

    public static final String JSON_PROPERTY_UPF_INFO_LIST = "upfInfoList";
    private Map<String, UpfInfo> upfInfoList = null;

    public static final String JSON_PROPERTY_PCF_INFO = "pcfInfo";
    private PcfInfo pcfInfo;

    public static final String JSON_PROPERTY_PCF_INFO_LIST = "pcfInfoList";
    private Map<String, PcfInfo> pcfInfoList = null;

    public static final String JSON_PROPERTY_BSF_INFO = "bsfInfo";
    private BsfInfo bsfInfo;

    public static final String JSON_PROPERTY_BSF_INFO_LIST = "bsfInfoList";
    private Map<String, BsfInfo> bsfInfoList = null;

    public static final String JSON_PROPERTY_CHF_INFO = "chfInfo";
    private ChfInfo chfInfo;

    public static final String JSON_PROPERTY_CHF_INFO_LIST = "chfInfoList";
    private Map<String, ChfInfo> chfInfoList = null;

    public static final String JSON_PROPERTY_UDSF_INFO = "udsfInfo";
    private UdsfInfo udsfInfo;

    public static final String JSON_PROPERTY_UDSF_INFO_LIST = "udsfInfoList";
    private Map<String, UdsfInfo> udsfInfoList = null;

    public static final String JSON_PROPERTY_NWDAF_INFO = "nwdafInfo";
    private NwdafInfo nwdafInfo;

    public static final String JSON_PROPERTY_NWDAF_INFO_LIST = "nwdafInfoList";
    private Map<String, NwdafInfo> nwdafInfoList = null;

    public static final String JSON_PROPERTY_NEF_INFO = "nefInfo";
    private NefInfo nefInfo;

    public static final String JSON_PROPERTY_PCSCF_INFO_LIST = "pcscfInfoList";
    private Map<String, PcscfInfo> pcscfInfoList = null;

    public static final String JSON_PROPERTY_HSS_INFO_LIST = "hssInfoList";
    private Map<String, HssInfo> hssInfoList = null;

    public static final String JSON_PROPERTY_CUSTOM_INFO = "customInfo";
    private Object customInfo;

    public static final String JSON_PROPERTY_RECOVERY_TIME = "recoveryTime";
    private OffsetDateTime recoveryTime;

    public static final String JSON_PROPERTY_NF_SERVICE_PERSISTENCE = "nfServicePersistence";
    private Boolean nfServicePersistence = false;

    public static final String JSON_PROPERTY_NF_SERVICES = "nfServices";
    private List<NFService> nfServices = null;

    public static final String JSON_PROPERTY_NF_SERVICE_LIST = "nfServiceList";
    private Map<String, NFService> nfServiceList = null;

    public static final String JSON_PROPERTY_DEFAULT_NOTIFICATION_SUBSCRIPTIONS = "defaultNotificationSubscriptions";
    private List<DefaultNotificationSubscription> defaultNotificationSubscriptions = null;

    public static final String JSON_PROPERTY_LMF_INFO = "lmfInfo";
    private LmfInfo lmfInfo;

    public static final String JSON_PROPERTY_GMLC_INFO = "gmlcInfo";
    private GmlcInfo gmlcInfo;

    public static final String JSON_PROPERTY_SNPN_LIST = "snpnList";
    private List<PlmnIdNid> snpnList = null;

    public static final String JSON_PROPERTY_NF_SET_ID_LIST = "nfSetIdList";
    private List<String> nfSetIdList = null;

    public static final String JSON_PROPERTY_SERVING_SCOPE = "servingScope";
    private List<String> servingScope = null;

    public static final String JSON_PROPERTY_LC_H_SUPPORT_IND = "lcHSupportInd";
    private Boolean lcHSupportInd = false;

    public static final String JSON_PROPERTY_OLC_H_SUPPORT_IND = "olcHSupportInd";
    private Boolean olcHSupportInd = false;

    public static final String JSON_PROPERTY_NF_SET_RECOVERY_TIME_LIST = "nfSetRecoveryTimeList";
    private Map<String, OffsetDateTime> nfSetRecoveryTimeList = null;

    public static final String JSON_PROPERTY_SERVICE_SET_RECOVERY_TIME_LIST = "serviceSetRecoveryTimeList";
    private Map<String, OffsetDateTime> serviceSetRecoveryTimeList = null;

    public static final String JSON_PROPERTY_SCP_DOMAINS = "scpDomains";
    private List<String> scpDomains = null;

    public static final String JSON_PROPERTY_SCP_INFO = "scpInfo";
    private ScpInfo scpInfo;

    public static final String JSON_PROPERTY_SEPP_INFO = "seppInfo";
    private SeppInfo seppInfo;

    public static final String JSON_PROPERTY_VENDOR_ID = "vendorId";
    private String vendorId;

    public static final String JSON_PROPERTY_SUPPORTED_VENDOR_SPECIFIC_FEATURES = "supportedVendorSpecificFeatures";
    private Map<String, List<VendorSpecificFeature>> supportedVendorSpecificFeatures = null;

    public static final String JSON_PROPERTY_AANF_INFO_LIST = "aanfInfoList";
    private Map<String, AanfInfo> aanfInfoList = null;

    public static final String JSON_PROPERTY_MFAF_INFO = "mfafInfo";
    private MfafInfo mfafInfo;

    public static final String JSON_PROPERTY_EASDF_INFO_LIST = "easdfInfoList";
    private Map<String, EasdfInfo> easdfInfoList = null;

    public static final String JSON_PROPERTY_DCCF_INFO = "dccfInfo";
    private DccfInfo dccfInfo;

    public static final String JSON_PROPERTY_NSACF_INFO_LIST = "nsacfInfoList";
    private Map<String, NsacfInfo> nsacfInfoList = null;

    public static final String JSON_PROPERTY_MB_SMF_INFO_LIST = "mbSmfInfoList";
    private Map<String, MbSmfInfo> mbSmfInfoList = null;

    public static final String JSON_PROPERTY_TSCTSF_INFO_LIST = "tsctsfInfoList";
    private Map<String, TsctsfInfo> tsctsfInfoList = null;

    public static final String JSON_PROPERTY_MB_UPF_INFO_LIST = "mbUpfInfoList";
    private Map<String, MbUpfInfo> mbUpfInfoList = null;

    public static final String JSON_PROPERTY_TRUST_AF_INFO = "trustAfInfo";
    private TrustAfInfo trustAfInfo;

    public static final String JSON_PROPERTY_NSSAAF_INFO = "nssaafInfo";
    private NssaafInfo nssaafInfo;

    public static final String JSON_PROPERTY_HNI_LIST = "hniList";
    private List<String> hniList = null;

    public static final String JSON_PROPERTY_IWMSC_INFO = "iwmscInfo";
    private IwmscInfo iwmscInfo;

    public static final String JSON_PROPERTY_MNPF_INFO = "mnpfInfo";
    private MnpfInfo mnpfInfo;

    public NFProfile()
    {
    }

    public NFProfile nfInstanceId(UUID nfInstanceId)
    {

        this.nfInstanceId = nfInstanceId;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return nfInstanceId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public UUID getNfInstanceId()
    {
        return nfInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNfInstanceId(UUID nfInstanceId)
    {
        this.nfInstanceId = nfInstanceId;
    }

    public NFProfile nfInstanceName(String nfInstanceName)
    {

        this.nfInstanceName = nfInstanceName;
        return this;
    }

    /**
     * Get nfInstanceName
     * 
     * @return nfInstanceName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNfInstanceName()
    {
        return nfInstanceName;
    }

    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfInstanceName(String nfInstanceName)
    {
        this.nfInstanceName = nfInstanceName;
    }

    public NFProfile nfType(String nfType)
    {

        this.nfType = nfType;
        return this;
    }

    /**
     * NF types known to NRF
     * 
     * @return nfType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "NF types known to NRF")
    @JsonProperty(JSON_PROPERTY_NF_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getNfType()
    {
        return nfType;
    }

    @JsonProperty(JSON_PROPERTY_NF_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNfType(String nfType)
    {
        this.nfType = nfType;
    }

    public NFProfile nfStatus(String nfStatus)
    {

        this.nfStatus = nfStatus;
        return this;
    }

    /**
     * Status of a given NF Instance stored in NRF
     * 
     * @return nfStatus
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Status of a given NF Instance stored in NRF")
    @JsonProperty(JSON_PROPERTY_NF_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getNfStatus()
    {
        return nfStatus;
    }

    @JsonProperty(JSON_PROPERTY_NF_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNfStatus(String nfStatus)
    {
        this.nfStatus = nfStatus;
    }

    public NFProfile collocatedNfInstances(List<CollocatedNfInstance> collocatedNfInstances)
    {

        this.collocatedNfInstances = collocatedNfInstances;
        return this;
    }

    public NFProfile addCollocatedNfInstancesItem(CollocatedNfInstance collocatedNfInstancesItem)
    {
        if (this.collocatedNfInstances == null)
        {
            this.collocatedNfInstances = new ArrayList<>();
        }
        this.collocatedNfInstances.add(collocatedNfInstancesItem);
        return this;
    }

    /**
     * Get collocatedNfInstances
     * 
     * @return collocatedNfInstances
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_COLLOCATED_NF_INSTANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<CollocatedNfInstance> getCollocatedNfInstances()
    {
        return collocatedNfInstances;
    }

    @JsonProperty(JSON_PROPERTY_COLLOCATED_NF_INSTANCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCollocatedNfInstances(List<CollocatedNfInstance> collocatedNfInstances)
    {
        this.collocatedNfInstances = collocatedNfInstances;
    }

    public NFProfile plmnList(List<PlmnId> plmnList)
    {

        this.plmnList = plmnList;
        return this;
    }

    public NFProfile addPlmnListItem(PlmnId plmnListItem)
    {
        if (this.plmnList == null)
        {
            this.plmnList = new ArrayList<>();
        }
        this.plmnList.add(plmnListItem);
        return this;
    }

    /**
     * Get plmnList
     * 
     * @return plmnList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PLMN_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PlmnId> getPlmnList()
    {
        return plmnList;
    }

    @JsonProperty(JSON_PROPERTY_PLMN_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPlmnList(List<PlmnId> plmnList)
    {
        this.plmnList = plmnList;
    }

    public NFProfile sNssais(List<ExtSnssai> sNssais)
    {

        this.sNssais = sNssais;
        return this;
    }

    public NFProfile addSNssaisItem(ExtSnssai sNssaisItem)
    {
        if (this.sNssais == null)
        {
            this.sNssais = new ArrayList<>();
        }
        this.sNssais.add(sNssaisItem);
        return this;
    }

    /**
     * Get sNssais
     * 
     * @return sNssais
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_S_NSSAIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ExtSnssai> getsNssais()
    {
        return sNssais;
    }

    @JsonProperty(JSON_PROPERTY_S_NSSAIS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setsNssais(List<ExtSnssai> sNssais)
    {
        this.sNssais = sNssais;
    }

    public NFProfile perPlmnSnssaiList(List<PlmnSnssai> perPlmnSnssaiList)
    {

        this.perPlmnSnssaiList = perPlmnSnssaiList;
        return this;
    }

    public NFProfile addPerPlmnSnssaiListItem(PlmnSnssai perPlmnSnssaiListItem)
    {
        if (this.perPlmnSnssaiList == null)
        {
            this.perPlmnSnssaiList = new ArrayList<>();
        }
        this.perPlmnSnssaiList.add(perPlmnSnssaiListItem);
        return this;
    }

    /**
     * Get perPlmnSnssaiList
     * 
     * @return perPlmnSnssaiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PER_PLMN_SNSSAI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PlmnSnssai> getPerPlmnSnssaiList()
    {
        return perPlmnSnssaiList;
    }

    @JsonProperty(JSON_PROPERTY_PER_PLMN_SNSSAI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPerPlmnSnssaiList(List<PlmnSnssai> perPlmnSnssaiList)
    {
        this.perPlmnSnssaiList = perPlmnSnssaiList;
    }

    public NFProfile nsiList(List<String> nsiList)
    {

        this.nsiList = nsiList;
        return this;
    }

    public NFProfile addNsiListItem(String nsiListItem)
    {
        if (this.nsiList == null)
        {
            this.nsiList = new ArrayList<>();
        }
        this.nsiList.add(nsiListItem);
        return this;
    }

    /**
     * Get nsiList
     * 
     * @return nsiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NSI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getNsiList()
    {
        return nsiList;
    }

    @JsonProperty(JSON_PROPERTY_NSI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNsiList(List<String> nsiList)
    {
        this.nsiList = nsiList;
    }

    public NFProfile fqdn(String fqdn)
    {

        this.fqdn = fqdn;
        return this;
    }

    /**
     * Fully Qualified Domain Name
     * 
     * @return fqdn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Fully Qualified Domain Name")
    @JsonProperty(JSON_PROPERTY_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFqdn()
    {
        return fqdn;
    }

    @JsonProperty(JSON_PROPERTY_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFqdn(String fqdn)
    {
        this.fqdn = fqdn;
    }

    public NFProfile interPlmnFqdn(String interPlmnFqdn)
    {

        this.interPlmnFqdn = interPlmnFqdn;
        return this;
    }

    /**
     * Fully Qualified Domain Name
     * 
     * @return interPlmnFqdn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Fully Qualified Domain Name")
    @JsonProperty(JSON_PROPERTY_INTER_PLMN_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getInterPlmnFqdn()
    {
        return interPlmnFqdn;
    }

    @JsonProperty(JSON_PROPERTY_INTER_PLMN_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInterPlmnFqdn(String interPlmnFqdn)
    {
        this.interPlmnFqdn = interPlmnFqdn;
    }

    public NFProfile ipv4Addresses(List<String> ipv4Addresses)
    {

        this.ipv4Addresses = ipv4Addresses;
        return this;
    }

    public NFProfile addIpv4AddressesItem(String ipv4AddressesItem)
    {
        if (this.ipv4Addresses == null)
        {
            this.ipv4Addresses = new ArrayList<>();
        }
        this.ipv4Addresses.add(ipv4AddressesItem);
        return this;
    }

    /**
     * Get ipv4Addresses
     * 
     * @return ipv4Addresses
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IPV4_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getIpv4Addresses()
    {
        return ipv4Addresses;
    }

    @JsonProperty(JSON_PROPERTY_IPV4_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv4Addresses(List<String> ipv4Addresses)
    {
        this.ipv4Addresses = ipv4Addresses;
    }

    public NFProfile ipv6Addresses(List<String> ipv6Addresses)
    {

        this.ipv6Addresses = ipv6Addresses;
        return this;
    }

    public NFProfile addIpv6AddressesItem(String ipv6AddressesItem)
    {
        if (this.ipv6Addresses == null)
        {
            this.ipv6Addresses = new ArrayList<>();
        }
        this.ipv6Addresses.add(ipv6AddressesItem);
        return this;
    }

    /**
     * Get ipv6Addresses
     * 
     * @return ipv6Addresses
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IPV6_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getIpv6Addresses()
    {
        return ipv6Addresses;
    }

    @JsonProperty(JSON_PROPERTY_IPV6_ADDRESSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv6Addresses(List<String> ipv6Addresses)
    {
        this.ipv6Addresses = ipv6Addresses;
    }

    public NFProfile capacity(Integer capacity)
    {

        this.capacity = capacity;
        return this;
    }

    /**
     * Get capacity minimum: 0 maximum: 65535
     * 
     * @return capacity
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CAPACITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getCapacity()
    {
        return capacity;
    }

    @JsonProperty(JSON_PROPERTY_CAPACITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCapacity(Integer capacity)
    {
        this.capacity = capacity;
    }

    public NFProfile load(Integer load)
    {

        this.load = load;
        return this;
    }

    /**
     * Get load minimum: 0 maximum: 100
     * 
     * @return load
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LOAD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getLoad()
    {
        return load;
    }

    @JsonProperty(JSON_PROPERTY_LOAD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLoad(Integer load)
    {
        this.load = load;
    }

    public NFProfile loadTimeStamp(OffsetDateTime loadTimeStamp)
    {

        this.loadTimeStamp = loadTimeStamp;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return loadTimeStamp
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_LOAD_TIME_STAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getLoadTimeStamp()
    {
        return loadTimeStamp;
    }

    @JsonProperty(JSON_PROPERTY_LOAD_TIME_STAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLoadTimeStamp(OffsetDateTime loadTimeStamp)
    {
        this.loadTimeStamp = loadTimeStamp;
    }

    public NFProfile locality(String locality)
    {

        this.locality = locality;
        return this;
    }

    /**
     * Get locality
     * 
     * @return locality
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LOCALITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getLocality()
    {
        return locality;
    }

    @JsonProperty(JSON_PROPERTY_LOCALITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLocality(String locality)
    {
        this.locality = locality;
    }

    public NFProfile priority(Integer priority)
    {

        this.priority = priority;
        return this;
    }

    /**
     * Get priority minimum: 0 maximum: 65535
     * 
     * @return priority
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getPriority()
    {
        return priority;
    }

    @JsonProperty(JSON_PROPERTY_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPriority(Integer priority)
    {
        this.priority = priority;
    }

    public NFProfile udrInfo(UdrInfo udrInfo)
    {

        this.udrInfo = udrInfo;
        return this;
    }

    /**
     * Get udrInfo
     * 
     * @return udrInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UDR_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UdrInfo getUdrInfo()
    {
        return udrInfo;
    }

    @JsonProperty(JSON_PROPERTY_UDR_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUdrInfo(UdrInfo udrInfo)
    {
        this.udrInfo = udrInfo;
    }

    public NFProfile udrInfoList(Map<String, UdrInfo> udrInfoList)
    {

        this.udrInfoList = udrInfoList;
        return this;
    }

    public NFProfile putUdrInfoListItem(String key,
                                        UdrInfo udrInfoListItem)
    {
        if (this.udrInfoList == null)
        {
            this.udrInfoList = new HashMap<>();
        }
        this.udrInfoList.put(key, udrInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of UdrInfo
     * 
     * @return udrInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdrInfo ")
    @JsonProperty(JSON_PROPERTY_UDR_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, UdrInfo> getUdrInfoList()
    {
        return udrInfoList;
    }

    @JsonProperty(JSON_PROPERTY_UDR_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUdrInfoList(Map<String, UdrInfo> udrInfoList)
    {
        this.udrInfoList = udrInfoList;
    }

    public NFProfile udmInfo(UdmInfo udmInfo)
    {

        this.udmInfo = udmInfo;
        return this;
    }

    /**
     * Get udmInfo
     * 
     * @return udmInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UDM_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UdmInfo getUdmInfo()
    {
        return udmInfo;
    }

    @JsonProperty(JSON_PROPERTY_UDM_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUdmInfo(UdmInfo udmInfo)
    {
        this.udmInfo = udmInfo;
    }

    public NFProfile udmInfoList(Map<String, UdmInfo> udmInfoList)
    {

        this.udmInfoList = udmInfoList;
        return this;
    }

    public NFProfile putUdmInfoListItem(String key,
                                        UdmInfo udmInfoListItem)
    {
        if (this.udmInfoList == null)
        {
            this.udmInfoList = new HashMap<>();
        }
        this.udmInfoList.put(key, udmInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of UdmInfo
     * 
     * @return udmInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdmInfo ")
    @JsonProperty(JSON_PROPERTY_UDM_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, UdmInfo> getUdmInfoList()
    {
        return udmInfoList;
    }

    @JsonProperty(JSON_PROPERTY_UDM_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUdmInfoList(Map<String, UdmInfo> udmInfoList)
    {
        this.udmInfoList = udmInfoList;
    }

    public NFProfile ausfInfo(AusfInfo ausfInfo)
    {

        this.ausfInfo = ausfInfo;
        return this;
    }

    /**
     * Get ausfInfo
     * 
     * @return ausfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_AUSF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AusfInfo getAusfInfo()
    {
        return ausfInfo;
    }

    @JsonProperty(JSON_PROPERTY_AUSF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAusfInfo(AusfInfo ausfInfo)
    {
        this.ausfInfo = ausfInfo;
    }

    public NFProfile ausfInfoList(Map<String, AusfInfo> ausfInfoList)
    {

        this.ausfInfoList = ausfInfoList;
        return this;
    }

    public NFProfile putAusfInfoListItem(String key,
                                         AusfInfo ausfInfoListItem)
    {
        if (this.ausfInfoList == null)
        {
            this.ausfInfoList = new HashMap<>();
        }
        this.ausfInfoList.put(key, ausfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of AusfInfo
     * 
     * @return ausfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AusfInfo ")
    @JsonProperty(JSON_PROPERTY_AUSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, AusfInfo> getAusfInfoList()
    {
        return ausfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_AUSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAusfInfoList(Map<String, AusfInfo> ausfInfoList)
    {
        this.ausfInfoList = ausfInfoList;
    }

    public NFProfile amfInfo(AmfInfo amfInfo)
    {

        this.amfInfo = amfInfo;
        return this;
    }

    /**
     * Get amfInfo
     * 
     * @return amfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_AMF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AmfInfo getAmfInfo()
    {
        return amfInfo;
    }

    @JsonProperty(JSON_PROPERTY_AMF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmfInfo(AmfInfo amfInfo)
    {
        this.amfInfo = amfInfo;
    }

    public NFProfile amfInfoList(Map<String, AmfInfo> amfInfoList)
    {

        this.amfInfoList = amfInfoList;
        return this;
    }

    public NFProfile putAmfInfoListItem(String key,
                                        AmfInfo amfInfoListItem)
    {
        if (this.amfInfoList == null)
        {
            this.amfInfoList = new HashMap<>();
        }
        this.amfInfoList.put(key, amfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of AmfInfo
     * 
     * @return amfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AmfInfo ")
    @JsonProperty(JSON_PROPERTY_AMF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, AmfInfo> getAmfInfoList()
    {
        return amfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_AMF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmfInfoList(Map<String, AmfInfo> amfInfoList)
    {
        this.amfInfoList = amfInfoList;
    }

    public NFProfile smfInfo(SmfInfo smfInfo)
    {

        this.smfInfo = smfInfo;
        return this;
    }

    /**
     * Get smfInfo
     * 
     * @return smfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SMF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SmfInfo getSmfInfo()
    {
        return smfInfo;
    }

    @JsonProperty(JSON_PROPERTY_SMF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmfInfo(SmfInfo smfInfo)
    {
        this.smfInfo = smfInfo;
    }

    public NFProfile smfInfoList(Map<String, SmfInfo> smfInfoList)
    {

        this.smfInfoList = smfInfoList;
        return this;
    }

    public NFProfile putSmfInfoListItem(String key,
                                        SmfInfo smfInfoListItem)
    {
        if (this.smfInfoList == null)
        {
            this.smfInfoList = new HashMap<>();
        }
        this.smfInfoList.put(key, smfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of SmfInfo
     * 
     * @return smfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of SmfInfo ")
    @JsonProperty(JSON_PROPERTY_SMF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, SmfInfo> getSmfInfoList()
    {
        return smfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_SMF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmfInfoList(Map<String, SmfInfo> smfInfoList)
    {
        this.smfInfoList = smfInfoList;
    }

    public NFProfile upfInfo(UpfInfo upfInfo)
    {

        this.upfInfo = upfInfo;
        return this;
    }

    /**
     * Get upfInfo
     * 
     * @return upfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UPF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UpfInfo getUpfInfo()
    {
        return upfInfo;
    }

    @JsonProperty(JSON_PROPERTY_UPF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpfInfo(UpfInfo upfInfo)
    {
        this.upfInfo = upfInfo;
    }

    public NFProfile upfInfoList(Map<String, UpfInfo> upfInfoList)
    {

        this.upfInfoList = upfInfoList;
        return this;
    }

    public NFProfile putUpfInfoListItem(String key,
                                        UpfInfo upfInfoListItem)
    {
        if (this.upfInfoList == null)
        {
            this.upfInfoList = new HashMap<>();
        }
        this.upfInfoList.put(key, upfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of UpfInfo
     * 
     * @return upfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UpfInfo ")
    @JsonProperty(JSON_PROPERTY_UPF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, UpfInfo> getUpfInfoList()
    {
        return upfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_UPF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpfInfoList(Map<String, UpfInfo> upfInfoList)
    {
        this.upfInfoList = upfInfoList;
    }

    public NFProfile pcfInfo(PcfInfo pcfInfo)
    {

        this.pcfInfo = pcfInfo;
        return this;
    }

    /**
     * Get pcfInfo
     * 
     * @return pcfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PCF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PcfInfo getPcfInfo()
    {
        return pcfInfo;
    }

    @JsonProperty(JSON_PROPERTY_PCF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPcfInfo(PcfInfo pcfInfo)
    {
        this.pcfInfo = pcfInfo;
    }

    public NFProfile pcfInfoList(Map<String, PcfInfo> pcfInfoList)
    {

        this.pcfInfoList = pcfInfoList;
        return this;
    }

    public NFProfile putPcfInfoListItem(String key,
                                        PcfInfo pcfInfoListItem)
    {
        if (this.pcfInfoList == null)
        {
            this.pcfInfoList = new HashMap<>();
        }
        this.pcfInfoList.put(key, pcfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of PcfInfo
     * 
     * @return pcfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of PcfInfo ")
    @JsonProperty(JSON_PROPERTY_PCF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, PcfInfo> getPcfInfoList()
    {
        return pcfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_PCF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPcfInfoList(Map<String, PcfInfo> pcfInfoList)
    {
        this.pcfInfoList = pcfInfoList;
    }

    public NFProfile bsfInfo(BsfInfo bsfInfo)
    {

        this.bsfInfo = bsfInfo;
        return this;
    }

    /**
     * Get bsfInfo
     * 
     * @return bsfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_BSF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BsfInfo getBsfInfo()
    {
        return bsfInfo;
    }

    @JsonProperty(JSON_PROPERTY_BSF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBsfInfo(BsfInfo bsfInfo)
    {
        this.bsfInfo = bsfInfo;
    }

    public NFProfile bsfInfoList(Map<String, BsfInfo> bsfInfoList)
    {

        this.bsfInfoList = bsfInfoList;
        return this;
    }

    public NFProfile putBsfInfoListItem(String key,
                                        BsfInfo bsfInfoListItem)
    {
        if (this.bsfInfoList == null)
        {
            this.bsfInfoList = new HashMap<>();
        }
        this.bsfInfoList.put(key, bsfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of BsfInfo
     * 
     * @return bsfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of BsfInfo ")
    @JsonProperty(JSON_PROPERTY_BSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, BsfInfo> getBsfInfoList()
    {
        return bsfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_BSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBsfInfoList(Map<String, BsfInfo> bsfInfoList)
    {
        this.bsfInfoList = bsfInfoList;
    }

    public NFProfile chfInfo(ChfInfo chfInfo)
    {

        this.chfInfo = chfInfo;
        return this;
    }

    /**
     * Get chfInfo
     * 
     * @return chfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CHF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ChfInfo getChfInfo()
    {
        return chfInfo;
    }

    @JsonProperty(JSON_PROPERTY_CHF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChfInfo(ChfInfo chfInfo)
    {
        this.chfInfo = chfInfo;
    }

    public NFProfile chfInfoList(Map<String, ChfInfo> chfInfoList)
    {

        this.chfInfoList = chfInfoList;
        return this;
    }

    public NFProfile putChfInfoListItem(String key,
                                        ChfInfo chfInfoListItem)
    {
        if (this.chfInfoList == null)
        {
            this.chfInfoList = new HashMap<>();
        }
        this.chfInfoList.put(key, chfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of ChfInfo
     * 
     * @return chfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of ChfInfo ")
    @JsonProperty(JSON_PROPERTY_CHF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, ChfInfo> getChfInfoList()
    {
        return chfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_CHF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChfInfoList(Map<String, ChfInfo> chfInfoList)
    {
        this.chfInfoList = chfInfoList;
    }

    public NFProfile udsfInfo(UdsfInfo udsfInfo)
    {

        this.udsfInfo = udsfInfo;
        return this;
    }

    /**
     * Get udsfInfo
     * 
     * @return udsfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UDSF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UdsfInfo getUdsfInfo()
    {
        return udsfInfo;
    }

    @JsonProperty(JSON_PROPERTY_UDSF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUdsfInfo(UdsfInfo udsfInfo)
    {
        this.udsfInfo = udsfInfo;
    }

    public NFProfile udsfInfoList(Map<String, UdsfInfo> udsfInfoList)
    {

        this.udsfInfoList = udsfInfoList;
        return this;
    }

    public NFProfile putUdsfInfoListItem(String key,
                                         UdsfInfo udsfInfoListItem)
    {
        if (this.udsfInfoList == null)
        {
            this.udsfInfoList = new HashMap<>();
        }
        this.udsfInfoList.put(key, udsfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of UdsfInfo
     * 
     * @return udsfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of UdsfInfo ")
    @JsonProperty(JSON_PROPERTY_UDSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, UdsfInfo> getUdsfInfoList()
    {
        return udsfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_UDSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUdsfInfoList(Map<String, UdsfInfo> udsfInfoList)
    {
        this.udsfInfoList = udsfInfoList;
    }

    public NFProfile nwdafInfo(NwdafInfo nwdafInfo)
    {

        this.nwdafInfo = nwdafInfo;
        return this;
    }

    /**
     * Get nwdafInfo
     * 
     * @return nwdafInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NWDAF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NwdafInfo getNwdafInfo()
    {
        return nwdafInfo;
    }

    @JsonProperty(JSON_PROPERTY_NWDAF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNwdafInfo(NwdafInfo nwdafInfo)
    {
        this.nwdafInfo = nwdafInfo;
    }

    public NFProfile nwdafInfoList(Map<String, NwdafInfo> nwdafInfoList)
    {

        this.nwdafInfoList = nwdafInfoList;
        return this;
    }

    public NFProfile putNwdafInfoListItem(String key,
                                          NwdafInfo nwdafInfoListItem)
    {
        if (this.nwdafInfoList == null)
        {
            this.nwdafInfoList = new HashMap<>();
        }
        this.nwdafInfoList.put(key, nwdafInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of NwdafInfo
     * 
     * @return nwdafInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of NwdafInfo ")
    @JsonProperty(JSON_PROPERTY_NWDAF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, NwdafInfo> getNwdafInfoList()
    {
        return nwdafInfoList;
    }

    @JsonProperty(JSON_PROPERTY_NWDAF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNwdafInfoList(Map<String, NwdafInfo> nwdafInfoList)
    {
        this.nwdafInfoList = nwdafInfoList;
    }

    public NFProfile nefInfo(NefInfo nefInfo)
    {

        this.nefInfo = nefInfo;
        return this;
    }

    /**
     * Get nefInfo
     * 
     * @return nefInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NEF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NefInfo getNefInfo()
    {
        return nefInfo;
    }

    @JsonProperty(JSON_PROPERTY_NEF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNefInfo(NefInfo nefInfo)
    {
        this.nefInfo = nefInfo;
    }

    public NFProfile pcscfInfoList(Map<String, PcscfInfo> pcscfInfoList)
    {

        this.pcscfInfoList = pcscfInfoList;
        return this;
    }

    public NFProfile putPcscfInfoListItem(String key,
                                          PcscfInfo pcscfInfoListItem)
    {
        if (this.pcscfInfoList == null)
        {
            this.pcscfInfoList = new HashMap<>();
        }
        this.pcscfInfoList.put(key, pcscfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of PcscfInfo
     * 
     * @return pcscfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of PcscfInfo ")
    @JsonProperty(JSON_PROPERTY_PCSCF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, PcscfInfo> getPcscfInfoList()
    {
        return pcscfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_PCSCF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPcscfInfoList(Map<String, PcscfInfo> pcscfInfoList)
    {
        this.pcscfInfoList = pcscfInfoList;
    }

    public NFProfile hssInfoList(Map<String, HssInfo> hssInfoList)
    {

        this.hssInfoList = hssInfoList;
        return this;
    }

    public NFProfile putHssInfoListItem(String key,
                                        HssInfo hssInfoListItem)
    {
        if (this.hssInfoList == null)
        {
            this.hssInfoList = new HashMap<>();
        }
        this.hssInfoList.put(key, hssInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of HssInfo
     * 
     * @return hssInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of HssInfo ")
    @JsonProperty(JSON_PROPERTY_HSS_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, HssInfo> getHssInfoList()
    {
        return hssInfoList;
    }

    @JsonProperty(JSON_PROPERTY_HSS_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHssInfoList(Map<String, HssInfo> hssInfoList)
    {
        this.hssInfoList = hssInfoList;
    }

    public NFProfile customInfo(Object customInfo)
    {

        this.customInfo = customInfo;
        return this;
    }

    /**
     * Get customInfo
     * 
     * @return customInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CUSTOM_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getCustomInfo()
    {
        return customInfo;
    }

    @JsonProperty(JSON_PROPERTY_CUSTOM_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomInfo(Object customInfo)
    {
        this.customInfo = customInfo;
    }

    public NFProfile recoveryTime(OffsetDateTime recoveryTime)
    {

        this.recoveryTime = recoveryTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return recoveryTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_RECOVERY_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getRecoveryTime()
    {
        return recoveryTime;
    }

    @JsonProperty(JSON_PROPERTY_RECOVERY_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRecoveryTime(OffsetDateTime recoveryTime)
    {
        this.recoveryTime = recoveryTime;
    }

    public NFProfile nfServicePersistence(Boolean nfServicePersistence)
    {

        this.nfServicePersistence = nfServicePersistence;
        return this;
    }

    /**
     * Get nfServicePersistence
     * 
     * @return nfServicePersistence
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_SERVICE_PERSISTENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getNfServicePersistence()
    {
        return nfServicePersistence;
    }

    @JsonProperty(JSON_PROPERTY_NF_SERVICE_PERSISTENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfServicePersistence(Boolean nfServicePersistence)
    {
        this.nfServicePersistence = nfServicePersistence;
    }

    public NFProfile nfServices(List<NFService> nfServices)
    {

        this.nfServices = nfServices;
        return this;
    }

    public NFProfile addNfServicesItem(NFService nfServicesItem)
    {
        if (this.nfServices == null)
        {
            this.nfServices = new ArrayList<>();
        }
        this.nfServices.add(nfServicesItem);
        return this;
    }

    /**
     * Get nfServices
     * 
     * @return nfServices
     * @deprecated
     **/
    @Deprecated
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_SERVICES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<NFService> getNfServices()
    {
        return nfServices;
    }

    @JsonProperty(JSON_PROPERTY_NF_SERVICES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfServices(List<NFService> nfServices)
    {
        this.nfServices = nfServices;
    }

    public NFProfile nfServiceList(Map<String, NFService> nfServiceList)
    {

        this.nfServiceList = nfServiceList;
        return this;
    }

    public NFProfile putNfServiceListItem(String key,
                                          NFService nfServiceListItem)
    {
        if (this.nfServiceList == null)
        {
            this.nfServiceList = new HashMap<>();
        }
        this.nfServiceList.put(key, nfServiceListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where serviceInstanceId serves as key of
     * NFService
     * 
     * @return nfServiceList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where serviceInstanceId serves as key of NFService ")
    @JsonProperty(JSON_PROPERTY_NF_SERVICE_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, NFService> getNfServiceList()
    {
        return nfServiceList;
    }

    @JsonProperty(JSON_PROPERTY_NF_SERVICE_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfServiceList(Map<String, NFService> nfServiceList)
    {
        this.nfServiceList = nfServiceList;
    }

    public NFProfile defaultNotificationSubscriptions(List<DefaultNotificationSubscription> defaultNotificationSubscriptions)
    {

        this.defaultNotificationSubscriptions = defaultNotificationSubscriptions;
        return this;
    }

    public NFProfile addDefaultNotificationSubscriptionsItem(DefaultNotificationSubscription defaultNotificationSubscriptionsItem)
    {
        if (this.defaultNotificationSubscriptions == null)
        {
            this.defaultNotificationSubscriptions = new ArrayList<>();
        }
        this.defaultNotificationSubscriptions.add(defaultNotificationSubscriptionsItem);
        return this;
    }

    /**
     * Get defaultNotificationSubscriptions
     * 
     * @return defaultNotificationSubscriptions
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DEFAULT_NOTIFICATION_SUBSCRIPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<DefaultNotificationSubscription> getDefaultNotificationSubscriptions()
    {
        return defaultNotificationSubscriptions;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_NOTIFICATION_SUBSCRIPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDefaultNotificationSubscriptions(List<DefaultNotificationSubscription> defaultNotificationSubscriptions)
    {
        this.defaultNotificationSubscriptions = defaultNotificationSubscriptions;
    }

    public NFProfile lmfInfo(LmfInfo lmfInfo)
    {

        this.lmfInfo = lmfInfo;
        return this;
    }

    /**
     * Get lmfInfo
     * 
     * @return lmfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LMF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LmfInfo getLmfInfo()
    {
        return lmfInfo;
    }

    @JsonProperty(JSON_PROPERTY_LMF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLmfInfo(LmfInfo lmfInfo)
    {
        this.lmfInfo = lmfInfo;
    }

    public NFProfile gmlcInfo(GmlcInfo gmlcInfo)
    {

        this.gmlcInfo = gmlcInfo;
        return this;
    }

    /**
     * Get gmlcInfo
     * 
     * @return gmlcInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_GMLC_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public GmlcInfo getGmlcInfo()
    {
        return gmlcInfo;
    }

    @JsonProperty(JSON_PROPERTY_GMLC_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGmlcInfo(GmlcInfo gmlcInfo)
    {
        this.gmlcInfo = gmlcInfo;
    }

    public NFProfile snpnList(List<PlmnIdNid> snpnList)
    {

        this.snpnList = snpnList;
        return this;
    }

    public NFProfile addSnpnListItem(PlmnIdNid snpnListItem)
    {
        if (this.snpnList == null)
        {
            this.snpnList = new ArrayList<>();
        }
        this.snpnList.add(snpnListItem);
        return this;
    }

    /**
     * Get snpnList
     * 
     * @return snpnList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNPN_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PlmnIdNid> getSnpnList()
    {
        return snpnList;
    }

    @JsonProperty(JSON_PROPERTY_SNPN_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnpnList(List<PlmnIdNid> snpnList)
    {
        this.snpnList = snpnList;
    }

    public NFProfile nfSetIdList(List<String> nfSetIdList)
    {

        this.nfSetIdList = nfSetIdList;
        return this;
    }

    public NFProfile addNfSetIdListItem(String nfSetIdListItem)
    {
        if (this.nfSetIdList == null)
        {
            this.nfSetIdList = new ArrayList<>();
        }
        this.nfSetIdList.add(nfSetIdListItem);
        return this;
    }

    /**
     * Get nfSetIdList
     * 
     * @return nfSetIdList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_SET_ID_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getNfSetIdList()
    {
        return nfSetIdList;
    }

    @JsonProperty(JSON_PROPERTY_NF_SET_ID_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfSetIdList(List<String> nfSetIdList)
    {
        this.nfSetIdList = nfSetIdList;
    }

    public NFProfile servingScope(List<String> servingScope)
    {

        this.servingScope = servingScope;
        return this;
    }

    public NFProfile addServingScopeItem(String servingScopeItem)
    {
        if (this.servingScope == null)
        {
            this.servingScope = new ArrayList<>();
        }
        this.servingScope.add(servingScopeItem);
        return this;
    }

    /**
     * Get servingScope
     * 
     * @return servingScope
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SERVING_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getServingScope()
    {
        return servingScope;
    }

    @JsonProperty(JSON_PROPERTY_SERVING_SCOPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServingScope(List<String> servingScope)
    {
        this.servingScope = servingScope;
    }

    public NFProfile lcHSupportInd(Boolean lcHSupportInd)
    {

        this.lcHSupportInd = lcHSupportInd;
        return this;
    }

    /**
     * Get lcHSupportInd
     * 
     * @return lcHSupportInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LC_H_SUPPORT_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getLcHSupportInd()
    {
        return lcHSupportInd;
    }

    @JsonProperty(JSON_PROPERTY_LC_H_SUPPORT_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLcHSupportInd(Boolean lcHSupportInd)
    {
        this.lcHSupportInd = lcHSupportInd;
    }

    public NFProfile olcHSupportInd(Boolean olcHSupportInd)
    {

        this.olcHSupportInd = olcHSupportInd;
        return this;
    }

    /**
     * Get olcHSupportInd
     * 
     * @return olcHSupportInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_OLC_H_SUPPORT_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getOlcHSupportInd()
    {
        return olcHSupportInd;
    }

    @JsonProperty(JSON_PROPERTY_OLC_H_SUPPORT_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOlcHSupportInd(Boolean olcHSupportInd)
    {
        this.olcHSupportInd = olcHSupportInd;
    }

    public NFProfile nfSetRecoveryTimeList(Map<String, OffsetDateTime> nfSetRecoveryTimeList)
    {

        this.nfSetRecoveryTimeList = nfSetRecoveryTimeList;
        return this;
    }

    public NFProfile putNfSetRecoveryTimeListItem(String key,
                                                  OffsetDateTime nfSetRecoveryTimeListItem)
    {
        if (this.nfSetRecoveryTimeList == null)
        {
            this.nfSetRecoveryTimeList = new HashMap<>();
        }
        this.nfSetRecoveryTimeList.put(key, nfSetRecoveryTimeListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where NfSetId serves as key of DateTime
     * 
     * @return nfSetRecoveryTimeList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where NfSetId serves as key of DateTime")
    @JsonProperty(JSON_PROPERTY_NF_SET_RECOVERY_TIME_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, OffsetDateTime> getNfSetRecoveryTimeList()
    {
        return nfSetRecoveryTimeList;
    }

    @JsonProperty(JSON_PROPERTY_NF_SET_RECOVERY_TIME_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfSetRecoveryTimeList(Map<String, OffsetDateTime> nfSetRecoveryTimeList)
    {
        this.nfSetRecoveryTimeList = nfSetRecoveryTimeList;
    }

    public NFProfile serviceSetRecoveryTimeList(Map<String, OffsetDateTime> serviceSetRecoveryTimeList)
    {

        this.serviceSetRecoveryTimeList = serviceSetRecoveryTimeList;
        return this;
    }

    public NFProfile putServiceSetRecoveryTimeListItem(String key,
                                                       OffsetDateTime serviceSetRecoveryTimeListItem)
    {
        if (this.serviceSetRecoveryTimeList == null)
        {
            this.serviceSetRecoveryTimeList = new HashMap<>();
        }
        this.serviceSetRecoveryTimeList.put(key, serviceSetRecoveryTimeListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where NfServiceSetId serves as key of
     * DateTime
     * 
     * @return serviceSetRecoveryTimeList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where NfServiceSetId serves as key of DateTime ")
    @JsonProperty(JSON_PROPERTY_SERVICE_SET_RECOVERY_TIME_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, OffsetDateTime> getServiceSetRecoveryTimeList()
    {
        return serviceSetRecoveryTimeList;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE_SET_RECOVERY_TIME_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServiceSetRecoveryTimeList(Map<String, OffsetDateTime> serviceSetRecoveryTimeList)
    {
        this.serviceSetRecoveryTimeList = serviceSetRecoveryTimeList;
    }

    public NFProfile scpDomains(List<String> scpDomains)
    {

        this.scpDomains = scpDomains;
        return this;
    }

    public NFProfile addScpDomainsItem(String scpDomainsItem)
    {
        if (this.scpDomains == null)
        {
            this.scpDomains = new ArrayList<>();
        }
        this.scpDomains.add(scpDomainsItem);
        return this;
    }

    /**
     * Get scpDomains
     * 
     * @return scpDomains
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SCP_DOMAINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getScpDomains()
    {
        return scpDomains;
    }

    @JsonProperty(JSON_PROPERTY_SCP_DOMAINS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScpDomains(List<String> scpDomains)
    {
        this.scpDomains = scpDomains;
    }

    public NFProfile scpInfo(ScpInfo scpInfo)
    {

        this.scpInfo = scpInfo;
        return this;
    }

    /**
     * Get scpInfo
     * 
     * @return scpInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SCP_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ScpInfo getScpInfo()
    {
        return scpInfo;
    }

    @JsonProperty(JSON_PROPERTY_SCP_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScpInfo(ScpInfo scpInfo)
    {
        this.scpInfo = scpInfo;
    }

    public NFProfile seppInfo(SeppInfo seppInfo)
    {

        this.seppInfo = seppInfo;
        return this;
    }

    /**
     * Get seppInfo
     * 
     * @return seppInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SEPP_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SeppInfo getSeppInfo()
    {
        return seppInfo;
    }

    @JsonProperty(JSON_PROPERTY_SEPP_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSeppInfo(SeppInfo seppInfo)
    {
        this.seppInfo = seppInfo;
    }

    public NFProfile vendorId(String vendorId)
    {

        this.vendorId = vendorId;
        return this;
    }

    /**
     * Vendor ID of the NF Service instance (Private Enterprise Number assigned by
     * IANA)
     * 
     * @return vendorId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Vendor ID of the NF Service instance (Private Enterprise Number assigned by IANA)")
    @JsonProperty(JSON_PROPERTY_VENDOR_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getVendorId()
    {
        return vendorId;
    }

    @JsonProperty(JSON_PROPERTY_VENDOR_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVendorId(String vendorId)
    {
        this.vendorId = vendorId;
    }

    public NFProfile supportedVendorSpecificFeatures(Map<String, List<VendorSpecificFeature>> supportedVendorSpecificFeatures)
    {

        this.supportedVendorSpecificFeatures = supportedVendorSpecificFeatures;
        return this;
    }

    public NFProfile putSupportedVendorSpecificFeaturesItem(String key,
                                                            List<VendorSpecificFeature> supportedVendorSpecificFeaturesItem)
    {
        if (this.supportedVendorSpecificFeatures == null)
        {
            this.supportedVendorSpecificFeatures = new HashMap<>();
        }
        this.supportedVendorSpecificFeatures.put(key, supportedVendorSpecificFeaturesItem);
        return this;
    }

    /**
     * The key of the map is the IANA-assigned SMI Network Management Private
     * Enterprise Codes
     * 
     * @return supportedVendorSpecificFeatures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The key of the map is the IANA-assigned SMI Network Management Private Enterprise Codes ")
    @JsonProperty(JSON_PROPERTY_SUPPORTED_VENDOR_SPECIFIC_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, List<VendorSpecificFeature>> getSupportedVendorSpecificFeatures()
    {
        return supportedVendorSpecificFeatures;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_VENDOR_SPECIFIC_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupportedVendorSpecificFeatures(Map<String, List<VendorSpecificFeature>> supportedVendorSpecificFeatures)
    {
        this.supportedVendorSpecificFeatures = supportedVendorSpecificFeatures;
    }

    public NFProfile aanfInfoList(Map<String, AanfInfo> aanfInfoList)
    {

        this.aanfInfoList = aanfInfoList;
        return this;
    }

    public NFProfile putAanfInfoListItem(String key,
                                         AanfInfo aanfInfoListItem)
    {
        if (this.aanfInfoList == null)
        {
            this.aanfInfoList = new HashMap<>();
        }
        this.aanfInfoList.put(key, aanfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of AanfInfo
     * 
     * @return aanfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of AanfInfo ")
    @JsonProperty(JSON_PROPERTY_AANF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, AanfInfo> getAanfInfoList()
    {
        return aanfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_AANF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAanfInfoList(Map<String, AanfInfo> aanfInfoList)
    {
        this.aanfInfoList = aanfInfoList;
    }

    public NFProfile mfafInfo(MfafInfo mfafInfo)
    {

        this.mfafInfo = mfafInfo;
        return this;
    }

    /**
     * Get mfafInfo
     * 
     * @return mfafInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MFAF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public MfafInfo getMfafInfo()
    {
        return mfafInfo;
    }

    @JsonProperty(JSON_PROPERTY_MFAF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMfafInfo(MfafInfo mfafInfo)
    {
        this.mfafInfo = mfafInfo;
    }

    public NFProfile easdfInfoList(Map<String, EasdfInfo> easdfInfoList)
    {

        this.easdfInfoList = easdfInfoList;
        return this;
    }

    public NFProfile putEasdfInfoListItem(String key,
                                          EasdfInfo easdfInfoListItem)
    {
        if (this.easdfInfoList == null)
        {
            this.easdfInfoList = new HashMap<>();
        }
        this.easdfInfoList.put(key, easdfInfoListItem);
        return this;
    }

    /**
     * A map(list of key-value pairs) where a (unique) valid JSON string serves as
     * key of EasdfInfo
     * 
     * @return easdfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map(list of key-value pairs) where a (unique) valid JSON string serves as key of EasdfInfo ")
    @JsonProperty(JSON_PROPERTY_EASDF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, EasdfInfo> getEasdfInfoList()
    {
        return easdfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_EASDF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEasdfInfoList(Map<String, EasdfInfo> easdfInfoList)
    {
        this.easdfInfoList = easdfInfoList;
    }

    public NFProfile dccfInfo(DccfInfo dccfInfo)
    {

        this.dccfInfo = dccfInfo;
        return this;
    }

    /**
     * Get dccfInfo
     * 
     * @return dccfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DCCF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public DccfInfo getDccfInfo()
    {
        return dccfInfo;
    }

    @JsonProperty(JSON_PROPERTY_DCCF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDccfInfo(DccfInfo dccfInfo)
    {
        this.dccfInfo = dccfInfo;
    }

    public NFProfile nsacfInfoList(Map<String, NsacfInfo> nsacfInfoList)
    {

        this.nsacfInfoList = nsacfInfoList;
        return this;
    }

    public NFProfile putNsacfInfoListItem(String key,
                                          NsacfInfo nsacfInfoListItem)
    {
        if (this.nsacfInfoList == null)
        {
            this.nsacfInfoList = new HashMap<>();
        }
        this.nsacfInfoList.put(key, nsacfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of NsacfInfo
     * 
     * @return nsacfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of NsacfInfo ")
    @JsonProperty(JSON_PROPERTY_NSACF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, NsacfInfo> getNsacfInfoList()
    {
        return nsacfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_NSACF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNsacfInfoList(Map<String, NsacfInfo> nsacfInfoList)
    {
        this.nsacfInfoList = nsacfInfoList;
    }

    public NFProfile mbSmfInfoList(Map<String, MbSmfInfo> mbSmfInfoList)
    {

        this.mbSmfInfoList = mbSmfInfoList;
        return this;
    }

    public NFProfile putMbSmfInfoListItem(String key,
                                          MbSmfInfo mbSmfInfoListItem)
    {
        if (this.mbSmfInfoList == null)
        {
            this.mbSmfInfoList = new HashMap<>();
        }
        this.mbSmfInfoList.put(key, mbSmfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of MbSmfInfo
     * 
     * @return mbSmfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbSmfInfo ")
    @JsonProperty(JSON_PROPERTY_MB_SMF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, MbSmfInfo> getMbSmfInfoList()
    {
        return mbSmfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_MB_SMF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMbSmfInfoList(Map<String, MbSmfInfo> mbSmfInfoList)
    {
        this.mbSmfInfoList = mbSmfInfoList;
    }

    public NFProfile tsctsfInfoList(Map<String, TsctsfInfo> tsctsfInfoList)
    {

        this.tsctsfInfoList = tsctsfInfoList;
        return this;
    }

    public NFProfile putTsctsfInfoListItem(String key,
                                           TsctsfInfo tsctsfInfoListItem)
    {
        if (this.tsctsfInfoList == null)
        {
            this.tsctsfInfoList = new HashMap<>();
        }
        this.tsctsfInfoList.put(key, tsctsfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of TsctsfInfo
     * 
     * @return tsctsfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of TsctsfInfo ")
    @JsonProperty(JSON_PROPERTY_TSCTSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, TsctsfInfo> getTsctsfInfoList()
    {
        return tsctsfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_TSCTSF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsctsfInfoList(Map<String, TsctsfInfo> tsctsfInfoList)
    {
        this.tsctsfInfoList = tsctsfInfoList;
    }

    public NFProfile mbUpfInfoList(Map<String, MbUpfInfo> mbUpfInfoList)
    {

        this.mbUpfInfoList = mbUpfInfoList;
        return this;
    }

    public NFProfile putMbUpfInfoListItem(String key,
                                          MbUpfInfo mbUpfInfoListItem)
    {
        if (this.mbUpfInfoList == null)
        {
            this.mbUpfInfoList = new HashMap<>();
        }
        this.mbUpfInfoList.put(key, mbUpfInfoListItem);
        return this;
    }

    /**
     * A map (list of key-value pairs) where a (unique) valid JSON string serves as
     * key of MbUpfInfo
     * 
     * @return mbUpfInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map (list of key-value pairs) where a (unique) valid JSON string serves as key of MbUpfInfo ")
    @JsonProperty(JSON_PROPERTY_MB_UPF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, MbUpfInfo> getMbUpfInfoList()
    {
        return mbUpfInfoList;
    }

    @JsonProperty(JSON_PROPERTY_MB_UPF_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMbUpfInfoList(Map<String, MbUpfInfo> mbUpfInfoList)
    {
        this.mbUpfInfoList = mbUpfInfoList;
    }

    public NFProfile trustAfInfo(TrustAfInfo trustAfInfo)
    {

        this.trustAfInfo = trustAfInfo;
        return this;
    }

    /**
     * Get trustAfInfo
     * 
     * @return trustAfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TRUST_AF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TrustAfInfo getTrustAfInfo()
    {
        return trustAfInfo;
    }

    @JsonProperty(JSON_PROPERTY_TRUST_AF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTrustAfInfo(TrustAfInfo trustAfInfo)
    {
        this.trustAfInfo = trustAfInfo;
    }

    public NFProfile nssaafInfo(NssaafInfo nssaafInfo)
    {

        this.nssaafInfo = nssaafInfo;
        return this;
    }

    /**
     * Get nssaafInfo
     * 
     * @return nssaafInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NSSAAF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NssaafInfo getNssaafInfo()
    {
        return nssaafInfo;
    }

    @JsonProperty(JSON_PROPERTY_NSSAAF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNssaafInfo(NssaafInfo nssaafInfo)
    {
        this.nssaafInfo = nssaafInfo;
    }

    public NFProfile hniList(List<String> hniList)
    {

        this.hniList = hniList;
        return this;
    }

    public NFProfile addHniListItem(String hniListItem)
    {
        if (this.hniList == null)
        {
            this.hniList = new ArrayList<>();
        }
        this.hniList.add(hniListItem);
        return this;
    }

    /**
     * Get hniList
     * 
     * @return hniList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_HNI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getHniList()
    {
        return hniList;
    }

    @JsonProperty(JSON_PROPERTY_HNI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHniList(List<String> hniList)
    {
        this.hniList = hniList;
    }

    public NFProfile iwmscInfo(IwmscInfo iwmscInfo)
    {

        this.iwmscInfo = iwmscInfo;
        return this;
    }

    /**
     * Get iwmscInfo
     * 
     * @return iwmscInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IWMSC_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public IwmscInfo getIwmscInfo()
    {
        return iwmscInfo;
    }

    @JsonProperty(JSON_PROPERTY_IWMSC_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIwmscInfo(IwmscInfo iwmscInfo)
    {
        this.iwmscInfo = iwmscInfo;
    }

    public NFProfile mnpfInfo(MnpfInfo mnpfInfo)
    {

        this.mnpfInfo = mnpfInfo;
        return this;
    }

    /**
     * Get mnpfInfo
     * 
     * @return mnpfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MNPF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public MnpfInfo getMnpfInfo()
    {
        return mnpfInfo;
    }

    @JsonProperty(JSON_PROPERTY_MNPF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMnpfInfo(MnpfInfo mnpfInfo)
    {
        this.mnpfInfo = mnpfInfo;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NFProfile nfProfile = (NFProfile) o;
        return Objects.equals(this.nfInstanceId, nfProfile.nfInstanceId) && Objects.equals(this.nfInstanceName, nfProfile.nfInstanceName)
               && Objects.equals(this.nfType, nfProfile.nfType) && Objects.equals(this.nfStatus, nfProfile.nfStatus)
               && Objects.equals(this.collocatedNfInstances, nfProfile.collocatedNfInstances) && Objects.equals(this.plmnList, nfProfile.plmnList)
               && Objects.equals(this.sNssais, nfProfile.sNssais) && Objects.equals(this.perPlmnSnssaiList, nfProfile.perPlmnSnssaiList)
               && Objects.equals(this.nsiList, nfProfile.nsiList) && Objects.equals(this.fqdn, nfProfile.fqdn)
               && Objects.equals(this.interPlmnFqdn, nfProfile.interPlmnFqdn) && Objects.equals(this.ipv4Addresses, nfProfile.ipv4Addresses)
               && Objects.equals(this.ipv6Addresses, nfProfile.ipv6Addresses) && Objects.equals(this.capacity, nfProfile.capacity)
               && Objects.equals(this.load, nfProfile.load) && Objects.equals(this.loadTimeStamp, nfProfile.loadTimeStamp)
               && Objects.equals(this.locality, nfProfile.locality) && Objects.equals(this.priority, nfProfile.priority)
               && Objects.equals(this.udrInfo, nfProfile.udrInfo) && Objects.equals(this.udrInfoList, nfProfile.udrInfoList)
               && Objects.equals(this.udmInfo, nfProfile.udmInfo) && Objects.equals(this.udmInfoList, nfProfile.udmInfoList)
               && Objects.equals(this.ausfInfo, nfProfile.ausfInfo) && Objects.equals(this.ausfInfoList, nfProfile.ausfInfoList)
               && Objects.equals(this.amfInfo, nfProfile.amfInfo) && Objects.equals(this.amfInfoList, nfProfile.amfInfoList)
               && Objects.equals(this.smfInfo, nfProfile.smfInfo) && Objects.equals(this.smfInfoList, nfProfile.smfInfoList)
               && Objects.equals(this.upfInfo, nfProfile.upfInfo) && Objects.equals(this.upfInfoList, nfProfile.upfInfoList)
               && Objects.equals(this.pcfInfo, nfProfile.pcfInfo) && Objects.equals(this.pcfInfoList, nfProfile.pcfInfoList)
               && Objects.equals(this.bsfInfo, nfProfile.bsfInfo) && Objects.equals(this.bsfInfoList, nfProfile.bsfInfoList)
               && Objects.equals(this.chfInfo, nfProfile.chfInfo) && Objects.equals(this.chfInfoList, nfProfile.chfInfoList)
               && Objects.equals(this.udsfInfo, nfProfile.udsfInfo) && Objects.equals(this.udsfInfoList, nfProfile.udsfInfoList)
               && Objects.equals(this.nwdafInfo, nfProfile.nwdafInfo) && Objects.equals(this.nwdafInfoList, nfProfile.nwdafInfoList)
               && Objects.equals(this.nefInfo, nfProfile.nefInfo) && Objects.equals(this.pcscfInfoList, nfProfile.pcscfInfoList)
               && Objects.equals(this.hssInfoList, nfProfile.hssInfoList) && Objects.equals(this.customInfo, nfProfile.customInfo)
               && Objects.equals(this.recoveryTime, nfProfile.recoveryTime) && Objects.equals(this.nfServicePersistence, nfProfile.nfServicePersistence)
               && Objects.equals(this.nfServices, nfProfile.nfServices) && Objects.equals(this.nfServiceList, nfProfile.nfServiceList)
               && Objects.equals(this.defaultNotificationSubscriptions, nfProfile.defaultNotificationSubscriptions)
               && Objects.equals(this.lmfInfo, nfProfile.lmfInfo) && Objects.equals(this.gmlcInfo, nfProfile.gmlcInfo)
               && Objects.equals(this.snpnList, nfProfile.snpnList) && Objects.equals(this.nfSetIdList, nfProfile.nfSetIdList)
               && Objects.equals(this.servingScope, nfProfile.servingScope) && Objects.equals(this.lcHSupportInd, nfProfile.lcHSupportInd)
               && Objects.equals(this.olcHSupportInd, nfProfile.olcHSupportInd) && Objects.equals(this.nfSetRecoveryTimeList, nfProfile.nfSetRecoveryTimeList)
               && Objects.equals(this.serviceSetRecoveryTimeList, nfProfile.serviceSetRecoveryTimeList) && Objects.equals(this.scpDomains, nfProfile.scpDomains)
               && Objects.equals(this.scpInfo, nfProfile.scpInfo) && Objects.equals(this.seppInfo, nfProfile.seppInfo)
               && Objects.equals(this.vendorId, nfProfile.vendorId)
               && Objects.equals(this.supportedVendorSpecificFeatures, nfProfile.supportedVendorSpecificFeatures)
               && Objects.equals(this.aanfInfoList, nfProfile.aanfInfoList) && Objects.equals(this.mfafInfo, nfProfile.mfafInfo)
               && Objects.equals(this.easdfInfoList, nfProfile.easdfInfoList) && Objects.equals(this.dccfInfo, nfProfile.dccfInfo)
               && Objects.equals(this.nsacfInfoList, nfProfile.nsacfInfoList) && Objects.equals(this.mbSmfInfoList, nfProfile.mbSmfInfoList)
               && Objects.equals(this.tsctsfInfoList, nfProfile.tsctsfInfoList) && Objects.equals(this.mbUpfInfoList, nfProfile.mbUpfInfoList)
               && Objects.equals(this.trustAfInfo, nfProfile.trustAfInfo) && Objects.equals(this.nssaafInfo, nfProfile.nssaafInfo)
               && Objects.equals(this.hniList, nfProfile.hniList) && Objects.equals(this.iwmscInfo, nfProfile.iwmscInfo)
               && Objects.equals(this.mnpfInfo, nfProfile.mnpfInfo);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(nfInstanceId,
                            nfInstanceName,
                            nfType,
                            nfStatus,
                            collocatedNfInstances,
                            plmnList,
                            sNssais,
                            perPlmnSnssaiList,
                            nsiList,
                            fqdn,
                            interPlmnFqdn,
                            ipv4Addresses,
                            ipv6Addresses,
                            capacity,
                            load,
                            loadTimeStamp,
                            locality,
                            priority,
                            udrInfo,
                            udrInfoList,
                            udmInfo,
                            udmInfoList,
                            ausfInfo,
                            ausfInfoList,
                            amfInfo,
                            amfInfoList,
                            smfInfo,
                            smfInfoList,
                            upfInfo,
                            upfInfoList,
                            pcfInfo,
                            pcfInfoList,
                            bsfInfo,
                            bsfInfoList,
                            chfInfo,
                            chfInfoList,
                            udsfInfo,
                            udsfInfoList,
                            nwdafInfo,
                            nwdafInfoList,
                            nefInfo,
                            pcscfInfoList,
                            hssInfoList,
                            customInfo,
                            recoveryTime,
                            nfServicePersistence,
                            nfServices,
                            nfServiceList,
                            defaultNotificationSubscriptions,
                            lmfInfo,
                            gmlcInfo,
                            snpnList,
                            nfSetIdList,
                            servingScope,
                            lcHSupportInd,
                            olcHSupportInd,
                            nfSetRecoveryTimeList,
                            serviceSetRecoveryTimeList,
                            scpDomains,
                            scpInfo,
                            seppInfo,
                            vendorId,
                            supportedVendorSpecificFeatures,
                            aanfInfoList,
                            mfafInfo,
                            easdfInfoList,
                            dccfInfo,
                            nsacfInfoList,
                            mbSmfInfoList,
                            tsctsfInfoList,
                            mbUpfInfoList,
                            trustAfInfo,
                            nssaafInfo,
                            hniList,
                            iwmscInfo,
                            mnpfInfo);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NFProfile {\n");
        sb.append("    nfInstanceId: ").append(toIndentedString(nfInstanceId)).append("\n");
        sb.append("    nfInstanceName: ").append(toIndentedString(nfInstanceName)).append("\n");
        sb.append("    nfType: ").append(toIndentedString(nfType)).append("\n");
        sb.append("    nfStatus: ").append(toIndentedString(nfStatus)).append("\n");
        sb.append("    collocatedNfInstances: ").append(toIndentedString(collocatedNfInstances)).append("\n");
        sb.append("    plmnList: ").append(toIndentedString(plmnList)).append("\n");
        sb.append("    sNssais: ").append(toIndentedString(sNssais)).append("\n");
        sb.append("    perPlmnSnssaiList: ").append(toIndentedString(perPlmnSnssaiList)).append("\n");
        sb.append("    nsiList: ").append(toIndentedString(nsiList)).append("\n");
        sb.append("    fqdn: ").append(toIndentedString(fqdn)).append("\n");
        sb.append("    interPlmnFqdn: ").append(toIndentedString(interPlmnFqdn)).append("\n");
        sb.append("    ipv4Addresses: ").append(toIndentedString(ipv4Addresses)).append("\n");
        sb.append("    ipv6Addresses: ").append(toIndentedString(ipv6Addresses)).append("\n");
        sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
        sb.append("    load: ").append(toIndentedString(load)).append("\n");
        sb.append("    loadTimeStamp: ").append(toIndentedString(loadTimeStamp)).append("\n");
        sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
        sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
        sb.append("    udrInfo: ").append(toIndentedString(udrInfo)).append("\n");
        sb.append("    udrInfoList: ").append(toIndentedString(udrInfoList)).append("\n");
        sb.append("    udmInfo: ").append(toIndentedString(udmInfo)).append("\n");
        sb.append("    udmInfoList: ").append(toIndentedString(udmInfoList)).append("\n");
        sb.append("    ausfInfo: ").append(toIndentedString(ausfInfo)).append("\n");
        sb.append("    ausfInfoList: ").append(toIndentedString(ausfInfoList)).append("\n");
        sb.append("    amfInfo: ").append(toIndentedString(amfInfo)).append("\n");
        sb.append("    amfInfoList: ").append(toIndentedString(amfInfoList)).append("\n");
        sb.append("    smfInfo: ").append(toIndentedString(smfInfo)).append("\n");
        sb.append("    smfInfoList: ").append(toIndentedString(smfInfoList)).append("\n");
        sb.append("    upfInfo: ").append(toIndentedString(upfInfo)).append("\n");
        sb.append("    upfInfoList: ").append(toIndentedString(upfInfoList)).append("\n");
        sb.append("    pcfInfo: ").append(toIndentedString(pcfInfo)).append("\n");
        sb.append("    pcfInfoList: ").append(toIndentedString(pcfInfoList)).append("\n");
        sb.append("    bsfInfo: ").append(toIndentedString(bsfInfo)).append("\n");
        sb.append("    bsfInfoList: ").append(toIndentedString(bsfInfoList)).append("\n");
        sb.append("    chfInfo: ").append(toIndentedString(chfInfo)).append("\n");
        sb.append("    chfInfoList: ").append(toIndentedString(chfInfoList)).append("\n");
        sb.append("    udsfInfo: ").append(toIndentedString(udsfInfo)).append("\n");
        sb.append("    udsfInfoList: ").append(toIndentedString(udsfInfoList)).append("\n");
        sb.append("    nwdafInfo: ").append(toIndentedString(nwdafInfo)).append("\n");
        sb.append("    nwdafInfoList: ").append(toIndentedString(nwdafInfoList)).append("\n");
        sb.append("    nefInfo: ").append(toIndentedString(nefInfo)).append("\n");
        sb.append("    pcscfInfoList: ").append(toIndentedString(pcscfInfoList)).append("\n");
        sb.append("    hssInfoList: ").append(toIndentedString(hssInfoList)).append("\n");
        sb.append("    customInfo: ").append(toIndentedString(customInfo)).append("\n");
        sb.append("    recoveryTime: ").append(toIndentedString(recoveryTime)).append("\n");
        sb.append("    nfServicePersistence: ").append(toIndentedString(nfServicePersistence)).append("\n");
        sb.append("    nfServices: ").append(toIndentedString(nfServices)).append("\n");
        sb.append("    nfServiceList: ").append(toIndentedString(nfServiceList)).append("\n");
        sb.append("    defaultNotificationSubscriptions: ").append(toIndentedString(defaultNotificationSubscriptions)).append("\n");
        sb.append("    lmfInfo: ").append(toIndentedString(lmfInfo)).append("\n");
        sb.append("    gmlcInfo: ").append(toIndentedString(gmlcInfo)).append("\n");
        sb.append("    snpnList: ").append(toIndentedString(snpnList)).append("\n");
        sb.append("    nfSetIdList: ").append(toIndentedString(nfSetIdList)).append("\n");
        sb.append("    servingScope: ").append(toIndentedString(servingScope)).append("\n");
        sb.append("    lcHSupportInd: ").append(toIndentedString(lcHSupportInd)).append("\n");
        sb.append("    olcHSupportInd: ").append(toIndentedString(olcHSupportInd)).append("\n");
        sb.append("    nfSetRecoveryTimeList: ").append(toIndentedString(nfSetRecoveryTimeList)).append("\n");
        sb.append("    serviceSetRecoveryTimeList: ").append(toIndentedString(serviceSetRecoveryTimeList)).append("\n");
        sb.append("    scpDomains: ").append(toIndentedString(scpDomains)).append("\n");
        sb.append("    scpInfo: ").append(toIndentedString(scpInfo)).append("\n");
        sb.append("    seppInfo: ").append(toIndentedString(seppInfo)).append("\n");
        sb.append("    vendorId: ").append(toIndentedString(vendorId)).append("\n");
        sb.append("    supportedVendorSpecificFeatures: ").append(toIndentedString(supportedVendorSpecificFeatures)).append("\n");
        sb.append("    aanfInfoList: ").append(toIndentedString(aanfInfoList)).append("\n");
        sb.append("    mfafInfo: ").append(toIndentedString(mfafInfo)).append("\n");
        sb.append("    easdfInfoList: ").append(toIndentedString(easdfInfoList)).append("\n");
        sb.append("    dccfInfo: ").append(toIndentedString(dccfInfo)).append("\n");
        sb.append("    nsacfInfoList: ").append(toIndentedString(nsacfInfoList)).append("\n");
        sb.append("    mbSmfInfoList: ").append(toIndentedString(mbSmfInfoList)).append("\n");
        sb.append("    tsctsfInfoList: ").append(toIndentedString(tsctsfInfoList)).append("\n");
        sb.append("    mbUpfInfoList: ").append(toIndentedString(mbUpfInfoList)).append("\n");
        sb.append("    trustAfInfo: ").append(toIndentedString(trustAfInfo)).append("\n");
        sb.append("    nssaafInfo: ").append(toIndentedString(nssaafInfo)).append("\n");
        sb.append("    hniList: ").append(toIndentedString(hniList)).append("\n");
        sb.append("    iwmscInfo: ").append(toIndentedString(iwmscInfo)).append("\n");
        sb.append("    mnpfInfo: ").append(toIndentedString(mnpfInfo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Only needed for DB of NFProfiles, NF-instance-ID is the criterion there.
     */
    @JsonIgnore
    @Override
    public int compareTo(NFProfile o)
    {
        return this.getNfInstanceId().compareTo(o.getNfInstanceId());
    }

    /**
     * Needed for Trie elements. Checks if the key passed (e.g. supi, gpsi) matches
     * this NFProfile.
     */
    @JsonIgnore
    @Override
    public boolean test(final String keyType,
                        final String key)
    {
        boolean matches = true;

        if (this.getAusfInfo() != null)
        {
        }
        else if (this.getChfInfo() != null)
        {
            final ChfInfo info = this.getChfInfo();

            if (matches && info.getGpsiRangeList() != null && keyType.equals("gpsi"))
            {
                for (final IdentityRange range : info.getGpsiRangeList())
                {
                    if (range.getPattern() != null)
                    {
                        matches = key.matches(range.getPattern());
                    }
                    else
                    {
                        final Long number = Math.abs(Long.valueOf(key.substring(key.indexOf('-') + 1)));

                        matches = (range.getStart() != null && range.getEnd() != null)
                                  && !(Math.abs(Long.valueOf(range.getStart())) > number || Math.abs(Long.valueOf(range.getEnd())) < number);
                    }

                    if (matches)
                        break;
                }
            }
            else if (matches && info.getSupiRangeList() != null && keyType.equals("imsi"))
            {
                for (final SupiRange range : info.getSupiRangeList())
                {
                    if (range.getPattern() != null)
                    {
                        matches = key.matches(range.getPattern());
                    }
                    else
                    {
                        final Long number = Math.abs(Long.valueOf(key.substring(key.indexOf('-') + 1)));

                        matches = (range.getStart() != null && range.getEnd() != null)
                                  && !(Math.abs(Long.valueOf(range.getStart())) > number || Math.abs(Long.valueOf(range.getEnd())) < number);
                    }

                    if (matches)
                        break;
                }
            }
        }
        else if (this.getNefInfo() != null)
        {
        }
        else if (this.getPcfInfo() != null)
        {
        }
        else if (this.getUdmInfo() != null)
        {
        }
        else if (this.getUdrInfo() != null)
        {
        }
        else if (this.getUdsfInfo() != null)
        {
        }

        return matches;
    }
}
