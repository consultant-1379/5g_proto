/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * It contains an invalid parameter and a related description.
 */
@ApiModel(description = "It contains an invalid parameter and a related description.")
@JsonPropertyOrder({ InvalidParam.JSON_PROPERTY_PARAM, InvalidParam.JSON_PROPERTY_REASON })
public class InvalidParam
{
    public static final String JSON_PROPERTY_PARAM = "param";
    private String param;

    public static final String JSON_PROPERTY_REASON = "reason";
    private String reason;

    public InvalidParam()
    {
    }

    public InvalidParam param(String param)
    {

        this.param = param;
        return this;
    }

    /**
     * If the invalid parameter is an attribute in a JSON body, this IE shall
     * contain the attribute&#39;s name and shall be encoded as a JSON Pointer. If
     * the invalid parameter is an HTTP header, this IE shall be formatted as the
     * concatenation of the string \&quot;header \&quot; plus the name of such
     * header. If the invalid parameter is a query parameter, this IE shall be
     * formatted as the concatenation of the string \&quot;query \&quot; plus the
     * name of such query parameter. If the invalid parameter is a variable part in
     * the path of a resource URI, this IE shall contain the name of the variable,
     * including the symbols \&quot;{\&quot; and \&quot;}\&quot; used in OpenAPI
     * specification as the notation to represent variable path segments.
     * 
     * @return param
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "If the invalid parameter is an attribute in a JSON body, this IE shall contain the  attribute's name and shall be encoded as a JSON Pointer. If the invalid parameter is  an HTTP header, this IE shall be formatted as the concatenation of the string \"header \"  plus the name of such header. If the invalid parameter is a query parameter, this IE  shall be formatted as the concatenation of the string \"query \" plus the name of such  query parameter. If the invalid parameter is a variable part in the path of a resource  URI, this IE shall contain the name of the variable, including the symbols \"{\" and \"}\"  used in OpenAPI specification as the notation to represent variable path segments. ")
    @JsonProperty(JSON_PROPERTY_PARAM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getParam()
    {
        return param;
    }

    @JsonProperty(JSON_PROPERTY_PARAM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setParam(String param)
    {
        this.param = param;
    }

    public InvalidParam reason(String reason)
    {

        this.reason = reason;
        return this;
    }

    /**
     * A human-readable reason, e.g. \&quot;must be a positive integer\&quot;. In
     * cases involving failed operations in a PATCH request, the reason string
     * should identify the operation that failed using the operation&#39;s array
     * index to assist in correlation of the invalid parameter with the failed
     * operation, e.g.\&quot; Replacement value invalid for attribute (failed
     * operation index&#x3D; 4)\&quot;
     * 
     * @return reason
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A human-readable reason, e.g. \"must be a positive integer\". In cases involving failed  operations in a PATCH request, the reason string should identify the operation that  failed using the operation's array index to assist in correlation of the invalid  parameter with the failed operation, e.g.\" Replacement value invalid for attribute  (failed operation index= 4)\" ")
    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReason()
    {
        return reason;
    }

    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReason(String reason)
    {
        this.reason = reason;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        InvalidParam invalidParam = (InvalidParam) o;
        return Objects.equals(this.param, invalidParam.param) && Objects.equals(this.reason, invalidParam.reason);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(param, reason);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class InvalidParam {\n");
        sb.append("    param: ").append(toIndentedString(param)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
