/*
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 20212022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts32291.nchf.offlineonlycharging;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RoamingQBCInformation
 */
@JsonPropertyOrder({ RoamingQBCInformation.JSON_PROPERTY_MULTIPLE_Q_F_ICONTAINER,
                     RoamingQBCInformation.JSON_PROPERTY_U_P_F_I_D,
                     RoamingQBCInformation.JSON_PROPERTY_ROAMING_CHARGING_PROFILE })
public class RoamingQBCInformation
{
    public static final String JSON_PROPERTY_MULTIPLE_Q_F_ICONTAINER = "multipleQFIcontainer";
    private List<MultipleQFIcontainer> multipleQFIcontainer = null;

    public static final String JSON_PROPERTY_U_P_F_I_D = "uPFID";
    private UUID uPFID;

    public static final String JSON_PROPERTY_ROAMING_CHARGING_PROFILE = "roamingChargingProfile";
    private RoamingChargingProfile roamingChargingProfile;

    public RoamingQBCInformation()
    {
    }

    public RoamingQBCInformation multipleQFIcontainer(List<MultipleQFIcontainer> multipleQFIcontainer)
    {

        this.multipleQFIcontainer = multipleQFIcontainer;
        return this;
    }

    public RoamingQBCInformation addMultipleQFIcontainerItem(MultipleQFIcontainer multipleQFIcontainerItem)
    {
        if (this.multipleQFIcontainer == null)
        {
            this.multipleQFIcontainer = new ArrayList<>();
        }
        this.multipleQFIcontainer.add(multipleQFIcontainerItem);
        return this;
    }

    /**
     * Get multipleQFIcontainer
     * 
     * @return multipleQFIcontainer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MULTIPLE_Q_F_ICONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<MultipleQFIcontainer> getMultipleQFIcontainer()
    {
        return multipleQFIcontainer;
    }

    @JsonProperty(JSON_PROPERTY_MULTIPLE_Q_F_ICONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMultipleQFIcontainer(List<MultipleQFIcontainer> multipleQFIcontainer)
    {
        this.multipleQFIcontainer = multipleQFIcontainer;
    }

    public RoamingQBCInformation uPFID(UUID uPFID)
    {

        this.uPFID = uPFID;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return uPFID
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_U_P_F_I_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getuPFID()
    {
        return uPFID;
    }

    @JsonProperty(JSON_PROPERTY_U_P_F_I_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setuPFID(UUID uPFID)
    {
        this.uPFID = uPFID;
    }

    public RoamingQBCInformation roamingChargingProfile(RoamingChargingProfile roamingChargingProfile)
    {

        this.roamingChargingProfile = roamingChargingProfile;
        return this;
    }

    /**
     * Get roamingChargingProfile
     * 
     * @return roamingChargingProfile
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ROAMING_CHARGING_PROFILE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RoamingChargingProfile getRoamingChargingProfile()
    {
        return roamingChargingProfile;
    }

    @JsonProperty(JSON_PROPERTY_ROAMING_CHARGING_PROFILE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoamingChargingProfile(RoamingChargingProfile roamingChargingProfile)
    {
        this.roamingChargingProfile = roamingChargingProfile;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RoamingQBCInformation roamingQBCInformation = (RoamingQBCInformation) o;
        return Objects.equals(this.multipleQFIcontainer, roamingQBCInformation.multipleQFIcontainer) && Objects.equals(this.uPFID, roamingQBCInformation.uPFID)
               && Objects.equals(this.roamingChargingProfile, roamingQBCInformation.roamingChargingProfile);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(multipleQFIcontainer, uPFID, roamingChargingProfile);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RoamingQBCInformation {\n");
        sb.append("    multipleQFIcontainer: ").append(toIndentedString(multipleQFIcontainer)).append("\n");
        sb.append("    uPFID: ").append(toIndentedString(uPFID)).append("\n");
        sb.append("    roamingChargingProfile: ").append(toIndentedString(roamingChargingProfile)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
