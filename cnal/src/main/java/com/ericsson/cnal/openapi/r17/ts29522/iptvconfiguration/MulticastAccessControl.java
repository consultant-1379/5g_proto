/*
 * 3gpp-iptvconfiguration
 * API for IPTV configuration.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29522.iptvconfiguration;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents multicast address access control information.
 */
@ApiModel(description = "Represents multicast address access control information.")
@JsonPropertyOrder({ MulticastAccessControl.JSON_PROPERTY_SRC_IPV4_ADDR,
                     MulticastAccessControl.JSON_PROPERTY_SRC_IPV6_ADDR,
                     MulticastAccessControl.JSON_PROPERTY_MULTICAST_V4_ADDR,
                     MulticastAccessControl.JSON_PROPERTY_MULTICAST_V6_ADDR,
                     MulticastAccessControl.JSON_PROPERTY_ACC_STATUS })
public class MulticastAccessControl
{
    public static final String JSON_PROPERTY_SRC_IPV4_ADDR = "srcIpv4Addr";
    private String srcIpv4Addr;

    public static final String JSON_PROPERTY_SRC_IPV6_ADDR = "srcIpv6Addr";
    private String srcIpv6Addr;

    public static final String JSON_PROPERTY_MULTICAST_V4_ADDR = "multicastV4Addr";
    private String multicastV4Addr;

    public static final String JSON_PROPERTY_MULTICAST_V6_ADDR = "multicastV6Addr";
    private String multicastV6Addr;

    public static final String JSON_PROPERTY_ACC_STATUS = "accStatus";
    private String accStatus;

    public MulticastAccessControl()
    {
    }

    public MulticastAccessControl srcIpv4Addr(String srcIpv4Addr)
    {

        this.srcIpv4Addr = srcIpv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return srcIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_SRC_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSrcIpv4Addr()
    {
        return srcIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_SRC_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSrcIpv4Addr(String srcIpv4Addr)
    {
        this.srcIpv4Addr = srcIpv4Addr;
    }

    public MulticastAccessControl srcIpv6Addr(String srcIpv6Addr)
    {

        this.srcIpv6Addr = srcIpv6Addr;
        return this;
    }

    /**
     * Get srcIpv6Addr
     * 
     * @return srcIpv6Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SRC_IPV6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSrcIpv6Addr()
    {
        return srcIpv6Addr;
    }

    @JsonProperty(JSON_PROPERTY_SRC_IPV6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSrcIpv6Addr(String srcIpv6Addr)
    {
        this.srcIpv6Addr = srcIpv6Addr;
    }

    public MulticastAccessControl multicastV4Addr(String multicastV4Addr)
    {

        this.multicastV4Addr = multicastV4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return multicastV4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_MULTICAST_V4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMulticastV4Addr()
    {
        return multicastV4Addr;
    }

    @JsonProperty(JSON_PROPERTY_MULTICAST_V4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMulticastV4Addr(String multicastV4Addr)
    {
        this.multicastV4Addr = multicastV4Addr;
    }

    public MulticastAccessControl multicastV6Addr(String multicastV6Addr)
    {

        this.multicastV6Addr = multicastV6Addr;
        return this;
    }

    /**
     * Get multicastV6Addr
     * 
     * @return multicastV6Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MULTICAST_V6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMulticastV6Addr()
    {
        return multicastV6Addr;
    }

    @JsonProperty(JSON_PROPERTY_MULTICAST_V6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMulticastV6Addr(String multicastV6Addr)
    {
        this.multicastV6Addr = multicastV6Addr;
    }

    public MulticastAccessControl accStatus(String accStatus)
    {

        this.accStatus = accStatus;
        return this;
    }

    /**
     * Possible values are: - FULLY_ALLOWED: The User is fully allowed to access to
     * the channel. - PREVIEW_ALLOWED: The User is preview allowed to access to the
     * channel. - NO_ALLOWED: The User is not allowed to access to the channel.
     * 
     * @return accStatus
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Possible values are: - FULLY_ALLOWED: The User is fully allowed to access to the channel. - PREVIEW_ALLOWED: The User is preview allowed to access to the channel. - NO_ALLOWED: The User is not allowed to access to the channel. ")
    @JsonProperty(JSON_PROPERTY_ACC_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAccStatus()
    {
        return accStatus;
    }

    @JsonProperty(JSON_PROPERTY_ACC_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAccStatus(String accStatus)
    {
        this.accStatus = accStatus;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        MulticastAccessControl multicastAccessControl = (MulticastAccessControl) o;
        return Objects.equals(this.srcIpv4Addr, multicastAccessControl.srcIpv4Addr) && Objects.equals(this.srcIpv6Addr, multicastAccessControl.srcIpv6Addr)
               && Objects.equals(this.multicastV4Addr, multicastAccessControl.multicastV4Addr)
               && Objects.equals(this.multicastV6Addr, multicastAccessControl.multicastV6Addr)
               && Objects.equals(this.accStatus, multicastAccessControl.accStatus);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(srcIpv4Addr, srcIpv6Addr, multicastV4Addr, multicastV6Addr, accStatus);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class MulticastAccessControl {\n");
        sb.append("    srcIpv4Addr: ").append(toIndentedString(srcIpv4Addr)).append("\n");
        sb.append("    srcIpv6Addr: ").append(toIndentedString(srcIpv6Addr)).append("\n");
        sb.append("    multicastV4Addr: ").append(toIndentedString(multicastV4Addr)).append("\n");
        sb.append("    multicastV6Addr: ").append(toIndentedString(multicastV6Addr)).append("\n");
        sb.append("    accStatus: ").append(toIndentedString(accStatus)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
