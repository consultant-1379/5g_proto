/*
 * N32 Handshake API
 * N32-c Handshake Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29573.n32.handshake;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Details about the N32f error
 */
@ApiModel(description = "Details about the N32f error")
@JsonPropertyOrder({ N32fErrorDetail.JSON_PROPERTY_ATTRIBUTE, N32fErrorDetail.JSON_PROPERTY_MSG_RECONSTRUCT_FAIL_REASON })
public class N32fErrorDetail
{
    public static final String JSON_PROPERTY_ATTRIBUTE = "attribute";
    private String attribute;

    public static final String JSON_PROPERTY_MSG_RECONSTRUCT_FAIL_REASON = "msgReconstructFailReason";
    private String msgReconstructFailReason;

    public N32fErrorDetail()
    {
    }

    public N32fErrorDetail attribute(String attribute)
    {

        this.attribute = attribute;
        return this;
    }

    /**
     * Get attribute
     * 
     * @return attribute
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAttribute()
    {
        return attribute;
    }

    @JsonProperty(JSON_PROPERTY_ATTRIBUTE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAttribute(String attribute)
    {
        this.attribute = attribute;
    }

    public N32fErrorDetail msgReconstructFailReason(String msgReconstructFailReason)
    {

        this.msgReconstructFailReason = msgReconstructFailReason;
        return this;
    }

    /**
     * Reason for failure to reconstruct a HTTP/2 message from N32-f message
     * 
     * @return msgReconstructFailReason
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Reason for failure to reconstruct a HTTP/2 message from N32-f message")
    @JsonProperty(JSON_PROPERTY_MSG_RECONSTRUCT_FAIL_REASON)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getMsgReconstructFailReason()
    {
        return msgReconstructFailReason;
    }

    @JsonProperty(JSON_PROPERTY_MSG_RECONSTRUCT_FAIL_REASON)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMsgReconstructFailReason(String msgReconstructFailReason)
    {
        this.msgReconstructFailReason = msgReconstructFailReason;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        N32fErrorDetail n32fErrorDetail = (N32fErrorDetail) o;
        return Objects.equals(this.attribute, n32fErrorDetail.attribute)
               && Objects.equals(this.msgReconstructFailReason, n32fErrorDetail.msgReconstructFailReason);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(attribute, msgReconstructFailReason);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class N32fErrorDetail {\n");
        sb.append("    attribute: ").append(toIndentedString(attribute)).append("\n");
        sb.append("    msgReconstructFailReason: ").append(toIndentedString(msgReconstructFailReason)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
