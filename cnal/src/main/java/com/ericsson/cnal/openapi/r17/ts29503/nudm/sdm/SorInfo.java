/*
 * Nudm_SDM
 * Nudm Subscriber Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 2.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.sdm;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SorInfo
 */
@JsonPropertyOrder({ SorInfo.JSON_PROPERTY_STEERING_CONTAINER,
                     SorInfo.JSON_PROPERTY_ACK_IND,
                     SorInfo.JSON_PROPERTY_SOR_MAC_IAUSF,
                     SorInfo.JSON_PROPERTY_COUNTERSOR,
                     SorInfo.JSON_PROPERTY_PROVISIONING_TIME,
                     SorInfo.JSON_PROPERTY_SOR_TRANSPARENT_CONTAINER,
                     SorInfo.JSON_PROPERTY_SOR_CMCI,
                     SorInfo.JSON_PROPERTY_STORE_SOR_CMCI_IN_ME,
                     SorInfo.JSON_PROPERTY_USIM_SUPPORT_OF_SOR_CMCI })
public class SorInfo
{
    public static final String JSON_PROPERTY_STEERING_CONTAINER = "steeringContainer";
    private Object steeringContainer;

    public static final String JSON_PROPERTY_ACK_IND = "ackInd";
    private Boolean ackInd;

    public static final String JSON_PROPERTY_SOR_MAC_IAUSF = "sorMacIausf";
    private String sorMacIausf;

    public static final String JSON_PROPERTY_COUNTERSOR = "countersor";
    private String countersor;

    public static final String JSON_PROPERTY_PROVISIONING_TIME = "provisioningTime";
    private OffsetDateTime provisioningTime;

    public static final String JSON_PROPERTY_SOR_TRANSPARENT_CONTAINER = "sorTransparentContainer";
    private byte[] sorTransparentContainer;

    public static final String JSON_PROPERTY_SOR_CMCI = "sorCmci";
    private byte[] sorCmci;

    public static final String JSON_PROPERTY_STORE_SOR_CMCI_IN_ME = "storeSorCmciInMe";
    private Boolean storeSorCmciInMe;

    public static final String JSON_PROPERTY_USIM_SUPPORT_OF_SOR_CMCI = "usimSupportOfSorCmci";
    private Boolean usimSupportOfSorCmci;

    public SorInfo()
    {
    }

    public SorInfo steeringContainer(Object steeringContainer)
    {

        this.steeringContainer = steeringContainer;
        return this;
    }

    /**
     * Get steeringContainer
     * 
     * @return steeringContainer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_STEERING_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getSteeringContainer()
    {
        return steeringContainer;
    }

    @JsonProperty(JSON_PROPERTY_STEERING_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSteeringContainer(Object steeringContainer)
    {
        this.steeringContainer = steeringContainer;
    }

    public SorInfo ackInd(Boolean ackInd)
    {

        this.ackInd = ackInd;
        return this;
    }

    /**
     * Contains indication whether the acknowledgement from UE is needed.
     * 
     * @return ackInd
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Contains indication whether the acknowledgement from UE is needed.")
    @JsonProperty(JSON_PROPERTY_ACK_IND)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Boolean getAckInd()
    {
        return ackInd;
    }

    @JsonProperty(JSON_PROPERTY_ACK_IND)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAckInd(Boolean ackInd)
    {
        this.ackInd = ackInd;
    }

    public SorInfo sorMacIausf(String sorMacIausf)
    {

        this.sorMacIausf = sorMacIausf;
        return this;
    }

    /**
     * MAC value for protecting SOR procedure (SoR-MAC-IAUSF and SoR-XMAC-IUE).
     * 
     * @return sorMacIausf
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "MAC value for protecting SOR procedure (SoR-MAC-IAUSF and SoR-XMAC-IUE).")
    @JsonProperty(JSON_PROPERTY_SOR_MAC_IAUSF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSorMacIausf()
    {
        return sorMacIausf;
    }

    @JsonProperty(JSON_PROPERTY_SOR_MAC_IAUSF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSorMacIausf(String sorMacIausf)
    {
        this.sorMacIausf = sorMacIausf;
    }

    public SorInfo countersor(String countersor)
    {

        this.countersor = countersor;
        return this;
    }

    /**
     * CounterSoR.
     * 
     * @return countersor
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "CounterSoR.")
    @JsonProperty(JSON_PROPERTY_COUNTERSOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCountersor()
    {
        return countersor;
    }

    @JsonProperty(JSON_PROPERTY_COUNTERSOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountersor(String countersor)
    {
        this.countersor = countersor;
    }

    public SorInfo provisioningTime(OffsetDateTime provisioningTime)
    {

        this.provisioningTime = provisioningTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return provisioningTime
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_PROVISIONING_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getProvisioningTime()
    {
        return provisioningTime;
    }

    @JsonProperty(JSON_PROPERTY_PROVISIONING_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProvisioningTime(OffsetDateTime provisioningTime)
    {
        this.provisioningTime = provisioningTime;
    }

    public SorInfo sorTransparentContainer(byte[] sorTransparentContainer)
    {

        this.sorTransparentContainer = sorTransparentContainer;
        return this;
    }

    /**
     * string with format &#39;bytes&#39; as defined in OpenAPI
     * 
     * @return sorTransparentContainer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'bytes' as defined in OpenAPI")
    @JsonProperty(JSON_PROPERTY_SOR_TRANSPARENT_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public byte[] getSorTransparentContainer()
    {
        return sorTransparentContainer;
    }

    @JsonProperty(JSON_PROPERTY_SOR_TRANSPARENT_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSorTransparentContainer(byte[] sorTransparentContainer)
    {
        this.sorTransparentContainer = sorTransparentContainer;
    }

    public SorInfo sorCmci(byte[] sorCmci)
    {

        this.sorCmci = sorCmci;
        return this;
    }

    /**
     * string with format &#39;bytes&#39; as defined in OpenAPI
     * 
     * @return sorCmci
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'bytes' as defined in OpenAPI")
    @JsonProperty(JSON_PROPERTY_SOR_CMCI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public byte[] getSorCmci()
    {
        return sorCmci;
    }

    @JsonProperty(JSON_PROPERTY_SOR_CMCI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSorCmci(byte[] sorCmci)
    {
        this.sorCmci = sorCmci;
    }

    public SorInfo storeSorCmciInMe(Boolean storeSorCmciInMe)
    {

        this.storeSorCmciInMe = storeSorCmciInMe;
        return this;
    }

    /**
     * Get storeSorCmciInMe
     * 
     * @return storeSorCmciInMe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_STORE_SOR_CMCI_IN_ME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getStoreSorCmciInMe()
    {
        return storeSorCmciInMe;
    }

    @JsonProperty(JSON_PROPERTY_STORE_SOR_CMCI_IN_ME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStoreSorCmciInMe(Boolean storeSorCmciInMe)
    {
        this.storeSorCmciInMe = storeSorCmciInMe;
    }

    public SorInfo usimSupportOfSorCmci(Boolean usimSupportOfSorCmci)
    {

        this.usimSupportOfSorCmci = usimSupportOfSorCmci;
        return this;
    }

    /**
     * Get usimSupportOfSorCmci
     * 
     * @return usimSupportOfSorCmci
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_USIM_SUPPORT_OF_SOR_CMCI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getUsimSupportOfSorCmci()
    {
        return usimSupportOfSorCmci;
    }

    @JsonProperty(JSON_PROPERTY_USIM_SUPPORT_OF_SOR_CMCI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsimSupportOfSorCmci(Boolean usimSupportOfSorCmci)
    {
        this.usimSupportOfSorCmci = usimSupportOfSorCmci;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SorInfo sorInfo = (SorInfo) o;
        return Objects.equals(this.steeringContainer, sorInfo.steeringContainer) && Objects.equals(this.ackInd, sorInfo.ackInd)
               && Objects.equals(this.sorMacIausf, sorInfo.sorMacIausf) && Objects.equals(this.countersor, sorInfo.countersor)
               && Objects.equals(this.provisioningTime, sorInfo.provisioningTime)
               && Arrays.equals(this.sorTransparentContainer, sorInfo.sorTransparentContainer) && Arrays.equals(this.sorCmci, sorInfo.sorCmci)
               && Objects.equals(this.storeSorCmciInMe, sorInfo.storeSorCmciInMe) && Objects.equals(this.usimSupportOfSorCmci, sorInfo.usimSupportOfSorCmci);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(steeringContainer,
                            ackInd,
                            sorMacIausf,
                            countersor,
                            provisioningTime,
                            Arrays.hashCode(sorTransparentContainer),
                            Arrays.hashCode(sorCmci),
                            storeSorCmciInMe,
                            usimSupportOfSorCmci);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SorInfo {\n");
        sb.append("    steeringContainer: ").append(toIndentedString(steeringContainer)).append("\n");
        sb.append("    ackInd: ").append(toIndentedString(ackInd)).append("\n");
        sb.append("    sorMacIausf: ").append(toIndentedString(sorMacIausf)).append("\n");
        sb.append("    countersor: ").append(toIndentedString(countersor)).append("\n");
        sb.append("    provisioningTime: ").append(toIndentedString(provisioningTime)).append("\n");
        sb.append("    sorTransparentContainer: ").append(toIndentedString(sorTransparentContainer)).append("\n");
        sb.append("    sorCmci: ").append(toIndentedString(sorCmci)).append("\n");
        sb.append("    storeSorCmciInMe: ").append(toIndentedString(storeSorCmciInMe)).append("\n");
        sb.append("    usimSupportOfSorCmci: ").append(toIndentedString(usimSupportOfSorCmci)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
