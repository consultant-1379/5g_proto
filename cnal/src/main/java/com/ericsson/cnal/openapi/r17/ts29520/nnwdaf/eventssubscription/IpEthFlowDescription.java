/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization.EthFlowDescription;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the description of an Uplink and/or Downlink Ethernet flow.
 */
@ApiModel(description = "Contains the description of an Uplink and/or Downlink Ethernet flow.")
@JsonPropertyOrder({ IpEthFlowDescription.JSON_PROPERTY_IP_TRAFFIC_FILTER, IpEthFlowDescription.JSON_PROPERTY_ETH_TRAFFIC_FILTER })
public class IpEthFlowDescription
{
    public static final String JSON_PROPERTY_IP_TRAFFIC_FILTER = "ipTrafficFilter";
    private String ipTrafficFilter;

    public static final String JSON_PROPERTY_ETH_TRAFFIC_FILTER = "ethTrafficFilter";
    private EthFlowDescription ethTrafficFilter;

    public IpEthFlowDescription()
    {
    }

    public IpEthFlowDescription ipTrafficFilter(String ipTrafficFilter)
    {

        this.ipTrafficFilter = ipTrafficFilter;
        return this;
    }

    /**
     * Defines a packet filter of an IP flow.
     * 
     * @return ipTrafficFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Defines a packet filter of an IP flow.")
    @JsonProperty(JSON_PROPERTY_IP_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getIpTrafficFilter()
    {
        return ipTrafficFilter;
    }

    @JsonProperty(JSON_PROPERTY_IP_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpTrafficFilter(String ipTrafficFilter)
    {
        this.ipTrafficFilter = ipTrafficFilter;
    }

    public IpEthFlowDescription ethTrafficFilter(EthFlowDescription ethTrafficFilter)
    {

        this.ethTrafficFilter = ethTrafficFilter;
        return this;
    }

    /**
     * Get ethTrafficFilter
     * 
     * @return ethTrafficFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ETH_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public EthFlowDescription getEthTrafficFilter()
    {
        return ethTrafficFilter;
    }

    @JsonProperty(JSON_PROPERTY_ETH_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEthTrafficFilter(EthFlowDescription ethTrafficFilter)
    {
        this.ethTrafficFilter = ethTrafficFilter;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        IpEthFlowDescription ipEthFlowDescription = (IpEthFlowDescription) o;
        return Objects.equals(this.ipTrafficFilter, ipEthFlowDescription.ipTrafficFilter)
               && Objects.equals(this.ethTrafficFilter, ipEthFlowDescription.ethTrafficFilter);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ipTrafficFilter, ethTrafficFilter);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class IpEthFlowDescription {\n");
        sb.append("    ipTrafficFilter: ").append(toIndentedString(ipTrafficFilter)).append("\n");
        sb.append("    ethTrafficFilter: ").append(toIndentedString(ethTrafficFilter)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
