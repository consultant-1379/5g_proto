/*
 * Nnef_PFDmanagement Service API
 * Packet Flow Description Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29551.nnef.pfdmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents information related to a notification of PFD change.
 */
@ApiModel(description = "Represents information related to a notification of PFD change.")
@JsonPropertyOrder({ PfdChangeNotification.JSON_PROPERTY_APPLICATION_ID,
                     PfdChangeNotification.JSON_PROPERTY_REMOVAL_FLAG,
                     PfdChangeNotification.JSON_PROPERTY_PARTIAL_FLAG,
                     PfdChangeNotification.JSON_PROPERTY_PFDS })
public class PfdChangeNotification
{
    public static final String JSON_PROPERTY_APPLICATION_ID = "applicationId";
    private String applicationId;

    public static final String JSON_PROPERTY_REMOVAL_FLAG = "removalFlag";
    private Boolean removalFlag = false;

    public static final String JSON_PROPERTY_PARTIAL_FLAG = "partialFlag";
    private Boolean partialFlag = false;

    public static final String JSON_PROPERTY_PFDS = "pfds";
    private List<PfdContent> pfds = null;

    public PfdChangeNotification()
    {
    }

    public PfdChangeNotification applicationId(String applicationId)
    {

        this.applicationId = applicationId;
        return this;
    }

    /**
     * String providing an application identifier.
     * 
     * @return applicationId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an application identifier.")
    @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getApplicationId()
    {
        return applicationId;
    }

    @JsonProperty(JSON_PROPERTY_APPLICATION_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setApplicationId(String applicationId)
    {
        this.applicationId = applicationId;
    }

    public PfdChangeNotification removalFlag(Boolean removalFlag)
    {

        this.removalFlag = removalFlag;
        return this;
    }

    /**
     * Get removalFlag
     * 
     * @return removalFlag
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_REMOVAL_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRemovalFlag()
    {
        return removalFlag;
    }

    @JsonProperty(JSON_PROPERTY_REMOVAL_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRemovalFlag(Boolean removalFlag)
    {
        this.removalFlag = removalFlag;
    }

    public PfdChangeNotification partialFlag(Boolean partialFlag)
    {

        this.partialFlag = partialFlag;
        return this;
    }

    /**
     * Get partialFlag
     * 
     * @return partialFlag
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PARTIAL_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getPartialFlag()
    {
        return partialFlag;
    }

    @JsonProperty(JSON_PROPERTY_PARTIAL_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPartialFlag(Boolean partialFlag)
    {
        this.partialFlag = partialFlag;
    }

    public PfdChangeNotification pfds(List<PfdContent> pfds)
    {

        this.pfds = pfds;
        return this;
    }

    public PfdChangeNotification addPfdsItem(PfdContent pfdsItem)
    {
        if (this.pfds == null)
        {
            this.pfds = new ArrayList<>();
        }
        this.pfds.add(pfdsItem);
        return this;
    }

    /**
     * Get pfds
     * 
     * @return pfds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PFDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PfdContent> getPfds()
    {
        return pfds;
    }

    @JsonProperty(JSON_PROPERTY_PFDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPfds(List<PfdContent> pfds)
    {
        this.pfds = pfds;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PfdChangeNotification pfdChangeNotification = (PfdChangeNotification) o;
        return Objects.equals(this.applicationId, pfdChangeNotification.applicationId) && Objects.equals(this.removalFlag, pfdChangeNotification.removalFlag)
               && Objects.equals(this.partialFlag, pfdChangeNotification.partialFlag) && Objects.equals(this.pfds, pfdChangeNotification.pfds);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(applicationId, removalFlag, partialFlag, pfds);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PfdChangeNotification {\n");
        sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
        sb.append("    removalFlag: ").append(toIndentedString(removalFlag)).append("\n");
        sb.append("    partialFlag: ").append(toIndentedString(partialFlag)).append("\n");
        sb.append("    pfds: ").append(toIndentedString(pfds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
