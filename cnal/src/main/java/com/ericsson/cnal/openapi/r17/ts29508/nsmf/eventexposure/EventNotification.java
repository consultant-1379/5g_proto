/*
 * Nsmf_EventExposure
 * Session Management Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29508.nsmf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.RouteToLocation;
import com.ericsson.cnal.openapi.r17.ts29518.namf.eventexposure.CommunicationFailure;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.AccessType;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PlmnId;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.TimeWindow;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.DddTrafficDescriptor;
import com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization.EthFlowDescription;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.IpAddr;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a notification related to a single event that occurred.
 */
@ApiModel(description = "Represents a notification related to a single event that occurred.")
@JsonPropertyOrder({ EventNotification.JSON_PROPERTY_EVENT,
                     EventNotification.JSON_PROPERTY_TIME_STAMP,
                     EventNotification.JSON_PROPERTY_SUPI,
                     EventNotification.JSON_PROPERTY_GPSI,
                     EventNotification.JSON_PROPERTY_UE_IP_ADDR,
                     EventNotification.JSON_PROPERTY_TRANSAC_INFOS,
                     EventNotification.JSON_PROPERTY_SOURCE_DNAI,
                     EventNotification.JSON_PROPERTY_TARGET_DNAI,
                     EventNotification.JSON_PROPERTY_DNAI_CHG_TYPE,
                     EventNotification.JSON_PROPERTY_SOURCE_UE_IPV4_ADDR,
                     EventNotification.JSON_PROPERTY_SOURCE_UE_IPV6_PREFIX,
                     EventNotification.JSON_PROPERTY_TARGET_UE_IPV4_ADDR,
                     EventNotification.JSON_PROPERTY_TARGET_UE_IPV6_PREFIX,
                     EventNotification.JSON_PROPERTY_SOURCE_TRA_ROUTING,
                     EventNotification.JSON_PROPERTY_TARGET_TRA_ROUTING,
                     EventNotification.JSON_PROPERTY_UE_MAC,
                     EventNotification.JSON_PROPERTY_AD_IPV4_ADDR,
                     EventNotification.JSON_PROPERTY_AD_IPV6_PREFIX,
                     EventNotification.JSON_PROPERTY_RE_IPV4_ADDR,
                     EventNotification.JSON_PROPERTY_RE_IPV6_PREFIX,
                     EventNotification.JSON_PROPERTY_PLMN_ID,
                     EventNotification.JSON_PROPERTY_ACC_TYPE,
                     EventNotification.JSON_PROPERTY_PDU_SE_ID,
                     EventNotification.JSON_PROPERTY_RAT_TYPE,
                     EventNotification.JSON_PROPERTY_DDD_STATUS,
                     EventNotification.JSON_PROPERTY_DDD_TRA_DESCRIPTOR,
                     EventNotification.JSON_PROPERTY_MAX_WAIT_TIME,
                     EventNotification.JSON_PROPERTY_COMM_FAILURE,
                     EventNotification.JSON_PROPERTY_IPV4_ADDR,
                     EventNotification.JSON_PROPERTY_IPV6_PREFIXES,
                     EventNotification.JSON_PROPERTY_IPV6_ADDRS,
                     EventNotification.JSON_PROPERTY_PDU_SESS_TYPE,
                     EventNotification.JSON_PROPERTY_QFI,
                     EventNotification.JSON_PROPERTY_APP_ID,
                     EventNotification.JSON_PROPERTY_ETH_FLOW_DESCS,
                     EventNotification.JSON_PROPERTY_ETHF_DESCS,
                     EventNotification.JSON_PROPERTY_FLOW_DESCS,
                     EventNotification.JSON_PROPERTY_F_DESCS,
                     EventNotification.JSON_PROPERTY_DNN,
                     EventNotification.JSON_PROPERTY_SNSSAI,
                     EventNotification.JSON_PROPERTY_UL_DELAYS,
                     EventNotification.JSON_PROPERTY_DL_DELAYS,
                     EventNotification.JSON_PROPERTY_RT_DELAYS,
                     EventNotification.JSON_PROPERTY_TIME_WINDOW,
                     EventNotification.JSON_PROPERTY_SM_NAS_FROM_UE,
                     EventNotification.JSON_PROPERTY_SM_NAS_FROM_SMF,
                     EventNotification.JSON_PROPERTY_UP_RED_TRANS,
                     EventNotification.JSON_PROPERTY_SS_ID,
                     EventNotification.JSON_PROPERTY_BSS_ID,
                     EventNotification.JSON_PROPERTY_START_WLAN,
                     EventNotification.JSON_PROPERTY_END_WLAN,
                     EventNotification.JSON_PROPERTY_PDU_SESS_INFOS,
                     EventNotification.JSON_PROPERTY_UPF_INFO })
public class EventNotification
{
    public static final String JSON_PROPERTY_EVENT = "event";
    private String event;

    public static final String JSON_PROPERTY_TIME_STAMP = "timeStamp";
    private OffsetDateTime timeStamp;

    public static final String JSON_PROPERTY_SUPI = "supi";
    private String supi;

    public static final String JSON_PROPERTY_GPSI = "gpsi";
    private String gpsi;

    public static final String JSON_PROPERTY_UE_IP_ADDR = "ueIpAddr";
    private IpAddr ueIpAddr;

    public static final String JSON_PROPERTY_TRANSAC_INFOS = "transacInfos";
    private List<TransactionInfo> transacInfos = null;

    public static final String JSON_PROPERTY_SOURCE_DNAI = "sourceDnai";
    private String sourceDnai;

    public static final String JSON_PROPERTY_TARGET_DNAI = "targetDnai";
    private String targetDnai;

    public static final String JSON_PROPERTY_DNAI_CHG_TYPE = "dnaiChgType";
    private String dnaiChgType;

    public static final String JSON_PROPERTY_SOURCE_UE_IPV4_ADDR = "sourceUeIpv4Addr";
    private String sourceUeIpv4Addr;

    public static final String JSON_PROPERTY_SOURCE_UE_IPV6_PREFIX = "sourceUeIpv6Prefix";
    private String sourceUeIpv6Prefix;

    public static final String JSON_PROPERTY_TARGET_UE_IPV4_ADDR = "targetUeIpv4Addr";
    private String targetUeIpv4Addr;

    public static final String JSON_PROPERTY_TARGET_UE_IPV6_PREFIX = "targetUeIpv6Prefix";
    private String targetUeIpv6Prefix;

    public static final String JSON_PROPERTY_SOURCE_TRA_ROUTING = "sourceTraRouting";
    private JsonNullable<RouteToLocation> sourceTraRouting = JsonNullable.<RouteToLocation>undefined();

    public static final String JSON_PROPERTY_TARGET_TRA_ROUTING = "targetTraRouting";
    private JsonNullable<RouteToLocation> targetTraRouting = JsonNullable.<RouteToLocation>undefined();

    public static final String JSON_PROPERTY_UE_MAC = "ueMac";
    private String ueMac;

    public static final String JSON_PROPERTY_AD_IPV4_ADDR = "adIpv4Addr";
    private String adIpv4Addr;

    public static final String JSON_PROPERTY_AD_IPV6_PREFIX = "adIpv6Prefix";
    private String adIpv6Prefix;

    public static final String JSON_PROPERTY_RE_IPV4_ADDR = "reIpv4Addr";
    private String reIpv4Addr;

    public static final String JSON_PROPERTY_RE_IPV6_PREFIX = "reIpv6Prefix";
    private String reIpv6Prefix;

    public static final String JSON_PROPERTY_PLMN_ID = "plmnId";
    private PlmnId plmnId;

    public static final String JSON_PROPERTY_ACC_TYPE = "accType";
    private AccessType accType;

    public static final String JSON_PROPERTY_PDU_SE_ID = "pduSeId";
    private Integer pduSeId;

    public static final String JSON_PROPERTY_RAT_TYPE = "ratType";
    private String ratType;

    public static final String JSON_PROPERTY_DDD_STATUS = "dddStatus";
    private String dddStatus;

    public static final String JSON_PROPERTY_DDD_TRA_DESCRIPTOR = "dddTraDescriptor";
    private DddTrafficDescriptor dddTraDescriptor;

    public static final String JSON_PROPERTY_MAX_WAIT_TIME = "maxWaitTime";
    private OffsetDateTime maxWaitTime;

    public static final String JSON_PROPERTY_COMM_FAILURE = "commFailure";
    private CommunicationFailure commFailure;

    public static final String JSON_PROPERTY_IPV4_ADDR = "ipv4Addr";
    private String ipv4Addr;

    public static final String JSON_PROPERTY_IPV6_PREFIXES = "ipv6Prefixes";
    private List<String> ipv6Prefixes = null;

    public static final String JSON_PROPERTY_IPV6_ADDRS = "ipv6Addrs";
    private List<String> ipv6Addrs = null;

    public static final String JSON_PROPERTY_PDU_SESS_TYPE = "pduSessType";
    private String pduSessType;

    public static final String JSON_PROPERTY_QFI = "qfi";
    private Integer qfi;

    public static final String JSON_PROPERTY_APP_ID = "appId";
    private String appId;

    public static final String JSON_PROPERTY_ETH_FLOW_DESCS = "ethFlowDescs";
    private List<EthFlowDescription> ethFlowDescs = null;

    public static final String JSON_PROPERTY_ETHF_DESCS = "ethfDescs";
    private List<EthFlowDescription> ethfDescs = null;

    public static final String JSON_PROPERTY_FLOW_DESCS = "flowDescs";
    private List<String> flowDescs = null;

    public static final String JSON_PROPERTY_F_DESCS = "fDescs";
    private List<String> fDescs = null;

    public static final String JSON_PROPERTY_DNN = "dnn";
    private String dnn;

    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_UL_DELAYS = "ulDelays";
    private List<Integer> ulDelays = null;

    public static final String JSON_PROPERTY_DL_DELAYS = "dlDelays";
    private List<Integer> dlDelays = null;

    public static final String JSON_PROPERTY_RT_DELAYS = "rtDelays";
    private List<Integer> rtDelays = null;

    public static final String JSON_PROPERTY_TIME_WINDOW = "timeWindow";
    private TimeWindow timeWindow;

    public static final String JSON_PROPERTY_SM_NAS_FROM_UE = "smNasFromUe";
    private SmNasFromUe smNasFromUe;

    public static final String JSON_PROPERTY_SM_NAS_FROM_SMF = "smNasFromSmf";
    private SmNasFromSmf smNasFromSmf;

    public static final String JSON_PROPERTY_UP_RED_TRANS = "upRedTrans";
    private Boolean upRedTrans;

    public static final String JSON_PROPERTY_SS_ID = "ssId";
    private String ssId;

    public static final String JSON_PROPERTY_BSS_ID = "bssId";
    private String bssId;

    public static final String JSON_PROPERTY_START_WLAN = "startWlan";
    private OffsetDateTime startWlan;

    public static final String JSON_PROPERTY_END_WLAN = "endWlan";
    private OffsetDateTime endWlan;

    public static final String JSON_PROPERTY_PDU_SESS_INFOS = "pduSessInfos";
    private List<PduSessionInformation> pduSessInfos = null;

    public static final String JSON_PROPERTY_UPF_INFO = "upfInfo";
    private UpfInformation upfInfo;

    public EventNotification()
    {
    }

    public EventNotification event(String event)
    {

        this.event = event;
        return this;
    }

    /**
     * Possible values are: - AC_TY_CH: Access Type Change - UP_PATH_CH: UP Path
     * Change - PDU_SES_REL: PDU Session Release - PLMN_CH: PLMN Change - UE_IP_CH:
     * UE IP address change - RAT_TY_CH: RAT Type Change - DDDS: Downlink data
     * delivery status - COMM_FAIL: Communication Failure - PDU_SES_EST: PDU Session
     * Establishment - QFI_ALLOC: QFI allocation - QOS_MON: QoS Monitoring -
     * SMCC_EXP: SM congestion control experience for PDU Session - DISPERSION:
     * Session Management transaction dispersion - RED_TRANS_EXP: Redundant
     * transmission experience for PDU Session - WLAN_INFO: WLAN information on PDU
     * session for which Access Type is NON_3GPP_ACCESS and RAT Type is TRUSTED_WLAN
     * - UPF_INFO: The UPF information, including the UPF ID/address/FQDN
     * information. - UP_STATUS_INFO: The User Plane status information.
     * 
     * @return event
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Possible values are: - AC_TY_CH: Access Type Change - UP_PATH_CH: UP Path Change - PDU_SES_REL: PDU Session Release - PLMN_CH: PLMN Change - UE_IP_CH: UE IP address change - RAT_TY_CH: RAT Type Change - DDDS: Downlink data delivery status - COMM_FAIL: Communication Failure - PDU_SES_EST: PDU Session Establishment - QFI_ALLOC: QFI allocation - QOS_MON: QoS Monitoring - SMCC_EXP: SM congestion control experience for PDU Session - DISPERSION: Session Management transaction dispersion - RED_TRANS_EXP: Redundant transmission experience for PDU Session - WLAN_INFO: WLAN information on PDU session for which Access Type is NON_3GPP_ACCESS and   RAT Type is TRUSTED_WLAN - UPF_INFO: The UPF information, including the UPF ID/address/FQDN information. - UP_STATUS_INFO: The User Plane status information. ")
    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getEvent()
    {
        return event;
    }

    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEvent(String event)
    {
        this.event = event;
    }

    public EventNotification timeStamp(OffsetDateTime timeStamp)
    {

        this.timeStamp = timeStamp;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return timeStamp
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TIME_STAMP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTimeStamp()
    {
        return timeStamp;
    }

    @JsonProperty(JSON_PROPERTY_TIME_STAMP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTimeStamp(OffsetDateTime timeStamp)
    {
        this.timeStamp = timeStamp;
    }

    public EventNotification supi(String supi)
    {

        this.supi = supi;
        return this;
    }

    /**
     * String identifying a Supi that shall contain either an IMSI, a network
     * specific identifier, a Global Cable Identifier (GCI) or a Global Line
     * Identifier (GLI) as specified in clause 2.2A of 3GPP TS 23.003. It shall be
     * formatted as follows - for an IMSI \&quot;imsi-&lt;imsi&gt;\&quot;, where
     * &lt;imsi&gt; shall be formatted according to clause 2.2 of 3GPP TS 23.003
     * that describes an IMSI. - for a network specific identifier
     * \&quot;nai-&lt;nai&gt;, where &lt;nai&gt; shall be formatted according to
     * clause 28.7.2 of 3GPP TS 23.003 that describes an NAI. - for a GCI
     * \&quot;gci-&lt;gci&gt;\&quot;, where &lt;gci&gt; shall be formatted according
     * to clause 28.15.2 of 3GPP TS 23.003. - for a GLI
     * \&quot;gli-&lt;gli&gt;\&quot;, where &lt;gli&gt; shall be formatted according
     * to clause 28.16.2 of 3GPP TS 23.003.To enable that the value is used as part
     * of an URI, the string shall only contain characters allowed according to the
     * \&quot;lower-with-hyphen\&quot; naming convention defined in 3GPP TS 29.501.
     * 
     * @return supi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. ")
    @JsonProperty(JSON_PROPERTY_SUPI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSupi()
    {
        return supi;
    }

    @JsonProperty(JSON_PROPERTY_SUPI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupi(String supi)
    {
        this.supi = supi;
    }

    public EventNotification gpsi(String gpsi)
    {

        this.gpsi = gpsi;
        return this;
    }

    /**
     * String identifying a Gpsi shall contain either an External Id or an MSISDN.
     * It shall be formatted as follows -External Identifier&#x3D;
     * \&quot;extid-&#39;extid&#39;, where &#39;extid&#39; shall be formatted
     * according to clause 19.7.2 of 3GPP TS 23.003 that describes an External
     * Identifier.
     * 
     * @return gpsi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  ")
    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGpsi()
    {
        return gpsi;
    }

    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGpsi(String gpsi)
    {
        this.gpsi = gpsi;
    }

    public EventNotification ueIpAddr(IpAddr ueIpAddr)
    {

        this.ueIpAddr = ueIpAddr;
        return this;
    }

    /**
     * Get ueIpAddr
     * 
     * @return ueIpAddr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UE_IP_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public IpAddr getUeIpAddr()
    {
        return ueIpAddr;
    }

    @JsonProperty(JSON_PROPERTY_UE_IP_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeIpAddr(IpAddr ueIpAddr)
    {
        this.ueIpAddr = ueIpAddr;
    }

    public EventNotification transacInfos(List<TransactionInfo> transacInfos)
    {

        this.transacInfos = transacInfos;
        return this;
    }

    public EventNotification addTransacInfosItem(TransactionInfo transacInfosItem)
    {
        if (this.transacInfos == null)
        {
            this.transacInfos = new ArrayList<>();
        }
        this.transacInfos.add(transacInfosItem);
        return this;
    }

    /**
     * Transaction Information.
     * 
     * @return transacInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Transaction Information.")
    @JsonProperty(JSON_PROPERTY_TRANSAC_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<TransactionInfo> getTransacInfos()
    {
        return transacInfos;
    }

    @JsonProperty(JSON_PROPERTY_TRANSAC_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTransacInfos(List<TransactionInfo> transacInfos)
    {
        this.transacInfos = transacInfos;
    }

    public EventNotification sourceDnai(String sourceDnai)
    {

        this.sourceDnai = sourceDnai;
        return this;
    }

    /**
     * DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
     * 
     * @return sourceDnai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.")
    @JsonProperty(JSON_PROPERTY_SOURCE_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSourceDnai()
    {
        return sourceDnai;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSourceDnai(String sourceDnai)
    {
        this.sourceDnai = sourceDnai;
    }

    public EventNotification targetDnai(String targetDnai)
    {

        this.targetDnai = targetDnai;
        return this;
    }

    /**
     * DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
     * 
     * @return targetDnai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.")
    @JsonProperty(JSON_PROPERTY_TARGET_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTargetDnai()
    {
        return targetDnai;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetDnai(String targetDnai)
    {
        this.targetDnai = targetDnai;
    }

    public EventNotification dnaiChgType(String dnaiChgType)
    {

        this.dnaiChgType = dnaiChgType;
        return this;
    }

    /**
     * Possible values are: - EARLY: Early notification of UP path reconfiguration.
     * - EARLY_LATE: Early and late notification of UP path reconfiguration. This
     * value shall only be present in the subscription to the DNAI change event. -
     * LATE: Late notification of UP path reconfiguration.
     * 
     * @return dnaiChgType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall   only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.  ")
    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnaiChgType()
    {
        return dnaiChgType;
    }

    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnaiChgType(String dnaiChgType)
    {
        this.dnaiChgType = dnaiChgType;
    }

    public EventNotification sourceUeIpv4Addr(String sourceUeIpv4Addr)
    {

        this.sourceUeIpv4Addr = sourceUeIpv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return sourceUeIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_SOURCE_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSourceUeIpv4Addr()
    {
        return sourceUeIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSourceUeIpv4Addr(String sourceUeIpv4Addr)
    {
        this.sourceUeIpv4Addr = sourceUeIpv4Addr;
    }

    public EventNotification sourceUeIpv6Prefix(String sourceUeIpv6Prefix)
    {

        this.sourceUeIpv6Prefix = sourceUeIpv6Prefix;
        return this;
    }

    /**
     * Get sourceUeIpv6Prefix
     * 
     * @return sourceUeIpv6Prefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SOURCE_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSourceUeIpv6Prefix()
    {
        return sourceUeIpv6Prefix;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSourceUeIpv6Prefix(String sourceUeIpv6Prefix)
    {
        this.sourceUeIpv6Prefix = sourceUeIpv6Prefix;
    }

    public EventNotification targetUeIpv4Addr(String targetUeIpv4Addr)
    {

        this.targetUeIpv4Addr = targetUeIpv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return targetUeIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_TARGET_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTargetUeIpv4Addr()
    {
        return targetUeIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetUeIpv4Addr(String targetUeIpv4Addr)
    {
        this.targetUeIpv4Addr = targetUeIpv4Addr;
    }

    public EventNotification targetUeIpv6Prefix(String targetUeIpv6Prefix)
    {

        this.targetUeIpv6Prefix = targetUeIpv6Prefix;
        return this;
    }

    /**
     * Get targetUeIpv6Prefix
     * 
     * @return targetUeIpv6Prefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TARGET_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTargetUeIpv6Prefix()
    {
        return targetUeIpv6Prefix;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetUeIpv6Prefix(String targetUeIpv6Prefix)
    {
        this.targetUeIpv6Prefix = targetUeIpv6Prefix;
    }

    public EventNotification sourceTraRouting(RouteToLocation sourceTraRouting)
    {
        this.sourceTraRouting = JsonNullable.<RouteToLocation>of(sourceTraRouting);

        return this;
    }

    /**
     * Get sourceTraRouting
     * 
     * @return sourceTraRouting
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public RouteToLocation getSourceTraRouting()
    {
        return sourceTraRouting.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_TRA_ROUTING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<RouteToLocation> getSourceTraRouting_JsonNullable()
    {
        return sourceTraRouting;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_TRA_ROUTING)
    public void setSourceTraRouting_JsonNullable(JsonNullable<RouteToLocation> sourceTraRouting)
    {
        this.sourceTraRouting = sourceTraRouting;
    }

    public void setSourceTraRouting(RouteToLocation sourceTraRouting)
    {
        this.sourceTraRouting = JsonNullable.<RouteToLocation>of(sourceTraRouting);
    }

    public EventNotification targetTraRouting(RouteToLocation targetTraRouting)
    {
        this.targetTraRouting = JsonNullable.<RouteToLocation>of(targetTraRouting);

        return this;
    }

    /**
     * Get targetTraRouting
     * 
     * @return targetTraRouting
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public RouteToLocation getTargetTraRouting()
    {
        return targetTraRouting.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TARGET_TRA_ROUTING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<RouteToLocation> getTargetTraRouting_JsonNullable()
    {
        return targetTraRouting;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_TRA_ROUTING)
    public void setTargetTraRouting_JsonNullable(JsonNullable<RouteToLocation> targetTraRouting)
    {
        this.targetTraRouting = targetTraRouting;
    }

    public void setTargetTraRouting(RouteToLocation targetTraRouting)
    {
        this.targetTraRouting = JsonNullable.<RouteToLocation>of(targetTraRouting);
    }

    public EventNotification ueMac(String ueMac)
    {

        this.ueMac = ueMac;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return ueMac
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_UE_MAC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUeMac()
    {
        return ueMac;
    }

    @JsonProperty(JSON_PROPERTY_UE_MAC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeMac(String ueMac)
    {
        this.ueMac = ueMac;
    }

    public EventNotification adIpv4Addr(String adIpv4Addr)
    {

        this.adIpv4Addr = adIpv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return adIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_AD_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAdIpv4Addr()
    {
        return adIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_AD_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdIpv4Addr(String adIpv4Addr)
    {
        this.adIpv4Addr = adIpv4Addr;
    }

    public EventNotification adIpv6Prefix(String adIpv6Prefix)
    {

        this.adIpv6Prefix = adIpv6Prefix;
        return this;
    }

    /**
     * Get adIpv6Prefix
     * 
     * @return adIpv6Prefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_AD_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAdIpv6Prefix()
    {
        return adIpv6Prefix;
    }

    @JsonProperty(JSON_PROPERTY_AD_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAdIpv6Prefix(String adIpv6Prefix)
    {
        this.adIpv6Prefix = adIpv6Prefix;
    }

    public EventNotification reIpv4Addr(String reIpv4Addr)
    {

        this.reIpv4Addr = reIpv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return reIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_RE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReIpv4Addr()
    {
        return reIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_RE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReIpv4Addr(String reIpv4Addr)
    {
        this.reIpv4Addr = reIpv4Addr;
    }

    public EventNotification reIpv6Prefix(String reIpv6Prefix)
    {

        this.reIpv6Prefix = reIpv6Prefix;
        return this;
    }

    /**
     * Get reIpv6Prefix
     * 
     * @return reIpv6Prefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReIpv6Prefix()
    {
        return reIpv6Prefix;
    }

    @JsonProperty(JSON_PROPERTY_RE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReIpv6Prefix(String reIpv6Prefix)
    {
        this.reIpv6Prefix = reIpv6Prefix;
    }

    public EventNotification plmnId(PlmnId plmnId)
    {

        this.plmnId = plmnId;
        return this;
    }

    /**
     * Get plmnId
     * 
     * @return plmnId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PLMN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PlmnId getPlmnId()
    {
        return plmnId;
    }

    @JsonProperty(JSON_PROPERTY_PLMN_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPlmnId(PlmnId plmnId)
    {
        this.plmnId = plmnId;
    }

    public EventNotification accType(AccessType accType)
    {

        this.accType = accType;
        return this;
    }

    /**
     * Get accType
     * 
     * @return accType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ACC_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AccessType getAccType()
    {
        return accType;
    }

    @JsonProperty(JSON_PROPERTY_ACC_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccType(AccessType accType)
    {
        this.accType = accType;
    }

    public EventNotification pduSeId(Integer pduSeId)
    {

        this.pduSeId = pduSeId;
        return this;
    }

    /**
     * Unsigned integer identifying a PDU session, within the range 0 to 255, as
     * specified in clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU
     * Session ID is allocated by the Core Network for UEs not supporting N1 mode,
     * reserved range 64 to 95 is used. PDU Session ID within the reserved range is
     * only visible in the Core Network. minimum: 0 maximum: 255
     * 
     * @return pduSeId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.  ")
    @JsonProperty(JSON_PROPERTY_PDU_SE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getPduSeId()
    {
        return pduSeId;
    }

    @JsonProperty(JSON_PROPERTY_PDU_SE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPduSeId(Integer pduSeId)
    {
        this.pduSeId = pduSeId;
    }

    public EventNotification ratType(String ratType)
    {

        this.ratType = ratType;
        return this;
    }

    /**
     * Indicates the radio access used.
     * 
     * @return ratType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the radio access used.")
    @JsonProperty(JSON_PROPERTY_RAT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRatType()
    {
        return ratType;
    }

    @JsonProperty(JSON_PROPERTY_RAT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRatType(String ratType)
    {
        this.ratType = ratType;
    }

    public EventNotification dddStatus(String dddStatus)
    {

        this.dddStatus = dddStatus;
        return this;
    }

    /**
     * Possible values are: - BUFFERED: The first downlink data is buffered with
     * extended buffering matching the source of the downlink traffic. -
     * TRANSMITTED: The first downlink data matching the source of the downlink
     * traffic is transmitted after previous buffering or discarding of
     * corresponding packet(s) because the UE of the PDU Session becomes ACTIVE, and
     * buffered data can be delivered to UE. - DISCARDED: The first downlink data
     * matching the source of the downlink traffic is discarded because the Extended
     * Buffering time, as determined by the SMF, expires or the amount of downlink
     * data to be buffered is exceeded.
     * 
     * @return dddStatus
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - BUFFERED: The first downlink data is buffered with extended buffering matching the   source of the downlink traffic. - TRANSMITTED: The first downlink data matching the source of the downlink traffic is   transmitted after previous buffering or discarding of corresponding packet(s) because   the UE of the PDU Session becomes ACTIVE, and buffered data can be delivered to UE. - DISCARDED: The first downlink data matching the source of the downlink traffic is   discarded because the Extended Buffering time, as determined by the SMF, expires or   the amount of downlink data to be buffered is exceeded. ")
    @JsonProperty(JSON_PROPERTY_DDD_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDddStatus()
    {
        return dddStatus;
    }

    @JsonProperty(JSON_PROPERTY_DDD_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDddStatus(String dddStatus)
    {
        this.dddStatus = dddStatus;
    }

    public EventNotification dddTraDescriptor(DddTrafficDescriptor dddTraDescriptor)
    {

        this.dddTraDescriptor = dddTraDescriptor;
        return this;
    }

    /**
     * Get dddTraDescriptor
     * 
     * @return dddTraDescriptor
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DDD_TRA_DESCRIPTOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public DddTrafficDescriptor getDddTraDescriptor()
    {
        return dddTraDescriptor;
    }

    @JsonProperty(JSON_PROPERTY_DDD_TRA_DESCRIPTOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDddTraDescriptor(DddTrafficDescriptor dddTraDescriptor)
    {
        this.dddTraDescriptor = dddTraDescriptor;
    }

    public EventNotification maxWaitTime(OffsetDateTime maxWaitTime)
    {

        this.maxWaitTime = maxWaitTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return maxWaitTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_MAX_WAIT_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getMaxWaitTime()
    {
        return maxWaitTime;
    }

    @JsonProperty(JSON_PROPERTY_MAX_WAIT_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxWaitTime(OffsetDateTime maxWaitTime)
    {
        this.maxWaitTime = maxWaitTime;
    }

    public EventNotification commFailure(CommunicationFailure commFailure)
    {

        this.commFailure = commFailure;
        return this;
    }

    /**
     * Get commFailure
     * 
     * @return commFailure
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_COMM_FAILURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public CommunicationFailure getCommFailure()
    {
        return commFailure;
    }

    @JsonProperty(JSON_PROPERTY_COMM_FAILURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCommFailure(CommunicationFailure commFailure)
    {
        this.commFailure = commFailure;
    }

    public EventNotification ipv4Addr(String ipv4Addr)
    {

        this.ipv4Addr = ipv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return ipv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getIpv4Addr()
    {
        return ipv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv4Addr(String ipv4Addr)
    {
        this.ipv4Addr = ipv4Addr;
    }

    public EventNotification ipv6Prefixes(List<String> ipv6Prefixes)
    {

        this.ipv6Prefixes = ipv6Prefixes;
        return this;
    }

    public EventNotification addIpv6PrefixesItem(String ipv6PrefixesItem)
    {
        if (this.ipv6Prefixes == null)
        {
            this.ipv6Prefixes = new ArrayList<>();
        }
        this.ipv6Prefixes.add(ipv6PrefixesItem);
        return this;
    }

    /**
     * Get ipv6Prefixes
     * 
     * @return ipv6Prefixes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IPV6_PREFIXES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getIpv6Prefixes()
    {
        return ipv6Prefixes;
    }

    @JsonProperty(JSON_PROPERTY_IPV6_PREFIXES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv6Prefixes(List<String> ipv6Prefixes)
    {
        this.ipv6Prefixes = ipv6Prefixes;
    }

    public EventNotification ipv6Addrs(List<String> ipv6Addrs)
    {

        this.ipv6Addrs = ipv6Addrs;
        return this;
    }

    public EventNotification addIpv6AddrsItem(String ipv6AddrsItem)
    {
        if (this.ipv6Addrs == null)
        {
            this.ipv6Addrs = new ArrayList<>();
        }
        this.ipv6Addrs.add(ipv6AddrsItem);
        return this;
    }

    /**
     * Get ipv6Addrs
     * 
     * @return ipv6Addrs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IPV6_ADDRS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getIpv6Addrs()
    {
        return ipv6Addrs;
    }

    @JsonProperty(JSON_PROPERTY_IPV6_ADDRS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv6Addrs(List<String> ipv6Addrs)
    {
        this.ipv6Addrs = ipv6Addrs;
    }

    public EventNotification pduSessType(String pduSessType)
    {

        this.pduSessType = pduSessType;
        return this;
    }

    /**
     * PduSessionType indicates the type of a PDU session. It shall comply with the
     * provisions defined in table 5.4.3.3-1.
     * 
     * @return pduSessType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "PduSessionType indicates the type of a PDU session. It shall comply with the provisions defined in table 5.4.3.3-1.  ")
    @JsonProperty(JSON_PROPERTY_PDU_SESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPduSessType()
    {
        return pduSessType;
    }

    @JsonProperty(JSON_PROPERTY_PDU_SESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPduSessType(String pduSessType)
    {
        this.pduSessType = pduSessType;
    }

    public EventNotification qfi(Integer qfi)
    {

        this.qfi = qfi;
        return this;
    }

    /**
     * Unsigned integer identifying a QoS flow, within the range 0 to 63. minimum: 0
     * maximum: 63
     * 
     * @return qfi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a QoS flow, within the range 0 to 63.")
    @JsonProperty(JSON_PROPERTY_QFI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getQfi()
    {
        return qfi;
    }

    @JsonProperty(JSON_PROPERTY_QFI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQfi(Integer qfi)
    {
        this.qfi = qfi;
    }

    public EventNotification appId(String appId)
    {

        this.appId = appId;
        return this;
    }

    /**
     * String providing an application identifier.
     * 
     * @return appId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String providing an application identifier.")
    @JsonProperty(JSON_PROPERTY_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAppId()
    {
        return appId;
    }

    @JsonProperty(JSON_PROPERTY_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppId(String appId)
    {
        this.appId = appId;
    }

    public EventNotification ethFlowDescs(List<EthFlowDescription> ethFlowDescs)
    {

        this.ethFlowDescs = ethFlowDescs;
        return this;
    }

    public EventNotification addEthFlowDescsItem(EthFlowDescription ethFlowDescsItem)
    {
        if (this.ethFlowDescs == null)
        {
            this.ethFlowDescs = new ArrayList<>();
        }
        this.ethFlowDescs.add(ethFlowDescsItem);
        return this;
    }

    /**
     * Descriptor(s) for non-IP traffic. It allows the encoding of multiple UL
     * and/or DL flows. Each entry of the array describes a single Ethernet flow.
     * 
     * @return ethFlowDescs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Descriptor(s) for non-IP traffic. It allows the encoding of multiple UL and/or DL flows. Each entry of the array describes a single Ethernet flow. ")
    @JsonProperty(JSON_PROPERTY_ETH_FLOW_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EthFlowDescription> getEthFlowDescs()
    {
        return ethFlowDescs;
    }

    @JsonProperty(JSON_PROPERTY_ETH_FLOW_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEthFlowDescs(List<EthFlowDescription> ethFlowDescs)
    {
        this.ethFlowDescs = ethFlowDescs;
    }

    public EventNotification ethfDescs(List<EthFlowDescription> ethfDescs)
    {

        this.ethfDescs = ethfDescs;
        return this;
    }

    public EventNotification addEthfDescsItem(EthFlowDescription ethfDescsItem)
    {
        if (this.ethfDescs == null)
        {
            this.ethfDescs = new ArrayList<>();
        }
        this.ethfDescs.add(ethfDescsItem);
        return this;
    }

    /**
     * Contains the UL and/or DL Ethernet flows. Each entry of the array describes a
     * single Ethernet flow.
     * 
     * @return ethfDescs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the UL and/or DL Ethernet flows. Each entry of the array describes a single Ethernet flow. ")
    @JsonProperty(JSON_PROPERTY_ETHF_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EthFlowDescription> getEthfDescs()
    {
        return ethfDescs;
    }

    @JsonProperty(JSON_PROPERTY_ETHF_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEthfDescs(List<EthFlowDescription> ethfDescs)
    {
        this.ethfDescs = ethfDescs;
    }

    public EventNotification flowDescs(List<String> flowDescs)
    {

        this.flowDescs = flowDescs;
        return this;
    }

    public EventNotification addFlowDescsItem(String flowDescsItem)
    {
        if (this.flowDescs == null)
        {
            this.flowDescs = new ArrayList<>();
        }
        this.flowDescs.add(flowDescsItem);
        return this;
    }

    /**
     * Descriptor(s) for IP traffic. It allows the encoding of multiple UL and/or DL
     * flows. Each entry of the array describes a single IP flow.
     * 
     * @return flowDescs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Descriptor(s) for IP traffic. It allows the encoding of multiple UL and/or DL flows. Each entry of the array describes a single IP flow. ")
    @JsonProperty(JSON_PROPERTY_FLOW_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getFlowDescs()
    {
        return flowDescs;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFlowDescs(List<String> flowDescs)
    {
        this.flowDescs = flowDescs;
    }

    public EventNotification fDescs(List<String> fDescs)
    {

        this.fDescs = fDescs;
        return this;
    }

    public EventNotification addFDescsItem(String fDescsItem)
    {
        if (this.fDescs == null)
        {
            this.fDescs = new ArrayList<>();
        }
        this.fDescs.add(fDescsItem);
        return this;
    }

    /**
     * Contains the UL and/or DL IP flows. Each entry of the array describes a
     * single IP flow.
     * 
     * @return fDescs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the UL and/or DL IP flows. Each entry of the array describes a single IP flow. ")
    @JsonProperty(JSON_PROPERTY_F_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getfDescs()
    {
        return fDescs;
    }

    @JsonProperty(JSON_PROPERTY_F_DESCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setfDescs(List<String> fDescs)
    {
        this.fDescs = fDescs;
    }

    public EventNotification dnn(String dnn)
    {

        this.dnn = dnn;
        return this;
    }

    /**
     * String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;
     * it shall contain either a DNN Network Identifier, or a full DNN with both the
     * Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003
     * clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are
     * separated by dots (e.g. \&quot;Label1.Label2.Label3\&quot;).
     * 
     * @return dnn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). ")
    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnn()
    {
        return dnn;
    }

    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnn(String dnn)
    {
        this.dnn = dnn;
    }

    public EventNotification snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public EventNotification ulDelays(List<Integer> ulDelays)
    {

        this.ulDelays = ulDelays;
        return this;
    }

    public EventNotification addUlDelaysItem(Integer ulDelaysItem)
    {
        if (this.ulDelays == null)
        {
            this.ulDelays = new ArrayList<>();
        }
        this.ulDelays.add(ulDelaysItem);
        return this;
    }

    /**
     * Get ulDelays
     * 
     * @return ulDelays
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UL_DELAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Integer> getUlDelays()
    {
        return ulDelays;
    }

    @JsonProperty(JSON_PROPERTY_UL_DELAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUlDelays(List<Integer> ulDelays)
    {
        this.ulDelays = ulDelays;
    }

    public EventNotification dlDelays(List<Integer> dlDelays)
    {

        this.dlDelays = dlDelays;
        return this;
    }

    public EventNotification addDlDelaysItem(Integer dlDelaysItem)
    {
        if (this.dlDelays == null)
        {
            this.dlDelays = new ArrayList<>();
        }
        this.dlDelays.add(dlDelaysItem);
        return this;
    }

    /**
     * Get dlDelays
     * 
     * @return dlDelays
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DL_DELAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Integer> getDlDelays()
    {
        return dlDelays;
    }

    @JsonProperty(JSON_PROPERTY_DL_DELAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDlDelays(List<Integer> dlDelays)
    {
        this.dlDelays = dlDelays;
    }

    public EventNotification rtDelays(List<Integer> rtDelays)
    {

        this.rtDelays = rtDelays;
        return this;
    }

    public EventNotification addRtDelaysItem(Integer rtDelaysItem)
    {
        if (this.rtDelays == null)
        {
            this.rtDelays = new ArrayList<>();
        }
        this.rtDelays.add(rtDelaysItem);
        return this;
    }

    /**
     * Get rtDelays
     * 
     * @return rtDelays
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RT_DELAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Integer> getRtDelays()
    {
        return rtDelays;
    }

    @JsonProperty(JSON_PROPERTY_RT_DELAYS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRtDelays(List<Integer> rtDelays)
    {
        this.rtDelays = rtDelays;
    }

    public EventNotification timeWindow(TimeWindow timeWindow)
    {

        this.timeWindow = timeWindow;
        return this;
    }

    /**
     * Get timeWindow
     * 
     * @return timeWindow
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TIME_WINDOW)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TimeWindow getTimeWindow()
    {
        return timeWindow;
    }

    @JsonProperty(JSON_PROPERTY_TIME_WINDOW)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimeWindow(TimeWindow timeWindow)
    {
        this.timeWindow = timeWindow;
    }

    public EventNotification smNasFromUe(SmNasFromUe smNasFromUe)
    {

        this.smNasFromUe = smNasFromUe;
        return this;
    }

    /**
     * Get smNasFromUe
     * 
     * @return smNasFromUe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SM_NAS_FROM_UE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SmNasFromUe getSmNasFromUe()
    {
        return smNasFromUe;
    }

    @JsonProperty(JSON_PROPERTY_SM_NAS_FROM_UE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmNasFromUe(SmNasFromUe smNasFromUe)
    {
        this.smNasFromUe = smNasFromUe;
    }

    public EventNotification smNasFromSmf(SmNasFromSmf smNasFromSmf)
    {

        this.smNasFromSmf = smNasFromSmf;
        return this;
    }

    /**
     * Get smNasFromSmf
     * 
     * @return smNasFromSmf
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SM_NAS_FROM_SMF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SmNasFromSmf getSmNasFromSmf()
    {
        return smNasFromSmf;
    }

    @JsonProperty(JSON_PROPERTY_SM_NAS_FROM_SMF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmNasFromSmf(SmNasFromSmf smNasFromSmf)
    {
        this.smNasFromSmf = smNasFromSmf;
    }

    public EventNotification upRedTrans(Boolean upRedTrans)
    {

        this.upRedTrans = upRedTrans;
        return this;
    }

    /**
     * Indicates whether the redundant transmission is setup or terminated. Set to
     * \&quot;true\&quot; if the redundant transmission is setup, otherwise set to
     * \&quot;false\&quot; if the redundant transmission is terminated. Default
     * value is set to \&quot;false\&quot;.
     * 
     * @return upRedTrans
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether the redundant transmission is setup or terminated. Set to \"true\" if  the redundant transmission is setup, otherwise set to \"false\" if the redundant  transmission is terminated. Default value is set to \"false\". ")
    @JsonProperty(JSON_PROPERTY_UP_RED_TRANS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getUpRedTrans()
    {
        return upRedTrans;
    }

    @JsonProperty(JSON_PROPERTY_UP_RED_TRANS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpRedTrans(Boolean upRedTrans)
    {
        this.upRedTrans = upRedTrans;
    }

    public EventNotification ssId(String ssId)
    {

        this.ssId = ssId;
        return this;
    }

    /**
     * Get ssId
     * 
     * @return ssId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSsId()
    {
        return ssId;
    }

    @JsonProperty(JSON_PROPERTY_SS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSsId(String ssId)
    {
        this.ssId = ssId;
    }

    public EventNotification bssId(String bssId)
    {

        this.bssId = bssId;
        return this;
    }

    /**
     * Get bssId
     * 
     * @return bssId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_BSS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getBssId()
    {
        return bssId;
    }

    @JsonProperty(JSON_PROPERTY_BSS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBssId(String bssId)
    {
        this.bssId = bssId;
    }

    public EventNotification startWlan(OffsetDateTime startWlan)
    {

        this.startWlan = startWlan;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return startWlan
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_START_WLAN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getStartWlan()
    {
        return startWlan;
    }

    @JsonProperty(JSON_PROPERTY_START_WLAN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStartWlan(OffsetDateTime startWlan)
    {
        this.startWlan = startWlan;
    }

    public EventNotification endWlan(OffsetDateTime endWlan)
    {

        this.endWlan = endWlan;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return endWlan
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_END_WLAN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getEndWlan()
    {
        return endWlan;
    }

    @JsonProperty(JSON_PROPERTY_END_WLAN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEndWlan(OffsetDateTime endWlan)
    {
        this.endWlan = endWlan;
    }

    public EventNotification pduSessInfos(List<PduSessionInformation> pduSessInfos)
    {

        this.pduSessInfos = pduSessInfos;
        return this;
    }

    public EventNotification addPduSessInfosItem(PduSessionInformation pduSessInfosItem)
    {
        if (this.pduSessInfos == null)
        {
            this.pduSessInfos = new ArrayList<>();
        }
        this.pduSessInfos.add(pduSessInfosItem);
        return this;
    }

    /**
     * Get pduSessInfos
     * 
     * @return pduSessInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PDU_SESS_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PduSessionInformation> getPduSessInfos()
    {
        return pduSessInfos;
    }

    @JsonProperty(JSON_PROPERTY_PDU_SESS_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPduSessInfos(List<PduSessionInformation> pduSessInfos)
    {
        this.pduSessInfos = pduSessInfos;
    }

    public EventNotification upfInfo(UpfInformation upfInfo)
    {

        this.upfInfo = upfInfo;
        return this;
    }

    /**
     * Get upfInfo
     * 
     * @return upfInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UPF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UpfInformation getUpfInfo()
    {
        return upfInfo;
    }

    @JsonProperty(JSON_PROPERTY_UPF_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpfInfo(UpfInformation upfInfo)
    {
        this.upfInfo = upfInfo;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        EventNotification eventNotification = (EventNotification) o;
        return Objects.equals(this.event, eventNotification.event) && Objects.equals(this.timeStamp, eventNotification.timeStamp)
               && Objects.equals(this.supi, eventNotification.supi) && Objects.equals(this.gpsi, eventNotification.gpsi)
               && Objects.equals(this.ueIpAddr, eventNotification.ueIpAddr) && Objects.equals(this.transacInfos, eventNotification.transacInfos)
               && Objects.equals(this.sourceDnai, eventNotification.sourceDnai) && Objects.equals(this.targetDnai, eventNotification.targetDnai)
               && Objects.equals(this.dnaiChgType, eventNotification.dnaiChgType) && Objects.equals(this.sourceUeIpv4Addr, eventNotification.sourceUeIpv4Addr)
               && Objects.equals(this.sourceUeIpv6Prefix, eventNotification.sourceUeIpv6Prefix)
               && Objects.equals(this.targetUeIpv4Addr, eventNotification.targetUeIpv4Addr)
               && Objects.equals(this.targetUeIpv6Prefix, eventNotification.targetUeIpv6Prefix)
               && equalsNullable(this.sourceTraRouting, eventNotification.sourceTraRouting)
               && equalsNullable(this.targetTraRouting, eventNotification.targetTraRouting) && Objects.equals(this.ueMac, eventNotification.ueMac)
               && Objects.equals(this.adIpv4Addr, eventNotification.adIpv4Addr) && Objects.equals(this.adIpv6Prefix, eventNotification.adIpv6Prefix)
               && Objects.equals(this.reIpv4Addr, eventNotification.reIpv4Addr) && Objects.equals(this.reIpv6Prefix, eventNotification.reIpv6Prefix)
               && Objects.equals(this.plmnId, eventNotification.plmnId) && Objects.equals(this.accType, eventNotification.accType)
               && Objects.equals(this.pduSeId, eventNotification.pduSeId) && Objects.equals(this.ratType, eventNotification.ratType)
               && Objects.equals(this.dddStatus, eventNotification.dddStatus) && Objects.equals(this.dddTraDescriptor, eventNotification.dddTraDescriptor)
               && Objects.equals(this.maxWaitTime, eventNotification.maxWaitTime) && Objects.equals(this.commFailure, eventNotification.commFailure)
               && Objects.equals(this.ipv4Addr, eventNotification.ipv4Addr) && Objects.equals(this.ipv6Prefixes, eventNotification.ipv6Prefixes)
               && Objects.equals(this.ipv6Addrs, eventNotification.ipv6Addrs) && Objects.equals(this.pduSessType, eventNotification.pduSessType)
               && Objects.equals(this.qfi, eventNotification.qfi) && Objects.equals(this.appId, eventNotification.appId)
               && Objects.equals(this.ethFlowDescs, eventNotification.ethFlowDescs) && Objects.equals(this.ethfDescs, eventNotification.ethfDescs)
               && Objects.equals(this.flowDescs, eventNotification.flowDescs) && Objects.equals(this.fDescs, eventNotification.fDescs)
               && Objects.equals(this.dnn, eventNotification.dnn) && Objects.equals(this.snssai, eventNotification.snssai)
               && Objects.equals(this.ulDelays, eventNotification.ulDelays) && Objects.equals(this.dlDelays, eventNotification.dlDelays)
               && Objects.equals(this.rtDelays, eventNotification.rtDelays) && Objects.equals(this.timeWindow, eventNotification.timeWindow)
               && Objects.equals(this.smNasFromUe, eventNotification.smNasFromUe) && Objects.equals(this.smNasFromSmf, eventNotification.smNasFromSmf)
               && Objects.equals(this.upRedTrans, eventNotification.upRedTrans) && Objects.equals(this.ssId, eventNotification.ssId)
               && Objects.equals(this.bssId, eventNotification.bssId) && Objects.equals(this.startWlan, eventNotification.startWlan)
               && Objects.equals(this.endWlan, eventNotification.endWlan) && Objects.equals(this.pduSessInfos, eventNotification.pduSessInfos)
               && Objects.equals(this.upfInfo, eventNotification.upfInfo);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(event,
                            timeStamp,
                            supi,
                            gpsi,
                            ueIpAddr,
                            transacInfos,
                            sourceDnai,
                            targetDnai,
                            dnaiChgType,
                            sourceUeIpv4Addr,
                            sourceUeIpv6Prefix,
                            targetUeIpv4Addr,
                            targetUeIpv6Prefix,
                            hashCodeNullable(sourceTraRouting),
                            hashCodeNullable(targetTraRouting),
                            ueMac,
                            adIpv4Addr,
                            adIpv6Prefix,
                            reIpv4Addr,
                            reIpv6Prefix,
                            plmnId,
                            accType,
                            pduSeId,
                            ratType,
                            dddStatus,
                            dddTraDescriptor,
                            maxWaitTime,
                            commFailure,
                            ipv4Addr,
                            ipv6Prefixes,
                            ipv6Addrs,
                            pduSessType,
                            qfi,
                            appId,
                            ethFlowDescs,
                            ethfDescs,
                            flowDescs,
                            fDescs,
                            dnn,
                            snssai,
                            ulDelays,
                            dlDelays,
                            rtDelays,
                            timeWindow,
                            smNasFromUe,
                            smNasFromSmf,
                            upRedTrans,
                            ssId,
                            bssId,
                            startWlan,
                            endWlan,
                            pduSessInfos,
                            upfInfo);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EventNotification {\n");
        sb.append("    event: ").append(toIndentedString(event)).append("\n");
        sb.append("    timeStamp: ").append(toIndentedString(timeStamp)).append("\n");
        sb.append("    supi: ").append(toIndentedString(supi)).append("\n");
        sb.append("    gpsi: ").append(toIndentedString(gpsi)).append("\n");
        sb.append("    ueIpAddr: ").append(toIndentedString(ueIpAddr)).append("\n");
        sb.append("    transacInfos: ").append(toIndentedString(transacInfos)).append("\n");
        sb.append("    sourceDnai: ").append(toIndentedString(sourceDnai)).append("\n");
        sb.append("    targetDnai: ").append(toIndentedString(targetDnai)).append("\n");
        sb.append("    dnaiChgType: ").append(toIndentedString(dnaiChgType)).append("\n");
        sb.append("    sourceUeIpv4Addr: ").append(toIndentedString(sourceUeIpv4Addr)).append("\n");
        sb.append("    sourceUeIpv6Prefix: ").append(toIndentedString(sourceUeIpv6Prefix)).append("\n");
        sb.append("    targetUeIpv4Addr: ").append(toIndentedString(targetUeIpv4Addr)).append("\n");
        sb.append("    targetUeIpv6Prefix: ").append(toIndentedString(targetUeIpv6Prefix)).append("\n");
        sb.append("    sourceTraRouting: ").append(toIndentedString(sourceTraRouting)).append("\n");
        sb.append("    targetTraRouting: ").append(toIndentedString(targetTraRouting)).append("\n");
        sb.append("    ueMac: ").append(toIndentedString(ueMac)).append("\n");
        sb.append("    adIpv4Addr: ").append(toIndentedString(adIpv4Addr)).append("\n");
        sb.append("    adIpv6Prefix: ").append(toIndentedString(adIpv6Prefix)).append("\n");
        sb.append("    reIpv4Addr: ").append(toIndentedString(reIpv4Addr)).append("\n");
        sb.append("    reIpv6Prefix: ").append(toIndentedString(reIpv6Prefix)).append("\n");
        sb.append("    plmnId: ").append(toIndentedString(plmnId)).append("\n");
        sb.append("    accType: ").append(toIndentedString(accType)).append("\n");
        sb.append("    pduSeId: ").append(toIndentedString(pduSeId)).append("\n");
        sb.append("    ratType: ").append(toIndentedString(ratType)).append("\n");
        sb.append("    dddStatus: ").append(toIndentedString(dddStatus)).append("\n");
        sb.append("    dddTraDescriptor: ").append(toIndentedString(dddTraDescriptor)).append("\n");
        sb.append("    maxWaitTime: ").append(toIndentedString(maxWaitTime)).append("\n");
        sb.append("    commFailure: ").append(toIndentedString(commFailure)).append("\n");
        sb.append("    ipv4Addr: ").append(toIndentedString(ipv4Addr)).append("\n");
        sb.append("    ipv6Prefixes: ").append(toIndentedString(ipv6Prefixes)).append("\n");
        sb.append("    ipv6Addrs: ").append(toIndentedString(ipv6Addrs)).append("\n");
        sb.append("    pduSessType: ").append(toIndentedString(pduSessType)).append("\n");
        sb.append("    qfi: ").append(toIndentedString(qfi)).append("\n");
        sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
        sb.append("    ethFlowDescs: ").append(toIndentedString(ethFlowDescs)).append("\n");
        sb.append("    ethfDescs: ").append(toIndentedString(ethfDescs)).append("\n");
        sb.append("    flowDescs: ").append(toIndentedString(flowDescs)).append("\n");
        sb.append("    fDescs: ").append(toIndentedString(fDescs)).append("\n");
        sb.append("    dnn: ").append(toIndentedString(dnn)).append("\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    ulDelays: ").append(toIndentedString(ulDelays)).append("\n");
        sb.append("    dlDelays: ").append(toIndentedString(dlDelays)).append("\n");
        sb.append("    rtDelays: ").append(toIndentedString(rtDelays)).append("\n");
        sb.append("    timeWindow: ").append(toIndentedString(timeWindow)).append("\n");
        sb.append("    smNasFromUe: ").append(toIndentedString(smNasFromUe)).append("\n");
        sb.append("    smNasFromSmf: ").append(toIndentedString(smNasFromSmf)).append("\n");
        sb.append("    upRedTrans: ").append(toIndentedString(upRedTrans)).append("\n");
        sb.append("    ssId: ").append(toIndentedString(ssId)).append("\n");
        sb.append("    bssId: ").append(toIndentedString(bssId)).append("\n");
        sb.append("    startWlan: ").append(toIndentedString(startWlan)).append("\n");
        sb.append("    endWlan: ").append(toIndentedString(endWlan)).append("\n");
        sb.append("    pduSessInfos: ").append(toIndentedString(pduSessInfos)).append("\n");
        sb.append("    upfInfo: ").append(toIndentedString(upfInfo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
