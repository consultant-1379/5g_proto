/*
 * Namf_EventExposure
 * AMF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29518.namf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.DddTrafficDescriptor;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the Traffic Descriptor
 */
@ApiModel(description = "Represents the Traffic Descriptor")
@JsonPropertyOrder({ TrafficDescriptor.JSON_PROPERTY_DNN,
                     TrafficDescriptor.JSON_PROPERTY_S_NSSAI,
                     TrafficDescriptor.JSON_PROPERTY_DDD_TRAFFIC_DESCRIPTOR_LIST })
public class TrafficDescriptor
{
    public static final String JSON_PROPERTY_DNN = "dnn";
    private String dnn;

    public static final String JSON_PROPERTY_S_NSSAI = "sNssai";
    private Snssai sNssai;

    public static final String JSON_PROPERTY_DDD_TRAFFIC_DESCRIPTOR_LIST = "dddTrafficDescriptorList";
    private List<DddTrafficDescriptor> dddTrafficDescriptorList = null;

    public TrafficDescriptor()
    {
    }

    public TrafficDescriptor dnn(String dnn)
    {

        this.dnn = dnn;
        return this;
    }

    /**
     * String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;
     * it shall contain either a DNN Network Identifier, or a full DNN with both the
     * Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003
     * clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are
     * separated by dots (e.g. \&quot;Label1.Label2.Label3\&quot;).
     * 
     * @return dnn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). ")
    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnn()
    {
        return dnn;
    }

    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnn(String dnn)
    {
        this.dnn = dnn;
    }

    public TrafficDescriptor sNssai(Snssai sNssai)
    {

        this.sNssai = sNssai;
        return this;
    }

    /**
     * Get sNssai
     * 
     * @return sNssai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_S_NSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Snssai getsNssai()
    {
        return sNssai;
    }

    @JsonProperty(JSON_PROPERTY_S_NSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setsNssai(Snssai sNssai)
    {
        this.sNssai = sNssai;
    }

    public TrafficDescriptor dddTrafficDescriptorList(List<DddTrafficDescriptor> dddTrafficDescriptorList)
    {

        this.dddTrafficDescriptorList = dddTrafficDescriptorList;
        return this;
    }

    public TrafficDescriptor addDddTrafficDescriptorListItem(DddTrafficDescriptor dddTrafficDescriptorListItem)
    {
        if (this.dddTrafficDescriptorList == null)
        {
            this.dddTrafficDescriptorList = new ArrayList<>();
        }
        this.dddTrafficDescriptorList.add(dddTrafficDescriptorListItem);
        return this;
    }

    /**
     * Get dddTrafficDescriptorList
     * 
     * @return dddTrafficDescriptorList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DDD_TRAFFIC_DESCRIPTOR_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<DddTrafficDescriptor> getDddTrafficDescriptorList()
    {
        return dddTrafficDescriptorList;
    }

    @JsonProperty(JSON_PROPERTY_DDD_TRAFFIC_DESCRIPTOR_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDddTrafficDescriptorList(List<DddTrafficDescriptor> dddTrafficDescriptorList)
    {
        this.dddTrafficDescriptorList = dddTrafficDescriptorList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TrafficDescriptor trafficDescriptor = (TrafficDescriptor) o;
        return Objects.equals(this.dnn, trafficDescriptor.dnn) && Objects.equals(this.sNssai, trafficDescriptor.sNssai)
               && Objects.equals(this.dddTrafficDescriptorList, trafficDescriptor.dddTrafficDescriptorList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(dnn, sNssai, dddTrafficDescriptorList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TrafficDescriptor {\n");
        sb.append("    dnn: ").append(toIndentedString(dnn)).append("\n");
        sb.append("    sNssai: ").append(toIndentedString(sNssai)).append("\n");
        sb.append("    dddTrafficDescriptorList: ").append(toIndentedString(dddTrafficDescriptorList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
