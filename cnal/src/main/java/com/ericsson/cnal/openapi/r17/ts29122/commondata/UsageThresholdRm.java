/*
 * TS 29.122 Common Data Types
 * Data types applicable to several APIs.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29122.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the same as the UsageThreshold data type but with the
 * nullable:true property.
 */
@ApiModel(description = "Represents the same as the UsageThreshold data type but with the nullable:true property.")
@JsonPropertyOrder({ UsageThresholdRm.JSON_PROPERTY_DURATION,
                     UsageThresholdRm.JSON_PROPERTY_TOTAL_VOLUME,
                     UsageThresholdRm.JSON_PROPERTY_DOWNLINK_VOLUME,
                     UsageThresholdRm.JSON_PROPERTY_UPLINK_VOLUME })
public class UsageThresholdRm
{
    public static final String JSON_PROPERTY_DURATION = "duration";
    private JsonNullable<Integer> duration = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_TOTAL_VOLUME = "totalVolume";
    private JsonNullable<Long> totalVolume = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_DOWNLINK_VOLUME = "downlinkVolume";
    private JsonNullable<Long> downlinkVolume = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_UPLINK_VOLUME = "uplinkVolume";
    private JsonNullable<Long> uplinkVolume = JsonNullable.<Long>undefined();

    public UsageThresholdRm()
    {
    }

    public UsageThresholdRm duration(Integer duration)
    {
        this.duration = JsonNullable.<Integer>of(duration);

        return this;
    }

    /**
     * Unsigned integer identifying a period of time in units of seconds with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return duration
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a period of time in units of seconds with \"nullable=true\" property.")
    @JsonIgnore

    public Integer getDuration()
    {
        return duration.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getDuration_JsonNullable()
    {
        return duration;
    }

    @JsonProperty(JSON_PROPERTY_DURATION)
    public void setDuration_JsonNullable(JsonNullable<Integer> duration)
    {
        this.duration = duration;
    }

    public void setDuration(Integer duration)
    {
        this.duration = JsonNullable.<Integer>of(duration);
    }

    public UsageThresholdRm totalVolume(Long totalVolume)
    {
        this.totalVolume = JsonNullable.<Long>of(totalVolume);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return totalVolume
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getTotalVolume()
    {
        return totalVolume.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_VOLUME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getTotalVolume_JsonNullable()
    {
        return totalVolume;
    }

    @JsonProperty(JSON_PROPERTY_TOTAL_VOLUME)
    public void setTotalVolume_JsonNullable(JsonNullable<Long> totalVolume)
    {
        this.totalVolume = totalVolume;
    }

    public void setTotalVolume(Long totalVolume)
    {
        this.totalVolume = JsonNullable.<Long>of(totalVolume);
    }

    public UsageThresholdRm downlinkVolume(Long downlinkVolume)
    {
        this.downlinkVolume = JsonNullable.<Long>of(downlinkVolume);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return downlinkVolume
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getDownlinkVolume()
    {
        return downlinkVolume.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_DOWNLINK_VOLUME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getDownlinkVolume_JsonNullable()
    {
        return downlinkVolume;
    }

    @JsonProperty(JSON_PROPERTY_DOWNLINK_VOLUME)
    public void setDownlinkVolume_JsonNullable(JsonNullable<Long> downlinkVolume)
    {
        this.downlinkVolume = downlinkVolume;
    }

    public void setDownlinkVolume(Long downlinkVolume)
    {
        this.downlinkVolume = JsonNullable.<Long>of(downlinkVolume);
    }

    public UsageThresholdRm uplinkVolume(Long uplinkVolume)
    {
        this.uplinkVolume = JsonNullable.<Long>of(uplinkVolume);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return uplinkVolume
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getUplinkVolume()
    {
        return uplinkVolume.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_UPLINK_VOLUME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getUplinkVolume_JsonNullable()
    {
        return uplinkVolume;
    }

    @JsonProperty(JSON_PROPERTY_UPLINK_VOLUME)
    public void setUplinkVolume_JsonNullable(JsonNullable<Long> uplinkVolume)
    {
        this.uplinkVolume = uplinkVolume;
    }

    public void setUplinkVolume(Long uplinkVolume)
    {
        this.uplinkVolume = JsonNullable.<Long>of(uplinkVolume);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UsageThresholdRm usageThresholdRm = (UsageThresholdRm) o;
        return equalsNullable(this.duration, usageThresholdRm.duration) && equalsNullable(this.totalVolume, usageThresholdRm.totalVolume)
               && equalsNullable(this.downlinkVolume, usageThresholdRm.downlinkVolume) && equalsNullable(this.uplinkVolume, usageThresholdRm.uplinkVolume);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(hashCodeNullable(duration), hashCodeNullable(totalVolume), hashCodeNullable(downlinkVolume), hashCodeNullable(uplinkVolume));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UsageThresholdRm {\n");
        sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
        sb.append("    totalVolume: ").append(toIndentedString(totalVolume)).append("\n");
        sb.append("    downlinkVolume: ").append(toIndentedString(downlinkVolume)).append("\n");
        sb.append("    uplinkVolume: ").append(toIndentedString(uplinkVolume)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
