/*
 * Namf_EventExposure
 * AMF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29518.namf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PresenceInfo;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.ExtSnssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes an event to be subscribed
 */
@ApiModel(description = "Describes an event to be subscribed")
@JsonPropertyOrder({ AmfEvent.JSON_PROPERTY_TYPE,
                     AmfEvent.JSON_PROPERTY_IMMEDIATE_FLAG,
                     AmfEvent.JSON_PROPERTY_AREA_LIST,
                     AmfEvent.JSON_PROPERTY_LOCATION_FILTER_LIST,
                     AmfEvent.JSON_PROPERTY_REF_ID,
                     AmfEvent.JSON_PROPERTY_TRAFFIC_DESCRIPTOR_LIST,
                     AmfEvent.JSON_PROPERTY_REPORT_UE_REACHABLE,
                     AmfEvent.JSON_PROPERTY_REACHABILITY_FILTER,
                     AmfEvent.JSON_PROPERTY_UDM_DETECT_IND,
                     AmfEvent.JSON_PROPERTY_MAX_REPORTS,
                     AmfEvent.JSON_PROPERTY_PRESENCE_INFO_LIST,
                     AmfEvent.JSON_PROPERTY_MAX_RESPONSE_TIME,
                     AmfEvent.JSON_PROPERTY_TARGET_AREA,
                     AmfEvent.JSON_PROPERTY_SNSSAI_FILTER,
                     AmfEvent.JSON_PROPERTY_UE_IN_AREA_FILTER,
                     AmfEvent.JSON_PROPERTY_MIN_INTERVAL,
                     AmfEvent.JSON_PROPERTY_NEXT_REPORT,
                     AmfEvent.JSON_PROPERTY_IDLE_STATUS_IND,
                     AmfEvent.JSON_PROPERTY_DISPERSION_AREA })
public class AmfEvent
{
    public static final String JSON_PROPERTY_TYPE = "type";
    private String type;

    public static final String JSON_PROPERTY_IMMEDIATE_FLAG = "immediateFlag";
    private Boolean immediateFlag = false;

    public static final String JSON_PROPERTY_AREA_LIST = "areaList";
    private List<AmfEventArea> areaList = null;

    public static final String JSON_PROPERTY_LOCATION_FILTER_LIST = "locationFilterList";
    private List<String> locationFilterList = null;

    public static final String JSON_PROPERTY_REF_ID = "refId";
    private Integer refId;

    public static final String JSON_PROPERTY_TRAFFIC_DESCRIPTOR_LIST = "trafficDescriptorList";
    private List<TrafficDescriptor> trafficDescriptorList = null;

    public static final String JSON_PROPERTY_REPORT_UE_REACHABLE = "reportUeReachable";
    private Boolean reportUeReachable = false;

    public static final String JSON_PROPERTY_REACHABILITY_FILTER = "reachabilityFilter";
    private String reachabilityFilter;

    public static final String JSON_PROPERTY_UDM_DETECT_IND = "udmDetectInd";
    private Boolean udmDetectInd = false;

    public static final String JSON_PROPERTY_MAX_REPORTS = "maxReports";
    private Integer maxReports;

    public static final String JSON_PROPERTY_PRESENCE_INFO_LIST = "presenceInfoList";
    private Map<String, PresenceInfo> presenceInfoList = null;

    public static final String JSON_PROPERTY_MAX_RESPONSE_TIME = "maxResponseTime";
    private Integer maxResponseTime;

    public static final String JSON_PROPERTY_TARGET_AREA = "targetArea";
    private TargetArea targetArea;

    public static final String JSON_PROPERTY_SNSSAI_FILTER = "snssaiFilter";
    private List<ExtSnssai> snssaiFilter = null;

    public static final String JSON_PROPERTY_UE_IN_AREA_FILTER = "ueInAreaFilter";
    private UeInAreaFilter ueInAreaFilter;

    public static final String JSON_PROPERTY_MIN_INTERVAL = "minInterval";
    private Integer minInterval;

    public static final String JSON_PROPERTY_NEXT_REPORT = "nextReport";
    private OffsetDateTime nextReport;

    public static final String JSON_PROPERTY_IDLE_STATUS_IND = "idleStatusInd";
    private Boolean idleStatusInd = false;

    public static final String JSON_PROPERTY_DISPERSION_AREA = "dispersionArea";
    private DispersionArea dispersionArea;

    public AmfEvent()
    {
    }

    public AmfEvent type(String type)
    {

        this.type = type;
        return this;
    }

    /**
     * Describes the supported event types of Namf_EventExposure Service
     * 
     * @return type
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Describes the supported event types of Namf_EventExposure Service")
    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getType()
    {
        return type;
    }

    @JsonProperty(JSON_PROPERTY_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setType(String type)
    {
        this.type = type;
    }

    public AmfEvent immediateFlag(Boolean immediateFlag)
    {

        this.immediateFlag = immediateFlag;
        return this;
    }

    /**
     * Get immediateFlag
     * 
     * @return immediateFlag
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IMMEDIATE_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getImmediateFlag()
    {
        return immediateFlag;
    }

    @JsonProperty(JSON_PROPERTY_IMMEDIATE_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImmediateFlag(Boolean immediateFlag)
    {
        this.immediateFlag = immediateFlag;
    }

    public AmfEvent areaList(List<AmfEventArea> areaList)
    {

        this.areaList = areaList;
        return this;
    }

    public AmfEvent addAreaListItem(AmfEventArea areaListItem)
    {
        if (this.areaList == null)
        {
            this.areaList = new ArrayList<>();
        }
        this.areaList.add(areaListItem);
        return this;
    }

    /**
     * Get areaList
     * 
     * @return areaList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_AREA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<AmfEventArea> getAreaList()
    {
        return areaList;
    }

    @JsonProperty(JSON_PROPERTY_AREA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAreaList(List<AmfEventArea> areaList)
    {
        this.areaList = areaList;
    }

    public AmfEvent locationFilterList(List<String> locationFilterList)
    {

        this.locationFilterList = locationFilterList;
        return this;
    }

    public AmfEvent addLocationFilterListItem(String locationFilterListItem)
    {
        if (this.locationFilterList == null)
        {
            this.locationFilterList = new ArrayList<>();
        }
        this.locationFilterList.add(locationFilterListItem);
        return this;
    }

    /**
     * Get locationFilterList
     * 
     * @return locationFilterList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LOCATION_FILTER_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getLocationFilterList()
    {
        return locationFilterList;
    }

    @JsonProperty(JSON_PROPERTY_LOCATION_FILTER_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLocationFilterList(List<String> locationFilterList)
    {
        this.locationFilterList = locationFilterList;
    }

    public AmfEvent refId(Integer refId)
    {

        this.refId = refId;
        return this;
    }

    /**
     * Get refId
     * 
     * @return refId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getRefId()
    {
        return refId;
    }

    @JsonProperty(JSON_PROPERTY_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRefId(Integer refId)
    {
        this.refId = refId;
    }

    public AmfEvent trafficDescriptorList(List<TrafficDescriptor> trafficDescriptorList)
    {

        this.trafficDescriptorList = trafficDescriptorList;
        return this;
    }

    public AmfEvent addTrafficDescriptorListItem(TrafficDescriptor trafficDescriptorListItem)
    {
        if (this.trafficDescriptorList == null)
        {
            this.trafficDescriptorList = new ArrayList<>();
        }
        this.trafficDescriptorList.add(trafficDescriptorListItem);
        return this;
    }

    /**
     * Get trafficDescriptorList
     * 
     * @return trafficDescriptorList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TRAFFIC_DESCRIPTOR_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<TrafficDescriptor> getTrafficDescriptorList()
    {
        return trafficDescriptorList;
    }

    @JsonProperty(JSON_PROPERTY_TRAFFIC_DESCRIPTOR_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTrafficDescriptorList(List<TrafficDescriptor> trafficDescriptorList)
    {
        this.trafficDescriptorList = trafficDescriptorList;
    }

    public AmfEvent reportUeReachable(Boolean reportUeReachable)
    {

        this.reportUeReachable = reportUeReachable;
        return this;
    }

    /**
     * Get reportUeReachable
     * 
     * @return reportUeReachable
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_REPORT_UE_REACHABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getReportUeReachable()
    {
        return reportUeReachable;
    }

    @JsonProperty(JSON_PROPERTY_REPORT_UE_REACHABLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReportUeReachable(Boolean reportUeReachable)
    {
        this.reportUeReachable = reportUeReachable;
    }

    public AmfEvent reachabilityFilter(String reachabilityFilter)
    {

        this.reachabilityFilter = reachabilityFilter;
        return this;
    }

    /**
     * Event filter for REACHABILITY_REPORT event type
     * 
     * @return reachabilityFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Event filter for REACHABILITY_REPORT event type")
    @JsonProperty(JSON_PROPERTY_REACHABILITY_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReachabilityFilter()
    {
        return reachabilityFilter;
    }

    @JsonProperty(JSON_PROPERTY_REACHABILITY_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReachabilityFilter(String reachabilityFilter)
    {
        this.reachabilityFilter = reachabilityFilter;
    }

    public AmfEvent udmDetectInd(Boolean udmDetectInd)
    {

        this.udmDetectInd = udmDetectInd;
        return this;
    }

    /**
     * Get udmDetectInd
     * 
     * @return udmDetectInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UDM_DETECT_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getUdmDetectInd()
    {
        return udmDetectInd;
    }

    @JsonProperty(JSON_PROPERTY_UDM_DETECT_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUdmDetectInd(Boolean udmDetectInd)
    {
        this.udmDetectInd = udmDetectInd;
    }

    public AmfEvent maxReports(Integer maxReports)
    {

        this.maxReports = maxReports;
        return this;
    }

    /**
     * Get maxReports
     * 
     * @return maxReports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MAX_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxReports()
    {
        return maxReports;
    }

    @JsonProperty(JSON_PROPERTY_MAX_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxReports(Integer maxReports)
    {
        this.maxReports = maxReports;
    }

    public AmfEvent presenceInfoList(Map<String, PresenceInfo> presenceInfoList)
    {

        this.presenceInfoList = presenceInfoList;
        return this;
    }

    public AmfEvent putPresenceInfoListItem(String key,
                                            PresenceInfo presenceInfoListItem)
    {
        if (this.presenceInfoList == null)
        {
            this.presenceInfoList = new HashMap<>();
        }
        this.presenceInfoList.put(key, presenceInfoListItem);
        return this;
    }

    /**
     * A map(list of key-value pairs) where praId serves as key.
     * 
     * @return presenceInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map(list of key-value pairs) where praId serves as key.")
    @JsonProperty(JSON_PROPERTY_PRESENCE_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, PresenceInfo> getPresenceInfoList()
    {
        return presenceInfoList;
    }

    @JsonProperty(JSON_PROPERTY_PRESENCE_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPresenceInfoList(Map<String, PresenceInfo> presenceInfoList)
    {
        this.presenceInfoList = presenceInfoList;
    }

    public AmfEvent maxResponseTime(Integer maxResponseTime)
    {

        this.maxResponseTime = maxResponseTime;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return maxResponseTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_MAX_RESPONSE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxResponseTime()
    {
        return maxResponseTime;
    }

    @JsonProperty(JSON_PROPERTY_MAX_RESPONSE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxResponseTime(Integer maxResponseTime)
    {
        this.maxResponseTime = maxResponseTime;
    }

    public AmfEvent targetArea(TargetArea targetArea)
    {

        this.targetArea = targetArea;
        return this;
    }

    /**
     * Get targetArea
     * 
     * @return targetArea
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TARGET_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TargetArea getTargetArea()
    {
        return targetArea;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetArea(TargetArea targetArea)
    {
        this.targetArea = targetArea;
    }

    public AmfEvent snssaiFilter(List<ExtSnssai> snssaiFilter)
    {

        this.snssaiFilter = snssaiFilter;
        return this;
    }

    public AmfEvent addSnssaiFilterItem(ExtSnssai snssaiFilterItem)
    {
        if (this.snssaiFilter == null)
        {
            this.snssaiFilter = new ArrayList<>();
        }
        this.snssaiFilter.add(snssaiFilterItem);
        return this;
    }

    /**
     * Get snssaiFilter
     * 
     * @return snssaiFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ExtSnssai> getSnssaiFilter()
    {
        return snssaiFilter;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnssaiFilter(List<ExtSnssai> snssaiFilter)
    {
        this.snssaiFilter = snssaiFilter;
    }

    public AmfEvent ueInAreaFilter(UeInAreaFilter ueInAreaFilter)
    {

        this.ueInAreaFilter = ueInAreaFilter;
        return this;
    }

    /**
     * Get ueInAreaFilter
     * 
     * @return ueInAreaFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UE_IN_AREA_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UeInAreaFilter getUeInAreaFilter()
    {
        return ueInAreaFilter;
    }

    @JsonProperty(JSON_PROPERTY_UE_IN_AREA_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeInAreaFilter(UeInAreaFilter ueInAreaFilter)
    {
        this.ueInAreaFilter = ueInAreaFilter;
    }

    public AmfEvent minInterval(Integer minInterval)
    {

        this.minInterval = minInterval;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return minInterval
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_MIN_INTERVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMinInterval()
    {
        return minInterval;
    }

    @JsonProperty(JSON_PROPERTY_MIN_INTERVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMinInterval(Integer minInterval)
    {
        this.minInterval = minInterval;
    }

    public AmfEvent nextReport(OffsetDateTime nextReport)
    {

        this.nextReport = nextReport;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return nextReport
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_NEXT_REPORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getNextReport()
    {
        return nextReport;
    }

    @JsonProperty(JSON_PROPERTY_NEXT_REPORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNextReport(OffsetDateTime nextReport)
    {
        this.nextReport = nextReport;
    }

    public AmfEvent idleStatusInd(Boolean idleStatusInd)
    {

        this.idleStatusInd = idleStatusInd;
        return this;
    }

    /**
     * Get idleStatusInd
     * 
     * @return idleStatusInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IDLE_STATUS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getIdleStatusInd()
    {
        return idleStatusInd;
    }

    @JsonProperty(JSON_PROPERTY_IDLE_STATUS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIdleStatusInd(Boolean idleStatusInd)
    {
        this.idleStatusInd = idleStatusInd;
    }

    public AmfEvent dispersionArea(DispersionArea dispersionArea)
    {

        this.dispersionArea = dispersionArea;
        return this;
    }

    /**
     * Get dispersionArea
     * 
     * @return dispersionArea
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DISPERSION_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public DispersionArea getDispersionArea()
    {
        return dispersionArea;
    }

    @JsonProperty(JSON_PROPERTY_DISPERSION_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDispersionArea(DispersionArea dispersionArea)
    {
        this.dispersionArea = dispersionArea;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AmfEvent amfEvent = (AmfEvent) o;
        return Objects.equals(this.type, amfEvent.type) && Objects.equals(this.immediateFlag, amfEvent.immediateFlag)
               && Objects.equals(this.areaList, amfEvent.areaList) && Objects.equals(this.locationFilterList, amfEvent.locationFilterList)
               && Objects.equals(this.refId, amfEvent.refId) && Objects.equals(this.trafficDescriptorList, amfEvent.trafficDescriptorList)
               && Objects.equals(this.reportUeReachable, amfEvent.reportUeReachable) && Objects.equals(this.reachabilityFilter, amfEvent.reachabilityFilter)
               && Objects.equals(this.udmDetectInd, amfEvent.udmDetectInd) && Objects.equals(this.maxReports, amfEvent.maxReports)
               && Objects.equals(this.presenceInfoList, amfEvent.presenceInfoList) && Objects.equals(this.maxResponseTime, amfEvent.maxResponseTime)
               && Objects.equals(this.targetArea, amfEvent.targetArea) && Objects.equals(this.snssaiFilter, amfEvent.snssaiFilter)
               && Objects.equals(this.ueInAreaFilter, amfEvent.ueInAreaFilter) && Objects.equals(this.minInterval, amfEvent.minInterval)
               && Objects.equals(this.nextReport, amfEvent.nextReport) && Objects.equals(this.idleStatusInd, amfEvent.idleStatusInd)
               && Objects.equals(this.dispersionArea, amfEvent.dispersionArea);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(type,
                            immediateFlag,
                            areaList,
                            locationFilterList,
                            refId,
                            trafficDescriptorList,
                            reportUeReachable,
                            reachabilityFilter,
                            udmDetectInd,
                            maxReports,
                            presenceInfoList,
                            maxResponseTime,
                            targetArea,
                            snssaiFilter,
                            ueInAreaFilter,
                            minInterval,
                            nextReport,
                            idleStatusInd,
                            dispersionArea);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AmfEvent {\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    immediateFlag: ").append(toIndentedString(immediateFlag)).append("\n");
        sb.append("    areaList: ").append(toIndentedString(areaList)).append("\n");
        sb.append("    locationFilterList: ").append(toIndentedString(locationFilterList)).append("\n");
        sb.append("    refId: ").append(toIndentedString(refId)).append("\n");
        sb.append("    trafficDescriptorList: ").append(toIndentedString(trafficDescriptorList)).append("\n");
        sb.append("    reportUeReachable: ").append(toIndentedString(reportUeReachable)).append("\n");
        sb.append("    reachabilityFilter: ").append(toIndentedString(reachabilityFilter)).append("\n");
        sb.append("    udmDetectInd: ").append(toIndentedString(udmDetectInd)).append("\n");
        sb.append("    maxReports: ").append(toIndentedString(maxReports)).append("\n");
        sb.append("    presenceInfoList: ").append(toIndentedString(presenceInfoList)).append("\n");
        sb.append("    maxResponseTime: ").append(toIndentedString(maxResponseTime)).append("\n");
        sb.append("    targetArea: ").append(toIndentedString(targetArea)).append("\n");
        sb.append("    snssaiFilter: ").append(toIndentedString(snssaiFilter)).append("\n");
        sb.append("    ueInAreaFilter: ").append(toIndentedString(ueInAreaFilter)).append("\n");
        sb.append("    minInterval: ").append(toIndentedString(minInterval)).append("\n");
        sb.append("    nextReport: ").append(toIndentedString(nextReport)).append("\n");
        sb.append("    idleStatusInd: ").append(toIndentedString(idleStatusInd)).append("\n");
        sb.append("    dispersionArea: ").append(toIndentedString(dispersionArea)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
