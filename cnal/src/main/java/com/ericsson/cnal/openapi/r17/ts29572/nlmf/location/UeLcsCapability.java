/*
 * LMF Location
 * LMF Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29572.nlmf.location;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates the LCS capability supported by the UE..
 */
@ApiModel(description = "Indicates the LCS capability supported by the UE..")
@JsonPropertyOrder({ UeLcsCapability.JSON_PROPERTY_LPP_SUPPORT, UeLcsCapability.JSON_PROPERTY_CIOT_OPTIMISATION })
public class UeLcsCapability
{
    public static final String JSON_PROPERTY_LPP_SUPPORT = "lppSupport";
    private Boolean lppSupport = true;

    public static final String JSON_PROPERTY_CIOT_OPTIMISATION = "ciotOptimisation";
    private Boolean ciotOptimisation = false;

    public UeLcsCapability()
    {
    }

    public UeLcsCapability lppSupport(Boolean lppSupport)
    {

        this.lppSupport = lppSupport;
        return this;
    }

    /**
     * Get lppSupport
     * 
     * @return lppSupport
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LPP_SUPPORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getLppSupport()
    {
        return lppSupport;
    }

    @JsonProperty(JSON_PROPERTY_LPP_SUPPORT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLppSupport(Boolean lppSupport)
    {
        this.lppSupport = lppSupport;
    }

    public UeLcsCapability ciotOptimisation(Boolean ciotOptimisation)
    {

        this.ciotOptimisation = ciotOptimisation;
        return this;
    }

    /**
     * Get ciotOptimisation
     * 
     * @return ciotOptimisation
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CIOT_OPTIMISATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getCiotOptimisation()
    {
        return ciotOptimisation;
    }

    @JsonProperty(JSON_PROPERTY_CIOT_OPTIMISATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCiotOptimisation(Boolean ciotOptimisation)
    {
        this.ciotOptimisation = ciotOptimisation;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UeLcsCapability ueLcsCapability = (UeLcsCapability) o;
        return Objects.equals(this.lppSupport, ueLcsCapability.lppSupport) && Objects.equals(this.ciotOptimisation, ueLcsCapability.ciotOptimisation);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(lppSupport, ciotOptimisation);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UeLcsCapability {\n");
        sb.append("    lppSupport: ").append(toIndentedString(lppSupport)).append("\n");
        sb.append("    ciotOptimisation: ").append(toIndentedString(ciotOptimisation)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
