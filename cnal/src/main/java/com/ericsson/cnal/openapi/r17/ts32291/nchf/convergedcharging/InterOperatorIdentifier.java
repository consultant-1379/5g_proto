/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 3.1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts32291.nchf.convergedcharging;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * InterOperatorIdentifier
 */
@JsonPropertyOrder({ InterOperatorIdentifier.JSON_PROPERTY_ORIGINATING_I_O_I, InterOperatorIdentifier.JSON_PROPERTY_TERMINATING_I_O_I })
public class InterOperatorIdentifier
{
    public static final String JSON_PROPERTY_ORIGINATING_I_O_I = "originatingIOI";
    private String originatingIOI;

    public static final String JSON_PROPERTY_TERMINATING_I_O_I = "terminatingIOI";
    private String terminatingIOI;

    public InterOperatorIdentifier()
    {
    }

    public InterOperatorIdentifier originatingIOI(String originatingIOI)
    {

        this.originatingIOI = originatingIOI;
        return this;
    }

    /**
     * Get originatingIOI
     * 
     * @return originatingIOI
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ORIGINATING_I_O_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOriginatingIOI()
    {
        return originatingIOI;
    }

    @JsonProperty(JSON_PROPERTY_ORIGINATING_I_O_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOriginatingIOI(String originatingIOI)
    {
        this.originatingIOI = originatingIOI;
    }

    public InterOperatorIdentifier terminatingIOI(String terminatingIOI)
    {

        this.terminatingIOI = terminatingIOI;
        return this;
    }

    /**
     * Get terminatingIOI
     * 
     * @return terminatingIOI
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TERMINATING_I_O_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTerminatingIOI()
    {
        return terminatingIOI;
    }

    @JsonProperty(JSON_PROPERTY_TERMINATING_I_O_I)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTerminatingIOI(String terminatingIOI)
    {
        this.terminatingIOI = terminatingIOI;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        InterOperatorIdentifier interOperatorIdentifier = (InterOperatorIdentifier) o;
        return Objects.equals(this.originatingIOI, interOperatorIdentifier.originatingIOI)
               && Objects.equals(this.terminatingIOI, interOperatorIdentifier.terminatingIOI);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(originatingIOI, terminatingIOI);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class InterOperatorIdentifier {\n");
        sb.append("    originatingIOI: ").append(toIndentedString(originatingIOI)).append("\n");
        sb.append("    terminatingIOI: ").append(toIndentedString(terminatingIOI)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
