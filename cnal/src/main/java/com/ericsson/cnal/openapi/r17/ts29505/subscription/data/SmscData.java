/*
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29505.subscription.data;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29503.nudm.uecm.NetworkNodeDiameterAddress;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Addresses of SM-Service Center entities with SMS wating to be delivered to
 * the UE.
 */
@ApiModel(description = "Addresses of SM-Service Center entities with SMS wating to be delivered to the UE.")
@JsonPropertyOrder({ SmscData.JSON_PROPERTY_SMSC_MAP_ADDRESS, SmscData.JSON_PROPERTY_SMSC_DIAMETER_ADDRESS })
public class SmscData
{
    public static final String JSON_PROPERTY_SMSC_MAP_ADDRESS = "smscMapAddress";
    private String smscMapAddress;

    public static final String JSON_PROPERTY_SMSC_DIAMETER_ADDRESS = "smscDiameterAddress";
    private NetworkNodeDiameterAddress smscDiameterAddress;

    public SmscData()
    {
    }

    public SmscData smscMapAddress(String smscMapAddress)
    {

        this.smscMapAddress = smscMapAddress;
        return this;
    }

    /**
     * Get smscMapAddress
     * 
     * @return smscMapAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SMSC_MAP_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSmscMapAddress()
    {
        return smscMapAddress;
    }

    @JsonProperty(JSON_PROPERTY_SMSC_MAP_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmscMapAddress(String smscMapAddress)
    {
        this.smscMapAddress = smscMapAddress;
    }

    public SmscData smscDiameterAddress(NetworkNodeDiameterAddress smscDiameterAddress)
    {

        this.smscDiameterAddress = smscDiameterAddress;
        return this;
    }

    /**
     * Get smscDiameterAddress
     * 
     * @return smscDiameterAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SMSC_DIAMETER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NetworkNodeDiameterAddress getSmscDiameterAddress()
    {
        return smscDiameterAddress;
    }

    @JsonProperty(JSON_PROPERTY_SMSC_DIAMETER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmscDiameterAddress(NetworkNodeDiameterAddress smscDiameterAddress)
    {
        this.smscDiameterAddress = smscDiameterAddress;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SmscData smscData = (SmscData) o;
        return Objects.equals(this.smscMapAddress, smscData.smscMapAddress) && Objects.equals(this.smscDiameterAddress, smscData.smscDiameterAddress);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(smscMapAddress, smscDiameterAddress);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmscData {\n");
        sb.append("    smscMapAddress: ").append(toIndentedString(smscMapAddress)).append("\n");
        sb.append("    smscDiameterAddress: ").append(toIndentedString(smscDiameterAddress)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
