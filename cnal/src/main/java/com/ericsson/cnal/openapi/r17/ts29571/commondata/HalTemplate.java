/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Hypertext Application Language (HAL) template contains the extended 3GPP
 * hypermedia format.
 */
@ApiModel(description = "Hypertext Application Language (HAL) template contains the extended 3GPP hypermedia format. ")
@JsonPropertyOrder({ HalTemplate.JSON_PROPERTY_TITLE,
                     HalTemplate.JSON_PROPERTY_METHOD,
                     HalTemplate.JSON_PROPERTY_CONTENT_TYPE,
                     HalTemplate.JSON_PROPERTY_PROPERTIES })
public class HalTemplate
{
    public static final String JSON_PROPERTY_TITLE = "title";
    private String title;

    public static final String JSON_PROPERTY_METHOD = "method";
    private String method;

    public static final String JSON_PROPERTY_CONTENT_TYPE = "contentType";
    private String contentType;

    public static final String JSON_PROPERTY_PROPERTIES = "properties";
    private List<Property> properties = null;

    public HalTemplate()
    {
    }

    public HalTemplate title(String title)
    {

        this.title = title;
        return this;
    }

    /**
     * A human-readable string that can be used to identify this template
     * 
     * @return title
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A human-readable string that can be used to identify this template")
    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTitle()
    {
        return title;
    }

    @JsonProperty(JSON_PROPERTY_TITLE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTitle(String title)
    {
        this.title = title;
    }

    public HalTemplate method(String method)
    {

        this.method = method;
        return this;
    }

    /**
     * HTTP methodes.
     * 
     * @return method
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "HTTP methodes.")
    @JsonProperty(JSON_PROPERTY_METHOD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getMethod()
    {
        return method;
    }

    @JsonProperty(JSON_PROPERTY_METHOD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMethod(String method)
    {
        this.method = method;
    }

    public HalTemplate contentType(String contentType)
    {

        this.contentType = contentType;
        return this;
    }

    /**
     * The media type that should be used for the corresponding request. If the
     * attribute is missing, or contains an unrecognized value, the client should
     * act as if the contentType is set to \&quot;application/json\&quot;.
     * 
     * @return contentType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The media type that should be used for the corresponding request. If the attribute is missing, or contains an unrecognized value, the client should act as if the  contentType is set to \"application/json\". ")
    @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getContentType()
    {
        return contentType;
    }

    @JsonProperty(JSON_PROPERTY_CONTENT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setContentType(String contentType)
    {
        this.contentType = contentType;
    }

    public HalTemplate properties(List<Property> properties)
    {

        this.properties = properties;
        return this;
    }

    public HalTemplate addPropertiesItem(Property propertiesItem)
    {
        if (this.properties == null)
        {
            this.properties = new ArrayList<>();
        }
        this.properties.add(propertiesItem);
        return this;
    }

    /**
     * The properties that should be included in the body of the corresponding
     * request. If the contentType attribute is set to
     * \&quot;application/json\&quot;, then this attribute describes the attributes
     * of the JSON object of the body.
     * 
     * @return properties
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The properties that should be included in the body of the corresponding request.  If the contentType attribute is set to \"application/json\", then this attribute  describes the attributes of the JSON object of the body. ")
    @JsonProperty(JSON_PROPERTY_PROPERTIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Property> getProperties()
    {
        return properties;
    }

    @JsonProperty(JSON_PROPERTY_PROPERTIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProperties(List<Property> properties)
    {
        this.properties = properties;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        HalTemplate halTemplate = (HalTemplate) o;
        return Objects.equals(this.title, halTemplate.title) && Objects.equals(this.method, halTemplate.method)
               && Objects.equals(this.contentType, halTemplate.contentType) && Objects.equals(this.properties, halTemplate.properties);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(title, method, contentType, properties);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class HalTemplate {\n");
        sb.append("    title: ").append(toIndentedString(title)).append("\n");
        sb.append("    method: ").append(toIndentedString(method)).append("\n");
        sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
        sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
