/*
 * LMF Location
 * LMF Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29572.nlmf.location;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Ncgi;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Ecgi;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information within Determine Location Response.
 */
@ApiModel(description = "Information within Determine Location Response.")
@JsonPropertyOrder({ LocationData.JSON_PROPERTY_LOCATION_ESTIMATE,
                     LocationData.JSON_PROPERTY_ACCURACY_FULFILMENT_INDICATOR,
                     LocationData.JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE,
                     LocationData.JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE,
                     LocationData.JSON_PROPERTY_VELOCITY_ESTIMATE,
                     LocationData.JSON_PROPERTY_CIVIC_ADDRESS,
                     LocationData.JSON_PROPERTY_LOCAL_LOCATION_ESTIMATE,
                     LocationData.JSON_PROPERTY_POSITIONING_DATA_LIST,
                     LocationData.JSON_PROPERTY_GNSS_POSITIONING_DATA_LIST,
                     LocationData.JSON_PROPERTY_ECGI,
                     LocationData.JSON_PROPERTY_NCGI,
                     LocationData.JSON_PROPERTY_ALTITUDE,
                     LocationData.JSON_PROPERTY_BAROMETRIC_PRESSURE,
                     LocationData.JSON_PROPERTY_SERVING_L_M_F_IDENTIFICATION,
                     LocationData.JSON_PROPERTY_UE_POSITIONING_CAP,
                     LocationData.JSON_PROPERTY_UE_AREA_IND,
                     LocationData.JSON_PROPERTY_SUPPORTED_FEATURES,
                     LocationData.JSON_PROPERTY_ACHIEVED_QOS })
public class LocationData
{
    public static final String JSON_PROPERTY_LOCATION_ESTIMATE = "locationEstimate";
    private GeographicArea locationEstimate;

    public static final String JSON_PROPERTY_ACCURACY_FULFILMENT_INDICATOR = "accuracyFulfilmentIndicator";
    private String accuracyFulfilmentIndicator;

    public static final String JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE = "ageOfLocationEstimate";
    private Integer ageOfLocationEstimate;

    public static final String JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE = "timestampOfLocationEstimate";
    private OffsetDateTime timestampOfLocationEstimate;

    public static final String JSON_PROPERTY_VELOCITY_ESTIMATE = "velocityEstimate";
    private VelocityEstimate velocityEstimate;

    public static final String JSON_PROPERTY_CIVIC_ADDRESS = "civicAddress";
    private CivicAddress civicAddress;

    public static final String JSON_PROPERTY_LOCAL_LOCATION_ESTIMATE = "localLocationEstimate";
    private LocalArea localLocationEstimate;

    public static final String JSON_PROPERTY_POSITIONING_DATA_LIST = "positioningDataList";
    private List<PositioningMethodAndUsage> positioningDataList = null;

    public static final String JSON_PROPERTY_GNSS_POSITIONING_DATA_LIST = "gnssPositioningDataList";
    private List<GnssPositioningMethodAndUsage> gnssPositioningDataList = null;

    public static final String JSON_PROPERTY_ECGI = "ecgi";
    private Ecgi ecgi;

    public static final String JSON_PROPERTY_NCGI = "ncgi";
    private Ncgi ncgi;

    public static final String JSON_PROPERTY_ALTITUDE = "altitude";
    private Double altitude;

    public static final String JSON_PROPERTY_BAROMETRIC_PRESSURE = "barometricPressure";
    private Integer barometricPressure;

    public static final String JSON_PROPERTY_SERVING_L_M_F_IDENTIFICATION = "servingLMFIdentification";
    private String servingLMFIdentification;

    public static final String JSON_PROPERTY_UE_POSITIONING_CAP = "uePositioningCap";
    private byte[] uePositioningCap;

    public static final String JSON_PROPERTY_UE_AREA_IND = "ueAreaInd";
    private UeAreaIndication ueAreaInd;

    public static final String JSON_PROPERTY_SUPPORTED_FEATURES = "supportedFeatures";
    private String supportedFeatures;

    public static final String JSON_PROPERTY_ACHIEVED_QOS = "achievedQos";
    private MinorLocationQoS achievedQos;

    public LocationData()
    {
    }

    public LocationData locationEstimate(GeographicArea locationEstimate)
    {

        this.locationEstimate = locationEstimate;
        return this;
    }

    /**
     * Get locationEstimate
     * 
     * @return locationEstimate
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public GeographicArea getLocationEstimate()
    {
        return locationEstimate;
    }

    @JsonProperty(JSON_PROPERTY_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLocationEstimate(GeographicArea locationEstimate)
    {
        this.locationEstimate = locationEstimate;
    }

    public LocationData accuracyFulfilmentIndicator(String accuracyFulfilmentIndicator)
    {

        this.accuracyFulfilmentIndicator = accuracyFulfilmentIndicator;
        return this;
    }

    /**
     * Indicates fulfilment of requested accuracy.
     * 
     * @return accuracyFulfilmentIndicator
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates fulfilment of requested accuracy.")
    @JsonProperty(JSON_PROPERTY_ACCURACY_FULFILMENT_INDICATOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAccuracyFulfilmentIndicator()
    {
        return accuracyFulfilmentIndicator;
    }

    @JsonProperty(JSON_PROPERTY_ACCURACY_FULFILMENT_INDICATOR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccuracyFulfilmentIndicator(String accuracyFulfilmentIndicator)
    {
        this.accuracyFulfilmentIndicator = accuracyFulfilmentIndicator;
    }

    public LocationData ageOfLocationEstimate(Integer ageOfLocationEstimate)
    {

        this.ageOfLocationEstimate = ageOfLocationEstimate;
        return this;
    }

    /**
     * Indicates value of the age of the location estimate. minimum: 0 maximum:
     * 32767
     * 
     * @return ageOfLocationEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates value of the age of the location estimate.")
    @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAgeOfLocationEstimate()
    {
        return ageOfLocationEstimate;
    }

    @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAgeOfLocationEstimate(Integer ageOfLocationEstimate)
    {
        this.ageOfLocationEstimate = ageOfLocationEstimate;
    }

    public LocationData timestampOfLocationEstimate(OffsetDateTime timestampOfLocationEstimate)
    {

        this.timestampOfLocationEstimate = timestampOfLocationEstimate;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return timestampOfLocationEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTimestampOfLocationEstimate()
    {
        return timestampOfLocationEstimate;
    }

    @JsonProperty(JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimestampOfLocationEstimate(OffsetDateTime timestampOfLocationEstimate)
    {
        this.timestampOfLocationEstimate = timestampOfLocationEstimate;
    }

    public LocationData velocityEstimate(VelocityEstimate velocityEstimate)
    {

        this.velocityEstimate = velocityEstimate;
        return this;
    }

    /**
     * Get velocityEstimate
     * 
     * @return velocityEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public VelocityEstimate getVelocityEstimate()
    {
        return velocityEstimate;
    }

    @JsonProperty(JSON_PROPERTY_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVelocityEstimate(VelocityEstimate velocityEstimate)
    {
        this.velocityEstimate = velocityEstimate;
    }

    public LocationData civicAddress(CivicAddress civicAddress)
    {

        this.civicAddress = civicAddress;
        return this;
    }

    /**
     * Get civicAddress
     * 
     * @return civicAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CIVIC_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public CivicAddress getCivicAddress()
    {
        return civicAddress;
    }

    @JsonProperty(JSON_PROPERTY_CIVIC_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCivicAddress(CivicAddress civicAddress)
    {
        this.civicAddress = civicAddress;
    }

    public LocationData localLocationEstimate(LocalArea localLocationEstimate)
    {

        this.localLocationEstimate = localLocationEstimate;
        return this;
    }

    /**
     * Get localLocationEstimate
     * 
     * @return localLocationEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LOCAL_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocalArea getLocalLocationEstimate()
    {
        return localLocationEstimate;
    }

    @JsonProperty(JSON_PROPERTY_LOCAL_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLocalLocationEstimate(LocalArea localLocationEstimate)
    {
        this.localLocationEstimate = localLocationEstimate;
    }

    public LocationData positioningDataList(List<PositioningMethodAndUsage> positioningDataList)
    {

        this.positioningDataList = positioningDataList;
        return this;
    }

    public LocationData addPositioningDataListItem(PositioningMethodAndUsage positioningDataListItem)
    {
        if (this.positioningDataList == null)
        {
            this.positioningDataList = new ArrayList<>();
        }
        this.positioningDataList.add(positioningDataListItem);
        return this;
    }

    /**
     * Get positioningDataList
     * 
     * @return positioningDataList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_POSITIONING_DATA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PositioningMethodAndUsage> getPositioningDataList()
    {
        return positioningDataList;
    }

    @JsonProperty(JSON_PROPERTY_POSITIONING_DATA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPositioningDataList(List<PositioningMethodAndUsage> positioningDataList)
    {
        this.positioningDataList = positioningDataList;
    }

    public LocationData gnssPositioningDataList(List<GnssPositioningMethodAndUsage> gnssPositioningDataList)
    {

        this.gnssPositioningDataList = gnssPositioningDataList;
        return this;
    }

    public LocationData addGnssPositioningDataListItem(GnssPositioningMethodAndUsage gnssPositioningDataListItem)
    {
        if (this.gnssPositioningDataList == null)
        {
            this.gnssPositioningDataList = new ArrayList<>();
        }
        this.gnssPositioningDataList.add(gnssPositioningDataListItem);
        return this;
    }

    /**
     * Get gnssPositioningDataList
     * 
     * @return gnssPositioningDataList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_GNSS_POSITIONING_DATA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<GnssPositioningMethodAndUsage> getGnssPositioningDataList()
    {
        return gnssPositioningDataList;
    }

    @JsonProperty(JSON_PROPERTY_GNSS_POSITIONING_DATA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGnssPositioningDataList(List<GnssPositioningMethodAndUsage> gnssPositioningDataList)
    {
        this.gnssPositioningDataList = gnssPositioningDataList;
    }

    public LocationData ecgi(Ecgi ecgi)
    {

        this.ecgi = ecgi;
        return this;
    }

    /**
     * Get ecgi
     * 
     * @return ecgi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ECGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Ecgi getEcgi()
    {
        return ecgi;
    }

    @JsonProperty(JSON_PROPERTY_ECGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEcgi(Ecgi ecgi)
    {
        this.ecgi = ecgi;
    }

    public LocationData ncgi(Ncgi ncgi)
    {

        this.ncgi = ncgi;
        return this;
    }

    /**
     * Get ncgi
     * 
     * @return ncgi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NCGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Ncgi getNcgi()
    {
        return ncgi;
    }

    @JsonProperty(JSON_PROPERTY_NCGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNcgi(Ncgi ncgi)
    {
        this.ncgi = ncgi;
    }

    public LocationData altitude(Double altitude)
    {

        this.altitude = altitude;
        return this;
    }

    /**
     * Indicates value of altitude. minimum: -32767 maximum: 32767
     * 
     * @return altitude
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates value of altitude.")
    @JsonProperty(JSON_PROPERTY_ALTITUDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Double getAltitude()
    {
        return altitude;
    }

    @JsonProperty(JSON_PROPERTY_ALTITUDE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAltitude(Double altitude)
    {
        this.altitude = altitude;
    }

    public LocationData barometricPressure(Integer barometricPressure)
    {

        this.barometricPressure = barometricPressure;
        return this;
    }

    /**
     * Specifies the measured uncompensated atmospheric pressure. minimum: 30000
     * maximum: 115000
     * 
     * @return barometricPressure
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Specifies the measured uncompensated atmospheric pressure.")
    @JsonProperty(JSON_PROPERTY_BAROMETRIC_PRESSURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getBarometricPressure()
    {
        return barometricPressure;
    }

    @JsonProperty(JSON_PROPERTY_BAROMETRIC_PRESSURE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBarometricPressure(Integer barometricPressure)
    {
        this.barometricPressure = barometricPressure;
    }

    public LocationData servingLMFIdentification(String servingLMFIdentification)
    {

        this.servingLMFIdentification = servingLMFIdentification;
        return this;
    }

    /**
     * LMF identification.
     * 
     * @return servingLMFIdentification
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "LMF identification.")
    @JsonProperty(JSON_PROPERTY_SERVING_L_M_F_IDENTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getServingLMFIdentification()
    {
        return servingLMFIdentification;
    }

    @JsonProperty(JSON_PROPERTY_SERVING_L_M_F_IDENTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServingLMFIdentification(String servingLMFIdentification)
    {
        this.servingLMFIdentification = servingLMFIdentification;
    }

    public LocationData uePositioningCap(byte[] uePositioningCap)
    {

        this.uePositioningCap = uePositioningCap;
        return this;
    }

    /**
     * Positioning capabilities supported by the UE. A string encoding the
     * \&quot;ProvideCapabilities-r9-IEs\&quot; IE as specified in clause 6.3 of
     * 3GPP TS 37.355 (start from octet 1).
     * 
     * @return uePositioningCap
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Positioning capabilities supported by the UE. A string encoding the \"ProvideCapabilities-r9-IEs\" IE as specified in clause 6.3 of 3GPP TS 37.355 (start from octet 1).")
    @JsonProperty(JSON_PROPERTY_UE_POSITIONING_CAP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public byte[] getUePositioningCap()
    {
        return uePositioningCap;
    }

    @JsonProperty(JSON_PROPERTY_UE_POSITIONING_CAP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUePositioningCap(byte[] uePositioningCap)
    {
        this.uePositioningCap = uePositioningCap;
    }

    public LocationData ueAreaInd(UeAreaIndication ueAreaInd)
    {

        this.ueAreaInd = ueAreaInd;
        return this;
    }

    /**
     * Get ueAreaInd
     * 
     * @return ueAreaInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UE_AREA_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UeAreaIndication getUeAreaInd()
    {
        return ueAreaInd;
    }

    @JsonProperty(JSON_PROPERTY_UE_AREA_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeAreaInd(UeAreaIndication ueAreaInd)
    {
        this.ueAreaInd = ueAreaInd;
    }

    public LocationData supportedFeatures(String supportedFeatures)
    {

        this.supportedFeatures = supportedFeatures;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return supportedFeatures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSupportedFeatures()
    {
        return supportedFeatures;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupportedFeatures(String supportedFeatures)
    {
        this.supportedFeatures = supportedFeatures;
    }

    public LocationData achievedQos(MinorLocationQoS achievedQos)
    {

        this.achievedQos = achievedQos;
        return this;
    }

    /**
     * Get achievedQos
     * 
     * @return achievedQos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ACHIEVED_QOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public MinorLocationQoS getAchievedQos()
    {
        return achievedQos;
    }

    @JsonProperty(JSON_PROPERTY_ACHIEVED_QOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAchievedQos(MinorLocationQoS achievedQos)
    {
        this.achievedQos = achievedQos;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        LocationData locationData = (LocationData) o;
        return Objects.equals(this.locationEstimate, locationData.locationEstimate)
               && Objects.equals(this.accuracyFulfilmentIndicator, locationData.accuracyFulfilmentIndicator)
               && Objects.equals(this.ageOfLocationEstimate, locationData.ageOfLocationEstimate)
               && Objects.equals(this.timestampOfLocationEstimate, locationData.timestampOfLocationEstimate)
               && Objects.equals(this.velocityEstimate, locationData.velocityEstimate) && Objects.equals(this.civicAddress, locationData.civicAddress)
               && Objects.equals(this.localLocationEstimate, locationData.localLocationEstimate)
               && Objects.equals(this.positioningDataList, locationData.positioningDataList)
               && Objects.equals(this.gnssPositioningDataList, locationData.gnssPositioningDataList) && Objects.equals(this.ecgi, locationData.ecgi)
               && Objects.equals(this.ncgi, locationData.ncgi) && Objects.equals(this.altitude, locationData.altitude)
               && Objects.equals(this.barometricPressure, locationData.barometricPressure)
               && Objects.equals(this.servingLMFIdentification, locationData.servingLMFIdentification)
               && Arrays.equals(this.uePositioningCap, locationData.uePositioningCap) && Objects.equals(this.ueAreaInd, locationData.ueAreaInd)
               && Objects.equals(this.supportedFeatures, locationData.supportedFeatures) && Objects.equals(this.achievedQos, locationData.achievedQos);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(locationEstimate,
                            accuracyFulfilmentIndicator,
                            ageOfLocationEstimate,
                            timestampOfLocationEstimate,
                            velocityEstimate,
                            civicAddress,
                            localLocationEstimate,
                            positioningDataList,
                            gnssPositioningDataList,
                            ecgi,
                            ncgi,
                            altitude,
                            barometricPressure,
                            servingLMFIdentification,
                            Arrays.hashCode(uePositioningCap),
                            ueAreaInd,
                            supportedFeatures,
                            achievedQos);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class LocationData {\n");
        sb.append("    locationEstimate: ").append(toIndentedString(locationEstimate)).append("\n");
        sb.append("    accuracyFulfilmentIndicator: ").append(toIndentedString(accuracyFulfilmentIndicator)).append("\n");
        sb.append("    ageOfLocationEstimate: ").append(toIndentedString(ageOfLocationEstimate)).append("\n");
        sb.append("    timestampOfLocationEstimate: ").append(toIndentedString(timestampOfLocationEstimate)).append("\n");
        sb.append("    velocityEstimate: ").append(toIndentedString(velocityEstimate)).append("\n");
        sb.append("    civicAddress: ").append(toIndentedString(civicAddress)).append("\n");
        sb.append("    localLocationEstimate: ").append(toIndentedString(localLocationEstimate)).append("\n");
        sb.append("    positioningDataList: ").append(toIndentedString(positioningDataList)).append("\n");
        sb.append("    gnssPositioningDataList: ").append(toIndentedString(gnssPositioningDataList)).append("\n");
        sb.append("    ecgi: ").append(toIndentedString(ecgi)).append("\n");
        sb.append("    ncgi: ").append(toIndentedString(ncgi)).append("\n");
        sb.append("    altitude: ").append(toIndentedString(altitude)).append("\n");
        sb.append("    barometricPressure: ").append(toIndentedString(barometricPressure)).append("\n");
        sb.append("    servingLMFIdentification: ").append(toIndentedString(servingLMFIdentification)).append("\n");
        sb.append("    uePositioningCap: ").append(toIndentedString(uePositioningCap)).append("\n");
        sb.append("    ueAreaInd: ").append(toIndentedString(ueAreaInd)).append("\n");
        sb.append("    supportedFeatures: ").append(toIndentedString(supportedFeatures)).append("\n");
        sb.append("    achievedQos: ").append(toIndentedString(achievedQos)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
