/*
 * Nspaf_SecuredPacket
 * Nspaf Secured Packet Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29544.nspaf.securedpacket;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29509.nausf.sorprotection.SteeringInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents UICC Configuration Parameters.
 */
@ApiModel(description = "Represents UICC Configuration Parameters.")
@JsonPropertyOrder({ UiccConfigurationParameter.JSON_PROPERTY_ROUTING_ID,
                     UiccConfigurationParameter.JSON_PROPERTY_STEERING_CONTAINER,
                     UiccConfigurationParameter.JSON_PROPERTY_EXTENDED_STEERING_CONTAINER })
public class UiccConfigurationParameter
{
    public static final String JSON_PROPERTY_ROUTING_ID = "routingId";
    private String routingId;

    public static final String JSON_PROPERTY_STEERING_CONTAINER = "steeringContainer";
    private List<SteeringInfo> steeringContainer = null;

    public static final String JSON_PROPERTY_EXTENDED_STEERING_CONTAINER = "extendedSteeringContainer";
    private ExtendedSteeringContainer extendedSteeringContainer;

    public UiccConfigurationParameter()
    {
    }

    public UiccConfigurationParameter routingId(String routingId)
    {

        this.routingId = routingId;
        return this;
    }

    /**
     * Represents a routing indicator.
     * 
     * @return routingId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Represents a routing indicator.")
    @JsonProperty(JSON_PROPERTY_ROUTING_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRoutingId()
    {
        return routingId;
    }

    @JsonProperty(JSON_PROPERTY_ROUTING_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoutingId(String routingId)
    {
        this.routingId = routingId;
    }

    public UiccConfigurationParameter steeringContainer(List<SteeringInfo> steeringContainer)
    {

        this.steeringContainer = steeringContainer;
        return this;
    }

    public UiccConfigurationParameter addSteeringContainerItem(SteeringInfo steeringContainerItem)
    {
        if (this.steeringContainer == null)
        {
            this.steeringContainer = new ArrayList<>();
        }
        this.steeringContainer.add(steeringContainerItem);
        return this;
    }

    /**
     * Get steeringContainer
     * 
     * @return steeringContainer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_STEERING_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<SteeringInfo> getSteeringContainer()
    {
        return steeringContainer;
    }

    @JsonProperty(JSON_PROPERTY_STEERING_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSteeringContainer(List<SteeringInfo> steeringContainer)
    {
        this.steeringContainer = steeringContainer;
    }

    public UiccConfigurationParameter extendedSteeringContainer(ExtendedSteeringContainer extendedSteeringContainer)
    {

        this.extendedSteeringContainer = extendedSteeringContainer;
        return this;
    }

    /**
     * Get extendedSteeringContainer
     * 
     * @return extendedSteeringContainer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EXTENDED_STEERING_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ExtendedSteeringContainer getExtendedSteeringContainer()
    {
        return extendedSteeringContainer;
    }

    @JsonProperty(JSON_PROPERTY_EXTENDED_STEERING_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExtendedSteeringContainer(ExtendedSteeringContainer extendedSteeringContainer)
    {
        this.extendedSteeringContainer = extendedSteeringContainer;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UiccConfigurationParameter uiccConfigurationParameter = (UiccConfigurationParameter) o;
        return Objects.equals(this.routingId, uiccConfigurationParameter.routingId)
               && Objects.equals(this.steeringContainer, uiccConfigurationParameter.steeringContainer)
               && Objects.equals(this.extendedSteeringContainer, uiccConfigurationParameter.extendedSteeringContainer);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(routingId, steeringContainer, extendedSteeringContainer);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UiccConfigurationParameter {\n");
        sb.append("    routingId: ").append(toIndentedString(routingId)).append("\n");
        sb.append("    steeringContainer: ").append(toIndentedString(steeringContainer)).append("\n");
        sb.append("    extendedSteeringContainer: ").append(toIndentedString(extendedSteeringContainer)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
