/*
 * Nsmf_PDUSession
 * SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29502.nsmf.pdusession;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PlmnId;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Data within Retrieve SM Context Request
 */
@ApiModel(description = "Data within Retrieve SM Context Request")
@JsonPropertyOrder({ SmContextRetrieveData.JSON_PROPERTY_TARGET_MME_CAP,
                     SmContextRetrieveData.JSON_PROPERTY_SM_CONTEXT_TYPE,
                     SmContextRetrieveData.JSON_PROPERTY_SERVING_NETWORK,
                     SmContextRetrieveData.JSON_PROPERTY_NOT_TO_TRANSFER_EBI_LIST,
                     SmContextRetrieveData.JSON_PROPERTY_RAN_UNCHANGED_IND })
public class SmContextRetrieveData
{
    public static final String JSON_PROPERTY_TARGET_MME_CAP = "targetMmeCap";
    private MmeCapabilities targetMmeCap;

    public static final String JSON_PROPERTY_SM_CONTEXT_TYPE = "smContextType";
    private String smContextType;

    public static final String JSON_PROPERTY_SERVING_NETWORK = "servingNetwork";
    private PlmnId servingNetwork;

    public static final String JSON_PROPERTY_NOT_TO_TRANSFER_EBI_LIST = "notToTransferEbiList";
    private List<Integer> notToTransferEbiList = null;

    public static final String JSON_PROPERTY_RAN_UNCHANGED_IND = "ranUnchangedInd";
    private Boolean ranUnchangedInd = false;

    public SmContextRetrieveData()
    {
    }

    public SmContextRetrieveData targetMmeCap(MmeCapabilities targetMmeCap)
    {

        this.targetMmeCap = targetMmeCap;
        return this;
    }

    /**
     * Get targetMmeCap
     * 
     * @return targetMmeCap
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TARGET_MME_CAP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public MmeCapabilities getTargetMmeCap()
    {
        return targetMmeCap;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_MME_CAP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetMmeCap(MmeCapabilities targetMmeCap)
    {
        this.targetMmeCap = targetMmeCap;
    }

    public SmContextRetrieveData smContextType(String smContextType)
    {

        this.smContextType = smContextType;
        return this;
    }

    /**
     * Type of SM Context information. Possible values are - EPS_PDN_CONNECTION -
     * SM_CONTEXT - AF_COORDINATION_INFO
     * 
     * @return smContextType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Type of SM Context information. Possible values are   - EPS_PDN_CONNECTION   - SM_CONTEXT   - AF_COORDINATION_INFO ")
    @JsonProperty(JSON_PROPERTY_SM_CONTEXT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSmContextType()
    {
        return smContextType;
    }

    @JsonProperty(JSON_PROPERTY_SM_CONTEXT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmContextType(String smContextType)
    {
        this.smContextType = smContextType;
    }

    public SmContextRetrieveData servingNetwork(PlmnId servingNetwork)
    {

        this.servingNetwork = servingNetwork;
        return this;
    }

    /**
     * Get servingNetwork
     * 
     * @return servingNetwork
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SERVING_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PlmnId getServingNetwork()
    {
        return servingNetwork;
    }

    @JsonProperty(JSON_PROPERTY_SERVING_NETWORK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServingNetwork(PlmnId servingNetwork)
    {
        this.servingNetwork = servingNetwork;
    }

    public SmContextRetrieveData notToTransferEbiList(List<Integer> notToTransferEbiList)
    {

        this.notToTransferEbiList = notToTransferEbiList;
        return this;
    }

    public SmContextRetrieveData addNotToTransferEbiListItem(Integer notToTransferEbiListItem)
    {
        if (this.notToTransferEbiList == null)
        {
            this.notToTransferEbiList = new ArrayList<>();
        }
        this.notToTransferEbiList.add(notToTransferEbiListItem);
        return this;
    }

    /**
     * Get notToTransferEbiList
     * 
     * @return notToTransferEbiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NOT_TO_TRANSFER_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Integer> getNotToTransferEbiList()
    {
        return notToTransferEbiList;
    }

    @JsonProperty(JSON_PROPERTY_NOT_TO_TRANSFER_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotToTransferEbiList(List<Integer> notToTransferEbiList)
    {
        this.notToTransferEbiList = notToTransferEbiList;
    }

    public SmContextRetrieveData ranUnchangedInd(Boolean ranUnchangedInd)
    {

        this.ranUnchangedInd = ranUnchangedInd;
        return this;
    }

    /**
     * Get ranUnchangedInd
     * 
     * @return ranUnchangedInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RAN_UNCHANGED_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRanUnchangedInd()
    {
        return ranUnchangedInd;
    }

    @JsonProperty(JSON_PROPERTY_RAN_UNCHANGED_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRanUnchangedInd(Boolean ranUnchangedInd)
    {
        this.ranUnchangedInd = ranUnchangedInd;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SmContextRetrieveData smContextRetrieveData = (SmContextRetrieveData) o;
        return Objects.equals(this.targetMmeCap, smContextRetrieveData.targetMmeCap) && Objects.equals(this.smContextType, smContextRetrieveData.smContextType)
               && Objects.equals(this.servingNetwork, smContextRetrieveData.servingNetwork)
               && Objects.equals(this.notToTransferEbiList, smContextRetrieveData.notToTransferEbiList)
               && Objects.equals(this.ranUnchangedInd, smContextRetrieveData.ranUnchangedInd);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(targetMmeCap, smContextType, servingNetwork, notToTransferEbiList, ranUnchangedInd);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmContextRetrieveData {\n");
        sb.append("    targetMmeCap: ").append(toIndentedString(targetMmeCap)).append("\n");
        sb.append("    smContextType: ").append(toIndentedString(smContextType)).append("\n");
        sb.append("    servingNetwork: ").append(toIndentedString(servingNetwork)).append("\n");
        sb.append("    notToTransferEbiList: ").append(toIndentedString(notToTransferEbiList)).append("\n");
        sb.append("    ranUnchangedInd: ").append(toIndentedString(ranUnchangedInd)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
