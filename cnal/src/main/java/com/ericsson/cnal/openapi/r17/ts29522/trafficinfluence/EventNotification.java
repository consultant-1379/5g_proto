/*
 * 3gpp-traffic-influence
 * API for AF traffic influence   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29522.trafficinfluence;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.RouteToLocation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a traffic influence event notification.
 */
@ApiModel(description = "Represents a traffic influence event notification.")
@JsonPropertyOrder({ EventNotification.JSON_PROPERTY_AF_TRANS_ID,
                     EventNotification.JSON_PROPERTY_DNAI_CHG_TYPE,
                     EventNotification.JSON_PROPERTY_SOURCE_TRAFFIC_ROUTE,
                     EventNotification.JSON_PROPERTY_SUBSCRIBED_EVENT,
                     EventNotification.JSON_PROPERTY_TARGET_TRAFFIC_ROUTE,
                     EventNotification.JSON_PROPERTY_SOURCE_DNAI,
                     EventNotification.JSON_PROPERTY_TARGET_DNAI,
                     EventNotification.JSON_PROPERTY_GPSI,
                     EventNotification.JSON_PROPERTY_SRC_UE_IPV4_ADDR,
                     EventNotification.JSON_PROPERTY_SRC_UE_IPV6_PREFIX,
                     EventNotification.JSON_PROPERTY_TGT_UE_IPV4_ADDR,
                     EventNotification.JSON_PROPERTY_TGT_UE_IPV6_PREFIX,
                     EventNotification.JSON_PROPERTY_UE_MAC,
                     EventNotification.JSON_PROPERTY_AF_ACK_URI })
public class EventNotification
{
    public static final String JSON_PROPERTY_AF_TRANS_ID = "afTransId";
    private String afTransId;

    public static final String JSON_PROPERTY_DNAI_CHG_TYPE = "dnaiChgType";
    private String dnaiChgType;

    public static final String JSON_PROPERTY_SOURCE_TRAFFIC_ROUTE = "sourceTrafficRoute";
    private JsonNullable<RouteToLocation> sourceTrafficRoute = JsonNullable.<RouteToLocation>undefined();

    public static final String JSON_PROPERTY_SUBSCRIBED_EVENT = "subscribedEvent";
    private String subscribedEvent;

    public static final String JSON_PROPERTY_TARGET_TRAFFIC_ROUTE = "targetTrafficRoute";
    private JsonNullable<RouteToLocation> targetTrafficRoute = JsonNullable.<RouteToLocation>undefined();

    public static final String JSON_PROPERTY_SOURCE_DNAI = "sourceDnai";
    private String sourceDnai;

    public static final String JSON_PROPERTY_TARGET_DNAI = "targetDnai";
    private String targetDnai;

    public static final String JSON_PROPERTY_GPSI = "gpsi";
    private String gpsi;

    public static final String JSON_PROPERTY_SRC_UE_IPV4_ADDR = "srcUeIpv4Addr";
    private String srcUeIpv4Addr;

    public static final String JSON_PROPERTY_SRC_UE_IPV6_PREFIX = "srcUeIpv6Prefix";
    private String srcUeIpv6Prefix;

    public static final String JSON_PROPERTY_TGT_UE_IPV4_ADDR = "tgtUeIpv4Addr";
    private String tgtUeIpv4Addr;

    public static final String JSON_PROPERTY_TGT_UE_IPV6_PREFIX = "tgtUeIpv6Prefix";
    private String tgtUeIpv6Prefix;

    public static final String JSON_PROPERTY_UE_MAC = "ueMac";
    private String ueMac;

    public static final String JSON_PROPERTY_AF_ACK_URI = "afAckUri";
    private String afAckUri;

    public EventNotification()
    {
    }

    public EventNotification afTransId(String afTransId)
    {

        this.afTransId = afTransId;
        return this;
    }

    /**
     * Identifies an NEF Northbound interface transaction, generated by the AF.
     * 
     * @return afTransId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies an NEF Northbound interface transaction, generated by the AF.")
    @JsonProperty(JSON_PROPERTY_AF_TRANS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAfTransId()
    {
        return afTransId;
    }

    @JsonProperty(JSON_PROPERTY_AF_TRANS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAfTransId(String afTransId)
    {
        this.afTransId = afTransId;
    }

    public EventNotification dnaiChgType(String dnaiChgType)
    {

        this.dnaiChgType = dnaiChgType;
        return this;
    }

    /**
     * Possible values are: - EARLY: Early notification of UP path reconfiguration.
     * - EARLY_LATE: Early and late notification of UP path reconfiguration. This
     * value shall only be present in the subscription to the DNAI change event. -
     * LATE: Late notification of UP path reconfiguration.
     * 
     * @return dnaiChgType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Possible values are: - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall   only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.  ")
    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getDnaiChgType()
    {
        return dnaiChgType;
    }

    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDnaiChgType(String dnaiChgType)
    {
        this.dnaiChgType = dnaiChgType;
    }

    public EventNotification sourceTrafficRoute(RouteToLocation sourceTrafficRoute)
    {
        this.sourceTrafficRoute = JsonNullable.<RouteToLocation>of(sourceTrafficRoute);

        return this;
    }

    /**
     * Get sourceTrafficRoute
     * 
     * @return sourceTrafficRoute
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public RouteToLocation getSourceTrafficRoute()
    {
        return sourceTrafficRoute.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_TRAFFIC_ROUTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<RouteToLocation> getSourceTrafficRoute_JsonNullable()
    {
        return sourceTrafficRoute;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_TRAFFIC_ROUTE)
    public void setSourceTrafficRoute_JsonNullable(JsonNullable<RouteToLocation> sourceTrafficRoute)
    {
        this.sourceTrafficRoute = sourceTrafficRoute;
    }

    public void setSourceTrafficRoute(RouteToLocation sourceTrafficRoute)
    {
        this.sourceTrafficRoute = JsonNullable.<RouteToLocation>of(sourceTrafficRoute);
    }

    public EventNotification subscribedEvent(String subscribedEvent)
    {

        this.subscribedEvent = subscribedEvent;
        return this;
    }

    /**
     * Possible values are: - UP_PATH_CHANGE: The AF requests to be notified when
     * the UP path changes for the PDU session.
     * 
     * @return subscribedEvent
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Possible values are: - UP_PATH_CHANGE: The AF requests to be notified when the UP path changes for the PDU session. ")
    @JsonProperty(JSON_PROPERTY_SUBSCRIBED_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getSubscribedEvent()
    {
        return subscribedEvent;
    }

    @JsonProperty(JSON_PROPERTY_SUBSCRIBED_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSubscribedEvent(String subscribedEvent)
    {
        this.subscribedEvent = subscribedEvent;
    }

    public EventNotification targetTrafficRoute(RouteToLocation targetTrafficRoute)
    {
        this.targetTrafficRoute = JsonNullable.<RouteToLocation>of(targetTrafficRoute);

        return this;
    }

    /**
     * Get targetTrafficRoute
     * 
     * @return targetTrafficRoute
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public RouteToLocation getTargetTrafficRoute()
    {
        return targetTrafficRoute.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TARGET_TRAFFIC_ROUTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<RouteToLocation> getTargetTrafficRoute_JsonNullable()
    {
        return targetTrafficRoute;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_TRAFFIC_ROUTE)
    public void setTargetTrafficRoute_JsonNullable(JsonNullable<RouteToLocation> targetTrafficRoute)
    {
        this.targetTrafficRoute = targetTrafficRoute;
    }

    public void setTargetTrafficRoute(RouteToLocation targetTrafficRoute)
    {
        this.targetTrafficRoute = JsonNullable.<RouteToLocation>of(targetTrafficRoute);
    }

    public EventNotification sourceDnai(String sourceDnai)
    {

        this.sourceDnai = sourceDnai;
        return this;
    }

    /**
     * DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
     * 
     * @return sourceDnai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.")
    @JsonProperty(JSON_PROPERTY_SOURCE_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSourceDnai()
    {
        return sourceDnai;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSourceDnai(String sourceDnai)
    {
        this.sourceDnai = sourceDnai;
    }

    public EventNotification targetDnai(String targetDnai)
    {

        this.targetDnai = targetDnai;
        return this;
    }

    /**
     * DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
     * 
     * @return targetDnai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.")
    @JsonProperty(JSON_PROPERTY_TARGET_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTargetDnai()
    {
        return targetDnai;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetDnai(String targetDnai)
    {
        this.targetDnai = targetDnai;
    }

    public EventNotification gpsi(String gpsi)
    {

        this.gpsi = gpsi;
        return this;
    }

    /**
     * String identifying a Gpsi shall contain either an External Id or an MSISDN.
     * It shall be formatted as follows -External Identifier&#x3D;
     * \&quot;extid-&#39;extid&#39;, where &#39;extid&#39; shall be formatted
     * according to clause 19.7.2 of 3GPP TS 23.003 that describes an External
     * Identifier.
     * 
     * @return gpsi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  ")
    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGpsi()
    {
        return gpsi;
    }

    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGpsi(String gpsi)
    {
        this.gpsi = gpsi;
    }

    public EventNotification srcUeIpv4Addr(String srcUeIpv4Addr)
    {

        this.srcUeIpv4Addr = srcUeIpv4Addr;
        return this;
    }

    /**
     * string identifying a Ipv4 address formatted in the \&quot;dotted
     * decimal\&quot; notation as defined in IETF RFC 1166.
     * 
     * @return srcUeIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string identifying a Ipv4 address formatted in the \"dotted decimal\" notation as defined in IETF RFC 1166.")
    @JsonProperty(JSON_PROPERTY_SRC_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSrcUeIpv4Addr()
    {
        return srcUeIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_SRC_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSrcUeIpv4Addr(String srcUeIpv4Addr)
    {
        this.srcUeIpv4Addr = srcUeIpv4Addr;
    }

    public EventNotification srcUeIpv6Prefix(String srcUeIpv6Prefix)
    {

        this.srcUeIpv6Prefix = srcUeIpv6Prefix;
        return this;
    }

    /**
     * Get srcUeIpv6Prefix
     * 
     * @return srcUeIpv6Prefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SRC_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSrcUeIpv6Prefix()
    {
        return srcUeIpv6Prefix;
    }

    @JsonProperty(JSON_PROPERTY_SRC_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSrcUeIpv6Prefix(String srcUeIpv6Prefix)
    {
        this.srcUeIpv6Prefix = srcUeIpv6Prefix;
    }

    public EventNotification tgtUeIpv4Addr(String tgtUeIpv4Addr)
    {

        this.tgtUeIpv4Addr = tgtUeIpv4Addr;
        return this;
    }

    /**
     * string identifying a Ipv4 address formatted in the \&quot;dotted
     * decimal\&quot; notation as defined in IETF RFC 1166.
     * 
     * @return tgtUeIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string identifying a Ipv4 address formatted in the \"dotted decimal\" notation as defined in IETF RFC 1166.")
    @JsonProperty(JSON_PROPERTY_TGT_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTgtUeIpv4Addr()
    {
        return tgtUeIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_TGT_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTgtUeIpv4Addr(String tgtUeIpv4Addr)
    {
        this.tgtUeIpv4Addr = tgtUeIpv4Addr;
    }

    public EventNotification tgtUeIpv6Prefix(String tgtUeIpv6Prefix)
    {

        this.tgtUeIpv6Prefix = tgtUeIpv6Prefix;
        return this;
    }

    /**
     * Get tgtUeIpv6Prefix
     * 
     * @return tgtUeIpv6Prefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TGT_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTgtUeIpv6Prefix()
    {
        return tgtUeIpv6Prefix;
    }

    @JsonProperty(JSON_PROPERTY_TGT_UE_IPV6_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTgtUeIpv6Prefix(String tgtUeIpv6Prefix)
    {
        this.tgtUeIpv6Prefix = tgtUeIpv6Prefix;
    }

    public EventNotification ueMac(String ueMac)
    {

        this.ueMac = ueMac;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return ueMac
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_UE_MAC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUeMac()
    {
        return ueMac;
    }

    @JsonProperty(JSON_PROPERTY_UE_MAC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeMac(String ueMac)
    {
        this.ueMac = ueMac;
    }

    public EventNotification afAckUri(String afAckUri)
    {

        this.afAckUri = afAckUri;
        return this;
    }

    /**
     * string formatted according to IETF RFC 3986 identifying a referenced
     * resource.
     * 
     * @return afAckUri
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string formatted according to IETF RFC 3986 identifying a referenced resource.")
    @JsonProperty(JSON_PROPERTY_AF_ACK_URI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAfAckUri()
    {
        return afAckUri;
    }

    @JsonProperty(JSON_PROPERTY_AF_ACK_URI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAfAckUri(String afAckUri)
    {
        this.afAckUri = afAckUri;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        EventNotification eventNotification = (EventNotification) o;
        return Objects.equals(this.afTransId, eventNotification.afTransId) && Objects.equals(this.dnaiChgType, eventNotification.dnaiChgType)
               && equalsNullable(this.sourceTrafficRoute, eventNotification.sourceTrafficRoute)
               && Objects.equals(this.subscribedEvent, eventNotification.subscribedEvent)
               && equalsNullable(this.targetTrafficRoute, eventNotification.targetTrafficRoute) && Objects.equals(this.sourceDnai, eventNotification.sourceDnai)
               && Objects.equals(this.targetDnai, eventNotification.targetDnai) && Objects.equals(this.gpsi, eventNotification.gpsi)
               && Objects.equals(this.srcUeIpv4Addr, eventNotification.srcUeIpv4Addr) && Objects.equals(this.srcUeIpv6Prefix, eventNotification.srcUeIpv6Prefix)
               && Objects.equals(this.tgtUeIpv4Addr, eventNotification.tgtUeIpv4Addr) && Objects.equals(this.tgtUeIpv6Prefix, eventNotification.tgtUeIpv6Prefix)
               && Objects.equals(this.ueMac, eventNotification.ueMac) && Objects.equals(this.afAckUri, eventNotification.afAckUri);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(afTransId,
                            dnaiChgType,
                            hashCodeNullable(sourceTrafficRoute),
                            subscribedEvent,
                            hashCodeNullable(targetTrafficRoute),
                            sourceDnai,
                            targetDnai,
                            gpsi,
                            srcUeIpv4Addr,
                            srcUeIpv6Prefix,
                            tgtUeIpv4Addr,
                            tgtUeIpv6Prefix,
                            ueMac,
                            afAckUri);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EventNotification {\n");
        sb.append("    afTransId: ").append(toIndentedString(afTransId)).append("\n");
        sb.append("    dnaiChgType: ").append(toIndentedString(dnaiChgType)).append("\n");
        sb.append("    sourceTrafficRoute: ").append(toIndentedString(sourceTrafficRoute)).append("\n");
        sb.append("    subscribedEvent: ").append(toIndentedString(subscribedEvent)).append("\n");
        sb.append("    targetTrafficRoute: ").append(toIndentedString(targetTrafficRoute)).append("\n");
        sb.append("    sourceDnai: ").append(toIndentedString(sourceDnai)).append("\n");
        sb.append("    targetDnai: ").append(toIndentedString(targetDnai)).append("\n");
        sb.append("    gpsi: ").append(toIndentedString(gpsi)).append("\n");
        sb.append("    srcUeIpv4Addr: ").append(toIndentedString(srcUeIpv4Addr)).append("\n");
        sb.append("    srcUeIpv6Prefix: ").append(toIndentedString(srcUeIpv6Prefix)).append("\n");
        sb.append("    tgtUeIpv4Addr: ").append(toIndentedString(tgtUeIpv4Addr)).append("\n");
        sb.append("    tgtUeIpv6Prefix: ").append(toIndentedString(tgtUeIpv6Prefix)).append("\n");
        sb.append("    ueMac: ").append(toIndentedString(ueMac)).append("\n");
        sb.append("    afAckUri: ").append(toIndentedString(afAckUri)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
