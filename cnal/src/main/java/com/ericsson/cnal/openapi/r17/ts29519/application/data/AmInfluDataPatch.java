/*
 * Unified Data Repository Service API file for Application Data
 * The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29519.application.data;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29534.npcf.ampolicyauthorization.ServiceAreaCoverageInfo;
import com.ericsson.cnal.openapi.r17.ts29522.aminfluence.DnnSnssaiInformation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the AM Influence Data that can be updated.
 */
@ApiModel(description = "Represents the AM Influence Data that can be updated.")
@JsonPropertyOrder({ AmInfluDataPatch.JSON_PROPERTY_APP_IDS,
                     AmInfluDataPatch.JSON_PROPERTY_DNN_SNSSAI_INFOS,
                     AmInfluDataPatch.JSON_PROPERTY_EV_SUBS,
                     AmInfluDataPatch.JSON_PROPERTY_HEADERS,
                     AmInfluDataPatch.JSON_PROPERTY_THRU_REQ,
                     AmInfluDataPatch.JSON_PROPERTY_NOTIF_URI,
                     AmInfluDataPatch.JSON_PROPERTY_NOTIF_CORR_ID,
                     AmInfluDataPatch.JSON_PROPERTY_COV_REQ })
public class AmInfluDataPatch
{
    public static final String JSON_PROPERTY_APP_IDS = "appIds";
    private JsonNullable<List<String>> appIds = JsonNullable.<List<String>>undefined();

    public static final String JSON_PROPERTY_DNN_SNSSAI_INFOS = "dnnSnssaiInfos";
    private JsonNullable<List<DnnSnssaiInformation>> dnnSnssaiInfos = JsonNullable.<List<DnnSnssaiInformation>>undefined();

    public static final String JSON_PROPERTY_EV_SUBS = "evSubs";
    private JsonNullable<List<String>> evSubs = JsonNullable.<List<String>>undefined();

    public static final String JSON_PROPERTY_HEADERS = "headers";
    private List<String> headers = null;

    public static final String JSON_PROPERTY_THRU_REQ = "thruReq";
    private JsonNullable<Boolean> thruReq = JsonNullable.<Boolean>undefined();

    public static final String JSON_PROPERTY_NOTIF_URI = "notifUri";
    private JsonNullable<String> notifUri = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_NOTIF_CORR_ID = "notifCorrId";
    private JsonNullable<String> notifCorrId = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_COV_REQ = "covReq";
    private JsonNullable<List<ServiceAreaCoverageInfo>> covReq = JsonNullable.<List<ServiceAreaCoverageInfo>>undefined();

    public AmInfluDataPatch()
    {
    }

    public AmInfluDataPatch appIds(List<String> appIds)
    {
        this.appIds = JsonNullable.<List<String>>of(appIds);

        return this;
    }

    public AmInfluDataPatch addAppIdsItem(String appIdsItem)
    {
        if (this.appIds == null || !this.appIds.isPresent())
        {
            this.appIds = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try
        {
            this.appIds.get().add(appIdsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Identifies one or more applications.
     * 
     * @return appIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies one or more applications.")
    @JsonIgnore

    public List<String> getAppIds()
    {
        return appIds.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_APP_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<String>> getAppIds_JsonNullable()
    {
        return appIds;
    }

    @JsonProperty(JSON_PROPERTY_APP_IDS)
    public void setAppIds_JsonNullable(JsonNullable<List<String>> appIds)
    {
        this.appIds = appIds;
    }

    public void setAppIds(List<String> appIds)
    {
        this.appIds = JsonNullable.<List<String>>of(appIds);
    }

    public AmInfluDataPatch dnnSnssaiInfos(List<DnnSnssaiInformation> dnnSnssaiInfos)
    {
        this.dnnSnssaiInfos = JsonNullable.<List<DnnSnssaiInformation>>of(dnnSnssaiInfos);

        return this;
    }

    public AmInfluDataPatch addDnnSnssaiInfosItem(DnnSnssaiInformation dnnSnssaiInfosItem)
    {
        if (this.dnnSnssaiInfos == null || !this.dnnSnssaiInfos.isPresent())
        {
            this.dnnSnssaiInfos = JsonNullable.<List<DnnSnssaiInformation>>of(new ArrayList<>());
        }
        try
        {
            this.dnnSnssaiInfos.get().add(dnnSnssaiInfosItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Identifies one or more DNN, S-NSSAI combinations.
     * 
     * @return dnnSnssaiInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies one or more DNN, S-NSSAI combinations.")
    @JsonIgnore

    public List<DnnSnssaiInformation> getDnnSnssaiInfos()
    {
        return dnnSnssaiInfos.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_DNN_SNSSAI_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<DnnSnssaiInformation>> getDnnSnssaiInfos_JsonNullable()
    {
        return dnnSnssaiInfos;
    }

    @JsonProperty(JSON_PROPERTY_DNN_SNSSAI_INFOS)
    public void setDnnSnssaiInfos_JsonNullable(JsonNullable<List<DnnSnssaiInformation>> dnnSnssaiInfos)
    {
        this.dnnSnssaiInfos = dnnSnssaiInfos;
    }

    public void setDnnSnssaiInfos(List<DnnSnssaiInformation> dnnSnssaiInfos)
    {
        this.dnnSnssaiInfos = JsonNullable.<List<DnnSnssaiInformation>>of(dnnSnssaiInfos);
    }

    public AmInfluDataPatch evSubs(List<String> evSubs)
    {
        this.evSubs = JsonNullable.<List<String>>of(evSubs);

        return this;
    }

    public AmInfluDataPatch addEvSubsItem(String evSubsItem)
    {
        if (this.evSubs == null || !this.evSubs.isPresent())
        {
            this.evSubs = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try
        {
            this.evSubs.get().add(evSubsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * List of AM related events for which a subscription is required.
     * 
     * @return evSubs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of AM related events for which a subscription is required.")
    @JsonIgnore

    public List<String> getEvSubs()
    {
        return evSubs.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_EV_SUBS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<String>> getEvSubs_JsonNullable()
    {
        return evSubs;
    }

    @JsonProperty(JSON_PROPERTY_EV_SUBS)
    public void setEvSubs_JsonNullable(JsonNullable<List<String>> evSubs)
    {
        this.evSubs = evSubs;
    }

    public void setEvSubs(List<String> evSubs)
    {
        this.evSubs = JsonNullable.<List<String>>of(evSubs);
    }

    public AmInfluDataPatch headers(List<String> headers)
    {

        this.headers = headers;
        return this;
    }

    public AmInfluDataPatch addHeadersItem(String headersItem)
    {
        if (this.headers == null)
        {
            this.headers = new ArrayList<>();
        }
        this.headers.add(headersItem);
        return this;
    }

    /**
     * Contains the headers provisioned by the NEF.
     * 
     * @return headers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the headers provisioned by the NEF.")
    @JsonProperty(JSON_PROPERTY_HEADERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getHeaders()
    {
        return headers;
    }

    @JsonProperty(JSON_PROPERTY_HEADERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHeaders(List<String> headers)
    {
        this.headers = headers;
    }

    public AmInfluDataPatch thruReq(Boolean thruReq)
    {
        this.thruReq = JsonNullable.<Boolean>of(thruReq);

        return this;
    }

    /**
     * Indicates whether high throughput is desired for the indicated UE traffic.
     * 
     * @return thruReq
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether high throughput is desired for the indicated UE traffic.")
    @JsonIgnore

    public Boolean getThruReq()
    {
        return thruReq.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_THRU_REQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Boolean> getThruReq_JsonNullable()
    {
        return thruReq;
    }

    @JsonProperty(JSON_PROPERTY_THRU_REQ)
    public void setThruReq_JsonNullable(JsonNullable<Boolean> thruReq)
    {
        this.thruReq = thruReq;
    }

    public void setThruReq(Boolean thruReq)
    {
        this.thruReq = JsonNullable.<Boolean>of(thruReq);
    }

    public AmInfluDataPatch notifUri(String notifUri)
    {
        this.notifUri = JsonNullable.<String>of(notifUri);

        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986 with the OpenAPI
     * &#39;nullable: true&#39; property.
     * 
     * @return notifUri
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String providing an URI formatted according to RFC 3986 with the OpenAPI 'nullable: true' property. ")
    @JsonIgnore

    public String getNotifUri()
    {
        return notifUri.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<String> getNotifUri_JsonNullable()
    {
        return notifUri;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_URI)
    public void setNotifUri_JsonNullable(JsonNullable<String> notifUri)
    {
        this.notifUri = notifUri;
    }

    public void setNotifUri(String notifUri)
    {
        this.notifUri = JsonNullable.<String>of(notifUri);
    }

    public AmInfluDataPatch notifCorrId(String notifCorrId)
    {
        this.notifCorrId = JsonNullable.<String>of(notifCorrId);

        return this;
    }

    /**
     * Notification correlation identifier.
     * 
     * @return notifCorrId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Notification correlation identifier.")
    @JsonIgnore

    public String getNotifCorrId()
    {
        return notifCorrId.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_CORR_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<String> getNotifCorrId_JsonNullable()
    {
        return notifCorrId;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_CORR_ID)
    public void setNotifCorrId_JsonNullable(JsonNullable<String> notifCorrId)
    {
        this.notifCorrId = notifCorrId;
    }

    public void setNotifCorrId(String notifCorrId)
    {
        this.notifCorrId = JsonNullable.<String>of(notifCorrId);
    }

    public AmInfluDataPatch covReq(List<ServiceAreaCoverageInfo> covReq)
    {
        this.covReq = JsonNullable.<List<ServiceAreaCoverageInfo>>of(covReq);

        return this;
    }

    public AmInfluDataPatch addCovReqItem(ServiceAreaCoverageInfo covReqItem)
    {
        if (this.covReq == null || !this.covReq.isPresent())
        {
            this.covReq = JsonNullable.<List<ServiceAreaCoverageInfo>>of(new ArrayList<>());
        }
        try
        {
            this.covReq.get().add(covReqItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Indicates the service area coverage requirement.
     * 
     * @return covReq
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the service area coverage requirement.")
    @JsonIgnore

    public List<ServiceAreaCoverageInfo> getCovReq()
    {
        return covReq.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_COV_REQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<ServiceAreaCoverageInfo>> getCovReq_JsonNullable()
    {
        return covReq;
    }

    @JsonProperty(JSON_PROPERTY_COV_REQ)
    public void setCovReq_JsonNullable(JsonNullable<List<ServiceAreaCoverageInfo>> covReq)
    {
        this.covReq = covReq;
    }

    public void setCovReq(List<ServiceAreaCoverageInfo> covReq)
    {
        this.covReq = JsonNullable.<List<ServiceAreaCoverageInfo>>of(covReq);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AmInfluDataPatch amInfluDataPatch = (AmInfluDataPatch) o;
        return equalsNullable(this.appIds, amInfluDataPatch.appIds) && equalsNullable(this.dnnSnssaiInfos, amInfluDataPatch.dnnSnssaiInfos)
               && equalsNullable(this.evSubs, amInfluDataPatch.evSubs) && Objects.equals(this.headers, amInfluDataPatch.headers)
               && equalsNullable(this.thruReq, amInfluDataPatch.thruReq) && equalsNullable(this.notifUri, amInfluDataPatch.notifUri)
               && equalsNullable(this.notifCorrId, amInfluDataPatch.notifCorrId) && equalsNullable(this.covReq, amInfluDataPatch.covReq);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(hashCodeNullable(appIds),
                            hashCodeNullable(dnnSnssaiInfos),
                            hashCodeNullable(evSubs),
                            headers,
                            hashCodeNullable(thruReq),
                            hashCodeNullable(notifUri),
                            hashCodeNullable(notifCorrId),
                            hashCodeNullable(covReq));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AmInfluDataPatch {\n");
        sb.append("    appIds: ").append(toIndentedString(appIds)).append("\n");
        sb.append("    dnnSnssaiInfos: ").append(toIndentedString(dnnSnssaiInfos)).append("\n");
        sb.append("    evSubs: ").append(toIndentedString(evSubs)).append("\n");
        sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
        sb.append("    thruReq: ").append(toIndentedString(thruReq)).append("\n");
        sb.append("    notifUri: ").append(toIndentedString(notifUri)).append("\n");
        sb.append("    notifCorrId: ").append(toIndentedString(notifCorrId)).append("\n");
        sb.append("    covReq: ").append(toIndentedString(covReq)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
