/*
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 20212022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts32291.nchf.offlineonlycharging;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MultipleUnitUsage
 */
@JsonPropertyOrder({ MultipleUnitUsage.JSON_PROPERTY_RATING_GROUP,
                     MultipleUnitUsage.JSON_PROPERTY_USED_UNIT_CONTAINER,
                     MultipleUnitUsage.JSON_PROPERTY_U_P_F_I_D,
                     MultipleUnitUsage.JSON_PROPERTY_MULTIHOMED_P_D_U_ADDRESS })
public class MultipleUnitUsage
{
    public static final String JSON_PROPERTY_RATING_GROUP = "ratingGroup";
    private Integer ratingGroup;

    public static final String JSON_PROPERTY_USED_UNIT_CONTAINER = "usedUnitContainer";
    private List<UsedUnitContainer> usedUnitContainer = null;

    public static final String JSON_PROPERTY_U_P_F_I_D = "uPFID";
    private UUID uPFID;

    public static final String JSON_PROPERTY_MULTIHOMED_P_D_U_ADDRESS = "multihomedPDUAddress";
    private PDUAddress multihomedPDUAddress;

    public MultipleUnitUsage()
    {
    }

    public MultipleUnitUsage ratingGroup(Integer ratingGroup)
    {

        this.ratingGroup = ratingGroup;
        return this;
    }

    /**
     * Integer where the allowed values correspond to the value range of an unsigned
     * 32-bit integer. minimum: 0 maximum: 4294967295
     * 
     * @return ratingGroup
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. ")
    @JsonProperty(JSON_PROPERTY_RATING_GROUP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Integer getRatingGroup()
    {
        return ratingGroup;
    }

    @JsonProperty(JSON_PROPERTY_RATING_GROUP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRatingGroup(Integer ratingGroup)
    {
        this.ratingGroup = ratingGroup;
    }

    public MultipleUnitUsage usedUnitContainer(List<UsedUnitContainer> usedUnitContainer)
    {

        this.usedUnitContainer = usedUnitContainer;
        return this;
    }

    public MultipleUnitUsage addUsedUnitContainerItem(UsedUnitContainer usedUnitContainerItem)
    {
        if (this.usedUnitContainer == null)
        {
            this.usedUnitContainer = new ArrayList<>();
        }
        this.usedUnitContainer.add(usedUnitContainerItem);
        return this;
    }

    /**
     * Get usedUnitContainer
     * 
     * @return usedUnitContainer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_USED_UNIT_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<UsedUnitContainer> getUsedUnitContainer()
    {
        return usedUnitContainer;
    }

    @JsonProperty(JSON_PROPERTY_USED_UNIT_CONTAINER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUsedUnitContainer(List<UsedUnitContainer> usedUnitContainer)
    {
        this.usedUnitContainer = usedUnitContainer;
    }

    public MultipleUnitUsage uPFID(UUID uPFID)
    {

        this.uPFID = uPFID;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return uPFID
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_U_P_F_I_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getuPFID()
    {
        return uPFID;
    }

    @JsonProperty(JSON_PROPERTY_U_P_F_I_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setuPFID(UUID uPFID)
    {
        this.uPFID = uPFID;
    }

    public MultipleUnitUsage multihomedPDUAddress(PDUAddress multihomedPDUAddress)
    {

        this.multihomedPDUAddress = multihomedPDUAddress;
        return this;
    }

    /**
     * Get multihomedPDUAddress
     * 
     * @return multihomedPDUAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MULTIHOMED_P_D_U_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PDUAddress getMultihomedPDUAddress()
    {
        return multihomedPDUAddress;
    }

    @JsonProperty(JSON_PROPERTY_MULTIHOMED_P_D_U_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMultihomedPDUAddress(PDUAddress multihomedPDUAddress)
    {
        this.multihomedPDUAddress = multihomedPDUAddress;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        MultipleUnitUsage multipleUnitUsage = (MultipleUnitUsage) o;
        return Objects.equals(this.ratingGroup, multipleUnitUsage.ratingGroup) && Objects.equals(this.usedUnitContainer, multipleUnitUsage.usedUnitContainer)
               && Objects.equals(this.uPFID, multipleUnitUsage.uPFID) && Objects.equals(this.multihomedPDUAddress, multipleUnitUsage.multihomedPDUAddress);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ratingGroup, usedUnitContainer, uPFID, multihomedPDUAddress);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class MultipleUnitUsage {\n");
        sb.append("    ratingGroup: ").append(toIndentedString(ratingGroup)).append("\n");
        sb.append("    usedUnitContainer: ").append(toIndentedString(usedUnitContainer)).append("\n");
        sb.append("    uPFID: ").append(toIndentedString(uPFID)).append("\n");
        sb.append("    multihomedPDUAddress: ").append(toIndentedString(multihomedPDUAddress)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
