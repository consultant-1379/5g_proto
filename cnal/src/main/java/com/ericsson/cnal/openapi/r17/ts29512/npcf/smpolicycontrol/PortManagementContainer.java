/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the port management information container for a port.
 */
@ApiModel(description = "Contains the port management information container for a port.")
@JsonPropertyOrder({ PortManagementContainer.JSON_PROPERTY_PORT_MAN_CONT, PortManagementContainer.JSON_PROPERTY_PORT_NUM })
public class PortManagementContainer
{
    public static final String JSON_PROPERTY_PORT_MAN_CONT = "portManCont";
    private byte[] portManCont;

    public static final String JSON_PROPERTY_PORT_NUM = "portNum";
    private Integer portNum;

    public PortManagementContainer()
    {
    }

    public PortManagementContainer portManCont(byte[] portManCont)
    {

        this.portManCont = portManCont;
        return this;
    }

    /**
     * string with format &#39;bytes&#39; as defined in OpenAPI
     * 
     * @return portManCont
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'bytes' as defined in OpenAPI")
    @JsonProperty(JSON_PROPERTY_PORT_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public byte[] getPortManCont()
    {
        return portManCont;
    }

    @JsonProperty(JSON_PROPERTY_PORT_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPortManCont(byte[] portManCont)
    {
        this.portManCont = portManCont;
    }

    public PortManagementContainer portNum(Integer portNum)
    {

        this.portNum = portNum;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return portNum
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_PORT_NUM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Integer getPortNum()
    {
        return portNum;
    }

    @JsonProperty(JSON_PROPERTY_PORT_NUM)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPortNum(Integer portNum)
    {
        this.portNum = portNum;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PortManagementContainer portManagementContainer = (PortManagementContainer) o;
        return Arrays.equals(this.portManCont, portManagementContainer.portManCont) && Objects.equals(this.portNum, portManagementContainer.portNum);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(Arrays.hashCode(portManCont), portNum);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PortManagementContainer {\n");
        sb.append("    portManCont: ").append(toIndentedString(portManCont)).append("\n");
        sb.append("    portNum: ").append(toIndentedString(portNum)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
