/*
 * Naf_EventExposure
 * AF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29517.naf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.LocationArea5G;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UE application data collected per UE.
 */
@ApiModel(description = "UE application data collected per UE.")
@JsonPropertyOrder({ PerUeAttribute.JSON_PROPERTY_UE_DEST,
                     PerUeAttribute.JSON_PROPERTY_ROUTE,
                     PerUeAttribute.JSON_PROPERTY_AVG_SPEED,
                     PerUeAttribute.JSON_PROPERTY_TIME_OF_ARRIVAL })
public class PerUeAttribute
{
    public static final String JSON_PROPERTY_UE_DEST = "ueDest";
    private LocationArea5G ueDest;

    public static final String JSON_PROPERTY_ROUTE = "route";
    private String route;

    public static final String JSON_PROPERTY_AVG_SPEED = "avgSpeed";
    private String avgSpeed;

    public static final String JSON_PROPERTY_TIME_OF_ARRIVAL = "timeOfArrival";
    private OffsetDateTime timeOfArrival;

    public PerUeAttribute()
    {
    }

    public PerUeAttribute ueDest(LocationArea5G ueDest)
    {

        this.ueDest = ueDest;
        return this;
    }

    /**
     * Get ueDest
     * 
     * @return ueDest
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UE_DEST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocationArea5G getUeDest()
    {
        return ueDest;
    }

    @JsonProperty(JSON_PROPERTY_UE_DEST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeDest(LocationArea5G ueDest)
    {
        this.ueDest = ueDest;
    }

    public PerUeAttribute route(String route)
    {

        this.route = route;
        return this;
    }

    /**
     * Get route
     * 
     * @return route
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ROUTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRoute()
    {
        return route;
    }

    @JsonProperty(JSON_PROPERTY_ROUTE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRoute(String route)
    {
        this.route = route;
    }

    public PerUeAttribute avgSpeed(String avgSpeed)
    {

        this.avgSpeed = avgSpeed;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return avgSpeed
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_AVG_SPEED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAvgSpeed()
    {
        return avgSpeed;
    }

    @JsonProperty(JSON_PROPERTY_AVG_SPEED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAvgSpeed(String avgSpeed)
    {
        this.avgSpeed = avgSpeed;
    }

    public PerUeAttribute timeOfArrival(OffsetDateTime timeOfArrival)
    {

        this.timeOfArrival = timeOfArrival;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return timeOfArrival
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TIME_OF_ARRIVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTimeOfArrival()
    {
        return timeOfArrival;
    }

    @JsonProperty(JSON_PROPERTY_TIME_OF_ARRIVAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimeOfArrival(OffsetDateTime timeOfArrival)
    {
        this.timeOfArrival = timeOfArrival;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PerUeAttribute perUeAttribute = (PerUeAttribute) o;
        return Objects.equals(this.ueDest, perUeAttribute.ueDest) && Objects.equals(this.route, perUeAttribute.route)
               && Objects.equals(this.avgSpeed, perUeAttribute.avgSpeed) && Objects.equals(this.timeOfArrival, perUeAttribute.timeOfArrival);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ueDest, route, avgSpeed, timeOfArrival);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PerUeAttribute {\n");
        sb.append("    ueDest: ").append(toIndentedString(ueDest)).append("\n");
        sb.append("    route: ").append(toIndentedString(route)).append("\n");
        sb.append("    avgSpeed: ").append(toIndentedString(avgSpeed)).append("\n");
        sb.append("    timeOfArrival: ").append(toIndentedString(timeOfArrival)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
