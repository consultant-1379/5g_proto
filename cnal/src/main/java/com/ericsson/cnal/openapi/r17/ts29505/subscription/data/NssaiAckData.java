/*
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29505.subscription.data;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Used to store the status of the latest NSSAI data update.
 */
@ApiModel(description = "Used to store the status of the latest NSSAI data update.")
@JsonPropertyOrder({ NssaiAckData.JSON_PROPERTY_PROVISIONING_TIME, NssaiAckData.JSON_PROPERTY_UE_UPDATE_STATUS })
public class NssaiAckData
{
    public static final String JSON_PROPERTY_PROVISIONING_TIME = "provisioningTime";
    private OffsetDateTime provisioningTime;

    public static final String JSON_PROPERTY_UE_UPDATE_STATUS = "ueUpdateStatus";
    private UeUpdateStatus ueUpdateStatus;

    public NssaiAckData()
    {
    }

    public NssaiAckData provisioningTime(OffsetDateTime provisioningTime)
    {

        this.provisioningTime = provisioningTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return provisioningTime
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_PROVISIONING_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getProvisioningTime()
    {
        return provisioningTime;
    }

    @JsonProperty(JSON_PROPERTY_PROVISIONING_TIME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setProvisioningTime(OffsetDateTime provisioningTime)
    {
        this.provisioningTime = provisioningTime;
    }

    public NssaiAckData ueUpdateStatus(UeUpdateStatus ueUpdateStatus)
    {

        this.ueUpdateStatus = ueUpdateStatus;
        return this;
    }

    /**
     * Get ueUpdateStatus
     * 
     * @return ueUpdateStatus
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_UE_UPDATE_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public UeUpdateStatus getUeUpdateStatus()
    {
        return ueUpdateStatus;
    }

    @JsonProperty(JSON_PROPERTY_UE_UPDATE_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUeUpdateStatus(UeUpdateStatus ueUpdateStatus)
    {
        this.ueUpdateStatus = ueUpdateStatus;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NssaiAckData nssaiAckData = (NssaiAckData) o;
        return Objects.equals(this.provisioningTime, nssaiAckData.provisioningTime) && Objects.equals(this.ueUpdateStatus, nssaiAckData.ueUpdateStatus);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(provisioningTime, ueUpdateStatus);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NssaiAckData {\n");
        sb.append("    provisioningTime: ").append(toIndentedString(provisioningTime)).append("\n");
        sb.append("    ueUpdateStatus: ").append(toIndentedString(ueUpdateStatus)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
