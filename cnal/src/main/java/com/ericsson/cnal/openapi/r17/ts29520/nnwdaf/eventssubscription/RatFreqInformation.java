/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the RAT type and/or Frequency information.
 */
@ApiModel(description = "Represents the RAT type and/or Frequency information.")
@JsonPropertyOrder({ RatFreqInformation.JSON_PROPERTY_ALL_FREQ,
                     RatFreqInformation.JSON_PROPERTY_ALL_RAT,
                     RatFreqInformation.JSON_PROPERTY_FREQ,
                     RatFreqInformation.JSON_PROPERTY_RAT_TYPE,
                     RatFreqInformation.JSON_PROPERTY_SVC_EXP_THRESHOLD,
                     RatFreqInformation.JSON_PROPERTY_MATCHING_DIR })
public class RatFreqInformation
{
    public static final String JSON_PROPERTY_ALL_FREQ = "allFreq";
    private Boolean allFreq;

    public static final String JSON_PROPERTY_ALL_RAT = "allRat";
    private Boolean allRat;

    public static final String JSON_PROPERTY_FREQ = "freq";
    private Integer freq;

    public static final String JSON_PROPERTY_RAT_TYPE = "ratType";
    private String ratType;

    public static final String JSON_PROPERTY_SVC_EXP_THRESHOLD = "svcExpThreshold";
    private ThresholdLevel svcExpThreshold;

    public static final String JSON_PROPERTY_MATCHING_DIR = "matchingDir";
    private String matchingDir;

    public RatFreqInformation()
    {
    }

    public RatFreqInformation allFreq(Boolean allFreq)
    {

        this.allFreq = allFreq;
        return this;
    }

    /**
     * Set to \&quot;true\&quot; to indicate to handle all the frequencies the NWDAF
     * received, otherwise set to \&quot;false\&quot; or omit. The
     * \&quot;allFreq\&quot; attribute and the \&quot;freq\&quot; attribute are
     * mutually exclusive.
     * 
     * @return allFreq
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Set to \"true\" to indicate to handle all the frequencies the NWDAF received, otherwise  set to \"false\" or omit. The \"allFreq\" attribute and the \"freq\" attribute are mutually  exclusive. ")
    @JsonProperty(JSON_PROPERTY_ALL_FREQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAllFreq()
    {
        return allFreq;
    }

    @JsonProperty(JSON_PROPERTY_ALL_FREQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAllFreq(Boolean allFreq)
    {
        this.allFreq = allFreq;
    }

    public RatFreqInformation allRat(Boolean allRat)
    {

        this.allRat = allRat;
        return this;
    }

    /**
     * Set to \&quot;true\&quot; to indicate to handle all the RAT Types the NWDAF
     * received, otherwise set to \&quot;false\&quot; or omit. The
     * \&quot;allRat\&quot; attribute and the \&quot;ratType\&quot; attribute are
     * mutually exclusive.
     * 
     * @return allRat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Set to \"true\" to indicate to handle all the RAT Types the NWDAF received, otherwise  set to \"false\" or omit. The \"allRat\" attribute and the \"ratType\" attribute are mutually  exclusive. ")
    @JsonProperty(JSON_PROPERTY_ALL_RAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAllRat()
    {
        return allRat;
    }

    @JsonProperty(JSON_PROPERTY_ALL_RAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAllRat(Boolean allRat)
    {
        this.allRat = allRat;
    }

    public RatFreqInformation freq(Integer freq)
    {

        this.freq = freq;
        return this;
    }

    /**
     * Integer value indicating the ARFCN applicable for a downlink, uplink or
     * bi-directional (TDD) NR global frequency raster, as definition of
     * \&quot;ARFCN-ValueNR\&quot; IE in clause 6.3.2 of 3GPP TS 38.331. minimum: 0
     * maximum: 3279165
     * 
     * @return freq
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Integer value indicating the ARFCN applicable for a downlink, uplink or bi-directional (TDD) NR global frequency raster, as definition of \"ARFCN-ValueNR\" IE in clause 6.3.2 of 3GPP TS 38.331. ")
    @JsonProperty(JSON_PROPERTY_FREQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getFreq()
    {
        return freq;
    }

    @JsonProperty(JSON_PROPERTY_FREQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFreq(Integer freq)
    {
        this.freq = freq;
    }

    public RatFreqInformation ratType(String ratType)
    {

        this.ratType = ratType;
        return this;
    }

    /**
     * Indicates the radio access used.
     * 
     * @return ratType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the radio access used.")
    @JsonProperty(JSON_PROPERTY_RAT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRatType()
    {
        return ratType;
    }

    @JsonProperty(JSON_PROPERTY_RAT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRatType(String ratType)
    {
        this.ratType = ratType;
    }

    public RatFreqInformation svcExpThreshold(ThresholdLevel svcExpThreshold)
    {

        this.svcExpThreshold = svcExpThreshold;
        return this;
    }

    /**
     * Get svcExpThreshold
     * 
     * @return svcExpThreshold
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SVC_EXP_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ThresholdLevel getSvcExpThreshold()
    {
        return svcExpThreshold;
    }

    @JsonProperty(JSON_PROPERTY_SVC_EXP_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSvcExpThreshold(ThresholdLevel svcExpThreshold)
    {
        this.svcExpThreshold = svcExpThreshold;
    }

    public RatFreqInformation matchingDir(String matchingDir)
    {

        this.matchingDir = matchingDir;
        return this;
    }

    /**
     * Possible values are: - ASCENDING: Threshold is crossed in ascending
     * direction. - DESCENDING: Threshold is crossed in descending direction. -
     * CROSSED: Threshold is crossed either in ascending or descending direction.
     * 
     * @return matchingDir
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - ASCENDING: Threshold is crossed in ascending direction. - DESCENDING: Threshold is crossed in descending direction. - CROSSED: Threshold is crossed either in ascending or descending direction. ")
    @JsonProperty(JSON_PROPERTY_MATCHING_DIR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMatchingDir()
    {
        return matchingDir;
    }

    @JsonProperty(JSON_PROPERTY_MATCHING_DIR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMatchingDir(String matchingDir)
    {
        this.matchingDir = matchingDir;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RatFreqInformation ratFreqInformation = (RatFreqInformation) o;
        return Objects.equals(this.allFreq, ratFreqInformation.allFreq) && Objects.equals(this.allRat, ratFreqInformation.allRat)
               && Objects.equals(this.freq, ratFreqInformation.freq) && Objects.equals(this.ratType, ratFreqInformation.ratType)
               && Objects.equals(this.svcExpThreshold, ratFreqInformation.svcExpThreshold) && Objects.equals(this.matchingDir, ratFreqInformation.matchingDir);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(allFreq, allRat, freq, ratType, svcExpThreshold, matchingDir);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RatFreqInformation {\n");
        sb.append("    allFreq: ").append(toIndentedString(allFreq)).append("\n");
        sb.append("    allRat: ").append(toIndentedString(allRat)).append("\n");
        sb.append("    freq: ").append(toIndentedString(freq)).append("\n");
        sb.append("    ratType: ").append(toIndentedString(ratType)).append("\n");
        sb.append("    svcExpThreshold: ").append(toIndentedString(svcExpThreshold)).append("\n");
        sb.append("    matchingDir: ").append(toIndentedString(matchingDir)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
