/*
 * TS 29.122 Common Data Types
 * Data types applicable to several APIs.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29122.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents one configuration processing result for a group&#39;s members.
 */
@ApiModel(description = "Represents one configuration processing result for a group's members.")
@JsonPropertyOrder({ ConfigResult.JSON_PROPERTY_EXTERNAL_IDS, ConfigResult.JSON_PROPERTY_MSISDNS, ConfigResult.JSON_PROPERTY_RESULT_REASON })
public class ConfigResult
{
    public static final String JSON_PROPERTY_EXTERNAL_IDS = "externalIds";
    private List<String> externalIds = null;

    public static final String JSON_PROPERTY_MSISDNS = "msisdns";
    private List<String> msisdns = null;

    public static final String JSON_PROPERTY_RESULT_REASON = "resultReason";
    private String resultReason;

    public ConfigResult()
    {
    }

    public ConfigResult externalIds(List<String> externalIds)
    {

        this.externalIds = externalIds;
        return this;
    }

    public ConfigResult addExternalIdsItem(String externalIdsItem)
    {
        if (this.externalIds == null)
        {
            this.externalIds = new ArrayList<>();
        }
        this.externalIds.add(externalIdsItem);
        return this;
    }

    /**
     * Each element indicates an external identifier of the UE.
     * 
     * @return externalIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Each element indicates an external identifier of the UE.")
    @JsonProperty(JSON_PROPERTY_EXTERNAL_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getExternalIds()
    {
        return externalIds;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExternalIds(List<String> externalIds)
    {
        this.externalIds = externalIds;
    }

    public ConfigResult msisdns(List<String> msisdns)
    {

        this.msisdns = msisdns;
        return this;
    }

    public ConfigResult addMsisdnsItem(String msisdnsItem)
    {
        if (this.msisdns == null)
        {
            this.msisdns = new ArrayList<>();
        }
        this.msisdns.add(msisdnsItem);
        return this;
    }

    /**
     * Each element identifies the MS internal PSTN/ISDN number allocated for the
     * UE.
     * 
     * @return msisdns
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Each element identifies the MS internal PSTN/ISDN number allocated for the UE.")
    @JsonProperty(JSON_PROPERTY_MSISDNS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getMsisdns()
    {
        return msisdns;
    }

    @JsonProperty(JSON_PROPERTY_MSISDNS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMsisdns(List<String> msisdns)
    {
        this.msisdns = msisdns;
    }

    public ConfigResult resultReason(String resultReason)
    {

        this.resultReason = resultReason;
        return this;
    }

    /**
     * Possible values are - ROAMING_NOT_ALLOWED: Identifies the configuration
     * parameters are not allowed by roaming agreement. - OTHER_REASON: Identifies
     * the configuration parameters are not configured due to other reason.
     * 
     * @return resultReason
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Possible values are - ROAMING_NOT_ALLOWED: Identifies the configuration parameters are not allowed by roaming agreement. - OTHER_REASON: Identifies the configuration parameters are not configured due to other reason. ")
    @JsonProperty(JSON_PROPERTY_RESULT_REASON)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getResultReason()
    {
        return resultReason;
    }

    @JsonProperty(JSON_PROPERTY_RESULT_REASON)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setResultReason(String resultReason)
    {
        this.resultReason = resultReason;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ConfigResult configResult = (ConfigResult) o;
        return Objects.equals(this.externalIds, configResult.externalIds) && Objects.equals(this.msisdns, configResult.msisdns)
               && Objects.equals(this.resultReason, configResult.resultReason);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(externalIds, msisdns, resultReason);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConfigResult {\n");
        sb.append("    externalIds: ").append(toIndentedString(externalIds)).append("\n");
        sb.append("    msisdns: ").append(toIndentedString(msisdns)).append("\n");
        sb.append("    resultReason: ").append(toIndentedString(resultReason)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
