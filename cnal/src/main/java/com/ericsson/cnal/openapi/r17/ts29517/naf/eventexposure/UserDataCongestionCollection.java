/*
 * Naf_EventExposure
 * AF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29517.naf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.FlowInfo;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.TimeWindow;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains User Data Congestion Analytics related information collection.
 */
@ApiModel(description = "Contains User Data Congestion Analytics related information collection.")
@JsonPropertyOrder({ UserDataCongestionCollection.JSON_PROPERTY_APP_ID,
                     UserDataCongestionCollection.JSON_PROPERTY_IP_TRAFFIC_FILTER,
                     UserDataCongestionCollection.JSON_PROPERTY_TIME_INTERV,
                     UserDataCongestionCollection.JSON_PROPERTY_THRPUT_UL,
                     UserDataCongestionCollection.JSON_PROPERTY_THRPUT_DL,
                     UserDataCongestionCollection.JSON_PROPERTY_THRPUT_PK_UL,
                     UserDataCongestionCollection.JSON_PROPERTY_THRPUT_PK_DL })
public class UserDataCongestionCollection
{
    public static final String JSON_PROPERTY_APP_ID = "appId";
    private String appId;

    public static final String JSON_PROPERTY_IP_TRAFFIC_FILTER = "ipTrafficFilter";
    private FlowInfo ipTrafficFilter;

    public static final String JSON_PROPERTY_TIME_INTERV = "timeInterv";
    private TimeWindow timeInterv;

    public static final String JSON_PROPERTY_THRPUT_UL = "thrputUl";
    private String thrputUl;

    public static final String JSON_PROPERTY_THRPUT_DL = "thrputDl";
    private String thrputDl;

    public static final String JSON_PROPERTY_THRPUT_PK_UL = "thrputPkUl";
    private String thrputPkUl;

    public static final String JSON_PROPERTY_THRPUT_PK_DL = "thrputPkDl";
    private String thrputPkDl;

    public UserDataCongestionCollection()
    {
    }

    public UserDataCongestionCollection appId(String appId)
    {

        this.appId = appId;
        return this;
    }

    /**
     * String providing an application identifier.
     * 
     * @return appId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String providing an application identifier.")
    @JsonProperty(JSON_PROPERTY_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAppId()
    {
        return appId;
    }

    @JsonProperty(JSON_PROPERTY_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppId(String appId)
    {
        this.appId = appId;
    }

    public UserDataCongestionCollection ipTrafficFilter(FlowInfo ipTrafficFilter)
    {

        this.ipTrafficFilter = ipTrafficFilter;
        return this;
    }

    /**
     * Get ipTrafficFilter
     * 
     * @return ipTrafficFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IP_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public FlowInfo getIpTrafficFilter()
    {
        return ipTrafficFilter;
    }

    @JsonProperty(JSON_PROPERTY_IP_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpTrafficFilter(FlowInfo ipTrafficFilter)
    {
        this.ipTrafficFilter = ipTrafficFilter;
    }

    public UserDataCongestionCollection timeInterv(TimeWindow timeInterv)
    {

        this.timeInterv = timeInterv;
        return this;
    }

    /**
     * Get timeInterv
     * 
     * @return timeInterv
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TIME_INTERV)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TimeWindow getTimeInterv()
    {
        return timeInterv;
    }

    @JsonProperty(JSON_PROPERTY_TIME_INTERV)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimeInterv(TimeWindow timeInterv)
    {
        this.timeInterv = timeInterv;
    }

    public UserDataCongestionCollection thrputUl(String thrputUl)
    {

        this.thrputUl = thrputUl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return thrputUl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_THRPUT_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getThrputUl()
    {
        return thrputUl;
    }

    @JsonProperty(JSON_PROPERTY_THRPUT_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setThrputUl(String thrputUl)
    {
        this.thrputUl = thrputUl;
    }

    public UserDataCongestionCollection thrputDl(String thrputDl)
    {

        this.thrputDl = thrputDl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return thrputDl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_THRPUT_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getThrputDl()
    {
        return thrputDl;
    }

    @JsonProperty(JSON_PROPERTY_THRPUT_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setThrputDl(String thrputDl)
    {
        this.thrputDl = thrputDl;
    }

    public UserDataCongestionCollection thrputPkUl(String thrputPkUl)
    {

        this.thrputPkUl = thrputPkUl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return thrputPkUl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_THRPUT_PK_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getThrputPkUl()
    {
        return thrputPkUl;
    }

    @JsonProperty(JSON_PROPERTY_THRPUT_PK_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setThrputPkUl(String thrputPkUl)
    {
        this.thrputPkUl = thrputPkUl;
    }

    public UserDataCongestionCollection thrputPkDl(String thrputPkDl)
    {

        this.thrputPkDl = thrputPkDl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return thrputPkDl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_THRPUT_PK_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getThrputPkDl()
    {
        return thrputPkDl;
    }

    @JsonProperty(JSON_PROPERTY_THRPUT_PK_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setThrputPkDl(String thrputPkDl)
    {
        this.thrputPkDl = thrputPkDl;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UserDataCongestionCollection userDataCongestionCollection = (UserDataCongestionCollection) o;
        return Objects.equals(this.appId, userDataCongestionCollection.appId)
               && Objects.equals(this.ipTrafficFilter, userDataCongestionCollection.ipTrafficFilter)
               && Objects.equals(this.timeInterv, userDataCongestionCollection.timeInterv)
               && Objects.equals(this.thrputUl, userDataCongestionCollection.thrputUl) && Objects.equals(this.thrputDl, userDataCongestionCollection.thrputDl)
               && Objects.equals(this.thrputPkUl, userDataCongestionCollection.thrputPkUl)
               && Objects.equals(this.thrputPkDl, userDataCongestionCollection.thrputPkDl);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(appId, ipTrafficFilter, timeInterv, thrputUl, thrputDl, thrputPkUl, thrputPkDl);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UserDataCongestionCollection {\n");
        sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
        sb.append("    ipTrafficFilter: ").append(toIndentedString(ipTrafficFilter)).append("\n");
        sb.append("    timeInterv: ").append(toIndentedString(timeInterv)).append("\n");
        sb.append("    thrputUl: ").append(toIndentedString(thrputUl)).append("\n");
        sb.append("    thrputDl: ").append(toIndentedString(thrputDl)).append("\n");
        sb.append("    thrputPkUl: ").append(toIndentedString(thrputPkUl)).append("\n");
        sb.append("    thrputPkDl: ").append(toIndentedString(thrputPkDl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
