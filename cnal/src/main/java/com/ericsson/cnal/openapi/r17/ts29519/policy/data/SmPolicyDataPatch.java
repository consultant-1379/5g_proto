/*
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29519.policy.data;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the SM policy data for a given subscriber.
 */
@ApiModel(description = "Contains the SM policy data for a given subscriber.")
@JsonPropertyOrder({ SmPolicyDataPatch.JSON_PROPERTY_UM_DATA, SmPolicyDataPatch.JSON_PROPERTY_SM_POLICY_SNSSAI_DATA })
public class SmPolicyDataPatch
{
    public static final String JSON_PROPERTY_UM_DATA = "umData";
    private JsonNullable<Map<String, UsageMonData>> umData = JsonNullable.<Map<String, UsageMonData>>undefined();

    public static final String JSON_PROPERTY_SM_POLICY_SNSSAI_DATA = "smPolicySnssaiData";
    private Map<String, SmPolicySnssaiDataPatch> smPolicySnssaiData = null;

    public SmPolicyDataPatch()
    {
    }

    public SmPolicyDataPatch umData(Map<String, UsageMonData> umData)
    {
        this.umData = JsonNullable.<Map<String, UsageMonData>>of(umData);

        return this;
    }

    public SmPolicyDataPatch putUmDataItem(String key,
                                           UsageMonData umDataItem)
    {
        if (this.umData == null || !this.umData.isPresent())
        {
            this.umData = JsonNullable.<Map<String, UsageMonData>>of(new HashMap<>());
        }
        try
        {
            this.umData.get().put(key, umDataItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Contains the remaining allowed usage data associated with the subscriber. The
     * value of the limit identifier is used as the key of the map.
     * 
     * @return umData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the remaining allowed usage data associated with the subscriber. The value of the limit identifier is used as the key of the map. ")
    @JsonIgnore

    public Map<String, UsageMonData> getUmData()
    {
        return umData.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_UM_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, UsageMonData>> getUmData_JsonNullable()
    {
        return umData;
    }

    @JsonProperty(JSON_PROPERTY_UM_DATA)
    public void setUmData_JsonNullable(JsonNullable<Map<String, UsageMonData>> umData)
    {
        this.umData = umData;
    }

    public void setUmData(Map<String, UsageMonData> umData)
    {
        this.umData = JsonNullable.<Map<String, UsageMonData>>of(umData);
    }

    public SmPolicyDataPatch smPolicySnssaiData(Map<String, SmPolicySnssaiDataPatch> smPolicySnssaiData)
    {

        this.smPolicySnssaiData = smPolicySnssaiData;
        return this;
    }

    public SmPolicyDataPatch putSmPolicySnssaiDataItem(String key,
                                                       SmPolicySnssaiDataPatch smPolicySnssaiDataItem)
    {
        if (this.smPolicySnssaiData == null)
        {
            this.smPolicySnssaiData = new HashMap<>();
        }
        this.smPolicySnssaiData.put(key, smPolicySnssaiDataItem);
        return this;
    }

    /**
     * Modifiable Session Management Policy data per S-NSSAI for all the SNSSAIs of
     * the subscriber. The key of the map is the S-NSSAI.
     * 
     * @return smPolicySnssaiData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Modifiable Session Management Policy data per S-NSSAI for all the SNSSAIs of the subscriber. The key of the map is the S-NSSAI. ")
    @JsonProperty(JSON_PROPERTY_SM_POLICY_SNSSAI_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, SmPolicySnssaiDataPatch> getSmPolicySnssaiData()
    {
        return smPolicySnssaiData;
    }

    @JsonProperty(JSON_PROPERTY_SM_POLICY_SNSSAI_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmPolicySnssaiData(Map<String, SmPolicySnssaiDataPatch> smPolicySnssaiData)
    {
        this.smPolicySnssaiData = smPolicySnssaiData;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SmPolicyDataPatch smPolicyDataPatch = (SmPolicyDataPatch) o;
        return equalsNullable(this.umData, smPolicyDataPatch.umData) && Objects.equals(this.smPolicySnssaiData, smPolicyDataPatch.smPolicySnssaiData);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(hashCodeNullable(umData), smPolicySnssaiData);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmPolicyDataPatch {\n");
        sb.append("    umData: ").append(toIndentedString(umData)).append("\n");
        sb.append("    smPolicySnssaiData: ").append(toIndentedString(smPolicySnssaiData)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
