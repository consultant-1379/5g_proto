/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates the threshold value(s) for RTT and/or Packet Loss Rate.
 */
@ApiModel(description = "Indicates the threshold value(s) for RTT and/or Packet Loss Rate.")
@JsonPropertyOrder({ ThresholdValue.JSON_PROPERTY_RTT_THRES, ThresholdValue.JSON_PROPERTY_PLR_THRES })
public class ThresholdValue
{
    public static final String JSON_PROPERTY_RTT_THRES = "rttThres";
    private JsonNullable<Integer> rttThres = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_PLR_THRES = "plrThres";
    private JsonNullable<Integer> plrThres = JsonNullable.<Integer>undefined();

    public ThresholdValue()
    {
    }

    public ThresholdValue rttThres(Integer rttThres)
    {
        this.rttThres = JsonNullable.<Integer>of(rttThres);

        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with
     * the OpenAPI &#39;nullable: true&#39; property. minimum: 0
     * 
     * @return rttThres
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property. ")
    @JsonIgnore

    public Integer getRttThres()
    {
        return rttThres.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_RTT_THRES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getRttThres_JsonNullable()
    {
        return rttThres;
    }

    @JsonProperty(JSON_PROPERTY_RTT_THRES)
    public void setRttThres_JsonNullable(JsonNullable<Integer> rttThres)
    {
        this.rttThres = rttThres;
    }

    public void setRttThres(Integer rttThres)
    {
        this.rttThres = JsonNullable.<Integer>of(rttThres);
    }

    public ThresholdValue plrThres(Integer plrThres)
    {
        this.plrThres = JsonNullable.<Integer>of(plrThres);

        return this;
    }

    /**
     * This data type is defined in the same way as the &#39;PacketLossRate&#39;
     * data type, but with the OpenAPI &#39;nullable: true&#39; property. minimum: 0
     * maximum: 1000
     * 
     * @return plrThres
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "This data type is defined in the same way as the 'PacketLossRate' data type, but with the OpenAPI 'nullable: true' property. ")
    @JsonIgnore

    public Integer getPlrThres()
    {
        return plrThres.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_PLR_THRES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getPlrThres_JsonNullable()
    {
        return plrThres;
    }

    @JsonProperty(JSON_PROPERTY_PLR_THRES)
    public void setPlrThres_JsonNullable(JsonNullable<Integer> plrThres)
    {
        this.plrThres = plrThres;
    }

    public void setPlrThres(Integer plrThres)
    {
        this.plrThres = JsonNullable.<Integer>of(plrThres);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ThresholdValue thresholdValue = (ThresholdValue) o;
        return equalsNullable(this.rttThres, thresholdValue.rttThres) && equalsNullable(this.plrThres, thresholdValue.plrThres);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(hashCodeNullable(rttThres), hashCodeNullable(plrThres));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ThresholdValue {\n");
        sb.append("    rttThres: ").append(toIndentedString(rttThres)).append("\n");
        sb.append("    plrThres: ").append(toIndentedString(plrThres)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
