/*
 * Nudm_SDM
 * Nudm Subscriber Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 2.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.sdm;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SscModes
 */
@JsonPropertyOrder({ SscModes.JSON_PROPERTY_DEFAULT_SSC_MODE, SscModes.JSON_PROPERTY_ALLOWED_SSC_MODES })
public class SscModes
{
    public static final String JSON_PROPERTY_DEFAULT_SSC_MODE = "defaultSscMode";
    private String defaultSscMode;

    public static final String JSON_PROPERTY_ALLOWED_SSC_MODES = "allowedSscModes";
    private List<String> allowedSscModes = null;

    public SscModes()
    {
    }

    public SscModes defaultSscMode(String defaultSscMode)
    {

        this.defaultSscMode = defaultSscMode;
        return this;
    }

    /**
     * represents the service and session continuity mode It shall comply with the
     * provisions defined in table 5.4.3.6-1.
     * 
     * @return defaultSscMode
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "represents the service and session continuity mode It shall comply with the provisions defined in table 5.4.3.6-1.  ")
    @JsonProperty(JSON_PROPERTY_DEFAULT_SSC_MODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getDefaultSscMode()
    {
        return defaultSscMode;
    }

    @JsonProperty(JSON_PROPERTY_DEFAULT_SSC_MODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDefaultSscMode(String defaultSscMode)
    {
        this.defaultSscMode = defaultSscMode;
    }

    public SscModes allowedSscModes(List<String> allowedSscModes)
    {

        this.allowedSscModes = allowedSscModes;
        return this;
    }

    public SscModes addAllowedSscModesItem(String allowedSscModesItem)
    {
        if (this.allowedSscModes == null)
        {
            this.allowedSscModes = new ArrayList<>();
        }
        this.allowedSscModes.add(allowedSscModesItem);
        return this;
    }

    /**
     * Get allowedSscModes
     * 
     * @return allowedSscModes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ALLOWED_SSC_MODES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getAllowedSscModes()
    {
        return allowedSscModes;
    }

    @JsonProperty(JSON_PROPERTY_ALLOWED_SSC_MODES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAllowedSscModes(List<String> allowedSscModes)
    {
        this.allowedSscModes = allowedSscModes;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SscModes sscModes = (SscModes) o;
        return Objects.equals(this.defaultSscMode, sscModes.defaultSscMode) && Objects.equals(this.allowedSscModes, sscModes.allowedSscModes);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(defaultSscMode, allowedSscModes);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SscModes {\n");
        sb.append("    defaultSscMode: ").append(toIndentedString(defaultSscMode)).append("\n");
        sb.append("    allowedSscModes: ").append(toIndentedString(allowedSscModes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
