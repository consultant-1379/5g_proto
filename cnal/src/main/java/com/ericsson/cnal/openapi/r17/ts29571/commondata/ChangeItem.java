/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * It contains data which need to be changed.
 */
@ApiModel(description = "It contains data which need to be changed.")
@JsonPropertyOrder({ ChangeItem.JSON_PROPERTY_OP,
                     ChangeItem.JSON_PROPERTY_PATH,
                     ChangeItem.JSON_PROPERTY_FROM,
                     ChangeItem.JSON_PROPERTY_ORIG_VALUE,
                     ChangeItem.JSON_PROPERTY_NEW_VALUE })
public class ChangeItem
{
    public static final String JSON_PROPERTY_OP = "op";
    private String op;

    public static final String JSON_PROPERTY_PATH = "path";
    private String path;

    public static final String JSON_PROPERTY_FROM = "from";
    private String from;

    public static final String JSON_PROPERTY_ORIG_VALUE = "origValue";
    private JsonNullable<Object> origValue = JsonNullable.<Object>of(null);

    public static final String JSON_PROPERTY_NEW_VALUE = "newValue";
    private JsonNullable<Object> newValue = JsonNullable.<Object>of(null);

    public ChangeItem()
    {
    }

    public ChangeItem op(String op)
    {

        this.op = op;
        return this;
    }

    /**
     * Indicates the type of change to be performed.
     * 
     * @return op
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Indicates the type of change to be performed.")
    @JsonProperty(JSON_PROPERTY_OP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getOp()
    {
        return op;
    }

    @JsonProperty(JSON_PROPERTY_OP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setOp(String op)
    {
        this.op = op;
    }

    public ChangeItem path(String path)
    {

        this.path = path;
        return this;
    }

    /**
     * contains a JSON pointer value (as defined in IETF RFC 6901) that references a
     * target location within the resource on which the change has been applied.
     * 
     * @return path
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "contains a JSON pointer value (as defined in IETF RFC 6901) that references a target  location within the resource on which the change has been applied. ")
    @JsonProperty(JSON_PROPERTY_PATH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getPath()
    {
        return path;
    }

    @JsonProperty(JSON_PROPERTY_PATH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPath(String path)
    {
        this.path = path;
    }

    public ChangeItem from(String from)
    {

        this.from = from;
        return this;
    }

    /**
     * indicates the path of the source JSON element (according to JSON Pointer
     * syntax) being moved or copied to the location indicated by the
     * \&quot;path\&quot; attribute. It shall be present if the \&quot;op\&quot;
     * attribute is of value \&quot;MOVE\&quot;.
     * 
     * @return from
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicates the path of the source JSON element (according to JSON Pointer syntax)  being moved or copied to the location indicated by the \"path\" attribute. It shall  be present if the \"op\" attribute is of value \"MOVE\". ")
    @JsonProperty(JSON_PROPERTY_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFrom()
    {
        return from;
    }

    @JsonProperty(JSON_PROPERTY_FROM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFrom(String from)
    {
        this.from = from;
    }

    public ChangeItem origValue(Object origValue)
    {
        this.origValue = JsonNullable.<Object>of(origValue);

        return this;
    }

    /**
     * Get origValue
     * 
     * @return origValue
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public Object getOrigValue()
    {
        return origValue.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ORIG_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Object> getOrigValue_JsonNullable()
    {
        return origValue;
    }

    @JsonProperty(JSON_PROPERTY_ORIG_VALUE)
    public void setOrigValue_JsonNullable(JsonNullable<Object> origValue)
    {
        this.origValue = origValue;
    }

    public void setOrigValue(Object origValue)
    {
        this.origValue = JsonNullable.<Object>of(origValue);
    }

    public ChangeItem newValue(Object newValue)
    {
        this.newValue = JsonNullable.<Object>of(newValue);

        return this;
    }

    /**
     * Get newValue
     * 
     * @return newValue
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public Object getNewValue()
    {
        return newValue.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NEW_VALUE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Object> getNewValue_JsonNullable()
    {
        return newValue;
    }

    @JsonProperty(JSON_PROPERTY_NEW_VALUE)
    public void setNewValue_JsonNullable(JsonNullable<Object> newValue)
    {
        this.newValue = newValue;
    }

    public void setNewValue(Object newValue)
    {
        this.newValue = JsonNullable.<Object>of(newValue);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ChangeItem changeItem = (ChangeItem) o;
        return Objects.equals(this.op, changeItem.op) && Objects.equals(this.path, changeItem.path) && Objects.equals(this.from, changeItem.from)
               && equalsNullable(this.origValue, changeItem.origValue) && equalsNullable(this.newValue, changeItem.newValue);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(op, path, from, hashCodeNullable(origValue), hashCodeNullable(newValue));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ChangeItem {\n");
        sb.append("    op: ").append(toIndentedString(op)).append("\n");
        sb.append("    path: ").append(toIndentedString(path)).append("\n");
        sb.append("    from: ").append(toIndentedString(from)).append("\n");
        sb.append("    origValue: ").append(toIndentedString(origValue)).append("\n");
        sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
