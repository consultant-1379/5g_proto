/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.RouteToLocation;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.EasIpReplacementInfo;
import com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol.UpPathChgEvent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * This data type is defined in the same way as the AfRoutingRequirement data
 * type, but with the OpenAPI nullable property set to true and the spVal and
 * tempVals attributes defined as removable.
 */
@ApiModel(description = "This data type is defined in the same way as the AfRoutingRequirement data type, but with the OpenAPI nullable property set to true and the spVal and tempVals attributes defined as removable. ")
@JsonPropertyOrder({ AfRoutingRequirementRm.JSON_PROPERTY_APP_RELOC,
                     AfRoutingRequirementRm.JSON_PROPERTY_ROUTE_TO_LOCS,
                     AfRoutingRequirementRm.JSON_PROPERTY_SP_VAL,
                     AfRoutingRequirementRm.JSON_PROPERTY_TEMP_VALS,
                     AfRoutingRequirementRm.JSON_PROPERTY_UP_PATH_CHG_SUB,
                     AfRoutingRequirementRm.JSON_PROPERTY_ADDR_PRESER_IND,
                     AfRoutingRequirementRm.JSON_PROPERTY_SIM_CONN_IND,
                     AfRoutingRequirementRm.JSON_PROPERTY_SIM_CONN_TERM,
                     AfRoutingRequirementRm.JSON_PROPERTY_EAS_IP_REPLACE_INFOS,
                     AfRoutingRequirementRm.JSON_PROPERTY_EAS_REDIS_IND,
                     AfRoutingRequirementRm.JSON_PROPERTY_MAX_ALLOWED_UP_LAT })
public class AfRoutingRequirementRm
{
    public static final String JSON_PROPERTY_APP_RELOC = "appReloc";
    private Boolean appReloc;

    public static final String JSON_PROPERTY_ROUTE_TO_LOCS = "routeToLocs";
    private JsonNullable<List<RouteToLocation>> routeToLocs = JsonNullable.<List<RouteToLocation>>undefined();

    public static final String JSON_PROPERTY_SP_VAL = "spVal";
    private JsonNullable<SpatialValidityRm> spVal = JsonNullable.<SpatialValidityRm>undefined();

    public static final String JSON_PROPERTY_TEMP_VALS = "tempVals";
    private JsonNullable<List<TemporalValidity>> tempVals = JsonNullable.<List<TemporalValidity>>undefined();

    public static final String JSON_PROPERTY_UP_PATH_CHG_SUB = "upPathChgSub";
    private JsonNullable<UpPathChgEvent> upPathChgSub = JsonNullable.<UpPathChgEvent>undefined();

    public static final String JSON_PROPERTY_ADDR_PRESER_IND = "addrPreserInd";
    private JsonNullable<Boolean> addrPreserInd = JsonNullable.<Boolean>undefined();

    public static final String JSON_PROPERTY_SIM_CONN_IND = "simConnInd";
    private JsonNullable<Boolean> simConnInd = JsonNullable.<Boolean>undefined();

    public static final String JSON_PROPERTY_SIM_CONN_TERM = "simConnTerm";
    private JsonNullable<Integer> simConnTerm = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_EAS_IP_REPLACE_INFOS = "easIpReplaceInfos";
    private JsonNullable<List<EasIpReplacementInfo>> easIpReplaceInfos = JsonNullable.<List<EasIpReplacementInfo>>undefined();

    public static final String JSON_PROPERTY_EAS_REDIS_IND = "easRedisInd";
    private Boolean easRedisInd;

    public static final String JSON_PROPERTY_MAX_ALLOWED_UP_LAT = "maxAllowedUpLat";
    private JsonNullable<Integer> maxAllowedUpLat = JsonNullable.<Integer>undefined();

    public AfRoutingRequirementRm()
    {
    }

    public AfRoutingRequirementRm appReloc(Boolean appReloc)
    {

        this.appReloc = appReloc;
        return this;
    }

    /**
     * Get appReloc
     * 
     * @return appReloc
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_APP_RELOC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAppReloc()
    {
        return appReloc;
    }

    @JsonProperty(JSON_PROPERTY_APP_RELOC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppReloc(Boolean appReloc)
    {
        this.appReloc = appReloc;
    }

    public AfRoutingRequirementRm routeToLocs(List<RouteToLocation> routeToLocs)
    {
        this.routeToLocs = JsonNullable.<List<RouteToLocation>>of(routeToLocs);

        return this;
    }

    public AfRoutingRequirementRm addRouteToLocsItem(RouteToLocation routeToLocsItem)
    {
        if (this.routeToLocs == null || !this.routeToLocs.isPresent())
        {
            this.routeToLocs = JsonNullable.<List<RouteToLocation>>of(new ArrayList<>());
        }
        try
        {
            this.routeToLocs.get().add(routeToLocsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Get routeToLocs
     * 
     * @return routeToLocs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public List<RouteToLocation> getRouteToLocs()
    {
        return routeToLocs.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ROUTE_TO_LOCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<RouteToLocation>> getRouteToLocs_JsonNullable()
    {
        return routeToLocs;
    }

    @JsonProperty(JSON_PROPERTY_ROUTE_TO_LOCS)
    public void setRouteToLocs_JsonNullable(JsonNullable<List<RouteToLocation>> routeToLocs)
    {
        this.routeToLocs = routeToLocs;
    }

    public void setRouteToLocs(List<RouteToLocation> routeToLocs)
    {
        this.routeToLocs = JsonNullable.<List<RouteToLocation>>of(routeToLocs);
    }

    public AfRoutingRequirementRm spVal(SpatialValidityRm spVal)
    {
        this.spVal = JsonNullable.<SpatialValidityRm>of(spVal);

        return this;
    }

    /**
     * Get spVal
     * 
     * @return spVal
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public SpatialValidityRm getSpVal()
    {
        return spVal.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SP_VAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<SpatialValidityRm> getSpVal_JsonNullable()
    {
        return spVal;
    }

    @JsonProperty(JSON_PROPERTY_SP_VAL)
    public void setSpVal_JsonNullable(JsonNullable<SpatialValidityRm> spVal)
    {
        this.spVal = spVal;
    }

    public void setSpVal(SpatialValidityRm spVal)
    {
        this.spVal = JsonNullable.<SpatialValidityRm>of(spVal);
    }

    public AfRoutingRequirementRm tempVals(List<TemporalValidity> tempVals)
    {
        this.tempVals = JsonNullable.<List<TemporalValidity>>of(tempVals);

        return this;
    }

    public AfRoutingRequirementRm addTempValsItem(TemporalValidity tempValsItem)
    {
        if (this.tempVals == null || !this.tempVals.isPresent())
        {
            this.tempVals = JsonNullable.<List<TemporalValidity>>of(new ArrayList<>());
        }
        try
        {
            this.tempVals.get().add(tempValsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Get tempVals
     * 
     * @return tempVals
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public List<TemporalValidity> getTempVals()
    {
        return tempVals.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TEMP_VALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<TemporalValidity>> getTempVals_JsonNullable()
    {
        return tempVals;
    }

    @JsonProperty(JSON_PROPERTY_TEMP_VALS)
    public void setTempVals_JsonNullable(JsonNullable<List<TemporalValidity>> tempVals)
    {
        this.tempVals = tempVals;
    }

    public void setTempVals(List<TemporalValidity> tempVals)
    {
        this.tempVals = JsonNullable.<List<TemporalValidity>>of(tempVals);
    }

    public AfRoutingRequirementRm upPathChgSub(UpPathChgEvent upPathChgSub)
    {
        this.upPathChgSub = JsonNullable.<UpPathChgEvent>of(upPathChgSub);

        return this;
    }

    /**
     * Get upPathChgSub
     * 
     * @return upPathChgSub
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public UpPathChgEvent getUpPathChgSub()
    {
        return upPathChgSub.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_UP_PATH_CHG_SUB)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<UpPathChgEvent> getUpPathChgSub_JsonNullable()
    {
        return upPathChgSub;
    }

    @JsonProperty(JSON_PROPERTY_UP_PATH_CHG_SUB)
    public void setUpPathChgSub_JsonNullable(JsonNullable<UpPathChgEvent> upPathChgSub)
    {
        this.upPathChgSub = upPathChgSub;
    }

    public void setUpPathChgSub(UpPathChgEvent upPathChgSub)
    {
        this.upPathChgSub = JsonNullable.<UpPathChgEvent>of(upPathChgSub);
    }

    public AfRoutingRequirementRm addrPreserInd(Boolean addrPreserInd)
    {
        this.addrPreserInd = JsonNullable.<Boolean>of(addrPreserInd);

        return this;
    }

    /**
     * Get addrPreserInd
     * 
     * @return addrPreserInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public Boolean getAddrPreserInd()
    {
        return addrPreserInd.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ADDR_PRESER_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Boolean> getAddrPreserInd_JsonNullable()
    {
        return addrPreserInd;
    }

    @JsonProperty(JSON_PROPERTY_ADDR_PRESER_IND)
    public void setAddrPreserInd_JsonNullable(JsonNullable<Boolean> addrPreserInd)
    {
        this.addrPreserInd = addrPreserInd;
    }

    public void setAddrPreserInd(Boolean addrPreserInd)
    {
        this.addrPreserInd = JsonNullable.<Boolean>of(addrPreserInd);
    }

    public AfRoutingRequirementRm simConnInd(Boolean simConnInd)
    {
        this.simConnInd = JsonNullable.<Boolean>of(simConnInd);

        return this;
    }

    /**
     * Indicates whether simultaneous connectivity should be temporarily maintained
     * for the source and target PSA.
     * 
     * @return simConnInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether simultaneous connectivity should be temporarily maintained for the source and target PSA.")
    @JsonIgnore

    public Boolean getSimConnInd()
    {
        return simConnInd.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Boolean> getSimConnInd_JsonNullable()
    {
        return simConnInd;
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_IND)
    public void setSimConnInd_JsonNullable(JsonNullable<Boolean> simConnInd)
    {
        this.simConnInd = simConnInd;
    }

    public void setSimConnInd(Boolean simConnInd)
    {
        this.simConnInd = JsonNullable.<Boolean>of(simConnInd);
    }

    public AfRoutingRequirementRm simConnTerm(Integer simConnTerm)
    {
        this.simConnTerm = JsonNullable.<Integer>of(simConnTerm);

        return this;
    }

    /**
     * indicating a time in seconds with OpenAPI defined &#39;nullable: true&#39;
     * property.
     * 
     * @return simConnTerm
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds with OpenAPI defined 'nullable: true' property.")
    @JsonIgnore

    public Integer getSimConnTerm()
    {
        return simConnTerm.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_TERM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getSimConnTerm_JsonNullable()
    {
        return simConnTerm;
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_TERM)
    public void setSimConnTerm_JsonNullable(JsonNullable<Integer> simConnTerm)
    {
        this.simConnTerm = simConnTerm;
    }

    public void setSimConnTerm(Integer simConnTerm)
    {
        this.simConnTerm = JsonNullable.<Integer>of(simConnTerm);
    }

    public AfRoutingRequirementRm easIpReplaceInfos(List<EasIpReplacementInfo> easIpReplaceInfos)
    {
        this.easIpReplaceInfos = JsonNullable.<List<EasIpReplacementInfo>>of(easIpReplaceInfos);

        return this;
    }

    public AfRoutingRequirementRm addEasIpReplaceInfosItem(EasIpReplacementInfo easIpReplaceInfosItem)
    {
        if (this.easIpReplaceInfos == null || !this.easIpReplaceInfos.isPresent())
        {
            this.easIpReplaceInfos = JsonNullable.<List<EasIpReplacementInfo>>of(new ArrayList<>());
        }
        try
        {
            this.easIpReplaceInfos.get().add(easIpReplaceInfosItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Contains EAS IP replacement information.
     * 
     * @return easIpReplaceInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains EAS IP replacement information.")
    @JsonIgnore

    public List<EasIpReplacementInfo> getEasIpReplaceInfos()
    {
        return easIpReplaceInfos.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_EAS_IP_REPLACE_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<EasIpReplacementInfo>> getEasIpReplaceInfos_JsonNullable()
    {
        return easIpReplaceInfos;
    }

    @JsonProperty(JSON_PROPERTY_EAS_IP_REPLACE_INFOS)
    public void setEasIpReplaceInfos_JsonNullable(JsonNullable<List<EasIpReplacementInfo>> easIpReplaceInfos)
    {
        this.easIpReplaceInfos = easIpReplaceInfos;
    }

    public void setEasIpReplaceInfos(List<EasIpReplacementInfo> easIpReplaceInfos)
    {
        this.easIpReplaceInfos = JsonNullable.<List<EasIpReplacementInfo>>of(easIpReplaceInfos);
    }

    public AfRoutingRequirementRm easRedisInd(Boolean easRedisInd)
    {

        this.easRedisInd = easRedisInd;
        return this;
    }

    /**
     * Indicates the EAS rediscovery is required.
     * 
     * @return easRedisInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the EAS rediscovery is required.")
    @JsonProperty(JSON_PROPERTY_EAS_REDIS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getEasRedisInd()
    {
        return easRedisInd;
    }

    @JsonProperty(JSON_PROPERTY_EAS_REDIS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEasRedisInd(Boolean easRedisInd)
    {
        this.easRedisInd = easRedisInd;
    }

    public AfRoutingRequirementRm maxAllowedUpLat(Integer maxAllowedUpLat)
    {
        this.maxAllowedUpLat = JsonNullable.<Integer>of(maxAllowedUpLat);

        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with
     * the OpenAPI &#39;nullable: true&#39; property. minimum: 0
     * 
     * @return maxAllowedUpLat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property. ")
    @JsonIgnore

    public Integer getMaxAllowedUpLat()
    {
        return maxAllowedUpLat.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_MAX_ALLOWED_UP_LAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getMaxAllowedUpLat_JsonNullable()
    {
        return maxAllowedUpLat;
    }

    @JsonProperty(JSON_PROPERTY_MAX_ALLOWED_UP_LAT)
    public void setMaxAllowedUpLat_JsonNullable(JsonNullable<Integer> maxAllowedUpLat)
    {
        this.maxAllowedUpLat = maxAllowedUpLat;
    }

    public void setMaxAllowedUpLat(Integer maxAllowedUpLat)
    {
        this.maxAllowedUpLat = JsonNullable.<Integer>of(maxAllowedUpLat);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AfRoutingRequirementRm afRoutingRequirementRm = (AfRoutingRequirementRm) o;
        return Objects.equals(this.appReloc, afRoutingRequirementRm.appReloc) && equalsNullable(this.routeToLocs, afRoutingRequirementRm.routeToLocs)
               && equalsNullable(this.spVal, afRoutingRequirementRm.spVal) && equalsNullable(this.tempVals, afRoutingRequirementRm.tempVals)
               && equalsNullable(this.upPathChgSub, afRoutingRequirementRm.upPathChgSub)
               && equalsNullable(this.addrPreserInd, afRoutingRequirementRm.addrPreserInd) && equalsNullable(this.simConnInd, afRoutingRequirementRm.simConnInd)
               && equalsNullable(this.simConnTerm, afRoutingRequirementRm.simConnTerm)
               && equalsNullable(this.easIpReplaceInfos, afRoutingRequirementRm.easIpReplaceInfos)
               && Objects.equals(this.easRedisInd, afRoutingRequirementRm.easRedisInd)
               && equalsNullable(this.maxAllowedUpLat, afRoutingRequirementRm.maxAllowedUpLat);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(appReloc,
                            hashCodeNullable(routeToLocs),
                            hashCodeNullable(spVal),
                            hashCodeNullable(tempVals),
                            hashCodeNullable(upPathChgSub),
                            hashCodeNullable(addrPreserInd),
                            hashCodeNullable(simConnInd),
                            hashCodeNullable(simConnTerm),
                            hashCodeNullable(easIpReplaceInfos),
                            easRedisInd,
                            hashCodeNullable(maxAllowedUpLat));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AfRoutingRequirementRm {\n");
        sb.append("    appReloc: ").append(toIndentedString(appReloc)).append("\n");
        sb.append("    routeToLocs: ").append(toIndentedString(routeToLocs)).append("\n");
        sb.append("    spVal: ").append(toIndentedString(spVal)).append("\n");
        sb.append("    tempVals: ").append(toIndentedString(tempVals)).append("\n");
        sb.append("    upPathChgSub: ").append(toIndentedString(upPathChgSub)).append("\n");
        sb.append("    addrPreserInd: ").append(toIndentedString(addrPreserInd)).append("\n");
        sb.append("    simConnInd: ").append(toIndentedString(simConnInd)).append("\n");
        sb.append("    simConnTerm: ").append(toIndentedString(simConnTerm)).append("\n");
        sb.append("    easIpReplaceInfos: ").append(toIndentedString(easIpReplaceInfos)).append("\n");
        sb.append("    easRedisInd: ").append(toIndentedString(easRedisInd)).append("\n");
        sb.append("    maxAllowedUpLat: ").append(toIndentedString(maxAllowedUpLat)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
