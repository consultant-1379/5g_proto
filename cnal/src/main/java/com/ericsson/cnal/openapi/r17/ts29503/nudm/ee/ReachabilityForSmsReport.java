/*
 * Nudm_EE
 * Nudm Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.ee;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.AccessType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReachabilityForSmsReport
 */
@JsonPropertyOrder({ ReachabilityForSmsReport.JSON_PROPERTY_SMSF_ACCESS_TYPE, ReachabilityForSmsReport.JSON_PROPERTY_MAX_AVAILABILITY_TIME })
public class ReachabilityForSmsReport
{
    public static final String JSON_PROPERTY_SMSF_ACCESS_TYPE = "smsfAccessType";
    private AccessType smsfAccessType;

    public static final String JSON_PROPERTY_MAX_AVAILABILITY_TIME = "maxAvailabilityTime";
    private OffsetDateTime maxAvailabilityTime;

    public ReachabilityForSmsReport()
    {
    }

    public ReachabilityForSmsReport smsfAccessType(AccessType smsfAccessType)
    {

        this.smsfAccessType = smsfAccessType;
        return this;
    }

    /**
     * Get smsfAccessType
     * 
     * @return smsfAccessType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_SMSF_ACCESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public AccessType getSmsfAccessType()
    {
        return smsfAccessType;
    }

    @JsonProperty(JSON_PROPERTY_SMSF_ACCESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSmsfAccessType(AccessType smsfAccessType)
    {
        this.smsfAccessType = smsfAccessType;
    }

    public ReachabilityForSmsReport maxAvailabilityTime(OffsetDateTime maxAvailabilityTime)
    {

        this.maxAvailabilityTime = maxAvailabilityTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return maxAvailabilityTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_MAX_AVAILABILITY_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getMaxAvailabilityTime()
    {
        return maxAvailabilityTime;
    }

    @JsonProperty(JSON_PROPERTY_MAX_AVAILABILITY_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxAvailabilityTime(OffsetDateTime maxAvailabilityTime)
    {
        this.maxAvailabilityTime = maxAvailabilityTime;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ReachabilityForSmsReport reachabilityForSmsReport = (ReachabilityForSmsReport) o;
        return Objects.equals(this.smsfAccessType, reachabilityForSmsReport.smsfAccessType)
               && Objects.equals(this.maxAvailabilityTime, reachabilityForSmsReport.maxAvailabilityTime);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(smsfAccessType, maxAvailabilityTime);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReachabilityForSmsReport {\n");
        sb.append("    smsfAccessType: ").append(toIndentedString(smsfAccessType)).append("\n");
        sb.append("    maxAvailabilityTime: ").append(toIndentedString(maxAvailabilityTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
