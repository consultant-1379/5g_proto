/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains EAS IP replacement information for a Source and a Target EAS.
 */
@ApiModel(description = "Contains EAS IP replacement information for a Source and a Target EAS.")
@JsonPropertyOrder({ EasIpReplacementInfo.JSON_PROPERTY_SOURCE, EasIpReplacementInfo.JSON_PROPERTY_TARGET })
public class EasIpReplacementInfo
{
    public static final String JSON_PROPERTY_SOURCE = "source";
    private EasServerAddress source;

    public static final String JSON_PROPERTY_TARGET = "target";
    private EasServerAddress target;

    public EasIpReplacementInfo()
    {
    }

    public EasIpReplacementInfo source(EasServerAddress source)
    {

        this.source = source;
        return this;
    }

    /**
     * Get source
     * 
     * @return source
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_SOURCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public EasServerAddress getSource()
    {
        return source;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSource(EasServerAddress source)
    {
        this.source = source;
    }

    public EasIpReplacementInfo target(EasServerAddress target)
    {

        this.target = target;
        return this;
    }

    /**
     * Get target
     * 
     * @return target
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_TARGET)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public EasServerAddress getTarget()
    {
        return target;
    }

    @JsonProperty(JSON_PROPERTY_TARGET)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTarget(EasServerAddress target)
    {
        this.target = target;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        EasIpReplacementInfo easIpReplacementInfo = (EasIpReplacementInfo) o;
        return Objects.equals(this.source, easIpReplacementInfo.source) && Objects.equals(this.target, easIpReplacementInfo.target);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(source, target);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EasIpReplacementInfo {\n");
        sb.append("    source: ").append(toIndentedString(source)).append("\n");
        sb.append("    target: ").append(toIndentedString(target)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
