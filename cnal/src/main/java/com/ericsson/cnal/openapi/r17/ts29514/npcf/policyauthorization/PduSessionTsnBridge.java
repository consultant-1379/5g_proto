/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol.BridgeManagementContainer;
import com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol.TsnBridgeInfo;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol.PortManagementContainer;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the new TSC user plane node information and may contain the DS-TT
 * port and/or NW-TT port management information.
 */
@ApiModel(description = "Contains the new TSC user plane node information and may contain the DS-TT port and/or NW-TT port management information.")
@JsonPropertyOrder({ PduSessionTsnBridge.JSON_PROPERTY_TSN_BRIDGE_INFO,
                     PduSessionTsnBridge.JSON_PROPERTY_TSN_BRIDGE_MAN_CONT,
                     PduSessionTsnBridge.JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT,
                     PduSessionTsnBridge.JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS,
                     PduSessionTsnBridge.JSON_PROPERTY_UE_IPV4_ADDR,
                     PduSessionTsnBridge.JSON_PROPERTY_DNN,
                     PduSessionTsnBridge.JSON_PROPERTY_SNSSAI,
                     PduSessionTsnBridge.JSON_PROPERTY_IP_DOMAIN,
                     PduSessionTsnBridge.JSON_PROPERTY_UE_IPV6_ADDR_PREFIX })
public class PduSessionTsnBridge
{
    public static final String JSON_PROPERTY_TSN_BRIDGE_INFO = "tsnBridgeInfo";
    private TsnBridgeInfo tsnBridgeInfo;

    public static final String JSON_PROPERTY_TSN_BRIDGE_MAN_CONT = "tsnBridgeManCont";
    private BridgeManagementContainer tsnBridgeManCont;

    public static final String JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT = "tsnPortManContDstt";
    private PortManagementContainer tsnPortManContDstt;

    public static final String JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS = "tsnPortManContNwtts";
    private List<PortManagementContainer> tsnPortManContNwtts = null;

    public static final String JSON_PROPERTY_UE_IPV4_ADDR = "ueIpv4Addr";
    private String ueIpv4Addr;

    public static final String JSON_PROPERTY_DNN = "dnn";
    private String dnn;

    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_IP_DOMAIN = "ipDomain";
    private String ipDomain;

    public static final String JSON_PROPERTY_UE_IPV6_ADDR_PREFIX = "ueIpv6AddrPrefix";
    private String ueIpv6AddrPrefix;

    public PduSessionTsnBridge()
    {
    }

    public PduSessionTsnBridge tsnBridgeInfo(TsnBridgeInfo tsnBridgeInfo)
    {

        this.tsnBridgeInfo = tsnBridgeInfo;
        return this;
    }

    /**
     * Get tsnBridgeInfo
     * 
     * @return tsnBridgeInfo
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public TsnBridgeInfo getTsnBridgeInfo()
    {
        return tsnBridgeInfo;
    }

    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTsnBridgeInfo(TsnBridgeInfo tsnBridgeInfo)
    {
        this.tsnBridgeInfo = tsnBridgeInfo;
    }

    public PduSessionTsnBridge tsnBridgeManCont(BridgeManagementContainer tsnBridgeManCont)
    {

        this.tsnBridgeManCont = tsnBridgeManCont;
        return this;
    }

    /**
     * Get tsnBridgeManCont
     * 
     * @return tsnBridgeManCont
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BridgeManagementContainer getTsnBridgeManCont()
    {
        return tsnBridgeManCont;
    }

    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnBridgeManCont(BridgeManagementContainer tsnBridgeManCont)
    {
        this.tsnBridgeManCont = tsnBridgeManCont;
    }

    public PduSessionTsnBridge tsnPortManContDstt(PortManagementContainer tsnPortManContDstt)
    {

        this.tsnPortManContDstt = tsnPortManContDstt;
        return this;
    }

    /**
     * Get tsnPortManContDstt
     * 
     * @return tsnPortManContDstt
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PortManagementContainer getTsnPortManContDstt()
    {
        return tsnPortManContDstt;
    }

    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnPortManContDstt(PortManagementContainer tsnPortManContDstt)
    {
        this.tsnPortManContDstt = tsnPortManContDstt;
    }

    public PduSessionTsnBridge tsnPortManContNwtts(List<PortManagementContainer> tsnPortManContNwtts)
    {

        this.tsnPortManContNwtts = tsnPortManContNwtts;
        return this;
    }

    public PduSessionTsnBridge addTsnPortManContNwttsItem(PortManagementContainer tsnPortManContNwttsItem)
    {
        if (this.tsnPortManContNwtts == null)
        {
            this.tsnPortManContNwtts = new ArrayList<>();
        }
        this.tsnPortManContNwtts.add(tsnPortManContNwttsItem);
        return this;
    }

    /**
     * Get tsnPortManContNwtts
     * 
     * @return tsnPortManContNwtts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PortManagementContainer> getTsnPortManContNwtts()
    {
        return tsnPortManContNwtts;
    }

    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnPortManContNwtts(List<PortManagementContainer> tsnPortManContNwtts)
    {
        this.tsnPortManContNwtts = tsnPortManContNwtts;
    }

    public PduSessionTsnBridge ueIpv4Addr(String ueIpv4Addr)
    {

        this.ueIpv4Addr = ueIpv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return ueIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUeIpv4Addr()
    {
        return ueIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_UE_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeIpv4Addr(String ueIpv4Addr)
    {
        this.ueIpv4Addr = ueIpv4Addr;
    }

    public PduSessionTsnBridge dnn(String dnn)
    {

        this.dnn = dnn;
        return this;
    }

    /**
     * String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;
     * it shall contain either a DNN Network Identifier, or a full DNN with both the
     * Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003
     * clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are
     * separated by dots (e.g. \&quot;Label1.Label2.Label3\&quot;).
     * 
     * @return dnn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). ")
    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnn()
    {
        return dnn;
    }

    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnn(String dnn)
    {
        this.dnn = dnn;
    }

    public PduSessionTsnBridge snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public PduSessionTsnBridge ipDomain(String ipDomain)
    {

        this.ipDomain = ipDomain;
        return this;
    }

    /**
     * IPv4 address domain identifier.
     * 
     * @return ipDomain
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "IPv4 address domain identifier.")
    @JsonProperty(JSON_PROPERTY_IP_DOMAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getIpDomain()
    {
        return ipDomain;
    }

    @JsonProperty(JSON_PROPERTY_IP_DOMAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpDomain(String ipDomain)
    {
        this.ipDomain = ipDomain;
    }

    public PduSessionTsnBridge ueIpv6AddrPrefix(String ueIpv6AddrPrefix)
    {

        this.ueIpv6AddrPrefix = ueIpv6AddrPrefix;
        return this;
    }

    /**
     * Get ueIpv6AddrPrefix
     * 
     * @return ueIpv6AddrPrefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UE_IPV6_ADDR_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUeIpv6AddrPrefix()
    {
        return ueIpv6AddrPrefix;
    }

    @JsonProperty(JSON_PROPERTY_UE_IPV6_ADDR_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeIpv6AddrPrefix(String ueIpv6AddrPrefix)
    {
        this.ueIpv6AddrPrefix = ueIpv6AddrPrefix;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PduSessionTsnBridge pduSessionTsnBridge = (PduSessionTsnBridge) o;
        return Objects.equals(this.tsnBridgeInfo, pduSessionTsnBridge.tsnBridgeInfo)
               && Objects.equals(this.tsnBridgeManCont, pduSessionTsnBridge.tsnBridgeManCont)
               && Objects.equals(this.tsnPortManContDstt, pduSessionTsnBridge.tsnPortManContDstt)
               && Objects.equals(this.tsnPortManContNwtts, pduSessionTsnBridge.tsnPortManContNwtts)
               && Objects.equals(this.ueIpv4Addr, pduSessionTsnBridge.ueIpv4Addr) && Objects.equals(this.dnn, pduSessionTsnBridge.dnn)
               && Objects.equals(this.snssai, pduSessionTsnBridge.snssai) && Objects.equals(this.ipDomain, pduSessionTsnBridge.ipDomain)
               && Objects.equals(this.ueIpv6AddrPrefix, pduSessionTsnBridge.ueIpv6AddrPrefix);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(tsnBridgeInfo, tsnBridgeManCont, tsnPortManContDstt, tsnPortManContNwtts, ueIpv4Addr, dnn, snssai, ipDomain, ueIpv6AddrPrefix);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PduSessionTsnBridge {\n");
        sb.append("    tsnBridgeInfo: ").append(toIndentedString(tsnBridgeInfo)).append("\n");
        sb.append("    tsnBridgeManCont: ").append(toIndentedString(tsnBridgeManCont)).append("\n");
        sb.append("    tsnPortManContDstt: ").append(toIndentedString(tsnPortManContDstt)).append("\n");
        sb.append("    tsnPortManContNwtts: ").append(toIndentedString(tsnPortManContNwtts)).append("\n");
        sb.append("    ueIpv4Addr: ").append(toIndentedString(ueIpv4Addr)).append("\n");
        sb.append("    dnn: ").append(toIndentedString(dnn)).append("\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    ipDomain: ").append(toIndentedString(ipDomain)).append("\n");
        sb.append("    ueIpv6AddrPrefix: ").append(toIndentedString(ueIpv6AddrPrefix)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
