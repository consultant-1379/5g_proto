/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the dispersion analytics requirements.
 */
@ApiModel(description = "Represents the dispersion analytics requirements.")
@JsonPropertyOrder({ DispersionRequirement.JSON_PROPERTY_DISPER_TYPE,
                     DispersionRequirement.JSON_PROPERTY_CLASS_CRITERS,
                     DispersionRequirement.JSON_PROPERTY_RANK_CRITERS,
                     DispersionRequirement.JSON_PROPERTY_DISP_ORDER_CRITER,
                     DispersionRequirement.JSON_PROPERTY_ORDER })
public class DispersionRequirement
{
    public static final String JSON_PROPERTY_DISPER_TYPE = "disperType";
    private Object disperType;

    public static final String JSON_PROPERTY_CLASS_CRITERS = "classCriters";
    private List<ClassCriterion> classCriters = null;

    public static final String JSON_PROPERTY_RANK_CRITERS = "rankCriters";
    private List<RankingCriterion> rankCriters = null;

    public static final String JSON_PROPERTY_DISP_ORDER_CRITER = "dispOrderCriter";
    private String dispOrderCriter;

    public static final String JSON_PROPERTY_ORDER = "order";
    private String order;

    public DispersionRequirement()
    {
    }

    public DispersionRequirement disperType(Object disperType)
    {

        this.disperType = disperType;
        return this;
    }

    /**
     * Get disperType
     * 
     * @return disperType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_DISPER_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Object getDisperType()
    {
        return disperType;
    }

    @JsonProperty(JSON_PROPERTY_DISPER_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDisperType(Object disperType)
    {
        this.disperType = disperType;
    }

    public DispersionRequirement classCriters(List<ClassCriterion> classCriters)
    {

        this.classCriters = classCriters;
        return this;
    }

    public DispersionRequirement addClassCritersItem(ClassCriterion classCritersItem)
    {
        if (this.classCriters == null)
        {
            this.classCriters = new ArrayList<>();
        }
        this.classCriters.add(classCritersItem);
        return this;
    }

    /**
     * Get classCriters
     * 
     * @return classCriters
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CLASS_CRITERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ClassCriterion> getClassCriters()
    {
        return classCriters;
    }

    @JsonProperty(JSON_PROPERTY_CLASS_CRITERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setClassCriters(List<ClassCriterion> classCriters)
    {
        this.classCriters = classCriters;
    }

    public DispersionRequirement rankCriters(List<RankingCriterion> rankCriters)
    {

        this.rankCriters = rankCriters;
        return this;
    }

    public DispersionRequirement addRankCritersItem(RankingCriterion rankCritersItem)
    {
        if (this.rankCriters == null)
        {
            this.rankCriters = new ArrayList<>();
        }
        this.rankCriters.add(rankCritersItem);
        return this;
    }

    /**
     * Get rankCriters
     * 
     * @return rankCriters
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RANK_CRITERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<RankingCriterion> getRankCriters()
    {
        return rankCriters;
    }

    @JsonProperty(JSON_PROPERTY_RANK_CRITERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRankCriters(List<RankingCriterion> rankCriters)
    {
        this.rankCriters = rankCriters;
    }

    public DispersionRequirement dispOrderCriter(String dispOrderCriter)
    {

        this.dispOrderCriter = dispOrderCriter;
        return this;
    }

    /**
     * Possible values are: - TIME_SLOT_START: Indicates the order of time slot
     * start. - DISPERSION: Indicates the order of data/transaction dispersion. -
     * CLASSIFICATION: Indicates the order of data/transaction classification. -
     * RANKING: Indicates the order of data/transaction ranking. -
     * PERCENTILE_RANKING: Indicates the order of data/transaction percentile
     * ranking.
     * 
     * @return dispOrderCriter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - TIME_SLOT_START: Indicates the order of time slot start. - DISPERSION: Indicates the order of data/transaction dispersion. - CLASSIFICATION: Indicates the order of data/transaction classification. - RANKING: Indicates the order of data/transaction ranking. - PERCENTILE_RANKING: Indicates the order of data/transaction percentile ranking. ")
    @JsonProperty(JSON_PROPERTY_DISP_ORDER_CRITER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDispOrderCriter()
    {
        return dispOrderCriter;
    }

    @JsonProperty(JSON_PROPERTY_DISP_ORDER_CRITER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDispOrderCriter(String dispOrderCriter)
    {
        this.dispOrderCriter = dispOrderCriter;
    }

    public DispersionRequirement order(String order)
    {

        this.order = order;
        return this;
    }

    /**
     * Possible values are: - ASCENDING: Threshold is crossed in ascending
     * direction. - DESCENDING: Threshold is crossed in descending direction. -
     * CROSSED: Threshold is crossed either in ascending or descending direction.
     * 
     * @return order
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - ASCENDING: Threshold is crossed in ascending direction. - DESCENDING: Threshold is crossed in descending direction. - CROSSED: Threshold is crossed either in ascending or descending direction. ")
    @JsonProperty(JSON_PROPERTY_ORDER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOrder()
    {
        return order;
    }

    @JsonProperty(JSON_PROPERTY_ORDER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOrder(String order)
    {
        this.order = order;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        DispersionRequirement dispersionRequirement = (DispersionRequirement) o;
        return Objects.equals(this.disperType, dispersionRequirement.disperType) && Objects.equals(this.classCriters, dispersionRequirement.classCriters)
               && Objects.equals(this.rankCriters, dispersionRequirement.rankCriters)
               && Objects.equals(this.dispOrderCriter, dispersionRequirement.dispOrderCriter) && Objects.equals(this.order, dispersionRequirement.order);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(disperType, classCriters, rankCriters, dispOrderCriter, order);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class DispersionRequirement {\n");
        sb.append("    disperType: ").append(toIndentedString(disperType)).append("\n");
        sb.append("    classCriters: ").append(toIndentedString(classCriters)).append("\n");
        sb.append("    rankCriters: ").append(toIndentedString(rankCriters)).append("\n");
        sb.append("    dispOrderCriter: ").append(toIndentedString(dispOrderCriter)).append("\n");
        sb.append("    order: ").append(toIndentedString(order)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
