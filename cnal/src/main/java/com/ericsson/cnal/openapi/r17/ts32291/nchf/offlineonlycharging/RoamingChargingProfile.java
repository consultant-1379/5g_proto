/*
 * Nchf_OfflineOnlyCharging
 * OfflineOnlyCharging Service Â© 20212022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts32291.nchf.offlineonlycharging;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RoamingChargingProfile
 */
@JsonPropertyOrder({ RoamingChargingProfile.JSON_PROPERTY_TRIGGERS, RoamingChargingProfile.JSON_PROPERTY_PARTIAL_RECORD_METHOD })
public class RoamingChargingProfile
{
    public static final String JSON_PROPERTY_TRIGGERS = "triggers";
    private List<Trigger> triggers = null;

    public static final String JSON_PROPERTY_PARTIAL_RECORD_METHOD = "partialRecordMethod";
    private String partialRecordMethod;

    public RoamingChargingProfile()
    {
    }

    public RoamingChargingProfile triggers(List<Trigger> triggers)
    {

        this.triggers = triggers;
        return this;
    }

    public RoamingChargingProfile addTriggersItem(Trigger triggersItem)
    {
        if (this.triggers == null)
        {
            this.triggers = new ArrayList<>();
        }
        this.triggers.add(triggersItem);
        return this;
    }

    /**
     * Get triggers
     * 
     * @return triggers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TRIGGERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Trigger> getTriggers()
    {
        return triggers;
    }

    @JsonProperty(JSON_PROPERTY_TRIGGERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTriggers(List<Trigger> triggers)
    {
        this.triggers = triggers;
    }

    public RoamingChargingProfile partialRecordMethod(String partialRecordMethod)
    {

        this.partialRecordMethod = partialRecordMethod;
        return this;
    }

    /**
     * Get partialRecordMethod
     * 
     * @return partialRecordMethod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PARTIAL_RECORD_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPartialRecordMethod()
    {
        return partialRecordMethod;
    }

    @JsonProperty(JSON_PROPERTY_PARTIAL_RECORD_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPartialRecordMethod(String partialRecordMethod)
    {
        this.partialRecordMethod = partialRecordMethod;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RoamingChargingProfile roamingChargingProfile = (RoamingChargingProfile) o;
        return Objects.equals(this.triggers, roamingChargingProfile.triggers)
               && Objects.equals(this.partialRecordMethod, roamingChargingProfile.partialRecordMethod);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(triggers, partialRecordMethod);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RoamingChargingProfile {\n");
        sb.append("    triggers: ").append(toIndentedString(triggers)).append("\n");
        sb.append("    partialRecordMethod: ").append(toIndentedString(partialRecordMethod)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
