/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The redundant transmission experience per Time Slot.
 */
@ApiModel(description = "The redundant transmission experience per Time Slot.")
@JsonPropertyOrder({ RedundantTransmissionExpPerTS.JSON_PROPERTY_TS_START,
                     RedundantTransmissionExpPerTS.JSON_PROPERTY_TS_DURATION,
                     RedundantTransmissionExpPerTS.JSON_PROPERTY_OBSV_RED_TRANS_EXP,
                     RedundantTransmissionExpPerTS.JSON_PROPERTY_RED_TRANS_STATUS,
                     RedundantTransmissionExpPerTS.JSON_PROPERTY_UE_RATIO,
                     RedundantTransmissionExpPerTS.JSON_PROPERTY_CONFIDENCE })
public class RedundantTransmissionExpPerTS
{
    public static final String JSON_PROPERTY_TS_START = "tsStart";
    private OffsetDateTime tsStart;

    public static final String JSON_PROPERTY_TS_DURATION = "tsDuration";
    private Integer tsDuration;

    public static final String JSON_PROPERTY_OBSV_RED_TRANS_EXP = "obsvRedTransExp";
    private ObservedRedundantTransExp obsvRedTransExp;

    public static final String JSON_PROPERTY_RED_TRANS_STATUS = "redTransStatus";
    private Boolean redTransStatus;

    public static final String JSON_PROPERTY_UE_RATIO = "ueRatio";
    private Integer ueRatio;

    public static final String JSON_PROPERTY_CONFIDENCE = "confidence";
    private Integer confidence;

    public RedundantTransmissionExpPerTS()
    {
    }

    public RedundantTransmissionExpPerTS tsStart(OffsetDateTime tsStart)
    {

        this.tsStart = tsStart;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return tsStart
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TS_START)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTsStart()
    {
        return tsStart;
    }

    @JsonProperty(JSON_PROPERTY_TS_START)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTsStart(OffsetDateTime tsStart)
    {
        this.tsStart = tsStart;
    }

    public RedundantTransmissionExpPerTS tsDuration(Integer tsDuration)
    {

        this.tsDuration = tsDuration;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return tsDuration
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_TS_DURATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Integer getTsDuration()
    {
        return tsDuration;
    }

    @JsonProperty(JSON_PROPERTY_TS_DURATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTsDuration(Integer tsDuration)
    {
        this.tsDuration = tsDuration;
    }

    public RedundantTransmissionExpPerTS obsvRedTransExp(ObservedRedundantTransExp obsvRedTransExp)
    {

        this.obsvRedTransExp = obsvRedTransExp;
        return this;
    }

    /**
     * Get obsvRedTransExp
     * 
     * @return obsvRedTransExp
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_OBSV_RED_TRANS_EXP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public ObservedRedundantTransExp getObsvRedTransExp()
    {
        return obsvRedTransExp;
    }

    @JsonProperty(JSON_PROPERTY_OBSV_RED_TRANS_EXP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setObsvRedTransExp(ObservedRedundantTransExp obsvRedTransExp)
    {
        this.obsvRedTransExp = obsvRedTransExp;
    }

    public RedundantTransmissionExpPerTS redTransStatus(Boolean redTransStatus)
    {

        this.redTransStatus = redTransStatus;
        return this;
    }

    /**
     * Redundant Transmission Status. Set to \&quot;true\&quot; if redundant
     * transmission was activated, otherwise set to \&quot;false\&quot;. Default
     * value is \&quot;false\&quot; if omitted.
     * 
     * @return redTransStatus
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Redundant Transmission Status. Set to \"true\" if redundant transmission was activated, otherwise set to \"false\". Default value is \"false\" if omitted. ")
    @JsonProperty(JSON_PROPERTY_RED_TRANS_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRedTransStatus()
    {
        return redTransStatus;
    }

    @JsonProperty(JSON_PROPERTY_RED_TRANS_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRedTransStatus(Boolean redTransStatus)
    {
        this.redTransStatus = redTransStatus;
    }

    public RedundantTransmissionExpPerTS ueRatio(Integer ueRatio)
    {

        this.ueRatio = ueRatio;
        return this;
    }

    /**
     * Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS
     * 23.502), expressed in percent. minimum: 1 maximum: 100
     * 
     * @return ueRatio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  ")
    @JsonProperty(JSON_PROPERTY_UE_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getUeRatio()
    {
        return ueRatio;
    }

    @JsonProperty(JSON_PROPERTY_UE_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeRatio(Integer ueRatio)
    {
        this.ueRatio = ueRatio;
    }

    public RedundantTransmissionExpPerTS confidence(Integer confidence)
    {

        this.confidence = confidence;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return confidence
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_CONFIDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getConfidence()
    {
        return confidence;
    }

    @JsonProperty(JSON_PROPERTY_CONFIDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConfidence(Integer confidence)
    {
        this.confidence = confidence;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RedundantTransmissionExpPerTS redundantTransmissionExpPerTS = (RedundantTransmissionExpPerTS) o;
        return Objects.equals(this.tsStart, redundantTransmissionExpPerTS.tsStart) && Objects.equals(this.tsDuration, redundantTransmissionExpPerTS.tsDuration)
               && Objects.equals(this.obsvRedTransExp, redundantTransmissionExpPerTS.obsvRedTransExp)
               && Objects.equals(this.redTransStatus, redundantTransmissionExpPerTS.redTransStatus)
               && Objects.equals(this.ueRatio, redundantTransmissionExpPerTS.ueRatio)
               && Objects.equals(this.confidence, redundantTransmissionExpPerTS.confidence);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(tsStart, tsDuration, obsvRedTransExp, redTransStatus, ueRatio, confidence);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RedundantTransmissionExpPerTS {\n");
        sb.append("    tsStart: ").append(toIndentedString(tsStart)).append("\n");
        sb.append("    tsDuration: ").append(toIndentedString(tsDuration)).append("\n");
        sb.append("    obsvRedTransExp: ").append(toIndentedString(obsvRedTransExp)).append("\n");
        sb.append("    redTransStatus: ").append(toIndentedString(redTransStatus)).append("\n");
        sb.append("    ueRatio: ").append(toIndentedString(ueRatio)).append("\n");
        sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
