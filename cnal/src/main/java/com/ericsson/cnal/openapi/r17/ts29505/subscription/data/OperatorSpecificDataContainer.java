/*
 * Unified Data Repository Service API file for subscription data
 * Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29505.subscription.data;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Container for operator specific data.
 */
@ApiModel(description = "Container for operator specific data.")
@JsonPropertyOrder({ OperatorSpecificDataContainer.JSON_PROPERTY_DATA_TYPE,
                     OperatorSpecificDataContainer.JSON_PROPERTY_DATA_TYPE_DEFINITION,
                     OperatorSpecificDataContainer.JSON_PROPERTY_VALUE,
                     OperatorSpecificDataContainer.JSON_PROPERTY_SUPPORTED_FEATURES,
                     OperatorSpecificDataContainer.JSON_PROPERTY_RESET_IDS })
public class OperatorSpecificDataContainer
{
    /**
     * Gets or Sets dataType
     */
    public enum DataTypeEnum
    {
        STRING("string"),

        INTEGER("integer"),

        NUMBER("number"),

        BOOLEAN("boolean"),

        OBJECT("object"),

        ARRAY("array");

        private String value;

        DataTypeEnum(String value)
        {
            this.value = value;
        }

        @JsonValue
        public String getValue()
        {
            return value;
        }

        @Override
        public String toString()
        {
            return String.valueOf(value);
        }

        @JsonCreator
        public static DataTypeEnum fromValue(String value)
        {
            for (DataTypeEnum b : DataTypeEnum.values())
            {
                if (b.value.equals(value))
                {
                    return b;
                }
            }
            throw new IllegalArgumentException("Unexpected value '" + value + "'");
        }
    }

    public static final String JSON_PROPERTY_DATA_TYPE = "dataType";
    private DataTypeEnum dataType;

    public static final String JSON_PROPERTY_DATA_TYPE_DEFINITION = "dataTypeDefinition";
    private String dataTypeDefinition;

    public static final String JSON_PROPERTY_VALUE = "value";
    private Object value;

    public static final String JSON_PROPERTY_SUPPORTED_FEATURES = "supportedFeatures";
    private String supportedFeatures;

    public static final String JSON_PROPERTY_RESET_IDS = "resetIds";
    private List<String> resetIds = null;

    public OperatorSpecificDataContainer()
    {
    }

    public OperatorSpecificDataContainer dataType(DataTypeEnum dataType)
    {

        this.dataType = dataType;
        return this;
    }

    /**
     * Get dataType
     * 
     * @return dataType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_DATA_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public DataTypeEnum getDataType()
    {
        return dataType;
    }

    @JsonProperty(JSON_PROPERTY_DATA_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDataType(DataTypeEnum dataType)
    {
        this.dataType = dataType;
    }

    public OperatorSpecificDataContainer dataTypeDefinition(String dataTypeDefinition)
    {

        this.dataTypeDefinition = dataTypeDefinition;
        return this;
    }

    /**
     * Get dataTypeDefinition
     * 
     * @return dataTypeDefinition
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DATA_TYPE_DEFINITION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDataTypeDefinition()
    {
        return dataTypeDefinition;
    }

    @JsonProperty(JSON_PROPERTY_DATA_TYPE_DEFINITION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDataTypeDefinition(String dataTypeDefinition)
    {
        this.dataTypeDefinition = dataTypeDefinition;
    }

    public OperatorSpecificDataContainer value(Object value)
    {

        this.value = value;
        return this;
    }

    /**
     * Get value
     * 
     * @return value
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Object getValue()
    {
        return value;
    }

    @JsonProperty(JSON_PROPERTY_VALUE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setValue(Object value)
    {
        this.value = value;
    }

    public OperatorSpecificDataContainer supportedFeatures(String supportedFeatures)
    {

        this.supportedFeatures = supportedFeatures;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return supportedFeatures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSupportedFeatures()
    {
        return supportedFeatures;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupportedFeatures(String supportedFeatures)
    {
        this.supportedFeatures = supportedFeatures;
    }

    public OperatorSpecificDataContainer resetIds(List<String> resetIds)
    {

        this.resetIds = resetIds;
        return this;
    }

    public OperatorSpecificDataContainer addResetIdsItem(String resetIdsItem)
    {
        if (this.resetIds == null)
        {
            this.resetIds = new ArrayList<>();
        }
        this.resetIds.add(resetIdsItem);
        return this;
    }

    /**
     * Get resetIds
     * 
     * @return resetIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RESET_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getResetIds()
    {
        return resetIds;
    }

    @JsonProperty(JSON_PROPERTY_RESET_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResetIds(List<String> resetIds)
    {
        this.resetIds = resetIds;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        OperatorSpecificDataContainer operatorSpecificDataContainer = (OperatorSpecificDataContainer) o;
        return Objects.equals(this.dataType, operatorSpecificDataContainer.dataType)
               && Objects.equals(this.dataTypeDefinition, operatorSpecificDataContainer.dataTypeDefinition)
               && Objects.equals(this.value, operatorSpecificDataContainer.value)
               && Objects.equals(this.supportedFeatures, operatorSpecificDataContainer.supportedFeatures)
               && Objects.equals(this.resetIds, operatorSpecificDataContainer.resetIds);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(dataType, dataTypeDefinition, value, supportedFeatures, resetIds);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class OperatorSpecificDataContainer {\n");
        sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
        sb.append("    dataTypeDefinition: ").append(toIndentedString(dataTypeDefinition)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("    supportedFeatures: ").append(toIndentedString(supportedFeatures)).append("\n");
        sb.append("    resetIds: ").append(toIndentedString(resetIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
