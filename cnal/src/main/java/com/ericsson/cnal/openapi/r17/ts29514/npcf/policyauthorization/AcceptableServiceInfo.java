/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates the maximum bandwidth that shall be authorized by the PCF.
 */
@ApiModel(description = "Indicates the maximum bandwidth that shall be authorized by the PCF.")
@JsonPropertyOrder({ AcceptableServiceInfo.JSON_PROPERTY_ACC_BW_MED_COMPS,
                     AcceptableServiceInfo.JSON_PROPERTY_MAR_BW_UL,
                     AcceptableServiceInfo.JSON_PROPERTY_MAR_BW_DL })
public class AcceptableServiceInfo
{
    public static final String JSON_PROPERTY_ACC_BW_MED_COMPS = "accBwMedComps";
    private Map<String, MediaComponent> accBwMedComps = null;

    public static final String JSON_PROPERTY_MAR_BW_UL = "marBwUl";
    private String marBwUl;

    public static final String JSON_PROPERTY_MAR_BW_DL = "marBwDl";
    private String marBwDl;

    public AcceptableServiceInfo()
    {
    }

    public AcceptableServiceInfo accBwMedComps(Map<String, MediaComponent> accBwMedComps)
    {

        this.accBwMedComps = accBwMedComps;
        return this;
    }

    public AcceptableServiceInfo putAccBwMedCompsItem(String key,
                                                      MediaComponent accBwMedCompsItem)
    {
        if (this.accBwMedComps == null)
        {
            this.accBwMedComps = new HashMap<>();
        }
        this.accBwMedComps.put(key, accBwMedCompsItem);
        return this;
    }

    /**
     * Indicates the maximum bandwidth that shall be authorized by the PCF for each
     * media component of the map. The key of the map is the media component number.
     * 
     * @return accBwMedComps
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the maximum bandwidth that shall be authorized by the PCF for each media component of the map. The key of the map is the media component number.")
    @JsonProperty(JSON_PROPERTY_ACC_BW_MED_COMPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, MediaComponent> getAccBwMedComps()
    {
        return accBwMedComps;
    }

    @JsonProperty(JSON_PROPERTY_ACC_BW_MED_COMPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccBwMedComps(Map<String, MediaComponent> accBwMedComps)
    {
        this.accBwMedComps = accBwMedComps;
    }

    public AcceptableServiceInfo marBwUl(String marBwUl)
    {

        this.marBwUl = marBwUl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return marBwUl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_MAR_BW_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMarBwUl()
    {
        return marBwUl;
    }

    @JsonProperty(JSON_PROPERTY_MAR_BW_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarBwUl(String marBwUl)
    {
        this.marBwUl = marBwUl;
    }

    public AcceptableServiceInfo marBwDl(String marBwDl)
    {

        this.marBwDl = marBwDl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return marBwDl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_MAR_BW_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMarBwDl()
    {
        return marBwDl;
    }

    @JsonProperty(JSON_PROPERTY_MAR_BW_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMarBwDl(String marBwDl)
    {
        this.marBwDl = marBwDl;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AcceptableServiceInfo acceptableServiceInfo = (AcceptableServiceInfo) o;
        return Objects.equals(this.accBwMedComps, acceptableServiceInfo.accBwMedComps) && Objects.equals(this.marBwUl, acceptableServiceInfo.marBwUl)
               && Objects.equals(this.marBwDl, acceptableServiceInfo.marBwDl);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(accBwMedComps, marBwUl, marBwDl);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AcceptableServiceInfo {\n");
        sb.append("    accBwMedComps: ").append(toIndentedString(accBwMedComps)).append("\n");
        sb.append("    marBwUl: ").append(toIndentedString(marBwUl)).append("\n");
        sb.append("    marBwDl: ").append(toIndentedString(marBwDl)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
