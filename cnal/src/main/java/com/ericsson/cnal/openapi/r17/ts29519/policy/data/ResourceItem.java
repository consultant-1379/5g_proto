/*
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29519.policy.data;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Identifies a subscription to policy data change notification when the change
 * occurs in a fragment (subset of resource data) of a given resource.
 */
@ApiModel(description = "Identifies a subscription to policy data change notification when the change occurs in a fragment (subset of resource data) of a given resource. ")
@JsonPropertyOrder({ ResourceItem.JSON_PROPERTY_MON_RESOURCE_URI, ResourceItem.JSON_PROPERTY_ITEMS })
public class ResourceItem
{
    public static final String JSON_PROPERTY_MON_RESOURCE_URI = "monResourceUri";
    private String monResourceUri;

    public static final String JSON_PROPERTY_ITEMS = "items";
    private List<String> items = new ArrayList<>();

    public ResourceItem()
    {
    }

    public ResourceItem monResourceUri(String monResourceUri)
    {

        this.monResourceUri = monResourceUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return monResourceUri
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_MON_RESOURCE_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getMonResourceUri()
    {
        return monResourceUri;
    }

    @JsonProperty(JSON_PROPERTY_MON_RESOURCE_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setMonResourceUri(String monResourceUri)
    {
        this.monResourceUri = monResourceUri;
    }

    public ResourceItem items(List<String> items)
    {

        this.items = items;
        return this;
    }

    public ResourceItem addItemsItem(String itemsItem)
    {
        this.items.add(itemsItem);
        return this;
    }

    /**
     * Get items
     * 
     * @return items
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<String> getItems()
    {
        return items;
    }

    @JsonProperty(JSON_PROPERTY_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setItems(List<String> items)
    {
        this.items = items;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ResourceItem resourceItem = (ResourceItem) o;
        return Objects.equals(this.monResourceUri, resourceItem.monResourceUri) && Objects.equals(this.items, resourceItem.items);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(monResourceUri, items);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ResourceItem {\n");
        sb.append("    monResourceUri: ").append(toIndentedString(monResourceUri)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
