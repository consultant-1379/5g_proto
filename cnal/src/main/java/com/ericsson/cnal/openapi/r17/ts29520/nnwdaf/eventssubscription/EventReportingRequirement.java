/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the type of reporting that the subscription requires.
 */
@ApiModel(description = "Represents the type of reporting that the subscription requires.")
@JsonPropertyOrder({ EventReportingRequirement.JSON_PROPERTY_ACCURACY,
                     EventReportingRequirement.JSON_PROPERTY_ACC_PER_SUBSET,
                     EventReportingRequirement.JSON_PROPERTY_START_TS,
                     EventReportingRequirement.JSON_PROPERTY_END_TS,
                     EventReportingRequirement.JSON_PROPERTY_OFFSET_PERIOD,
                     EventReportingRequirement.JSON_PROPERTY_SAMP_RATIO,
                     EventReportingRequirement.JSON_PROPERTY_MAX_OBJECT_NBR,
                     EventReportingRequirement.JSON_PROPERTY_MAX_SUPI_NBR,
                     EventReportingRequirement.JSON_PROPERTY_TIME_ANA_NEEDED,
                     EventReportingRequirement.JSON_PROPERTY_ANA_META,
                     EventReportingRequirement.JSON_PROPERTY_ANA_META_IND })
public class EventReportingRequirement
{
    public static final String JSON_PROPERTY_ACCURACY = "accuracy";
    private String accuracy;

    public static final String JSON_PROPERTY_ACC_PER_SUBSET = "accPerSubset";
    private List<String> accPerSubset = null;

    public static final String JSON_PROPERTY_START_TS = "startTs";
    private OffsetDateTime startTs;

    public static final String JSON_PROPERTY_END_TS = "endTs";
    private OffsetDateTime endTs;

    public static final String JSON_PROPERTY_OFFSET_PERIOD = "offsetPeriod";
    private Integer offsetPeriod;

    public static final String JSON_PROPERTY_SAMP_RATIO = "sampRatio";
    private Integer sampRatio;

    public static final String JSON_PROPERTY_MAX_OBJECT_NBR = "maxObjectNbr";
    private Integer maxObjectNbr;

    public static final String JSON_PROPERTY_MAX_SUPI_NBR = "maxSupiNbr";
    private Integer maxSupiNbr;

    public static final String JSON_PROPERTY_TIME_ANA_NEEDED = "timeAnaNeeded";
    private OffsetDateTime timeAnaNeeded;

    public static final String JSON_PROPERTY_ANA_META = "anaMeta";
    private List<String> anaMeta = null;

    public static final String JSON_PROPERTY_ANA_META_IND = "anaMetaInd";
    private AnalyticsMetadataIndication anaMetaInd;

    public EventReportingRequirement()
    {
    }

    public EventReportingRequirement accuracy(String accuracy)
    {

        this.accuracy = accuracy;
        return this;
    }

    /**
     * Possible values are: - LOW: Low accuracy. - HIGH: High accuracy.
     * 
     * @return accuracy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - LOW: Low accuracy.   - HIGH: High accuracy. ")
    @JsonProperty(JSON_PROPERTY_ACCURACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAccuracy()
    {
        return accuracy;
    }

    @JsonProperty(JSON_PROPERTY_ACCURACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccuracy(String accuracy)
    {
        this.accuracy = accuracy;
    }

    public EventReportingRequirement accPerSubset(List<String> accPerSubset)
    {

        this.accPerSubset = accPerSubset;
        return this;
    }

    public EventReportingRequirement addAccPerSubsetItem(String accPerSubsetItem)
    {
        if (this.accPerSubset == null)
        {
            this.accPerSubset = new ArrayList<>();
        }
        this.accPerSubset.add(accPerSubsetItem);
        return this;
    }

    /**
     * Each element indicates the preferred accuracy level per analytics subset. It
     * may be present if the \&quot;listOfAnaSubsets\&quot; attribute is present in
     * the subscription request when the subscription event is NF_LOAD, UE_COMM,
     * DISPERSION, NETWORK_PERFORMANCE, WLAN_PERFORMANCE, DN_PERFORMANCE or
     * SERVICE_EXPERIENCE.
     * 
     * @return accPerSubset
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Each element indicates the preferred accuracy level per analytics subset. It may be present if the \"listOfAnaSubsets\" attribute is present in the subscription request when the subscription event is NF_LOAD, UE_COMM, DISPERSION, NETWORK_PERFORMANCE, WLAN_PERFORMANCE, DN_PERFORMANCE or SERVICE_EXPERIENCE. ")
    @JsonProperty(JSON_PROPERTY_ACC_PER_SUBSET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getAccPerSubset()
    {
        return accPerSubset;
    }

    @JsonProperty(JSON_PROPERTY_ACC_PER_SUBSET)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccPerSubset(List<String> accPerSubset)
    {
        this.accPerSubset = accPerSubset;
    }

    public EventReportingRequirement startTs(OffsetDateTime startTs)
    {

        this.startTs = startTs;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return startTs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_START_TS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getStartTs()
    {
        return startTs;
    }

    @JsonProperty(JSON_PROPERTY_START_TS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStartTs(OffsetDateTime startTs)
    {
        this.startTs = startTs;
    }

    public EventReportingRequirement endTs(OffsetDateTime endTs)
    {

        this.endTs = endTs;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return endTs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_END_TS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getEndTs()
    {
        return endTs;
    }

    @JsonProperty(JSON_PROPERTY_END_TS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEndTs(OffsetDateTime endTs)
    {
        this.endTs = endTs;
    }

    public EventReportingRequirement offsetPeriod(Integer offsetPeriod)
    {

        this.offsetPeriod = offsetPeriod;
        return this;
    }

    /**
     * Offset period in units of seconds to the reporting time, if the value is
     * negative means statistics in the past offset period, otherwise a positive
     * value means prediction in the future offset period. May be present if the
     * \&quot;repPeriod\&quot; attribute is included within the \&quot;evtReq\&quot;
     * attribute.
     * 
     * @return offsetPeriod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Offset period in units of seconds to the reporting time, if the value is negative means  statistics in the past offset period, otherwise a positive value means prediction in the  future offset period. May be present if the \"repPeriod\" attribute is included within the  \"evtReq\" attribute. ")
    @JsonProperty(JSON_PROPERTY_OFFSET_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getOffsetPeriod()
    {
        return offsetPeriod;
    }

    @JsonProperty(JSON_PROPERTY_OFFSET_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOffsetPeriod(Integer offsetPeriod)
    {
        this.offsetPeriod = offsetPeriod;
    }

    public EventReportingRequirement sampRatio(Integer sampRatio)
    {

        this.sampRatio = sampRatio;
        return this;
    }

    /**
     * Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS
     * 23.502), expressed in percent. minimum: 1 maximum: 100
     * 
     * @return sampRatio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  ")
    @JsonProperty(JSON_PROPERTY_SAMP_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getSampRatio()
    {
        return sampRatio;
    }

    @JsonProperty(JSON_PROPERTY_SAMP_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSampRatio(Integer sampRatio)
    {
        this.sampRatio = sampRatio;
    }

    public EventReportingRequirement maxObjectNbr(Integer maxObjectNbr)
    {

        this.maxObjectNbr = maxObjectNbr;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return maxObjectNbr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_MAX_OBJECT_NBR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxObjectNbr()
    {
        return maxObjectNbr;
    }

    @JsonProperty(JSON_PROPERTY_MAX_OBJECT_NBR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxObjectNbr(Integer maxObjectNbr)
    {
        this.maxObjectNbr = maxObjectNbr;
    }

    public EventReportingRequirement maxSupiNbr(Integer maxSupiNbr)
    {

        this.maxSupiNbr = maxSupiNbr;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return maxSupiNbr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_MAX_SUPI_NBR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxSupiNbr()
    {
        return maxSupiNbr;
    }

    @JsonProperty(JSON_PROPERTY_MAX_SUPI_NBR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxSupiNbr(Integer maxSupiNbr)
    {
        this.maxSupiNbr = maxSupiNbr;
    }

    public EventReportingRequirement timeAnaNeeded(OffsetDateTime timeAnaNeeded)
    {

        this.timeAnaNeeded = timeAnaNeeded;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return timeAnaNeeded
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TIME_ANA_NEEDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTimeAnaNeeded()
    {
        return timeAnaNeeded;
    }

    @JsonProperty(JSON_PROPERTY_TIME_ANA_NEEDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimeAnaNeeded(OffsetDateTime timeAnaNeeded)
    {
        this.timeAnaNeeded = timeAnaNeeded;
    }

    public EventReportingRequirement anaMeta(List<String> anaMeta)
    {

        this.anaMeta = anaMeta;
        return this;
    }

    public EventReportingRequirement addAnaMetaItem(String anaMetaItem)
    {
        if (this.anaMeta == null)
        {
            this.anaMeta = new ArrayList<>();
        }
        this.anaMeta.add(anaMetaItem);
        return this;
    }

    /**
     * Get anaMeta
     * 
     * @return anaMeta
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ANA_META)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getAnaMeta()
    {
        return anaMeta;
    }

    @JsonProperty(JSON_PROPERTY_ANA_META)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnaMeta(List<String> anaMeta)
    {
        this.anaMeta = anaMeta;
    }

    public EventReportingRequirement anaMetaInd(AnalyticsMetadataIndication anaMetaInd)
    {

        this.anaMetaInd = anaMetaInd;
        return this;
    }

    /**
     * Get anaMetaInd
     * 
     * @return anaMetaInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ANA_META_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AnalyticsMetadataIndication getAnaMetaInd()
    {
        return anaMetaInd;
    }

    @JsonProperty(JSON_PROPERTY_ANA_META_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnaMetaInd(AnalyticsMetadataIndication anaMetaInd)
    {
        this.anaMetaInd = anaMetaInd;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        EventReportingRequirement eventReportingRequirement = (EventReportingRequirement) o;
        return Objects.equals(this.accuracy, eventReportingRequirement.accuracy) && Objects.equals(this.accPerSubset, eventReportingRequirement.accPerSubset)
               && Objects.equals(this.startTs, eventReportingRequirement.startTs) && Objects.equals(this.endTs, eventReportingRequirement.endTs)
               && Objects.equals(this.offsetPeriod, eventReportingRequirement.offsetPeriod)
               && Objects.equals(this.sampRatio, eventReportingRequirement.sampRatio)
               && Objects.equals(this.maxObjectNbr, eventReportingRequirement.maxObjectNbr)
               && Objects.equals(this.maxSupiNbr, eventReportingRequirement.maxSupiNbr)
               && Objects.equals(this.timeAnaNeeded, eventReportingRequirement.timeAnaNeeded) && Objects.equals(this.anaMeta, eventReportingRequirement.anaMeta)
               && Objects.equals(this.anaMetaInd, eventReportingRequirement.anaMetaInd);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(accuracy, accPerSubset, startTs, endTs, offsetPeriod, sampRatio, maxObjectNbr, maxSupiNbr, timeAnaNeeded, anaMeta, anaMetaInd);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EventReportingRequirement {\n");
        sb.append("    accuracy: ").append(toIndentedString(accuracy)).append("\n");
        sb.append("    accPerSubset: ").append(toIndentedString(accPerSubset)).append("\n");
        sb.append("    startTs: ").append(toIndentedString(startTs)).append("\n");
        sb.append("    endTs: ").append(toIndentedString(endTs)).append("\n");
        sb.append("    offsetPeriod: ").append(toIndentedString(offsetPeriod)).append("\n");
        sb.append("    sampRatio: ").append(toIndentedString(sampRatio)).append("\n");
        sb.append("    maxObjectNbr: ").append(toIndentedString(maxObjectNbr)).append("\n");
        sb.append("    maxSupiNbr: ").append(toIndentedString(maxSupiNbr)).append("\n");
        sb.append("    timeAnaNeeded: ").append(toIndentedString(timeAnaNeeded)).append("\n");
        sb.append("    anaMeta: ").append(toIndentedString(anaMeta)).append("\n");
        sb.append("    anaMetaInd: ").append(toIndentedString(anaMetaInd)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
