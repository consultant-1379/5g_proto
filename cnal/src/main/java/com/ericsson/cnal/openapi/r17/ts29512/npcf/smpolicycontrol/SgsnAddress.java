/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * describes the address of the SGSN
 */
@ApiModel(description = "describes the address of the SGSN")
@JsonPropertyOrder({ SgsnAddress.JSON_PROPERTY_SGSN_IPV4_ADDR, SgsnAddress.JSON_PROPERTY_SGSN_IPV6_ADDR })
public class SgsnAddress
{
    public static final String JSON_PROPERTY_SGSN_IPV4_ADDR = "sgsnIpv4Addr";
    private String sgsnIpv4Addr;

    public static final String JSON_PROPERTY_SGSN_IPV6_ADDR = "sgsnIpv6Addr";
    private String sgsnIpv6Addr;

    public SgsnAddress()
    {
    }

    public SgsnAddress sgsnIpv4Addr(String sgsnIpv4Addr)
    {

        this.sgsnIpv4Addr = sgsnIpv4Addr;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return sgsnIpv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_SGSN_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSgsnIpv4Addr()
    {
        return sgsnIpv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_SGSN_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSgsnIpv4Addr(String sgsnIpv4Addr)
    {
        this.sgsnIpv4Addr = sgsnIpv4Addr;
    }

    public SgsnAddress sgsnIpv6Addr(String sgsnIpv6Addr)
    {

        this.sgsnIpv6Addr = sgsnIpv6Addr;
        return this;
    }

    /**
     * Get sgsnIpv6Addr
     * 
     * @return sgsnIpv6Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SGSN_IPV6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSgsnIpv6Addr()
    {
        return sgsnIpv6Addr;
    }

    @JsonProperty(JSON_PROPERTY_SGSN_IPV6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSgsnIpv6Addr(String sgsnIpv6Addr)
    {
        this.sgsnIpv6Addr = sgsnIpv6Addr;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SgsnAddress sgsnAddress = (SgsnAddress) o;
        return Objects.equals(this.sgsnIpv4Addr, sgsnAddress.sgsnIpv4Addr) && Objects.equals(this.sgsnIpv6Addr, sgsnAddress.sgsnIpv6Addr);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(sgsnIpv4Addr, sgsnIpv6Addr);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SgsnAddress {\n");
        sb.append("    sgsnIpv4Addr: ").append(toIndentedString(sgsnIpv4Addr)).append("\n");
        sb.append("    sgsnIpv6Addr: ").append(toIndentedString(sgsnIpv6Addr)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
