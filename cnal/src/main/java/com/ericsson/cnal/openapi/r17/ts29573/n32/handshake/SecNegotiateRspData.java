/*
 * N32 Handshake API
 * N32-c Handshake Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29573.n32.handshake;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PlmnIdNid;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PlmnId;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Defines the selected security capabilities by a SEPP
 */
@ApiModel(description = "Defines the selected security capabilities by a SEPP")
@JsonPropertyOrder({ SecNegotiateRspData.JSON_PROPERTY_SENDER,
                     SecNegotiateRspData.JSON_PROPERTY_SELECTED_SEC_CAPABILITY,
                     SecNegotiateRspData.JSON_PROPERTY_3GPP_SBI_TARGET_API_ROOT_SUPPORTED,
                     SecNegotiateRspData.JSON_PROPERTY_PLMN_ID_LIST,
                     SecNegotiateRspData.JSON_PROPERTY_SNPN_ID_LIST,
                     SecNegotiateRspData.JSON_PROPERTY_ALLOWED_USAGE_PURPOSE,
                     SecNegotiateRspData.JSON_PROPERTY_REJECTED_USAGE_PURPOSE,
                     SecNegotiateRspData.JSON_PROPERTY_SUPPORTED_FEATURES })
public class SecNegotiateRspData
{
    public static final String JSON_PROPERTY_SENDER = "sender";
    private String sender;

    public static final String JSON_PROPERTY_SELECTED_SEC_CAPABILITY = "selectedSecCapability";
    private String selectedSecCapability;

    public static final String JSON_PROPERTY_3GPP_SBI_TARGET_API_ROOT_SUPPORTED = "3GppSbiTargetApiRootSupported";
    private Boolean _3gppSbiTargetApiRootSupported = false;

    public static final String JSON_PROPERTY_PLMN_ID_LIST = "plmnIdList";
    private List<PlmnId> plmnIdList = null;

    public static final String JSON_PROPERTY_SNPN_ID_LIST = "snpnIdList";
    private List<PlmnIdNid> snpnIdList = null;

    public static final String JSON_PROPERTY_ALLOWED_USAGE_PURPOSE = "allowedUsagePurpose";
    private List<IntendedN32Purpose> allowedUsagePurpose = null;

    public static final String JSON_PROPERTY_REJECTED_USAGE_PURPOSE = "rejectedUsagePurpose";
    private List<IntendedN32Purpose> rejectedUsagePurpose = null;

    public static final String JSON_PROPERTY_SUPPORTED_FEATURES = "supportedFeatures";
    private String supportedFeatures;

    public SecNegotiateRspData()
    {
    }

    public SecNegotiateRspData sender(String sender)
    {

        this.sender = sender;
        return this;
    }

    /**
     * Fully Qualified Domain Name
     * 
     * @return sender
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Fully Qualified Domain Name")
    @JsonProperty(JSON_PROPERTY_SENDER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getSender()
    {
        return sender;
    }

    @JsonProperty(JSON_PROPERTY_SENDER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSender(String sender)
    {
        this.sender = sender;
    }

    public SecNegotiateRspData selectedSecCapability(String selectedSecCapability)
    {

        this.selectedSecCapability = selectedSecCapability;
        return this;
    }

    /**
     * Enumeration of security capabilities
     * 
     * @return selectedSecCapability
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Enumeration of security capabilities")
    @JsonProperty(JSON_PROPERTY_SELECTED_SEC_CAPABILITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getSelectedSecCapability()
    {
        return selectedSecCapability;
    }

    @JsonProperty(JSON_PROPERTY_SELECTED_SEC_CAPABILITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSelectedSecCapability(String selectedSecCapability)
    {
        this.selectedSecCapability = selectedSecCapability;
    }

    public SecNegotiateRspData _3gppSbiTargetApiRootSupported(Boolean _3gppSbiTargetApiRootSupported)
    {

        this._3gppSbiTargetApiRootSupported = _3gppSbiTargetApiRootSupported;
        return this;
    }

    /**
     * Get _3gppSbiTargetApiRootSupported
     * 
     * @return _3gppSbiTargetApiRootSupported
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_3GPP_SBI_TARGET_API_ROOT_SUPPORTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean get3gppSbiTargetApiRootSupported()
    {
        return _3gppSbiTargetApiRootSupported;
    }

    @JsonProperty(JSON_PROPERTY_3GPP_SBI_TARGET_API_ROOT_SUPPORTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void set3gppSbiTargetApiRootSupported(Boolean _3gppSbiTargetApiRootSupported)
    {
        this._3gppSbiTargetApiRootSupported = _3gppSbiTargetApiRootSupported;
    }

    public SecNegotiateRspData plmnIdList(List<PlmnId> plmnIdList)
    {

        this.plmnIdList = plmnIdList;
        return this;
    }

    public SecNegotiateRspData addPlmnIdListItem(PlmnId plmnIdListItem)
    {
        if (this.plmnIdList == null)
        {
            this.plmnIdList = new ArrayList<>();
        }
        this.plmnIdList.add(plmnIdListItem);
        return this;
    }

    /**
     * Get plmnIdList
     * 
     * @return plmnIdList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PLMN_ID_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PlmnId> getPlmnIdList()
    {
        return plmnIdList;
    }

    @JsonProperty(JSON_PROPERTY_PLMN_ID_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPlmnIdList(List<PlmnId> plmnIdList)
    {
        this.plmnIdList = plmnIdList;
    }

    public SecNegotiateRspData snpnIdList(List<PlmnIdNid> snpnIdList)
    {

        this.snpnIdList = snpnIdList;
        return this;
    }

    public SecNegotiateRspData addSnpnIdListItem(PlmnIdNid snpnIdListItem)
    {
        if (this.snpnIdList == null)
        {
            this.snpnIdList = new ArrayList<>();
        }
        this.snpnIdList.add(snpnIdListItem);
        return this;
    }

    /**
     * Get snpnIdList
     * 
     * @return snpnIdList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNPN_ID_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PlmnIdNid> getSnpnIdList()
    {
        return snpnIdList;
    }

    @JsonProperty(JSON_PROPERTY_SNPN_ID_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnpnIdList(List<PlmnIdNid> snpnIdList)
    {
        this.snpnIdList = snpnIdList;
    }

    public SecNegotiateRspData allowedUsagePurpose(List<IntendedN32Purpose> allowedUsagePurpose)
    {

        this.allowedUsagePurpose = allowedUsagePurpose;
        return this;
    }

    public SecNegotiateRspData addAllowedUsagePurposeItem(IntendedN32Purpose allowedUsagePurposeItem)
    {
        if (this.allowedUsagePurpose == null)
        {
            this.allowedUsagePurpose = new ArrayList<>();
        }
        this.allowedUsagePurpose.add(allowedUsagePurposeItem);
        return this;
    }

    /**
     * Get allowedUsagePurpose
     * 
     * @return allowedUsagePurpose
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ALLOWED_USAGE_PURPOSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<IntendedN32Purpose> getAllowedUsagePurpose()
    {
        return allowedUsagePurpose;
    }

    @JsonProperty(JSON_PROPERTY_ALLOWED_USAGE_PURPOSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAllowedUsagePurpose(List<IntendedN32Purpose> allowedUsagePurpose)
    {
        this.allowedUsagePurpose = allowedUsagePurpose;
    }

    public SecNegotiateRspData rejectedUsagePurpose(List<IntendedN32Purpose> rejectedUsagePurpose)
    {

        this.rejectedUsagePurpose = rejectedUsagePurpose;
        return this;
    }

    public SecNegotiateRspData addRejectedUsagePurposeItem(IntendedN32Purpose rejectedUsagePurposeItem)
    {
        if (this.rejectedUsagePurpose == null)
        {
            this.rejectedUsagePurpose = new ArrayList<>();
        }
        this.rejectedUsagePurpose.add(rejectedUsagePurposeItem);
        return this;
    }

    /**
     * Get rejectedUsagePurpose
     * 
     * @return rejectedUsagePurpose
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_REJECTED_USAGE_PURPOSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<IntendedN32Purpose> getRejectedUsagePurpose()
    {
        return rejectedUsagePurpose;
    }

    @JsonProperty(JSON_PROPERTY_REJECTED_USAGE_PURPOSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRejectedUsagePurpose(List<IntendedN32Purpose> rejectedUsagePurpose)
    {
        this.rejectedUsagePurpose = rejectedUsagePurpose;
    }

    public SecNegotiateRspData supportedFeatures(String supportedFeatures)
    {

        this.supportedFeatures = supportedFeatures;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return supportedFeatures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSupportedFeatures()
    {
        return supportedFeatures;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupportedFeatures(String supportedFeatures)
    {
        this.supportedFeatures = supportedFeatures;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SecNegotiateRspData secNegotiateRspData = (SecNegotiateRspData) o;
        return Objects.equals(this.sender, secNegotiateRspData.sender) && Objects.equals(this.selectedSecCapability, secNegotiateRspData.selectedSecCapability)
               && Objects.equals(this._3gppSbiTargetApiRootSupported, secNegotiateRspData._3gppSbiTargetApiRootSupported)
               && Objects.equals(this.plmnIdList, secNegotiateRspData.plmnIdList) && Objects.equals(this.snpnIdList, secNegotiateRspData.snpnIdList)
               && Objects.equals(this.allowedUsagePurpose, secNegotiateRspData.allowedUsagePurpose)
               && Objects.equals(this.rejectedUsagePurpose, secNegotiateRspData.rejectedUsagePurpose)
               && Objects.equals(this.supportedFeatures, secNegotiateRspData.supportedFeatures);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(sender,
                            selectedSecCapability,
                            _3gppSbiTargetApiRootSupported,
                            plmnIdList,
                            snpnIdList,
                            allowedUsagePurpose,
                            rejectedUsagePurpose,
                            supportedFeatures);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SecNegotiateRspData {\n");
        sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
        sb.append("    selectedSecCapability: ").append(toIndentedString(selectedSecCapability)).append("\n");
        sb.append("    _3gppSbiTargetApiRootSupported: ").append(toIndentedString(_3gppSbiTargetApiRootSupported)).append("\n");
        sb.append("    plmnIdList: ").append(toIndentedString(plmnIdList)).append("\n");
        sb.append("    snpnIdList: ").append(toIndentedString(snpnIdList)).append("\n");
        sb.append("    allowedUsagePurpose: ").append(toIndentedString(allowedUsagePurpose)).append("\n");
        sb.append("    rejectedUsagePurpose: ").append(toIndentedString(rejectedUsagePurpose)).append("\n");
        sb.append("    supportedFeatures: ").append(toIndentedString(supportedFeatures)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
