/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Application data volume per Application Id.
 */
@ApiModel(description = "Application data volume per Application Id.")
@JsonPropertyOrder({ ApplicationVolume.JSON_PROPERTY_APP_ID, ApplicationVolume.JSON_PROPERTY_APP_VOLUME })
public class ApplicationVolume
{
    public static final String JSON_PROPERTY_APP_ID = "appId";
    private String appId;

    public static final String JSON_PROPERTY_APP_VOLUME = "appVolume";
    private Long appVolume;

    public ApplicationVolume()
    {
    }

    public ApplicationVolume appId(String appId)
    {

        this.appId = appId;
        return this;
    }

    /**
     * String providing an application identifier.
     * 
     * @return appId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an application identifier.")
    @JsonProperty(JSON_PROPERTY_APP_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAppId()
    {
        return appId;
    }

    @JsonProperty(JSON_PROPERTY_APP_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAppId(String appId)
    {
        this.appId = appId;
    }

    public ApplicationVolume appVolume(Long appVolume)
    {

        this.appVolume = appVolume;
        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes. minimum: 0
     * 
     * @return appVolume
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Unsigned integer identifying a volume in units of bytes.")
    @JsonProperty(JSON_PROPERTY_APP_VOLUME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Long getAppVolume()
    {
        return appVolume;
    }

    @JsonProperty(JSON_PROPERTY_APP_VOLUME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAppVolume(Long appVolume)
    {
        this.appVolume = appVolume;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ApplicationVolume applicationVolume = (ApplicationVolume) o;
        return Objects.equals(this.appId, applicationVolume.appId) && Objects.equals(this.appVolume, applicationVolume.appVolume);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(appId, appVolume);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ApplicationVolume {\n");
        sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
        sb.append("    appVolume: ").append(toIndentedString(appVolume)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
