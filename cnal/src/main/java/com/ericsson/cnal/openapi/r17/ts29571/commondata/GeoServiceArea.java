/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29572.nlmf.location.GeographicArea;
import com.ericsson.cnal.openapi.r17.ts29572.nlmf.location.CivicAddress;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * List of geographic area or list of civic address info
 */
@ApiModel(description = "List of geographic area or list of civic address info")
@JsonPropertyOrder({ GeoServiceArea.JSON_PROPERTY_GEOGRAPHIC_AREA_LIST, GeoServiceArea.JSON_PROPERTY_CIVIC_ADDRESS_LIST })
public class GeoServiceArea
{
    public static final String JSON_PROPERTY_GEOGRAPHIC_AREA_LIST = "geographicAreaList";
    private List<GeographicArea> geographicAreaList = null;

    public static final String JSON_PROPERTY_CIVIC_ADDRESS_LIST = "civicAddressList";
    private List<CivicAddress> civicAddressList = null;

    public GeoServiceArea()
    {
    }

    public GeoServiceArea geographicAreaList(List<GeographicArea> geographicAreaList)
    {

        this.geographicAreaList = geographicAreaList;
        return this;
    }

    public GeoServiceArea addGeographicAreaListItem(GeographicArea geographicAreaListItem)
    {
        if (this.geographicAreaList == null)
        {
            this.geographicAreaList = new ArrayList<>();
        }
        this.geographicAreaList.add(geographicAreaListItem);
        return this;
    }

    /**
     * Get geographicAreaList
     * 
     * @return geographicAreaList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_GEOGRAPHIC_AREA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<GeographicArea> getGeographicAreaList()
    {
        return geographicAreaList;
    }

    @JsonProperty(JSON_PROPERTY_GEOGRAPHIC_AREA_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeographicAreaList(List<GeographicArea> geographicAreaList)
    {
        this.geographicAreaList = geographicAreaList;
    }

    public GeoServiceArea civicAddressList(List<CivicAddress> civicAddressList)
    {

        this.civicAddressList = civicAddressList;
        return this;
    }

    public GeoServiceArea addCivicAddressListItem(CivicAddress civicAddressListItem)
    {
        if (this.civicAddressList == null)
        {
            this.civicAddressList = new ArrayList<>();
        }
        this.civicAddressList.add(civicAddressListItem);
        return this;
    }

    /**
     * Get civicAddressList
     * 
     * @return civicAddressList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CIVIC_ADDRESS_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<CivicAddress> getCivicAddressList()
    {
        return civicAddressList;
    }

    @JsonProperty(JSON_PROPERTY_CIVIC_ADDRESS_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCivicAddressList(List<CivicAddress> civicAddressList)
    {
        this.civicAddressList = civicAddressList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        GeoServiceArea geoServiceArea = (GeoServiceArea) o;
        return Objects.equals(this.geographicAreaList, geoServiceArea.geographicAreaList)
               && Objects.equals(this.civicAddressList, geoServiceArea.civicAddressList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(geographicAreaList, civicAddressList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class GeoServiceArea {\n");
        sb.append("    geographicAreaList: ").append(toIndentedString(geographicAreaList)).append("\n");
        sb.append("    civicAddressList: ").append(toIndentedString(civicAddressList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
