/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * During the processing of cnfUnits attribute, all the members in the array
 * shall be interpreted as logically concatenated with logical
 * \&quot;AND\&quot;.
 */
@ApiModel(description = "During the processing of cnfUnits attribute, all the members in the array shall be  interpreted as logically concatenated with logical \"AND\". ")
@JsonPropertyOrder({ CnfUnit.JSON_PROPERTY_CNF_UNIT })
public class CnfUnit
{
    public static final String JSON_PROPERTY_CNF_UNIT = "cnfUnit";
    private List<Atom> cnfUnit = new ArrayList<>();

    public CnfUnit()
    {
    }

    public CnfUnit cnfUnit(List<Atom> cnfUnit)
    {

        this.cnfUnit = cnfUnit;
        return this;
    }

    public CnfUnit addCnfUnitItem(Atom cnfUnitItem)
    {
        this.cnfUnit.add(cnfUnitItem);
        return this;
    }

    /**
     * Get cnfUnit
     * 
     * @return cnfUnit
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_CNF_UNIT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<Atom> getCnfUnit()
    {
        return cnfUnit;
    }

    @JsonProperty(JSON_PROPERTY_CNF_UNIT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCnfUnit(List<Atom> cnfUnit)
    {
        this.cnfUnit = cnfUnit;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        CnfUnit cnfUnit = (CnfUnit) o;
        return Objects.equals(this.cnfUnit, cnfUnit.cnfUnit);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(cnfUnit);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class CnfUnit {\n");
        sb.append("    cnfUnit: ").append(toIndentedString(cnfUnit)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
