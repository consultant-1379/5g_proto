/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization.EthFlowDescription;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the flow information.
 */
@ApiModel(description = "Contains the flow information.")
@JsonPropertyOrder({ FlowInformation.JSON_PROPERTY_FLOW_DESCRIPTION,
                     FlowInformation.JSON_PROPERTY_ETH_FLOW_DESCRIPTION,
                     FlowInformation.JSON_PROPERTY_PACK_FILT_ID,
                     FlowInformation.JSON_PROPERTY_PACKET_FILTER_USAGE,
                     FlowInformation.JSON_PROPERTY_TOS_TRAFFIC_CLASS,
                     FlowInformation.JSON_PROPERTY_SPI,
                     FlowInformation.JSON_PROPERTY_FLOW_LABEL,
                     FlowInformation.JSON_PROPERTY_FLOW_DIRECTION })
public class FlowInformation
{
    public static final String JSON_PROPERTY_FLOW_DESCRIPTION = "flowDescription";
    private String flowDescription;

    public static final String JSON_PROPERTY_ETH_FLOW_DESCRIPTION = "ethFlowDescription";
    private EthFlowDescription ethFlowDescription;

    public static final String JSON_PROPERTY_PACK_FILT_ID = "packFiltId";
    private String packFiltId;

    public static final String JSON_PROPERTY_PACKET_FILTER_USAGE = "packetFilterUsage";
    private Boolean packetFilterUsage;

    public static final String JSON_PROPERTY_TOS_TRAFFIC_CLASS = "tosTrafficClass";
    private JsonNullable<String> tosTrafficClass = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_SPI = "spi";
    private JsonNullable<String> spi = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_FLOW_LABEL = "flowLabel";
    private JsonNullable<String> flowLabel = JsonNullable.<String>undefined();

    public static final String JSON_PROPERTY_FLOW_DIRECTION = "flowDirection";
    private Object flowDirection;

    public FlowInformation()
    {
    }

    public FlowInformation flowDescription(String flowDescription)
    {

        this.flowDescription = flowDescription;
        return this;
    }

    /**
     * Defines a packet filter for an IP flow.
     * 
     * @return flowDescription
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Defines a packet filter for an IP flow.")
    @JsonProperty(JSON_PROPERTY_FLOW_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFlowDescription()
    {
        return flowDescription;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFlowDescription(String flowDescription)
    {
        this.flowDescription = flowDescription;
    }

    public FlowInformation ethFlowDescription(EthFlowDescription ethFlowDescription)
    {

        this.ethFlowDescription = ethFlowDescription;
        return this;
    }

    /**
     * Get ethFlowDescription
     * 
     * @return ethFlowDescription
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ETH_FLOW_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public EthFlowDescription getEthFlowDescription()
    {
        return ethFlowDescription;
    }

    @JsonProperty(JSON_PROPERTY_ETH_FLOW_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEthFlowDescription(EthFlowDescription ethFlowDescription)
    {
        this.ethFlowDescription = ethFlowDescription;
    }

    public FlowInformation packFiltId(String packFiltId)
    {

        this.packFiltId = packFiltId;
        return this;
    }

    /**
     * An identifier of packet filter.
     * 
     * @return packFiltId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "An identifier of packet filter.")
    @JsonProperty(JSON_PROPERTY_PACK_FILT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPackFiltId()
    {
        return packFiltId;
    }

    @JsonProperty(JSON_PROPERTY_PACK_FILT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPackFiltId(String packFiltId)
    {
        this.packFiltId = packFiltId;
    }

    public FlowInformation packetFilterUsage(Boolean packetFilterUsage)
    {

        this.packetFilterUsage = packetFilterUsage;
        return this;
    }

    /**
     * The packet shall be sent to the UE.
     * 
     * @return packetFilterUsage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The packet shall be sent to the UE.")
    @JsonProperty(JSON_PROPERTY_PACKET_FILTER_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getPacketFilterUsage()
    {
        return packetFilterUsage;
    }

    @JsonProperty(JSON_PROPERTY_PACKET_FILTER_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPacketFilterUsage(Boolean packetFilterUsage)
    {
        this.packetFilterUsage = packetFilterUsage;
    }

    public FlowInformation tosTrafficClass(String tosTrafficClass)
    {
        this.tosTrafficClass = JsonNullable.<String>of(tosTrafficClass);

        return this;
    }

    /**
     * Contains the Ipv4 Type-of-Service and mask field or the Ipv6 Traffic-Class
     * field and mask field.
     * 
     * @return tosTrafficClass
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the Ipv4 Type-of-Service and mask field or the Ipv6 Traffic-Class field and mask field.")
    @JsonIgnore

    public String getTosTrafficClass()
    {
        return tosTrafficClass.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TOS_TRAFFIC_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<String> getTosTrafficClass_JsonNullable()
    {
        return tosTrafficClass;
    }

    @JsonProperty(JSON_PROPERTY_TOS_TRAFFIC_CLASS)
    public void setTosTrafficClass_JsonNullable(JsonNullable<String> tosTrafficClass)
    {
        this.tosTrafficClass = tosTrafficClass;
    }

    public void setTosTrafficClass(String tosTrafficClass)
    {
        this.tosTrafficClass = JsonNullable.<String>of(tosTrafficClass);
    }

    public FlowInformation spi(String spi)
    {
        this.spi = JsonNullable.<String>of(spi);

        return this;
    }

    /**
     * the security parameter index of the IPSec packet.
     * 
     * @return spi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "the security parameter index of the IPSec packet.")
    @JsonIgnore

    public String getSpi()
    {
        return spi.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SPI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<String> getSpi_JsonNullable()
    {
        return spi;
    }

    @JsonProperty(JSON_PROPERTY_SPI)
    public void setSpi_JsonNullable(JsonNullable<String> spi)
    {
        this.spi = spi;
    }

    public void setSpi(String spi)
    {
        this.spi = JsonNullable.<String>of(spi);
    }

    public FlowInformation flowLabel(String flowLabel)
    {
        this.flowLabel = JsonNullable.<String>of(flowLabel);

        return this;
    }

    /**
     * the Ipv6 flow label header field.
     * 
     * @return flowLabel
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "the Ipv6 flow label header field.")
    @JsonIgnore

    public String getFlowLabel()
    {
        return flowLabel.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_FLOW_LABEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<String> getFlowLabel_JsonNullable()
    {
        return flowLabel;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_LABEL)
    public void setFlowLabel_JsonNullable(JsonNullable<String> flowLabel)
    {
        this.flowLabel = flowLabel;
    }

    public void setFlowLabel(String flowLabel)
    {
        this.flowLabel = JsonNullable.<String>of(flowLabel);
    }

    public FlowInformation flowDirection(Object flowDirection)
    {

        this.flowDirection = flowDirection;
        return this;
    }

    /**
     * Get flowDirection
     * 
     * @return flowDirection
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_FLOW_DIRECTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getFlowDirection()
    {
        return flowDirection;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_DIRECTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFlowDirection(Object flowDirection)
    {
        this.flowDirection = flowDirection;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        FlowInformation flowInformation = (FlowInformation) o;
        return Objects.equals(this.flowDescription, flowInformation.flowDescription)
               && Objects.equals(this.ethFlowDescription, flowInformation.ethFlowDescription) && Objects.equals(this.packFiltId, flowInformation.packFiltId)
               && Objects.equals(this.packetFilterUsage, flowInformation.packetFilterUsage)
               && equalsNullable(this.tosTrafficClass, flowInformation.tosTrafficClass) && equalsNullable(this.spi, flowInformation.spi)
               && equalsNullable(this.flowLabel, flowInformation.flowLabel) && Objects.equals(this.flowDirection, flowInformation.flowDirection);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(flowDescription,
                            ethFlowDescription,
                            packFiltId,
                            packetFilterUsage,
                            hashCodeNullable(tosTrafficClass),
                            hashCodeNullable(spi),
                            hashCodeNullable(flowLabel),
                            flowDirection);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class FlowInformation {\n");
        sb.append("    flowDescription: ").append(toIndentedString(flowDescription)).append("\n");
        sb.append("    ethFlowDescription: ").append(toIndentedString(ethFlowDescription)).append("\n");
        sb.append("    packFiltId: ").append(toIndentedString(packFiltId)).append("\n");
        sb.append("    packetFilterUsage: ").append(toIndentedString(packetFilterUsage)).append("\n");
        sb.append("    tosTrafficClass: ").append(toIndentedString(tosTrafficClass)).append("\n");
        sb.append("    spi: ").append(toIndentedString(spi)).append("\n");
        sb.append("    flowLabel: ").append(toIndentedString(flowLabel)).append("\n");
        sb.append("    flowDirection: ").append(toIndentedString(flowDirection)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
