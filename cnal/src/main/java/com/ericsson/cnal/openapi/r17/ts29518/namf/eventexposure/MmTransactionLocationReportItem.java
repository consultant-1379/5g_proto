/*
 * Namf_EventExposure
 * AMF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29518.namf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Tai;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Ecgi;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Ncgi;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.N3gaLocation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UE MM Transaction Report Item per Location
 */
@ApiModel(description = "UE MM Transaction Report Item per Location")
@JsonPropertyOrder({ MmTransactionLocationReportItem.JSON_PROPERTY_TAI,
                     MmTransactionLocationReportItem.JSON_PROPERTY_NCGI,
                     MmTransactionLocationReportItem.JSON_PROPERTY_ECGI,
                     MmTransactionLocationReportItem.JSON_PROPERTY_N3GA_LOCATION,
                     MmTransactionLocationReportItem.JSON_PROPERTY_TIMESTAMP,
                     MmTransactionLocationReportItem.JSON_PROPERTY_TRANSACTIONS })
public class MmTransactionLocationReportItem
{
    public static final String JSON_PROPERTY_TAI = "tai";
    private Tai tai;

    public static final String JSON_PROPERTY_NCGI = "ncgi";
    private Ncgi ncgi;

    public static final String JSON_PROPERTY_ECGI = "ecgi";
    private Ecgi ecgi;

    public static final String JSON_PROPERTY_N3GA_LOCATION = "n3gaLocation";
    private N3gaLocation n3gaLocation;

    public static final String JSON_PROPERTY_TIMESTAMP = "timestamp";
    private OffsetDateTime timestamp;

    public static final String JSON_PROPERTY_TRANSACTIONS = "transactions";
    private Integer transactions;

    public MmTransactionLocationReportItem()
    {
    }

    public MmTransactionLocationReportItem tai(Tai tai)
    {

        this.tai = tai;
        return this;
    }

    /**
     * Get tai
     * 
     * @return tai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Tai getTai()
    {
        return tai;
    }

    @JsonProperty(JSON_PROPERTY_TAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTai(Tai tai)
    {
        this.tai = tai;
    }

    public MmTransactionLocationReportItem ncgi(Ncgi ncgi)
    {

        this.ncgi = ncgi;
        return this;
    }

    /**
     * Get ncgi
     * 
     * @return ncgi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NCGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Ncgi getNcgi()
    {
        return ncgi;
    }

    @JsonProperty(JSON_PROPERTY_NCGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNcgi(Ncgi ncgi)
    {
        this.ncgi = ncgi;
    }

    public MmTransactionLocationReportItem ecgi(Ecgi ecgi)
    {

        this.ecgi = ecgi;
        return this;
    }

    /**
     * Get ecgi
     * 
     * @return ecgi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ECGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Ecgi getEcgi()
    {
        return ecgi;
    }

    @JsonProperty(JSON_PROPERTY_ECGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEcgi(Ecgi ecgi)
    {
        this.ecgi = ecgi;
    }

    public MmTransactionLocationReportItem n3gaLocation(N3gaLocation n3gaLocation)
    {

        this.n3gaLocation = n3gaLocation;
        return this;
    }

    /**
     * Get n3gaLocation
     * 
     * @return n3gaLocation
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_N3GA_LOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public N3gaLocation getN3gaLocation()
    {
        return n3gaLocation;
    }

    @JsonProperty(JSON_PROPERTY_N3GA_LOCATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN3gaLocation(N3gaLocation n3gaLocation)
    {
        this.n3gaLocation = n3gaLocation;
    }

    public MmTransactionLocationReportItem timestamp(OffsetDateTime timestamp)
    {

        this.timestamp = timestamp;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return timestamp
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTimestamp()
    {
        return timestamp;
    }

    @JsonProperty(JSON_PROPERTY_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTimestamp(OffsetDateTime timestamp)
    {
        this.timestamp = timestamp;
    }

    public MmTransactionLocationReportItem transactions(Integer transactions)
    {

        this.transactions = transactions;
        return this;
    }

    /**
     * Get transactions
     * 
     * @return transactions
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Integer getTransactions()
    {
        return transactions;
    }

    @JsonProperty(JSON_PROPERTY_TRANSACTIONS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTransactions(Integer transactions)
    {
        this.transactions = transactions;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        MmTransactionLocationReportItem mmTransactionLocationReportItem = (MmTransactionLocationReportItem) o;
        return Objects.equals(this.tai, mmTransactionLocationReportItem.tai) && Objects.equals(this.ncgi, mmTransactionLocationReportItem.ncgi)
               && Objects.equals(this.ecgi, mmTransactionLocationReportItem.ecgi)
               && Objects.equals(this.n3gaLocation, mmTransactionLocationReportItem.n3gaLocation)
               && Objects.equals(this.timestamp, mmTransactionLocationReportItem.timestamp)
               && Objects.equals(this.transactions, mmTransactionLocationReportItem.transactions);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(tai, ncgi, ecgi, n3gaLocation, timestamp, transactions);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class MmTransactionLocationReportItem {\n");
        sb.append("    tai: ").append(toIndentedString(tai)).append("\n");
        sb.append("    ncgi: ").append(toIndentedString(ncgi)).append("\n");
        sb.append("    ecgi: ").append(toIndentedString(ecgi)).append("\n");
        sb.append("    n3gaLocation: ").append(toIndentedString(n3gaLocation)).append("\n");
        sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
        sb.append("    transactions: ").append(toIndentedString(transactions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
