/*
 * LMF Location
 * LMF Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29572.nlmf.location;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates the status of event reporting.
 */
@ApiModel(description = "Indicates the status of event reporting.")
@JsonPropertyOrder({ EventReportingStatus.JSON_PROPERTY_EVENT_REPORT_COUNTER, EventReportingStatus.JSON_PROPERTY_EVENT_REPORT_DURATION })
public class EventReportingStatus
{
    public static final String JSON_PROPERTY_EVENT_REPORT_COUNTER = "eventReportCounter";
    private Integer eventReportCounter;

    public static final String JSON_PROPERTY_EVENT_REPORT_DURATION = "eventReportDuration";
    private Integer eventReportDuration;

    public EventReportingStatus()
    {
    }

    public EventReportingStatus eventReportCounter(Integer eventReportCounter)
    {

        this.eventReportCounter = eventReportCounter;
        return this;
    }

    /**
     * Number of event reports received from the target UE. minimum: 1 maximum:
     * 8640000
     * 
     * @return eventReportCounter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Number of event reports received from the target UE.")
    @JsonProperty(JSON_PROPERTY_EVENT_REPORT_COUNTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getEventReportCounter()
    {
        return eventReportCounter;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_REPORT_COUNTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventReportCounter(Integer eventReportCounter)
    {
        this.eventReportCounter = eventReportCounter;
    }

    public EventReportingStatus eventReportDuration(Integer eventReportDuration)
    {

        this.eventReportDuration = eventReportDuration;
        return this;
    }

    /**
     * Duration of event reporting. minimum: 1 maximum: 8640000
     * 
     * @return eventReportDuration
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Duration of event reporting.")
    @JsonProperty(JSON_PROPERTY_EVENT_REPORT_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getEventReportDuration()
    {
        return eventReportDuration;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_REPORT_DURATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventReportDuration(Integer eventReportDuration)
    {
        this.eventReportDuration = eventReportDuration;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        EventReportingStatus eventReportingStatus = (EventReportingStatus) o;
        return Objects.equals(this.eventReportCounter, eventReportingStatus.eventReportCounter)
               && Objects.equals(this.eventReportDuration, eventReportingStatus.eventReportDuration);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(eventReportCounter, eventReportDuration);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EventReportingStatus {\n");
        sb.append("    eventReportCounter: ").append(toIndentedString(eventReportCounter)).append("\n");
        sb.append("    eventReportDuration: ").append(toIndentedString(eventReportDuration)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
