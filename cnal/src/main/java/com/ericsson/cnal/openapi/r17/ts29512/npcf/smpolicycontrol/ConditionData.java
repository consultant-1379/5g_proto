/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.AccessType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains conditions of applicability for a rule.
 */
@ApiModel(description = "Contains conditions of applicability for a rule.")
@JsonPropertyOrder({ ConditionData.JSON_PROPERTY_COND_ID,
                     ConditionData.JSON_PROPERTY_ACTIVATION_TIME,
                     ConditionData.JSON_PROPERTY_DEACTIVATION_TIME,
                     ConditionData.JSON_PROPERTY_ACCESS_TYPE,
                     ConditionData.JSON_PROPERTY_RAT_TYPE })
public class ConditionData
{
    public static final String JSON_PROPERTY_COND_ID = "condId";
    private String condId;

    public static final String JSON_PROPERTY_ACTIVATION_TIME = "activationTime";
    private JsonNullable<OffsetDateTime> activationTime = JsonNullable.<OffsetDateTime>undefined();

    public static final String JSON_PROPERTY_DEACTIVATION_TIME = "deactivationTime";
    private JsonNullable<OffsetDateTime> deactivationTime = JsonNullable.<OffsetDateTime>undefined();

    public static final String JSON_PROPERTY_ACCESS_TYPE = "accessType";
    private AccessType accessType;

    public static final String JSON_PROPERTY_RAT_TYPE = "ratType";
    private String ratType;

    public ConditionData()
    {
    }

    public ConditionData condId(String condId)
    {

        this.condId = condId;
        return this;
    }

    /**
     * Uniquely identifies the condition data within a PDU session.
     * 
     * @return condId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Uniquely identifies the condition data within a PDU session.")
    @JsonProperty(JSON_PROPERTY_COND_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getCondId()
    {
        return condId;
    }

    @JsonProperty(JSON_PROPERTY_COND_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCondId(String condId)
    {
        this.condId = condId;
    }

    public ConditionData activationTime(OffsetDateTime activationTime)
    {
        this.activationTime = JsonNullable.<OffsetDateTime>of(activationTime);

        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI with
     * &#39;nullable:true&#39; property.
     * 
     * @return activationTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI with 'nullable:true' property.  ")
    @JsonIgnore
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getActivationTime()
    {
        return activationTime.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ACTIVATION_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<OffsetDateTime> getActivationTime_JsonNullable()
    {
        return activationTime;
    }

    @JsonProperty(JSON_PROPERTY_ACTIVATION_TIME)
    public void setActivationTime_JsonNullable(JsonNullable<OffsetDateTime> activationTime)
    {
        this.activationTime = activationTime;
    }

    public void setActivationTime(OffsetDateTime activationTime)
    {
        this.activationTime = JsonNullable.<OffsetDateTime>of(activationTime);
    }

    public ConditionData deactivationTime(OffsetDateTime deactivationTime)
    {
        this.deactivationTime = JsonNullable.<OffsetDateTime>of(deactivationTime);

        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI with
     * &#39;nullable:true&#39; property.
     * 
     * @return deactivationTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI with 'nullable:true' property.  ")
    @JsonIgnore
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getDeactivationTime()
    {
        return deactivationTime.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_DEACTIVATION_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<OffsetDateTime> getDeactivationTime_JsonNullable()
    {
        return deactivationTime;
    }

    @JsonProperty(JSON_PROPERTY_DEACTIVATION_TIME)
    public void setDeactivationTime_JsonNullable(JsonNullable<OffsetDateTime> deactivationTime)
    {
        this.deactivationTime = deactivationTime;
    }

    public void setDeactivationTime(OffsetDateTime deactivationTime)
    {
        this.deactivationTime = JsonNullable.<OffsetDateTime>of(deactivationTime);
    }

    public ConditionData accessType(AccessType accessType)
    {

        this.accessType = accessType;
        return this;
    }

    /**
     * Get accessType
     * 
     * @return accessType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ACCESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AccessType getAccessType()
    {
        return accessType;
    }

    @JsonProperty(JSON_PROPERTY_ACCESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccessType(AccessType accessType)
    {
        this.accessType = accessType;
    }

    public ConditionData ratType(String ratType)
    {

        this.ratType = ratType;
        return this;
    }

    /**
     * Indicates the radio access used.
     * 
     * @return ratType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the radio access used.")
    @JsonProperty(JSON_PROPERTY_RAT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRatType()
    {
        return ratType;
    }

    @JsonProperty(JSON_PROPERTY_RAT_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRatType(String ratType)
    {
        this.ratType = ratType;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ConditionData conditionData = (ConditionData) o;
        return Objects.equals(this.condId, conditionData.condId) && equalsNullable(this.activationTime, conditionData.activationTime)
               && equalsNullable(this.deactivationTime, conditionData.deactivationTime) && Objects.equals(this.accessType, conditionData.accessType)
               && Objects.equals(this.ratType, conditionData.ratType);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(condId, hashCodeNullable(activationTime), hashCodeNullable(deactivationTime), accessType, ratType);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ConditionData {\n");
        sb.append("    condId: ").append(toIndentedString(condId)).append("\n");
        sb.append("    activationTime: ").append(toIndentedString(activationTime)).append("\n");
        sb.append("    deactivationTime: ").append(toIndentedString(deactivationTime)).append("\n");
        sb.append("    accessType: ").append(toIndentedString(accessType)).append("\n");
        sb.append("    ratType: ").append(toIndentedString(ratType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
