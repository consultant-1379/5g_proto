/*
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29562.nhss.imssdm;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Data associated to an individual IFC (Initial Filter Criteria)
 */
@ApiModel(description = "Data associated to an individual IFC (Initial Filter Criteria)")
@JsonPropertyOrder({ Ifc.JSON_PROPERTY_PRIORITY, Ifc.JSON_PROPERTY_TRIGGER, Ifc.JSON_PROPERTY_APP_SERVER })
public class Ifc
{
    public static final String JSON_PROPERTY_PRIORITY = "priority";
    private Integer priority;

    public static final String JSON_PROPERTY_TRIGGER = "trigger";
    private TriggerPoint trigger;

    public static final String JSON_PROPERTY_APP_SERVER = "appServer";
    private ApplicationServer appServer;

    public Ifc()
    {
    }

    public Ifc priority(Integer priority)
    {

        this.priority = priority;
        return this;
    }

    /**
     * Get priority minimum: 1
     * 
     * @return priority
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Integer getPriority()
    {
        return priority;
    }

    @JsonProperty(JSON_PROPERTY_PRIORITY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPriority(Integer priority)
    {
        this.priority = priority;
    }

    public Ifc trigger(TriggerPoint trigger)
    {

        this.trigger = trigger;
        return this;
    }

    /**
     * Get trigger
     * 
     * @return trigger
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TRIGGER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TriggerPoint getTrigger()
    {
        return trigger;
    }

    @JsonProperty(JSON_PROPERTY_TRIGGER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTrigger(TriggerPoint trigger)
    {
        this.trigger = trigger;
    }

    public Ifc appServer(ApplicationServer appServer)
    {

        this.appServer = appServer;
        return this;
    }

    /**
     * Get appServer
     * 
     * @return appServer
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_APP_SERVER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public ApplicationServer getAppServer()
    {
        return appServer;
    }

    @JsonProperty(JSON_PROPERTY_APP_SERVER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAppServer(ApplicationServer appServer)
    {
        this.appServer = appServer;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        Ifc ifc = (Ifc) o;
        return Objects.equals(this.priority, ifc.priority) && Objects.equals(this.trigger, ifc.trigger) && Objects.equals(this.appServer, ifc.appServer);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(priority, trigger, appServer);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class Ifc {\n");
        sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
        sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
        sb.append("    appServer: ").append(toIndentedString(appServer)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
