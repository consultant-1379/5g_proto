/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents load level information of a given NF instance.
 */
@ApiModel(description = "Represents load level information of a given NF instance.")
@JsonPropertyOrder({ NfLoadLevelInformation.JSON_PROPERTY_NF_TYPE,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_INSTANCE_ID,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_SET_ID,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_STATUS,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_CPU_USAGE,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_MEMORY_USAGE,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_STORAGE_USAGE,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_LOAD_LEVEL_AVERAGE,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_LOAD_LEVELPEAK,
                     NfLoadLevelInformation.JSON_PROPERTY_NF_LOAD_AVG_IN_AOI,
                     NfLoadLevelInformation.JSON_PROPERTY_SNSSAI,
                     NfLoadLevelInformation.JSON_PROPERTY_CONFIDENCE })
public class NfLoadLevelInformation
{
    public static final String JSON_PROPERTY_NF_TYPE = "nfType";
    private String nfType;

    public static final String JSON_PROPERTY_NF_INSTANCE_ID = "nfInstanceId";
    private UUID nfInstanceId;

    public static final String JSON_PROPERTY_NF_SET_ID = "nfSetId";
    private String nfSetId;

    public static final String JSON_PROPERTY_NF_STATUS = "nfStatus";
    private NfStatus nfStatus;

    public static final String JSON_PROPERTY_NF_CPU_USAGE = "nfCpuUsage";
    private Integer nfCpuUsage;

    public static final String JSON_PROPERTY_NF_MEMORY_USAGE = "nfMemoryUsage";
    private Integer nfMemoryUsage;

    public static final String JSON_PROPERTY_NF_STORAGE_USAGE = "nfStorageUsage";
    private Integer nfStorageUsage;

    public static final String JSON_PROPERTY_NF_LOAD_LEVEL_AVERAGE = "nfLoadLevelAverage";
    private Integer nfLoadLevelAverage;

    public static final String JSON_PROPERTY_NF_LOAD_LEVELPEAK = "nfLoadLevelpeak";
    private Integer nfLoadLevelpeak;

    public static final String JSON_PROPERTY_NF_LOAD_AVG_IN_AOI = "nfLoadAvgInAoi";
    private Integer nfLoadAvgInAoi;

    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_CONFIDENCE = "confidence";
    private Integer confidence;

    public NfLoadLevelInformation()
    {
    }

    public NfLoadLevelInformation nfType(String nfType)
    {

        this.nfType = nfType;
        return this;
    }

    /**
     * NF types known to NRF
     * 
     * @return nfType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "NF types known to NRF")
    @JsonProperty(JSON_PROPERTY_NF_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNfType()
    {
        return nfType;
    }

    @JsonProperty(JSON_PROPERTY_NF_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfType(String nfType)
    {
        this.nfType = nfType;
    }

    public NfLoadLevelInformation nfInstanceId(UUID nfInstanceId)
    {

        this.nfInstanceId = nfInstanceId;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return nfInstanceId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getNfInstanceId()
    {
        return nfInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfInstanceId(UUID nfInstanceId)
    {
        this.nfInstanceId = nfInstanceId;
    }

    public NfLoadLevelInformation nfSetId(String nfSetId)
    {

        this.nfSetId = nfSetId;
        return this;
    }

    /**
     * NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the
     * following string \&quot;set&lt;Set
     * ID&gt;.&lt;nftype&gt;set.5gc.mnc&lt;MNC&gt;.mcc&lt;MCC&gt;\&quot;, or
     * \&quot;set&lt;SetID&gt;.&lt;NFType&gt;set.5gc.nid&lt;NID&gt;.mnc&lt;MNC&gt;.mcc&lt;MCC&gt;\&quot;
     * with &lt;MCC&gt; encoded as defined in clause 5.4.2 (\&quot;Mcc\&quot; data
     * type definition) &lt;MNC&gt; encoding the Mobile Network Code part of the
     * PLMN, comprising 3 digits. If there are only 2 significant digits in the MNC,
     * one \&quot;0\&quot; digit shall be inserted at the left side to fill the 3
     * digits coding of MNC. Pattern: &#39;^[0-9]{3}$&#39; &lt;NFType&gt; encoded as
     * a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but with lower case
     * characters &lt;Set ID&gt; encoded as a string of characters consisting of
     * alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and
     * that shall end with either an alphabetic character or a digit.
     * 
     * @return nfSetId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.  ")
    @JsonProperty(JSON_PROPERTY_NF_SET_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNfSetId()
    {
        return nfSetId;
    }

    @JsonProperty(JSON_PROPERTY_NF_SET_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfSetId(String nfSetId)
    {
        this.nfSetId = nfSetId;
    }

    public NfLoadLevelInformation nfStatus(NfStatus nfStatus)
    {

        this.nfStatus = nfStatus;
        return this;
    }

    /**
     * Get nfStatus
     * 
     * @return nfStatus
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NfStatus getNfStatus()
    {
        return nfStatus;
    }

    @JsonProperty(JSON_PROPERTY_NF_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfStatus(NfStatus nfStatus)
    {
        this.nfStatus = nfStatus;
    }

    public NfLoadLevelInformation nfCpuUsage(Integer nfCpuUsage)
    {

        this.nfCpuUsage = nfCpuUsage;
        return this;
    }

    /**
     * Get nfCpuUsage
     * 
     * @return nfCpuUsage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_CPU_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getNfCpuUsage()
    {
        return nfCpuUsage;
    }

    @JsonProperty(JSON_PROPERTY_NF_CPU_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfCpuUsage(Integer nfCpuUsage)
    {
        this.nfCpuUsage = nfCpuUsage;
    }

    public NfLoadLevelInformation nfMemoryUsage(Integer nfMemoryUsage)
    {

        this.nfMemoryUsage = nfMemoryUsage;
        return this;
    }

    /**
     * Get nfMemoryUsage
     * 
     * @return nfMemoryUsage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_MEMORY_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getNfMemoryUsage()
    {
        return nfMemoryUsage;
    }

    @JsonProperty(JSON_PROPERTY_NF_MEMORY_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfMemoryUsage(Integer nfMemoryUsage)
    {
        this.nfMemoryUsage = nfMemoryUsage;
    }

    public NfLoadLevelInformation nfStorageUsage(Integer nfStorageUsage)
    {

        this.nfStorageUsage = nfStorageUsage;
        return this;
    }

    /**
     * Get nfStorageUsage
     * 
     * @return nfStorageUsage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_STORAGE_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getNfStorageUsage()
    {
        return nfStorageUsage;
    }

    @JsonProperty(JSON_PROPERTY_NF_STORAGE_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfStorageUsage(Integer nfStorageUsage)
    {
        this.nfStorageUsage = nfStorageUsage;
    }

    public NfLoadLevelInformation nfLoadLevelAverage(Integer nfLoadLevelAverage)
    {

        this.nfLoadLevelAverage = nfLoadLevelAverage;
        return this;
    }

    /**
     * Get nfLoadLevelAverage
     * 
     * @return nfLoadLevelAverage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_LOAD_LEVEL_AVERAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getNfLoadLevelAverage()
    {
        return nfLoadLevelAverage;
    }

    @JsonProperty(JSON_PROPERTY_NF_LOAD_LEVEL_AVERAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfLoadLevelAverage(Integer nfLoadLevelAverage)
    {
        this.nfLoadLevelAverage = nfLoadLevelAverage;
    }

    public NfLoadLevelInformation nfLoadLevelpeak(Integer nfLoadLevelpeak)
    {

        this.nfLoadLevelpeak = nfLoadLevelpeak;
        return this;
    }

    /**
     * Get nfLoadLevelpeak
     * 
     * @return nfLoadLevelpeak
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_LOAD_LEVELPEAK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getNfLoadLevelpeak()
    {
        return nfLoadLevelpeak;
    }

    @JsonProperty(JSON_PROPERTY_NF_LOAD_LEVELPEAK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfLoadLevelpeak(Integer nfLoadLevelpeak)
    {
        this.nfLoadLevelpeak = nfLoadLevelpeak;
    }

    public NfLoadLevelInformation nfLoadAvgInAoi(Integer nfLoadAvgInAoi)
    {

        this.nfLoadAvgInAoi = nfLoadAvgInAoi;
        return this;
    }

    /**
     * Get nfLoadAvgInAoi
     * 
     * @return nfLoadAvgInAoi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_LOAD_AVG_IN_AOI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getNfLoadAvgInAoi()
    {
        return nfLoadAvgInAoi;
    }

    @JsonProperty(JSON_PROPERTY_NF_LOAD_AVG_IN_AOI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfLoadAvgInAoi(Integer nfLoadAvgInAoi)
    {
        this.nfLoadAvgInAoi = nfLoadAvgInAoi;
    }

    public NfLoadLevelInformation snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public NfLoadLevelInformation confidence(Integer confidence)
    {

        this.confidence = confidence;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return confidence
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_CONFIDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getConfidence()
    {
        return confidence;
    }

    @JsonProperty(JSON_PROPERTY_CONFIDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConfidence(Integer confidence)
    {
        this.confidence = confidence;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NfLoadLevelInformation nfLoadLevelInformation = (NfLoadLevelInformation) o;
        return Objects.equals(this.nfType, nfLoadLevelInformation.nfType) && Objects.equals(this.nfInstanceId, nfLoadLevelInformation.nfInstanceId)
               && Objects.equals(this.nfSetId, nfLoadLevelInformation.nfSetId) && Objects.equals(this.nfStatus, nfLoadLevelInformation.nfStatus)
               && Objects.equals(this.nfCpuUsage, nfLoadLevelInformation.nfCpuUsage) && Objects.equals(this.nfMemoryUsage, nfLoadLevelInformation.nfMemoryUsage)
               && Objects.equals(this.nfStorageUsage, nfLoadLevelInformation.nfStorageUsage)
               && Objects.equals(this.nfLoadLevelAverage, nfLoadLevelInformation.nfLoadLevelAverage)
               && Objects.equals(this.nfLoadLevelpeak, nfLoadLevelInformation.nfLoadLevelpeak)
               && Objects.equals(this.nfLoadAvgInAoi, nfLoadLevelInformation.nfLoadAvgInAoi) && Objects.equals(this.snssai, nfLoadLevelInformation.snssai)
               && Objects.equals(this.confidence, nfLoadLevelInformation.confidence);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(nfType,
                            nfInstanceId,
                            nfSetId,
                            nfStatus,
                            nfCpuUsage,
                            nfMemoryUsage,
                            nfStorageUsage,
                            nfLoadLevelAverage,
                            nfLoadLevelpeak,
                            nfLoadAvgInAoi,
                            snssai,
                            confidence);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NfLoadLevelInformation {\n");
        sb.append("    nfType: ").append(toIndentedString(nfType)).append("\n");
        sb.append("    nfInstanceId: ").append(toIndentedString(nfInstanceId)).append("\n");
        sb.append("    nfSetId: ").append(toIndentedString(nfSetId)).append("\n");
        sb.append("    nfStatus: ").append(toIndentedString(nfStatus)).append("\n");
        sb.append("    nfCpuUsage: ").append(toIndentedString(nfCpuUsage)).append("\n");
        sb.append("    nfMemoryUsage: ").append(toIndentedString(nfMemoryUsage)).append("\n");
        sb.append("    nfStorageUsage: ").append(toIndentedString(nfStorageUsage)).append("\n");
        sb.append("    nfLoadLevelAverage: ").append(toIndentedString(nfLoadLevelAverage)).append("\n");
        sb.append("    nfLoadLevelpeak: ").append(toIndentedString(nfLoadLevelpeak)).append("\n");
        sb.append("    nfLoadAvgInAoi: ").append(toIndentedString(nfLoadAvgInAoi)).append("\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
