/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents reporting of the status of a session rule.
 */
@ApiModel(description = "Represents reporting of the status of a session rule.")
@JsonPropertyOrder({ SessionRuleReport.JSON_PROPERTY_RULE_IDS,
                     SessionRuleReport.JSON_PROPERTY_RULE_STATUS,
                     SessionRuleReport.JSON_PROPERTY_SESS_RULE_FAILURE_CODE,
                     SessionRuleReport.JSON_PROPERTY_POLICY_DEC_FAILURE_REPORTS })
public class SessionRuleReport
{
    public static final String JSON_PROPERTY_RULE_IDS = "ruleIds";
    private List<String> ruleIds = new ArrayList<>();

    public static final String JSON_PROPERTY_RULE_STATUS = "ruleStatus";
    private String ruleStatus;

    public static final String JSON_PROPERTY_SESS_RULE_FAILURE_CODE = "sessRuleFailureCode";
    private String sessRuleFailureCode;

    public static final String JSON_PROPERTY_POLICY_DEC_FAILURE_REPORTS = "policyDecFailureReports";
    private List<String> policyDecFailureReports = null;

    public SessionRuleReport()
    {
    }

    public SessionRuleReport ruleIds(List<String> ruleIds)
    {

        this.ruleIds = ruleIds;
        return this;
    }

    public SessionRuleReport addRuleIdsItem(String ruleIdsItem)
    {
        this.ruleIds.add(ruleIdsItem);
        return this;
    }

    /**
     * Contains the identifier of the affected session rule(s).
     * 
     * @return ruleIds
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Contains the identifier of the affected session rule(s).")
    @JsonProperty(JSON_PROPERTY_RULE_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<String> getRuleIds()
    {
        return ruleIds;
    }

    @JsonProperty(JSON_PROPERTY_RULE_IDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRuleIds(List<String> ruleIds)
    {
        this.ruleIds = ruleIds;
    }

    public SessionRuleReport ruleStatus(String ruleStatus)
    {

        this.ruleStatus = ruleStatus;
        return this;
    }

    /**
     * Possible values are - ACTIVE: Indicates that the PCC rule(s) are successfully
     * installed (for those provisioned from PCF) or activated (for those
     * pre-defined in SMF), or the session rule(s) are successfully installed -
     * INACTIVE: Indicates that the PCC rule(s) are removed (for those provisioned
     * from PCF) or inactive (for those pre-defined in SMF) or the session rule(s)
     * are removed.
     * 
     * @return ruleStatus
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Possible values are - ACTIVE: Indicates that the PCC rule(s) are successfully installed (for those provisioned from PCF) or activated (for those pre-defined in SMF), or the session rule(s) are successfully installed  - INACTIVE: Indicates that the PCC rule(s) are removed (for those provisioned from PCF) or inactive (for those pre-defined in SMF) or the session rule(s) are removed. ")
    @JsonProperty(JSON_PROPERTY_RULE_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getRuleStatus()
    {
        return ruleStatus;
    }

    @JsonProperty(JSON_PROPERTY_RULE_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRuleStatus(String ruleStatus)
    {
        this.ruleStatus = ruleStatus;
    }

    public SessionRuleReport sessRuleFailureCode(String sessRuleFailureCode)
    {

        this.sessRuleFailureCode = sessRuleFailureCode;
        return this;
    }

    /**
     * Possible values are - NF_MAL: Indicates that the PCC rule could not be
     * successfully installed (for those provisioned from the PCF) or activated (for
     * those pre-defined in SMF) or enforced (for those already successfully
     * installed) due to SMF/UPF malfunction. - RES_LIM: Indicates that the PCC rule
     * could not be successfully installed (for those provisioned from PCF) or
     * activated (for those pre-defined in SMF) or enforced (for those already
     * successfully installed) due to a limitation of resources at the SMF/UPF. -
     * SESSION_RESOURCE_ALLOCATION_FAILURE: Indicates the session rule could not be
     * successfully enforced due to failure during the allocation of resources for
     * the PDU session in the UE, RAN or AMF. - UNSUCC_QOS_VAL: indicates that the
     * QoS validation has failed. - INCORRECT_UM: The usage monitoring data of the
     * enforced session rule is not the same for all the provisioned session
     * rule(s). - UE_STA_SUSP: Indicates that the UE is in suspend state. -
     * UNKNOWN_REF_ID: Indicates that the session rule could not be successfully
     * installed/modified because the referenced identifier to a Policy Decision
     * Data or to a Condition Data is unknown to the SMF. - INCORRECT_COND_DATA:
     * Indicates that the session rule could not be successfully installed/modified
     * because the referenced Condition data are incorrect. - REF_ID_COLLISION:
     * Indicates that the session rule could not be successfully installed/modified
     * because the same Policy Decision is referenced by a PCC rule (e.g. the
     * session rule and the PCC rule refer to the same Usage Monitoring decision
     * data). - AN_GW_FAILED: Indicates that the AN-Gateway has failed and that the
     * PCF should refrain from sending policy decisions to the SMF until it is
     * informed that the S-GW has been recovered. This value shall not be used if
     * the SM Policy association modification procedure is initiated for session
     * rule removal only.
     * 
     * @return sessRuleFailureCode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are - NF_MAL: Indicates that the PCC rule could not be successfully installed (for those provisioned from the PCF) or activated (for those pre-defined in SMF) or enforced (for those already successfully installed) due to SMF/UPF malfunction. - RES_LIM: Indicates that the PCC rule could not be successfully installed (for those provisioned from PCF) or activated (for those pre-defined in SMF) or enforced (for those already successfully installed) due to a limitation of resources at the SMF/UPF. - SESSION_RESOURCE_ALLOCATION_FAILURE: Indicates the session rule could not be successfully enforced due to failure during the allocation of resources for the PDU session in the UE, RAN or AMF. - UNSUCC_QOS_VAL: indicates that the QoS validation has failed. - INCORRECT_UM: The usage monitoring data of the enforced session rule is not the same for all the provisioned session rule(s). - UE_STA_SUSP: Indicates that the UE is in suspend state. - UNKNOWN_REF_ID: Indicates that the session rule could not be successfully installed/modified because the referenced identifier to a Policy Decision Data or to a Condition Data is unknown to the SMF. - INCORRECT_COND_DATA: Indicates that the session rule could not be successfully installed/modified because the referenced Condition data are incorrect. - REF_ID_COLLISION: Indicates that the session rule could not be successfully installed/modified because the same Policy Decision is referenced by a PCC rule (e.g. the session rule and the PCC rule refer to the same Usage Monitoring decision data). - AN_GW_FAILED: Indicates that the AN-Gateway has failed and that the PCF should refrain from sending policy decisions to the SMF until it is informed that the S-GW has been recovered. This value shall not be used if the SM Policy association modification procedure is initiated for session rule removal only. ")
    @JsonProperty(JSON_PROPERTY_SESS_RULE_FAILURE_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSessRuleFailureCode()
    {
        return sessRuleFailureCode;
    }

    @JsonProperty(JSON_PROPERTY_SESS_RULE_FAILURE_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSessRuleFailureCode(String sessRuleFailureCode)
    {
        this.sessRuleFailureCode = sessRuleFailureCode;
    }

    public SessionRuleReport policyDecFailureReports(List<String> policyDecFailureReports)
    {

        this.policyDecFailureReports = policyDecFailureReports;
        return this;
    }

    public SessionRuleReport addPolicyDecFailureReportsItem(String policyDecFailureReportsItem)
    {
        if (this.policyDecFailureReports == null)
        {
            this.policyDecFailureReports = new ArrayList<>();
        }
        this.policyDecFailureReports.add(policyDecFailureReportsItem);
        return this;
    }

    /**
     * Contains the type(s) of failed policy decision and/or condition data.
     * 
     * @return policyDecFailureReports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the type(s) of failed policy decision and/or condition data.")
    @JsonProperty(JSON_PROPERTY_POLICY_DEC_FAILURE_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getPolicyDecFailureReports()
    {
        return policyDecFailureReports;
    }

    @JsonProperty(JSON_PROPERTY_POLICY_DEC_FAILURE_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPolicyDecFailureReports(List<String> policyDecFailureReports)
    {
        this.policyDecFailureReports = policyDecFailureReports;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SessionRuleReport sessionRuleReport = (SessionRuleReport) o;
        return Objects.equals(this.ruleIds, sessionRuleReport.ruleIds) && Objects.equals(this.ruleStatus, sessionRuleReport.ruleStatus)
               && Objects.equals(this.sessRuleFailureCode, sessionRuleReport.sessRuleFailureCode)
               && Objects.equals(this.policyDecFailureReports, sessionRuleReport.policyDecFailureReports);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ruleIds, ruleStatus, sessRuleFailureCode, policyDecFailureReports);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SessionRuleReport {\n");
        sb.append("    ruleIds: ").append(toIndentedString(ruleIds)).append("\n");
        sb.append("    ruleStatus: ").append(toIndentedString(ruleStatus)).append("\n");
        sb.append("    sessRuleFailureCode: ").append(toIndentedString(sessRuleFailureCode)).append("\n");
        sb.append("    policyDecFailureReports: ").append(toIndentedString(policyDecFailureReports)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
