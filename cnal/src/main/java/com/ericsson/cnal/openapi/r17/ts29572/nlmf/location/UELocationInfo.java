/*
 * LMF Location
 * LMF Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29572.nlmf.location;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates location information of a UE.
 */
@ApiModel(description = "Indicates location information of a UE.")
@JsonPropertyOrder({ UELocationInfo.JSON_PROPERTY_LOCATION_ESTIMATE,
                     UELocationInfo.JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE,
                     UELocationInfo.JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE,
                     UELocationInfo.JSON_PROPERTY_VELOCITY_ESTIMATE,
                     UELocationInfo.JSON_PROPERTY_AGE_OF_VELOCITY_ESTIMATE,
                     UELocationInfo.JSON_PROPERTY_TIMESTAMP_OF_VELOCITY_ESTIMATE })
public class UELocationInfo
{
    public static final String JSON_PROPERTY_LOCATION_ESTIMATE = "locationEstimate";
    private GeographicArea locationEstimate;

    public static final String JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE = "ageOfLocationEstimate";
    private Integer ageOfLocationEstimate;

    public static final String JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE = "timestampOfLocationEstimate";
    private OffsetDateTime timestampOfLocationEstimate;

    public static final String JSON_PROPERTY_VELOCITY_ESTIMATE = "velocityEstimate";
    private VelocityEstimate velocityEstimate;

    public static final String JSON_PROPERTY_AGE_OF_VELOCITY_ESTIMATE = "ageOfVelocityEstimate";
    private Integer ageOfVelocityEstimate;

    public static final String JSON_PROPERTY_TIMESTAMP_OF_VELOCITY_ESTIMATE = "timestampOfVelocityEstimate";
    private OffsetDateTime timestampOfVelocityEstimate;

    public UELocationInfo()
    {
    }

    public UELocationInfo locationEstimate(GeographicArea locationEstimate)
    {

        this.locationEstimate = locationEstimate;
        return this;
    }

    /**
     * Get locationEstimate
     * 
     * @return locationEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public GeographicArea getLocationEstimate()
    {
        return locationEstimate;
    }

    @JsonProperty(JSON_PROPERTY_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLocationEstimate(GeographicArea locationEstimate)
    {
        this.locationEstimate = locationEstimate;
    }

    public UELocationInfo ageOfLocationEstimate(Integer ageOfLocationEstimate)
    {

        this.ageOfLocationEstimate = ageOfLocationEstimate;
        return this;
    }

    /**
     * Indicates value of the age of the location estimate. minimum: 0 maximum:
     * 32767
     * 
     * @return ageOfLocationEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates value of the age of the location estimate.")
    @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAgeOfLocationEstimate()
    {
        return ageOfLocationEstimate;
    }

    @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAgeOfLocationEstimate(Integer ageOfLocationEstimate)
    {
        this.ageOfLocationEstimate = ageOfLocationEstimate;
    }

    public UELocationInfo timestampOfLocationEstimate(OffsetDateTime timestampOfLocationEstimate)
    {

        this.timestampOfLocationEstimate = timestampOfLocationEstimate;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return timestampOfLocationEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTimestampOfLocationEstimate()
    {
        return timestampOfLocationEstimate;
    }

    @JsonProperty(JSON_PROPERTY_TIMESTAMP_OF_LOCATION_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimestampOfLocationEstimate(OffsetDateTime timestampOfLocationEstimate)
    {
        this.timestampOfLocationEstimate = timestampOfLocationEstimate;
    }

    public UELocationInfo velocityEstimate(VelocityEstimate velocityEstimate)
    {

        this.velocityEstimate = velocityEstimate;
        return this;
    }

    /**
     * Get velocityEstimate
     * 
     * @return velocityEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public VelocityEstimate getVelocityEstimate()
    {
        return velocityEstimate;
    }

    @JsonProperty(JSON_PROPERTY_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVelocityEstimate(VelocityEstimate velocityEstimate)
    {
        this.velocityEstimate = velocityEstimate;
    }

    public UELocationInfo ageOfVelocityEstimate(Integer ageOfVelocityEstimate)
    {

        this.ageOfVelocityEstimate = ageOfVelocityEstimate;
        return this;
    }

    /**
     * Indicates value of the age of the location estimate. minimum: 0 maximum:
     * 32767
     * 
     * @return ageOfVelocityEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates value of the age of the location estimate.")
    @JsonProperty(JSON_PROPERTY_AGE_OF_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAgeOfVelocityEstimate()
    {
        return ageOfVelocityEstimate;
    }

    @JsonProperty(JSON_PROPERTY_AGE_OF_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAgeOfVelocityEstimate(Integer ageOfVelocityEstimate)
    {
        this.ageOfVelocityEstimate = ageOfVelocityEstimate;
    }

    public UELocationInfo timestampOfVelocityEstimate(OffsetDateTime timestampOfVelocityEstimate)
    {

        this.timestampOfVelocityEstimate = timestampOfVelocityEstimate;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return timestampOfVelocityEstimate
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TIMESTAMP_OF_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTimestampOfVelocityEstimate()
    {
        return timestampOfVelocityEstimate;
    }

    @JsonProperty(JSON_PROPERTY_TIMESTAMP_OF_VELOCITY_ESTIMATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTimestampOfVelocityEstimate(OffsetDateTime timestampOfVelocityEstimate)
    {
        this.timestampOfVelocityEstimate = timestampOfVelocityEstimate;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UELocationInfo ueLocationInfo = (UELocationInfo) o;
        return Objects.equals(this.locationEstimate, ueLocationInfo.locationEstimate)
               && Objects.equals(this.ageOfLocationEstimate, ueLocationInfo.ageOfLocationEstimate)
               && Objects.equals(this.timestampOfLocationEstimate, ueLocationInfo.timestampOfLocationEstimate)
               && Objects.equals(this.velocityEstimate, ueLocationInfo.velocityEstimate)
               && Objects.equals(this.ageOfVelocityEstimate, ueLocationInfo.ageOfVelocityEstimate)
               && Objects.equals(this.timestampOfVelocityEstimate, ueLocationInfo.timestampOfVelocityEstimate);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(locationEstimate,
                            ageOfLocationEstimate,
                            timestampOfLocationEstimate,
                            velocityEstimate,
                            ageOfVelocityEstimate,
                            timestampOfVelocityEstimate);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UELocationInfo {\n");
        sb.append("    locationEstimate: ").append(toIndentedString(locationEstimate)).append("\n");
        sb.append("    ageOfLocationEstimate: ").append(toIndentedString(ageOfLocationEstimate)).append("\n");
        sb.append("    timestampOfLocationEstimate: ").append(toIndentedString(timestampOfLocationEstimate)).append("\n");
        sb.append("    velocityEstimate: ").append(toIndentedString(velocityEstimate)).append("\n");
        sb.append("    ageOfVelocityEstimate: ").append(toIndentedString(ageOfVelocityEstimate)).append("\n");
        sb.append("    timestampOfVelocityEstimate: ").append(toIndentedString(timestampOfVelocityEstimate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
