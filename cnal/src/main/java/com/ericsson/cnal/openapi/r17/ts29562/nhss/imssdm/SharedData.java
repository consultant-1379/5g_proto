/*
 * Nhss_imsSDM
 * Nhss Subscriber Data Management Service for IMS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29562.nhss.imssdm;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a part of the IMS Profile data shared by several UEs
 */
@ApiModel(description = "Represents a part of the IMS Profile data shared by several UEs")
@JsonPropertyOrder({ SharedData.JSON_PROPERTY_SHARED_DATA_ID, SharedData.JSON_PROPERTY_SHARED_IMS_IFC_DATA })
public class SharedData
{
    public static final String JSON_PROPERTY_SHARED_DATA_ID = "sharedDataId";
    private String sharedDataId;

    public static final String JSON_PROPERTY_SHARED_IMS_IFC_DATA = "sharedImsIfcData";
    private Ifcs sharedImsIfcData;

    public SharedData()
    {
    }

    public SharedData sharedDataId(String sharedDataId)
    {

        this.sharedDataId = sharedDataId;
        return this;
    }

    /**
     * Identifies globally and uniquely a piece of subscription data shared by
     * multiple UEs; the value shall start with the HPLMN id (MCC/MNC) followed by a
     * hyphen followed by a local Id as allocated by the home network operator
     * 
     * @return sharedDataId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Identifies globally and uniquely a piece of subscription data shared by multiple UEs; the value shall start with the HPLMN id (MCC/MNC) followed by a hyphen followed by a local Id as allocated by the home network operator ")
    @JsonProperty(JSON_PROPERTY_SHARED_DATA_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getSharedDataId()
    {
        return sharedDataId;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_DATA_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSharedDataId(String sharedDataId)
    {
        this.sharedDataId = sharedDataId;
    }

    public SharedData sharedImsIfcData(Ifcs sharedImsIfcData)
    {

        this.sharedImsIfcData = sharedImsIfcData;
        return this;
    }

    /**
     * Get sharedImsIfcData
     * 
     * @return sharedImsIfcData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SHARED_IMS_IFC_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Ifcs getSharedImsIfcData()
    {
        return sharedImsIfcData;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_IMS_IFC_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedImsIfcData(Ifcs sharedImsIfcData)
    {
        this.sharedImsIfcData = sharedImsIfcData;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SharedData sharedData = (SharedData) o;
        return Objects.equals(this.sharedDataId, sharedData.sharedDataId) && Objects.equals(this.sharedImsIfcData, sharedData.sharedImsIfcData);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(sharedDataId, sharedImsIfcData);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SharedData {\n");
        sb.append("    sharedDataId: ").append(toIndentedString(sharedDataId)).append("\n");
        sb.append("    sharedImsIfcData: ").append(toIndentedString(sharedImsIfcData)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
