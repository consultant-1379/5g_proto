/*
 * NRF NFManagement Service
 * NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Subscription to a set of NFs, based on the slices (S-NSSAI and NSI) they
 * support
 */
@ApiModel(description = "Subscription to a set of NFs, based on the slices (S-NSSAI and NSI) they support")
@JsonPropertyOrder({ NetworkSliceCond.JSON_PROPERTY_SNSSAI_LIST, NetworkSliceCond.JSON_PROPERTY_NSI_LIST })
public class NetworkSliceCond
{
    public static final String JSON_PROPERTY_SNSSAI_LIST = "snssaiList";
    private List<Snssai> snssaiList = new ArrayList<>();

    public static final String JSON_PROPERTY_NSI_LIST = "nsiList";
    private List<String> nsiList = null;

    public NetworkSliceCond()
    {
    }

    public NetworkSliceCond snssaiList(List<Snssai> snssaiList)
    {

        this.snssaiList = snssaiList;
        return this;
    }

    public NetworkSliceCond addSnssaiListItem(Snssai snssaiListItem)
    {
        this.snssaiList.add(snssaiListItem);
        return this;
    }

    /**
     * Get snssaiList
     * 
     * @return snssaiList
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<Snssai> getSnssaiList()
    {
        return snssaiList;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSnssaiList(List<Snssai> snssaiList)
    {
        this.snssaiList = snssaiList;
    }

    public NetworkSliceCond nsiList(List<String> nsiList)
    {

        this.nsiList = nsiList;
        return this;
    }

    public NetworkSliceCond addNsiListItem(String nsiListItem)
    {
        if (this.nsiList == null)
        {
            this.nsiList = new ArrayList<>();
        }
        this.nsiList.add(nsiListItem);
        return this;
    }

    /**
     * Get nsiList
     * 
     * @return nsiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NSI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getNsiList()
    {
        return nsiList;
    }

    @JsonProperty(JSON_PROPERTY_NSI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNsiList(List<String> nsiList)
    {
        this.nsiList = nsiList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NetworkSliceCond networkSliceCond = (NetworkSliceCond) o;
        return Objects.equals(this.snssaiList, networkSliceCond.snssaiList) && Objects.equals(this.nsiList, networkSliceCond.nsiList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(snssaiList, nsiList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NetworkSliceCond {\n");
        sb.append("    snssaiList: ").append(toIndentedString(snssaiList)).append("\n");
        sb.append("    nsiList: ").append(toIndentedString(nsiList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
