/*
 * NRF NFManagement Service
 * NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.ChangeItem;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Data sent in notifications from NRF to subscribed NF Instances
 */
@ApiModel(description = "Data sent in notifications from NRF to subscribed NF Instances")
@JsonPropertyOrder({ NotificationData.JSON_PROPERTY_EVENT,
                     NotificationData.JSON_PROPERTY_NF_INSTANCE_URI,
                     NotificationData.JSON_PROPERTY_NF_PROFILE,
                     NotificationData.JSON_PROPERTY_PROFILE_CHANGES,
                     NotificationData.JSON_PROPERTY_CONDITION_EVENT,
                     NotificationData.JSON_PROPERTY_SUBSCRIPTION_CONTEXT })
public class NotificationData
{
    public static final String JSON_PROPERTY_EVENT = "event";
    private String event;

    public static final String JSON_PROPERTY_NF_INSTANCE_URI = "nfInstanceUri";
    private String nfInstanceUri;

    public static final String JSON_PROPERTY_NF_PROFILE = "nfProfile";
    private NFProfile nfProfile;

    public static final String JSON_PROPERTY_PROFILE_CHANGES = "profileChanges";
    private List<ChangeItem> profileChanges = null;

    public static final String JSON_PROPERTY_CONDITION_EVENT = "conditionEvent";
    private String conditionEvent;

    public static final String JSON_PROPERTY_SUBSCRIPTION_CONTEXT = "subscriptionContext";
    private SubscriptionContext subscriptionContext;

    public NotificationData()
    {
    }

    public NotificationData event(String event)
    {

        this.event = event;
        return this;
    }

    /**
     * Types of events sent in notifications from NRF to subscribed NF Instances
     * 
     * @return event
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Types of events sent in notifications from NRF to subscribed NF Instances")
    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getEvent()
    {
        return event;
    }

    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEvent(String event)
    {
        this.event = event;
    }

    public NotificationData nfInstanceUri(String nfInstanceUri)
    {

        this.nfInstanceUri = nfInstanceUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return nfInstanceUri
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getNfInstanceUri()
    {
        return nfInstanceUri;
    }

    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNfInstanceUri(String nfInstanceUri)
    {
        this.nfInstanceUri = nfInstanceUri;
    }

    public NotificationData nfProfile(NFProfile nfProfile)
    {

        this.nfProfile = nfProfile;
        return this;
    }

    /**
     * Get nfProfile
     * 
     * @return nfProfile
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NF_PROFILE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NFProfile getNfProfile()
    {
        return nfProfile;
    }

    @JsonProperty(JSON_PROPERTY_NF_PROFILE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfProfile(NFProfile nfProfile)
    {
        this.nfProfile = nfProfile;
    }

    public NotificationData profileChanges(List<ChangeItem> profileChanges)
    {

        this.profileChanges = profileChanges;
        return this;
    }

    public NotificationData addProfileChangesItem(ChangeItem profileChangesItem)
    {
        if (this.profileChanges == null)
        {
            this.profileChanges = new ArrayList<>();
        }
        this.profileChanges.add(profileChangesItem);
        return this;
    }

    /**
     * Get profileChanges
     * 
     * @return profileChanges
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PROFILE_CHANGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<ChangeItem> getProfileChanges()
    {
        return profileChanges;
    }

    @JsonProperty(JSON_PROPERTY_PROFILE_CHANGES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProfileChanges(List<ChangeItem> profileChanges)
    {
        this.profileChanges = profileChanges;
    }

    public NotificationData conditionEvent(String conditionEvent)
    {

        this.conditionEvent = conditionEvent;
        return this;
    }

    /**
     * Indicates whether a notification is due to the NF Instance to start or stop
     * being part of a condition for a subscription to a set of NFs
     * 
     * @return conditionEvent
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether a notification is due to the NF Instance to start or stop being part of a condition for a subscription to a set of NFs ")
    @JsonProperty(JSON_PROPERTY_CONDITION_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getConditionEvent()
    {
        return conditionEvent;
    }

    @JsonProperty(JSON_PROPERTY_CONDITION_EVENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConditionEvent(String conditionEvent)
    {
        this.conditionEvent = conditionEvent;
    }

    public NotificationData subscriptionContext(SubscriptionContext subscriptionContext)
    {

        this.subscriptionContext = subscriptionContext;
        return this;
    }

    /**
     * Get subscriptionContext
     * 
     * @return subscriptionContext
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_CONTEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SubscriptionContext getSubscriptionContext()
    {
        return subscriptionContext;
    }

    @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_CONTEXT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubscriptionContext(SubscriptionContext subscriptionContext)
    {
        this.subscriptionContext = subscriptionContext;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NotificationData notificationData = (NotificationData) o;
        return Objects.equals(this.event, notificationData.event) && Objects.equals(this.nfInstanceUri, notificationData.nfInstanceUri)
               && Objects.equals(this.nfProfile, notificationData.nfProfile) && Objects.equals(this.profileChanges, notificationData.profileChanges)
               && Objects.equals(this.conditionEvent, notificationData.conditionEvent)
               && Objects.equals(this.subscriptionContext, notificationData.subscriptionContext);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(event, nfInstanceUri, nfProfile, profileChanges, conditionEvent, subscriptionContext);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NotificationData {\n");
        sb.append("    event: ").append(toIndentedString(event)).append("\n");
        sb.append("    nfInstanceUri: ").append(toIndentedString(nfInstanceUri)).append("\n");
        sb.append("    nfProfile: ").append(toIndentedString(nfProfile)).append("\n");
        sb.append("    profileChanges: ").append(toIndentedString(profileChanges)).append("\n");
        sb.append("    conditionEvent: ").append(toIndentedString(conditionEvent)).append("\n");
        sb.append("    subscriptionContext: ").append(toIndentedString(subscriptionContext)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
