/*
 * Nnwdaf_AnalyticsInfo
 * Nnwdaf_AnalyticsInfo Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.analyticsinfo;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29575.nadrf.datamanagement.DataNotification;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains historical data related to an analytics subscription.
 */
@ApiModel(description = "Contains historical data related to an analytics subscription.")
@JsonPropertyOrder({ HistoricalData.JSON_PROPERTY_START_TIME,
                     HistoricalData.JSON_PROPERTY_END_TIME,
                     HistoricalData.JSON_PROPERTY_SUBS_WITH_SOURCES,
                     HistoricalData.JSON_PROPERTY_DATA })
public class HistoricalData
{
    public static final String JSON_PROPERTY_START_TIME = "startTime";
    private OffsetDateTime startTime;

    public static final String JSON_PROPERTY_END_TIME = "endTime";
    private OffsetDateTime endTime;

    public static final String JSON_PROPERTY_SUBS_WITH_SOURCES = "subsWithSources";
    private List<SpecificDataSubscription> subsWithSources = null;

    public static final String JSON_PROPERTY_DATA = "data";
    private List<DataNotification> data = new ArrayList<>();

    public HistoricalData()
    {
    }

    public HistoricalData startTime(OffsetDateTime startTime)
    {

        this.startTime = startTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return startTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getStartTime()
    {
        return startTime;
    }

    @JsonProperty(JSON_PROPERTY_START_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStartTime(OffsetDateTime startTime)
    {
        this.startTime = startTime;
    }

    public HistoricalData endTime(OffsetDateTime endTime)
    {

        this.endTime = endTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return endTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getEndTime()
    {
        return endTime;
    }

    @JsonProperty(JSON_PROPERTY_END_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEndTime(OffsetDateTime endTime)
    {
        this.endTime = endTime;
    }

    public HistoricalData subsWithSources(List<SpecificDataSubscription> subsWithSources)
    {

        this.subsWithSources = subsWithSources;
        return this;
    }

    public HistoricalData addSubsWithSourcesItem(SpecificDataSubscription subsWithSourcesItem)
    {
        if (this.subsWithSources == null)
        {
            this.subsWithSources = new ArrayList<>();
        }
        this.subsWithSources.add(subsWithSourcesItem);
        return this;
    }

    /**
     * Information about subscriptions with the data sources.
     * 
     * @return subsWithSources
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Information about subscriptions with the data sources.")
    @JsonProperty(JSON_PROPERTY_SUBS_WITH_SOURCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<SpecificDataSubscription> getSubsWithSources()
    {
        return subsWithSources;
    }

    @JsonProperty(JSON_PROPERTY_SUBS_WITH_SOURCES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubsWithSources(List<SpecificDataSubscription> subsWithSources)
    {
        this.subsWithSources = subsWithSources;
    }

    public HistoricalData data(List<DataNotification> data)
    {

        this.data = data;
        return this;
    }

    public HistoricalData addDataItem(DataNotification dataItem)
    {
        this.data.add(dataItem);
        return this;
    }

    /**
     * Historical data related to the analytics.
     * 
     * @return data
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Historical data related to the analytics.")
    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<DataNotification> getData()
    {
        return data;
    }

    @JsonProperty(JSON_PROPERTY_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setData(List<DataNotification> data)
    {
        this.data = data;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        HistoricalData historicalData = (HistoricalData) o;
        return Objects.equals(this.startTime, historicalData.startTime) && Objects.equals(this.endTime, historicalData.endTime)
               && Objects.equals(this.subsWithSources, historicalData.subsWithSources) && Objects.equals(this.data, historicalData.data);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(startTime, endTime, subsWithSources, data);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class HistoricalData {\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("    subsWithSources: ").append(toIndentedString(subsWithSources)).append("\n");
        sb.append("    data: ").append(toIndentedString(data)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
