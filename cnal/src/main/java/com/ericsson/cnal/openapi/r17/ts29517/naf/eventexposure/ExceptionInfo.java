/*
 * Naf_EventExposure
 * AF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29517.naf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.FlowInfo;
import com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription.Exception;
import com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization.EthFlowDescription;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the exceptions information provided by the AF.
 */
@ApiModel(description = "Represents the exceptions information provided by the AF.")
@JsonPropertyOrder({ ExceptionInfo.JSON_PROPERTY_IP_TRAFFIC_FILTER, ExceptionInfo.JSON_PROPERTY_ETH_TRAFFIC_FILTER, ExceptionInfo.JSON_PROPERTY_EXCEPS })
public class ExceptionInfo
{
    public static final String JSON_PROPERTY_IP_TRAFFIC_FILTER = "ipTrafficFilter";
    private FlowInfo ipTrafficFilter;

    public static final String JSON_PROPERTY_ETH_TRAFFIC_FILTER = "ethTrafficFilter";
    private EthFlowDescription ethTrafficFilter;

    public static final String JSON_PROPERTY_EXCEPS = "exceps";
    private List<Exception> exceps = new ArrayList<>();

    public ExceptionInfo()
    {
    }

    public ExceptionInfo ipTrafficFilter(FlowInfo ipTrafficFilter)
    {

        this.ipTrafficFilter = ipTrafficFilter;
        return this;
    }

    /**
     * Get ipTrafficFilter
     * 
     * @return ipTrafficFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IP_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public FlowInfo getIpTrafficFilter()
    {
        return ipTrafficFilter;
    }

    @JsonProperty(JSON_PROPERTY_IP_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpTrafficFilter(FlowInfo ipTrafficFilter)
    {
        this.ipTrafficFilter = ipTrafficFilter;
    }

    public ExceptionInfo ethTrafficFilter(EthFlowDescription ethTrafficFilter)
    {

        this.ethTrafficFilter = ethTrafficFilter;
        return this;
    }

    /**
     * Get ethTrafficFilter
     * 
     * @return ethTrafficFilter
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ETH_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public EthFlowDescription getEthTrafficFilter()
    {
        return ethTrafficFilter;
    }

    @JsonProperty(JSON_PROPERTY_ETH_TRAFFIC_FILTER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEthTrafficFilter(EthFlowDescription ethTrafficFilter)
    {
        this.ethTrafficFilter = ethTrafficFilter;
    }

    public ExceptionInfo exceps(List<Exception> exceps)
    {

        this.exceps = exceps;
        return this;
    }

    public ExceptionInfo addExcepsItem(Exception excepsItem)
    {
        this.exceps.add(excepsItem);
        return this;
    }

    /**
     * Get exceps
     * 
     * @return exceps
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_EXCEPS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<Exception> getExceps()
    {
        return exceps;
    }

    @JsonProperty(JSON_PROPERTY_EXCEPS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setExceps(List<Exception> exceps)
    {
        this.exceps = exceps;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ExceptionInfo exceptionInfo = (ExceptionInfo) o;
        return Objects.equals(this.ipTrafficFilter, exceptionInfo.ipTrafficFilter) && Objects.equals(this.ethTrafficFilter, exceptionInfo.ethTrafficFilter)
               && Objects.equals(this.exceps, exceptionInfo.exceps);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ipTrafficFilter, ethTrafficFilter, exceps);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ExceptionInfo {\n");
        sb.append("    ipTrafficFilter: ").append(toIndentedString(ipTrafficFilter)).append("\n");
        sb.append("    ethTrafficFilter: ").append(toIndentedString(ethTrafficFilter)).append("\n");
        sb.append("    exceps: ").append(toIndentedString(exceps)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
