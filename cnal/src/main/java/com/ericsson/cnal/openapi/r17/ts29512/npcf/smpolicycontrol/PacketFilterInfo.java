/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the information from a single packet filter sent from the SMF to the
 * PCF.
 */
@ApiModel(description = "Contains the information from a single packet filter sent from the SMF to the PCF.")
@JsonPropertyOrder({ PacketFilterInfo.JSON_PROPERTY_PACK_FILT_ID,
                     PacketFilterInfo.JSON_PROPERTY_PACK_FILT_CONT,
                     PacketFilterInfo.JSON_PROPERTY_TOS_TRAFFIC_CLASS,
                     PacketFilterInfo.JSON_PROPERTY_SPI,
                     PacketFilterInfo.JSON_PROPERTY_FLOW_LABEL,
                     PacketFilterInfo.JSON_PROPERTY_FLOW_DIRECTION })
public class PacketFilterInfo
{
    public static final String JSON_PROPERTY_PACK_FILT_ID = "packFiltId";
    private String packFiltId;

    public static final String JSON_PROPERTY_PACK_FILT_CONT = "packFiltCont";
    private String packFiltCont;

    public static final String JSON_PROPERTY_TOS_TRAFFIC_CLASS = "tosTrafficClass";
    private String tosTrafficClass;

    public static final String JSON_PROPERTY_SPI = "spi";
    private String spi;

    public static final String JSON_PROPERTY_FLOW_LABEL = "flowLabel";
    private String flowLabel;

    public static final String JSON_PROPERTY_FLOW_DIRECTION = "flowDirection";
    private String flowDirection;

    public PacketFilterInfo()
    {
    }

    public PacketFilterInfo packFiltId(String packFiltId)
    {

        this.packFiltId = packFiltId;
        return this;
    }

    /**
     * An identifier of packet filter.
     * 
     * @return packFiltId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "An identifier of packet filter.")
    @JsonProperty(JSON_PROPERTY_PACK_FILT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPackFiltId()
    {
        return packFiltId;
    }

    @JsonProperty(JSON_PROPERTY_PACK_FILT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPackFiltId(String packFiltId)
    {
        this.packFiltId = packFiltId;
    }

    public PacketFilterInfo packFiltCont(String packFiltCont)
    {

        this.packFiltCont = packFiltCont;
        return this;
    }

    /**
     * Defines a packet filter for an IP flow.
     * 
     * @return packFiltCont
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Defines a packet filter for an IP flow.")
    @JsonProperty(JSON_PROPERTY_PACK_FILT_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPackFiltCont()
    {
        return packFiltCont;
    }

    @JsonProperty(JSON_PROPERTY_PACK_FILT_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPackFiltCont(String packFiltCont)
    {
        this.packFiltCont = packFiltCont;
    }

    public PacketFilterInfo tosTrafficClass(String tosTrafficClass)
    {

        this.tosTrafficClass = tosTrafficClass;
        return this;
    }

    /**
     * Contains the Ipv4 Type-of-Service and mask field or the Ipv6 Traffic-Class
     * field and mask field.
     * 
     * @return tosTrafficClass
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the Ipv4 Type-of-Service and mask field or the Ipv6 Traffic-Class field and mask field.")
    @JsonProperty(JSON_PROPERTY_TOS_TRAFFIC_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTosTrafficClass()
    {
        return tosTrafficClass;
    }

    @JsonProperty(JSON_PROPERTY_TOS_TRAFFIC_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTosTrafficClass(String tosTrafficClass)
    {
        this.tosTrafficClass = tosTrafficClass;
    }

    public PacketFilterInfo spi(String spi)
    {

        this.spi = spi;
        return this;
    }

    /**
     * The security parameter index of the IPSec packet.
     * 
     * @return spi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The security parameter index of the IPSec packet.")
    @JsonProperty(JSON_PROPERTY_SPI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSpi()
    {
        return spi;
    }

    @JsonProperty(JSON_PROPERTY_SPI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSpi(String spi)
    {
        this.spi = spi;
    }

    public PacketFilterInfo flowLabel(String flowLabel)
    {

        this.flowLabel = flowLabel;
        return this;
    }

    /**
     * The Ipv6 flow label header field.
     * 
     * @return flowLabel
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The Ipv6 flow label header field.")
    @JsonProperty(JSON_PROPERTY_FLOW_LABEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFlowLabel()
    {
        return flowLabel;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_LABEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFlowLabel(String flowLabel)
    {
        this.flowLabel = flowLabel;
    }

    public PacketFilterInfo flowDirection(String flowDirection)
    {

        this.flowDirection = flowDirection;
        return this;
    }

    /**
     * Possible values are - DOWNLINK: The corresponding filter applies for traffic
     * to the UE. - UPLINK: The corresponding filter applies for traffic from the
     * UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and
     * from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to
     * the UE (downlink), but has no specific direction declared. The service data
     * flow detection shall apply the filter for uplink traffic as if the filter was
     * bidirectional. The PCF shall not use the value UNSPECIFIED in filters created
     * by the network in NW-initiated procedures. The PCF shall only include the
     * value UNSPECIFIED in filters in UE-initiated procedures if the same value is
     * received from the SMF.
     * 
     * @return flowDirection
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are - DOWNLINK: The corresponding filter applies for traffic to the UE. - UPLINK: The corresponding filter applies for traffic from the UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to the UE (downlink), but has no specific direction declared. The service data flow detection shall apply the filter for uplink traffic as if the filter was bidirectional. The PCF shall not use the value UNSPECIFIED in filters created by the network in NW-initiated procedures. The PCF shall only include the value UNSPECIFIED in filters in UE-initiated procedures if the same value is received from the SMF. ")
    @JsonProperty(JSON_PROPERTY_FLOW_DIRECTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFlowDirection()
    {
        return flowDirection;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_DIRECTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFlowDirection(String flowDirection)
    {
        this.flowDirection = flowDirection;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PacketFilterInfo packetFilterInfo = (PacketFilterInfo) o;
        return Objects.equals(this.packFiltId, packetFilterInfo.packFiltId) && Objects.equals(this.packFiltCont, packetFilterInfo.packFiltCont)
               && Objects.equals(this.tosTrafficClass, packetFilterInfo.tosTrafficClass) && Objects.equals(this.spi, packetFilterInfo.spi)
               && Objects.equals(this.flowLabel, packetFilterInfo.flowLabel) && Objects.equals(this.flowDirection, packetFilterInfo.flowDirection);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(packFiltId, packFiltCont, tosTrafficClass, spi, flowLabel, flowDirection);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PacketFilterInfo {\n");
        sb.append("    packFiltId: ").append(toIndentedString(packFiltId)).append("\n");
        sb.append("    packFiltCont: ").append(toIndentedString(packFiltCont)).append("\n");
        sb.append("    tosTrafficClass: ").append(toIndentedString(tosTrafficClass)).append("\n");
        sb.append("    spi: ").append(toIndentedString(spi)).append("\n");
        sb.append("    flowLabel: ").append(toIndentedString(flowLabel)).append("\n");
        sb.append("    flowDirection: ").append(toIndentedString(flowDirection)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
