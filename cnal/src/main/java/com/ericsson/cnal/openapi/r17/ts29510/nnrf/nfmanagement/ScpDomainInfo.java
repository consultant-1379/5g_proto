/*
 * NRF NFManagement Service
 * NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SCP Domain specific information
 */
@ApiModel(description = "SCP Domain specific information")
@JsonPropertyOrder({ ScpDomainInfo.JSON_PROPERTY_SCP_FQDN,
                     ScpDomainInfo.JSON_PROPERTY_SCP_IP_END_POINTS,
                     ScpDomainInfo.JSON_PROPERTY_SCP_PREFIX,
                     ScpDomainInfo.JSON_PROPERTY_SCP_PORTS })
public class ScpDomainInfo
{
    public static final String JSON_PROPERTY_SCP_FQDN = "scpFqdn";
    private String scpFqdn;

    public static final String JSON_PROPERTY_SCP_IP_END_POINTS = "scpIpEndPoints";
    private List<IpEndPoint> scpIpEndPoints = null;

    public static final String JSON_PROPERTY_SCP_PREFIX = "scpPrefix";
    private String scpPrefix;

    public static final String JSON_PROPERTY_SCP_PORTS = "scpPorts";
    private Map<String, Integer> scpPorts = null;

    public ScpDomainInfo()
    {
    }

    public ScpDomainInfo scpFqdn(String scpFqdn)
    {

        this.scpFqdn = scpFqdn;
        return this;
    }

    /**
     * Fully Qualified Domain Name
     * 
     * @return scpFqdn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Fully Qualified Domain Name")
    @JsonProperty(JSON_PROPERTY_SCP_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getScpFqdn()
    {
        return scpFqdn;
    }

    @JsonProperty(JSON_PROPERTY_SCP_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScpFqdn(String scpFqdn)
    {
        this.scpFqdn = scpFqdn;
    }

    public ScpDomainInfo scpIpEndPoints(List<IpEndPoint> scpIpEndPoints)
    {

        this.scpIpEndPoints = scpIpEndPoints;
        return this;
    }

    public ScpDomainInfo addScpIpEndPointsItem(IpEndPoint scpIpEndPointsItem)
    {
        if (this.scpIpEndPoints == null)
        {
            this.scpIpEndPoints = new ArrayList<>();
        }
        this.scpIpEndPoints.add(scpIpEndPointsItem);
        return this;
    }

    /**
     * Get scpIpEndPoints
     * 
     * @return scpIpEndPoints
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SCP_IP_END_POINTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<IpEndPoint> getScpIpEndPoints()
    {
        return scpIpEndPoints;
    }

    @JsonProperty(JSON_PROPERTY_SCP_IP_END_POINTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScpIpEndPoints(List<IpEndPoint> scpIpEndPoints)
    {
        this.scpIpEndPoints = scpIpEndPoints;
    }

    public ScpDomainInfo scpPrefix(String scpPrefix)
    {

        this.scpPrefix = scpPrefix;
        return this;
    }

    /**
     * Get scpPrefix
     * 
     * @return scpPrefix
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SCP_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getScpPrefix()
    {
        return scpPrefix;
    }

    @JsonProperty(JSON_PROPERTY_SCP_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScpPrefix(String scpPrefix)
    {
        this.scpPrefix = scpPrefix;
    }

    public ScpDomainInfo scpPorts(Map<String, Integer> scpPorts)
    {

        this.scpPorts = scpPorts;
        return this;
    }

    public ScpDomainInfo putScpPortsItem(String key,
                                         Integer scpPortsItem)
    {
        if (this.scpPorts == null)
        {
            this.scpPorts = new HashMap<>();
        }
        this.scpPorts.put(key, scpPortsItem);
        return this;
    }

    /**
     * Port numbers for HTTP and HTTPS. The key of the map shall be
     * \&quot;http\&quot; or \&quot;https\&quot;.
     * 
     * @return scpPorts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Port numbers for HTTP and HTTPS. The key of the map shall be \"http\" or \"https\". ")
    @JsonProperty(JSON_PROPERTY_SCP_PORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, Integer> getScpPorts()
    {
        return scpPorts;
    }

    @JsonProperty(JSON_PROPERTY_SCP_PORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScpPorts(Map<String, Integer> scpPorts)
    {
        this.scpPorts = scpPorts;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ScpDomainInfo scpDomainInfo = (ScpDomainInfo) o;
        return Objects.equals(this.scpFqdn, scpDomainInfo.scpFqdn) && Objects.equals(this.scpIpEndPoints, scpDomainInfo.scpIpEndPoints)
               && Objects.equals(this.scpPrefix, scpDomainInfo.scpPrefix) && Objects.equals(this.scpPorts, scpDomainInfo.scpPorts);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(scpFqdn, scpIpEndPoints, scpPrefix, scpPorts);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ScpDomainInfo {\n");
        sb.append("    scpFqdn: ").append(toIndentedString(scpFqdn)).append("\n");
        sb.append("    scpIpEndPoints: ").append(toIndentedString(scpIpEndPoints)).append("\n");
        sb.append("    scpPrefix: ").append(toIndentedString(scpPrefix)).append("\n");
        sb.append("    scpPorts: ").append(toIndentedString(scpPorts)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
