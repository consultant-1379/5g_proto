/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes the event information delivered in the subscription.
 */
@ApiModel(description = "Describes the event information delivered in the subscription.")
@JsonPropertyOrder({ AfEventSubscription.JSON_PROPERTY_EVENT,
                     AfEventSubscription.JSON_PROPERTY_NOTIF_METHOD,
                     AfEventSubscription.JSON_PROPERTY_REP_PERIOD,
                     AfEventSubscription.JSON_PROPERTY_WAIT_TIME })
public class AfEventSubscription
{
    public static final String JSON_PROPERTY_EVENT = "event";
    private String event;

    public static final String JSON_PROPERTY_NOTIF_METHOD = "notifMethod";
    private String notifMethod;

    public static final String JSON_PROPERTY_REP_PERIOD = "repPeriod";
    private Integer repPeriod;

    public static final String JSON_PROPERTY_WAIT_TIME = "waitTime";
    private Integer waitTime;

    public AfEventSubscription()
    {
    }

    public AfEventSubscription event(String event)
    {

        this.event = event;
        return this;
    }

    /**
     * Represents an event to notify to the AF.
     * 
     * @return event
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Represents an event to notify to the AF.")
    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getEvent()
    {
        return event;
    }

    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEvent(String event)
    {
        this.event = event;
    }

    public AfEventSubscription notifMethod(String notifMethod)
    {

        this.notifMethod = notifMethod;
        return this;
    }

    /**
     * Represents the notification methods that can be subscribed for an event.
     * 
     * @return notifMethod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Represents the notification methods that can be subscribed for an event.")
    @JsonProperty(JSON_PROPERTY_NOTIF_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNotifMethod()
    {
        return notifMethod;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotifMethod(String notifMethod)
    {
        this.notifMethod = notifMethod;
    }

    public AfEventSubscription repPeriod(Integer repPeriod)
    {

        this.repPeriod = repPeriod;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return repPeriod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_REP_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getRepPeriod()
    {
        return repPeriod;
    }

    @JsonProperty(JSON_PROPERTY_REP_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRepPeriod(Integer repPeriod)
    {
        this.repPeriod = repPeriod;
    }

    public AfEventSubscription waitTime(Integer waitTime)
    {

        this.waitTime = waitTime;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return waitTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_WAIT_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getWaitTime()
    {
        return waitTime;
    }

    @JsonProperty(JSON_PROPERTY_WAIT_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWaitTime(Integer waitTime)
    {
        this.waitTime = waitTime;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AfEventSubscription afEventSubscription = (AfEventSubscription) o;
        return Objects.equals(this.event, afEventSubscription.event) && Objects.equals(this.notifMethod, afEventSubscription.notifMethod)
               && Objects.equals(this.repPeriod, afEventSubscription.repPeriod) && Objects.equals(this.waitTime, afEventSubscription.waitTime);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(event, notifMethod, repPeriod, waitTime);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AfEventSubscription {\n");
        sb.append("    event: ").append(toIndentedString(event)).append("\n");
        sb.append("    notifMethod: ").append(toIndentedString(notifMethod)).append("\n");
        sb.append("    repPeriod: ").append(toIndentedString(repPeriod)).append("\n");
        sb.append("    waitTime: ").append(toIndentedString(waitTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
