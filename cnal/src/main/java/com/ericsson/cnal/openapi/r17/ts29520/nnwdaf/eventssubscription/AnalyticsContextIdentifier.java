/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains information about available analytics contexts.
 */
@ApiModel(description = "Contains information about available analytics contexts.")
@JsonPropertyOrder({ AnalyticsContextIdentifier.JSON_PROPERTY_SUBSCRIPTION_ID,
                     AnalyticsContextIdentifier.JSON_PROPERTY_NF_ANA_CTXTS,
                     AnalyticsContextIdentifier.JSON_PROPERTY_UE_ANA_CTXTS })
public class AnalyticsContextIdentifier
{
    public static final String JSON_PROPERTY_SUBSCRIPTION_ID = "subscriptionId";
    private String subscriptionId;

    public static final String JSON_PROPERTY_NF_ANA_CTXTS = "nfAnaCtxts";
    private List<String> nfAnaCtxts = null;

    public static final String JSON_PROPERTY_UE_ANA_CTXTS = "ueAnaCtxts";
    private List<UeAnalyticsContextDescriptor> ueAnaCtxts = null;

    public AnalyticsContextIdentifier()
    {
    }

    public AnalyticsContextIdentifier subscriptionId(String subscriptionId)
    {

        this.subscriptionId = subscriptionId;
        return this;
    }

    /**
     * The identifier of a subscription.
     * 
     * @return subscriptionId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The identifier of a subscription.")
    @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSubscriptionId()
    {
        return subscriptionId;
    }

    @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubscriptionId(String subscriptionId)
    {
        this.subscriptionId = subscriptionId;
    }

    public AnalyticsContextIdentifier nfAnaCtxts(List<String> nfAnaCtxts)
    {

        this.nfAnaCtxts = nfAnaCtxts;
        return this;
    }

    public AnalyticsContextIdentifier addNfAnaCtxtsItem(String nfAnaCtxtsItem)
    {
        if (this.nfAnaCtxts == null)
        {
            this.nfAnaCtxts = new ArrayList<>();
        }
        this.nfAnaCtxts.add(nfAnaCtxtsItem);
        return this;
    }

    /**
     * List of analytics types for which NF related analytics contexts can be
     * retrieved.
     * 
     * @return nfAnaCtxts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of analytics types for which NF related analytics contexts can be retrieved. ")
    @JsonProperty(JSON_PROPERTY_NF_ANA_CTXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getNfAnaCtxts()
    {
        return nfAnaCtxts;
    }

    @JsonProperty(JSON_PROPERTY_NF_ANA_CTXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfAnaCtxts(List<String> nfAnaCtxts)
    {
        this.nfAnaCtxts = nfAnaCtxts;
    }

    public AnalyticsContextIdentifier ueAnaCtxts(List<UeAnalyticsContextDescriptor> ueAnaCtxts)
    {

        this.ueAnaCtxts = ueAnaCtxts;
        return this;
    }

    public AnalyticsContextIdentifier addUeAnaCtxtsItem(UeAnalyticsContextDescriptor ueAnaCtxtsItem)
    {
        if (this.ueAnaCtxts == null)
        {
            this.ueAnaCtxts = new ArrayList<>();
        }
        this.ueAnaCtxts.add(ueAnaCtxtsItem);
        return this;
    }

    /**
     * List of objects that indicate for which SUPI and analytics types combinations
     * analytics context can be retrieved.
     * 
     * @return ueAnaCtxts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of objects that indicate for which SUPI and analytics types combinations analytics  context can be retrieved. ")
    @JsonProperty(JSON_PROPERTY_UE_ANA_CTXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<UeAnalyticsContextDescriptor> getUeAnaCtxts()
    {
        return ueAnaCtxts;
    }

    @JsonProperty(JSON_PROPERTY_UE_ANA_CTXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeAnaCtxts(List<UeAnalyticsContextDescriptor> ueAnaCtxts)
    {
        this.ueAnaCtxts = ueAnaCtxts;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AnalyticsContextIdentifier analyticsContextIdentifier = (AnalyticsContextIdentifier) o;
        return Objects.equals(this.subscriptionId, analyticsContextIdentifier.subscriptionId)
               && Objects.equals(this.nfAnaCtxts, analyticsContextIdentifier.nfAnaCtxts)
               && Objects.equals(this.ueAnaCtxts, analyticsContextIdentifier.ueAnaCtxts);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(subscriptionId, nfAnaCtxts, ueAnaCtxts);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AnalyticsContextIdentifier {\n");
        sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
        sb.append("    nfAnaCtxts: ").append(toIndentedString(nfAnaCtxts)).append("\n");
        sb.append("    ueAnaCtxts: ").append(toIndentedString(ueAnaCtxts)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
