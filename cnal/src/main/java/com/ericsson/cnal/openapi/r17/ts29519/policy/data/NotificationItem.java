/*
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29519.policy.data;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Identifies a data change notification when the change occurs in a fragment
 * (subset of resource data) of a given resource.
 */
@ApiModel(description = "Identifies a data change notification when the change occurs in a fragment (subset of resource data) of a given resource. ")
@JsonPropertyOrder({ NotificationItem.JSON_PROPERTY_RESOURCE_ID, NotificationItem.JSON_PROPERTY_NOTIF_ITEMS })
public class NotificationItem
{
    public static final String JSON_PROPERTY_RESOURCE_ID = "resourceId";
    private String resourceId;

    public static final String JSON_PROPERTY_NOTIF_ITEMS = "notifItems";
    private List<UpdatedItem> notifItems = new ArrayList<>();

    public NotificationItem()
    {
    }

    public NotificationItem resourceId(String resourceId)
    {

        this.resourceId = resourceId;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return resourceId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getResourceId()
    {
        return resourceId;
    }

    @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setResourceId(String resourceId)
    {
        this.resourceId = resourceId;
    }

    public NotificationItem notifItems(List<UpdatedItem> notifItems)
    {

        this.notifItems = notifItems;
        return this;
    }

    public NotificationItem addNotifItemsItem(UpdatedItem notifItemsItem)
    {
        this.notifItems.add(notifItemsItem);
        return this;
    }

    /**
     * Get notifItems
     * 
     * @return notifItems
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_NOTIF_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<UpdatedItem> getNotifItems()
    {
        return notifItems;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_ITEMS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNotifItems(List<UpdatedItem> notifItems)
    {
        this.notifItems = notifItems;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NotificationItem notificationItem = (NotificationItem) o;
        return Objects.equals(this.resourceId, notificationItem.resourceId) && Objects.equals(this.notifItems, notificationItem.notifItems);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(resourceId, notifItems);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NotificationItem {\n");
        sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
        sb.append("    notifItems: ").append(toIndentedString(notifItems)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
