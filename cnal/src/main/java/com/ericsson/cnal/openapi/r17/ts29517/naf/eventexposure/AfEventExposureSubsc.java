/*
 * Naf_EventExposure
 * AF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29517.naf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29523.npcf.eventexposure.ReportingInformation;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents an Individual Application Event Subscription resource.
 */
@ApiModel(description = "Represents an Individual Application Event Subscription resource.")
@JsonPropertyOrder({ AfEventExposureSubsc.JSON_PROPERTY_DATA_ACC_PROF_ID,
                     AfEventExposureSubsc.JSON_PROPERTY_EVENTS_SUBS,
                     AfEventExposureSubsc.JSON_PROPERTY_EVENTS_REP_INFO,
                     AfEventExposureSubsc.JSON_PROPERTY_NOTIF_URI,
                     AfEventExposureSubsc.JSON_PROPERTY_NOTIF_ID,
                     AfEventExposureSubsc.JSON_PROPERTY_EVENT_NOTIFS,
                     AfEventExposureSubsc.JSON_PROPERTY_SUPP_FEAT })
public class AfEventExposureSubsc
{
    public static final String JSON_PROPERTY_DATA_ACC_PROF_ID = "dataAccProfId";
    private String dataAccProfId;

    public static final String JSON_PROPERTY_EVENTS_SUBS = "eventsSubs";
    private List<EventsSubs> eventsSubs = new ArrayList<>();

    public static final String JSON_PROPERTY_EVENTS_REP_INFO = "eventsRepInfo";
    private ReportingInformation eventsRepInfo;

    public static final String JSON_PROPERTY_NOTIF_URI = "notifUri";
    private String notifUri;

    public static final String JSON_PROPERTY_NOTIF_ID = "notifId";
    private String notifId;

    public static final String JSON_PROPERTY_EVENT_NOTIFS = "eventNotifs";
    private List<AfEventNotification> eventNotifs = null;

    public static final String JSON_PROPERTY_SUPP_FEAT = "suppFeat";
    private String suppFeat;

    public AfEventExposureSubsc()
    {
    }

    public AfEventExposureSubsc dataAccProfId(String dataAccProfId)
    {

        this.dataAccProfId = dataAccProfId;
        return this;
    }

    /**
     * Get dataAccProfId
     * 
     * @return dataAccProfId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DATA_ACC_PROF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDataAccProfId()
    {
        return dataAccProfId;
    }

    @JsonProperty(JSON_PROPERTY_DATA_ACC_PROF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDataAccProfId(String dataAccProfId)
    {
        this.dataAccProfId = dataAccProfId;
    }

    public AfEventExposureSubsc eventsSubs(List<EventsSubs> eventsSubs)
    {

        this.eventsSubs = eventsSubs;
        return this;
    }

    public AfEventExposureSubsc addEventsSubsItem(EventsSubs eventsSubsItem)
    {
        this.eventsSubs.add(eventsSubsItem);
        return this;
    }

    /**
     * Get eventsSubs
     * 
     * @return eventsSubs
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_EVENTS_SUBS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<EventsSubs> getEventsSubs()
    {
        return eventsSubs;
    }

    @JsonProperty(JSON_PROPERTY_EVENTS_SUBS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEventsSubs(List<EventsSubs> eventsSubs)
    {
        this.eventsSubs = eventsSubs;
    }

    public AfEventExposureSubsc eventsRepInfo(ReportingInformation eventsRepInfo)
    {

        this.eventsRepInfo = eventsRepInfo;
        return this;
    }

    /**
     * Get eventsRepInfo
     * 
     * @return eventsRepInfo
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_EVENTS_REP_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public ReportingInformation getEventsRepInfo()
    {
        return eventsRepInfo;
    }

    @JsonProperty(JSON_PROPERTY_EVENTS_REP_INFO)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEventsRepInfo(ReportingInformation eventsRepInfo)
    {
        this.eventsRepInfo = eventsRepInfo;
    }

    public AfEventExposureSubsc notifUri(String notifUri)
    {

        this.notifUri = notifUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return notifUri
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getNotifUri()
    {
        return notifUri;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNotifUri(String notifUri)
    {
        this.notifUri = notifUri;
    }

    public AfEventExposureSubsc notifId(String notifId)
    {

        this.notifId = notifId;
        return this;
    }

    /**
     * Get notifId
     * 
     * @return notifId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_NOTIF_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getNotifId()
    {
        return notifId;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNotifId(String notifId)
    {
        this.notifId = notifId;
    }

    public AfEventExposureSubsc eventNotifs(List<AfEventNotification> eventNotifs)
    {

        this.eventNotifs = eventNotifs;
        return this;
    }

    public AfEventExposureSubsc addEventNotifsItem(AfEventNotification eventNotifsItem)
    {
        if (this.eventNotifs == null)
        {
            this.eventNotifs = new ArrayList<>();
        }
        this.eventNotifs.add(eventNotifsItem);
        return this;
    }

    /**
     * Get eventNotifs
     * 
     * @return eventNotifs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EVENT_NOTIFS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<AfEventNotification> getEventNotifs()
    {
        return eventNotifs;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_NOTIFS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventNotifs(List<AfEventNotification> eventNotifs)
    {
        this.eventNotifs = eventNotifs;
    }

    public AfEventExposureSubsc suppFeat(String suppFeat)
    {

        this.suppFeat = suppFeat;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return suppFeat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSuppFeat()
    {
        return suppFeat;
    }

    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuppFeat(String suppFeat)
    {
        this.suppFeat = suppFeat;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AfEventExposureSubsc afEventExposureSubsc = (AfEventExposureSubsc) o;
        return Objects.equals(this.dataAccProfId, afEventExposureSubsc.dataAccProfId) && Objects.equals(this.eventsSubs, afEventExposureSubsc.eventsSubs)
               && Objects.equals(this.eventsRepInfo, afEventExposureSubsc.eventsRepInfo) && Objects.equals(this.notifUri, afEventExposureSubsc.notifUri)
               && Objects.equals(this.notifId, afEventExposureSubsc.notifId) && Objects.equals(this.eventNotifs, afEventExposureSubsc.eventNotifs)
               && Objects.equals(this.suppFeat, afEventExposureSubsc.suppFeat);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(dataAccProfId, eventsSubs, eventsRepInfo, notifUri, notifId, eventNotifs, suppFeat);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AfEventExposureSubsc {\n");
        sb.append("    dataAccProfId: ").append(toIndentedString(dataAccProfId)).append("\n");
        sb.append("    eventsSubs: ").append(toIndentedString(eventsSubs)).append("\n");
        sb.append("    eventsRepInfo: ").append(toIndentedString(eventsRepInfo)).append("\n");
        sb.append("    notifUri: ").append(toIndentedString(notifUri)).append("\n");
        sb.append("    notifId: ").append(toIndentedString(notifId)).append("\n");
        sb.append("    eventNotifs: ").append(toIndentedString(eventNotifs)).append("\n");
        sb.append("    suppFeat: ").append(toIndentedString(suppFeat)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
