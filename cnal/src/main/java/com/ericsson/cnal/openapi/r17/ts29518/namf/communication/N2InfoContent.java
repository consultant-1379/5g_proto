/*
 * Namf_Communication
 * AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29518.namf.communication;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.RefToBinaryData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a transparent N2 information content to be relayed by AMF
 */
@ApiModel(description = "Represents a transparent N2 information content to be relayed by AMF")
@JsonPropertyOrder({ N2InfoContent.JSON_PROPERTY_NGAP_MESSAGE_TYPE, N2InfoContent.JSON_PROPERTY_NGAP_IE_TYPE, N2InfoContent.JSON_PROPERTY_NGAP_DATA })
public class N2InfoContent
{
    public static final String JSON_PROPERTY_NGAP_MESSAGE_TYPE = "ngapMessageType";
    private Integer ngapMessageType;

    public static final String JSON_PROPERTY_NGAP_IE_TYPE = "ngapIeType";
    private String ngapIeType;

    public static final String JSON_PROPERTY_NGAP_DATA = "ngapData";
    private RefToBinaryData ngapData;

    public N2InfoContent()
    {
    }

    public N2InfoContent ngapMessageType(Integer ngapMessageType)
    {

        this.ngapMessageType = ngapMessageType;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return ngapMessageType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_NGAP_MESSAGE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getNgapMessageType()
    {
        return ngapMessageType;
    }

    @JsonProperty(JSON_PROPERTY_NGAP_MESSAGE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNgapMessageType(Integer ngapMessageType)
    {
        this.ngapMessageType = ngapMessageType;
    }

    public N2InfoContent ngapIeType(String ngapIeType)
    {

        this.ngapIeType = ngapIeType;
        return this;
    }

    /**
     * Indicates the supported NGAP IE types
     * 
     * @return ngapIeType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the supported NGAP IE types")
    @JsonProperty(JSON_PROPERTY_NGAP_IE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNgapIeType()
    {
        return ngapIeType;
    }

    @JsonProperty(JSON_PROPERTY_NGAP_IE_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNgapIeType(String ngapIeType)
    {
        this.ngapIeType = ngapIeType;
    }

    public N2InfoContent ngapData(RefToBinaryData ngapData)
    {

        this.ngapData = ngapData;
        return this;
    }

    /**
     * Get ngapData
     * 
     * @return ngapData
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_NGAP_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public RefToBinaryData getNgapData()
    {
        return ngapData;
    }

    @JsonProperty(JSON_PROPERTY_NGAP_DATA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNgapData(RefToBinaryData ngapData)
    {
        this.ngapData = ngapData;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        N2InfoContent n2InfoContent = (N2InfoContent) o;
        return Objects.equals(this.ngapMessageType, n2InfoContent.ngapMessageType) && Objects.equals(this.ngapIeType, n2InfoContent.ngapIeType)
               && Objects.equals(this.ngapData, n2InfoContent.ngapData);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ngapMessageType, ngapIeType, ngapData);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class N2InfoContent {\n");
        sb.append("    ngapMessageType: ").append(toIndentedString(ngapMessageType)).append("\n");
        sb.append("    ngapIeType: ").append(toIndentedString(ngapIeType)).append("\n");
        sb.append("    ngapData: ").append(toIndentedString(ngapData)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
