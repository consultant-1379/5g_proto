/*
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29519.policy.data;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the network slice specific policy control information.
 */
@ApiModel(description = "Contains the network slice specific policy control information.")
@JsonPropertyOrder({ SlicePolicyData.JSON_PROPERTY_MBR_UL,
                     SlicePolicyData.JSON_PROPERTY_MBR_DL,
                     SlicePolicyData.JSON_PROPERTY_REMAIN_MBR_UL,
                     SlicePolicyData.JSON_PROPERTY_REMAIN_MBR_DL,
                     SlicePolicyData.JSON_PROPERTY_SUPP_FEAT,
                     SlicePolicyData.JSON_PROPERTY_RESET_IDS })
public class SlicePolicyData
{
    public static final String JSON_PROPERTY_MBR_UL = "mbrUl";
    private String mbrUl;

    public static final String JSON_PROPERTY_MBR_DL = "mbrDl";
    private String mbrDl;

    public static final String JSON_PROPERTY_REMAIN_MBR_UL = "remainMbrUl";
    private String remainMbrUl;

    public static final String JSON_PROPERTY_REMAIN_MBR_DL = "remainMbrDl";
    private String remainMbrDl;

    public static final String JSON_PROPERTY_SUPP_FEAT = "suppFeat";
    private String suppFeat;

    public static final String JSON_PROPERTY_RESET_IDS = "resetIds";
    private List<String> resetIds = null;

    public SlicePolicyData()
    {
    }

    public SlicePolicyData mbrUl(String mbrUl)
    {

        this.mbrUl = mbrUl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return mbrUl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_MBR_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMbrUl()
    {
        return mbrUl;
    }

    @JsonProperty(JSON_PROPERTY_MBR_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMbrUl(String mbrUl)
    {
        this.mbrUl = mbrUl;
    }

    public SlicePolicyData mbrDl(String mbrDl)
    {

        this.mbrDl = mbrDl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return mbrDl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_MBR_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMbrDl()
    {
        return mbrDl;
    }

    @JsonProperty(JSON_PROPERTY_MBR_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMbrDl(String mbrDl)
    {
        this.mbrDl = mbrDl;
    }

    public SlicePolicyData remainMbrUl(String remainMbrUl)
    {

        this.remainMbrUl = remainMbrUl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return remainMbrUl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_REMAIN_MBR_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRemainMbrUl()
    {
        return remainMbrUl;
    }

    @JsonProperty(JSON_PROPERTY_REMAIN_MBR_UL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRemainMbrUl(String remainMbrUl)
    {
        this.remainMbrUl = remainMbrUl;
    }

    public SlicePolicyData remainMbrDl(String remainMbrDl)
    {

        this.remainMbrDl = remainMbrDl;
        return this;
    }

    /**
     * String representing a bit rate; the prefixes follow the standard symbols from
     * The International System of Units, and represent x1000 multipliers, with the
     * exception that prefix \&quot;K\&quot; is used to represent the standard
     * symbol \&quot;k\&quot;.
     * 
     * @return remainMbrDl
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". ")
    @JsonProperty(JSON_PROPERTY_REMAIN_MBR_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRemainMbrDl()
    {
        return remainMbrDl;
    }

    @JsonProperty(JSON_PROPERTY_REMAIN_MBR_DL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRemainMbrDl(String remainMbrDl)
    {
        this.remainMbrDl = remainMbrDl;
    }

    public SlicePolicyData suppFeat(String suppFeat)
    {

        this.suppFeat = suppFeat;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return suppFeat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSuppFeat()
    {
        return suppFeat;
    }

    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuppFeat(String suppFeat)
    {
        this.suppFeat = suppFeat;
    }

    public SlicePolicyData resetIds(List<String> resetIds)
    {

        this.resetIds = resetIds;
        return this;
    }

    public SlicePolicyData addResetIdsItem(String resetIdsItem)
    {
        if (this.resetIds == null)
        {
            this.resetIds = new ArrayList<>();
        }
        this.resetIds.add(resetIdsItem);
        return this;
    }

    /**
     * Get resetIds
     * 
     * @return resetIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RESET_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getResetIds()
    {
        return resetIds;
    }

    @JsonProperty(JSON_PROPERTY_RESET_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResetIds(List<String> resetIds)
    {
        this.resetIds = resetIds;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SlicePolicyData slicePolicyData = (SlicePolicyData) o;
        return Objects.equals(this.mbrUl, slicePolicyData.mbrUl) && Objects.equals(this.mbrDl, slicePolicyData.mbrDl)
               && Objects.equals(this.remainMbrUl, slicePolicyData.remainMbrUl) && Objects.equals(this.remainMbrDl, slicePolicyData.remainMbrDl)
               && Objects.equals(this.suppFeat, slicePolicyData.suppFeat) && Objects.equals(this.resetIds, slicePolicyData.resetIds);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(mbrUl, mbrDl, remainMbrUl, remainMbrDl, suppFeat, resetIds);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SlicePolicyData {\n");
        sb.append("    mbrUl: ").append(toIndentedString(mbrUl)).append("\n");
        sb.append("    mbrDl: ").append(toIndentedString(mbrDl)).append("\n");
        sb.append("    remainMbrUl: ").append(toIndentedString(remainMbrUl)).append("\n");
        sb.append("    remainMbrDl: ").append(toIndentedString(remainMbrDl)).append("\n");
        sb.append("    suppFeat: ").append(toIndentedString(suppFeat)).append("\n");
        sb.append("    resetIds: ").append(toIndentedString(resetIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
