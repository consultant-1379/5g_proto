/*
 * Nsmf_EventExposure
 * Session Management Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29508.nsmf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.TimeWindow;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.DddTrafficDescriptor;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.IpAddr;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a subscription to a single event.
 */
@ApiModel(description = "Represents a subscription to a single event.")
@JsonPropertyOrder({ EventSubscription.JSON_PROPERTY_EVENT,
                     EventSubscription.JSON_PROPERTY_DNAI_CHG_TYPE,
                     EventSubscription.JSON_PROPERTY_DDD_TRA_DESCRIPTORS,
                     EventSubscription.JSON_PROPERTY_DDD_STATI,
                     EventSubscription.JSON_PROPERTY_APP_IDS,
                     EventSubscription.JSON_PROPERTY_TARGET_PERIOD,
                     EventSubscription.JSON_PROPERTY_TRANSAC_DISP_IND,
                     EventSubscription.JSON_PROPERTY_TRANSAC_METRICS,
                     EventSubscription.JSON_PROPERTY_UE_IP_ADDR })
public class EventSubscription
{
    public static final String JSON_PROPERTY_EVENT = "event";
    private String event;

    public static final String JSON_PROPERTY_DNAI_CHG_TYPE = "dnaiChgType";
    private String dnaiChgType;

    public static final String JSON_PROPERTY_DDD_TRA_DESCRIPTORS = "dddTraDescriptors";
    private List<DddTrafficDescriptor> dddTraDescriptors = null;

    public static final String JSON_PROPERTY_DDD_STATI = "dddStati";
    private List<String> dddStati = null;

    public static final String JSON_PROPERTY_APP_IDS = "appIds";
    private List<String> appIds = null;

    public static final String JSON_PROPERTY_TARGET_PERIOD = "targetPeriod";
    private TimeWindow targetPeriod;

    public static final String JSON_PROPERTY_TRANSAC_DISP_IND = "transacDispInd";
    private Boolean transacDispInd;

    public static final String JSON_PROPERTY_TRANSAC_METRICS = "transacMetrics";
    private List<String> transacMetrics = null;

    public static final String JSON_PROPERTY_UE_IP_ADDR = "ueIpAddr";
    private IpAddr ueIpAddr;

    public EventSubscription()
    {
    }

    public EventSubscription event(String event)
    {

        this.event = event;
        return this;
    }

    /**
     * Possible values are: - AC_TY_CH: Access Type Change - UP_PATH_CH: UP Path
     * Change - PDU_SES_REL: PDU Session Release - PLMN_CH: PLMN Change - UE_IP_CH:
     * UE IP address change - RAT_TY_CH: RAT Type Change - DDDS: Downlink data
     * delivery status - COMM_FAIL: Communication Failure - PDU_SES_EST: PDU Session
     * Establishment - QFI_ALLOC: QFI allocation - QOS_MON: QoS Monitoring -
     * SMCC_EXP: SM congestion control experience for PDU Session - DISPERSION:
     * Session Management transaction dispersion - RED_TRANS_EXP: Redundant
     * transmission experience for PDU Session - WLAN_INFO: WLAN information on PDU
     * session for which Access Type is NON_3GPP_ACCESS and RAT Type is TRUSTED_WLAN
     * - UPF_INFO: The UPF information, including the UPF ID/address/FQDN
     * information. - UP_STATUS_INFO: The User Plane status information.
     * 
     * @return event
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Possible values are: - AC_TY_CH: Access Type Change - UP_PATH_CH: UP Path Change - PDU_SES_REL: PDU Session Release - PLMN_CH: PLMN Change - UE_IP_CH: UE IP address change - RAT_TY_CH: RAT Type Change - DDDS: Downlink data delivery status - COMM_FAIL: Communication Failure - PDU_SES_EST: PDU Session Establishment - QFI_ALLOC: QFI allocation - QOS_MON: QoS Monitoring - SMCC_EXP: SM congestion control experience for PDU Session - DISPERSION: Session Management transaction dispersion - RED_TRANS_EXP: Redundant transmission experience for PDU Session - WLAN_INFO: WLAN information on PDU session for which Access Type is NON_3GPP_ACCESS and   RAT Type is TRUSTED_WLAN - UPF_INFO: The UPF information, including the UPF ID/address/FQDN information. - UP_STATUS_INFO: The User Plane status information. ")
    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getEvent()
    {
        return event;
    }

    @JsonProperty(JSON_PROPERTY_EVENT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEvent(String event)
    {
        this.event = event;
    }

    public EventSubscription dnaiChgType(String dnaiChgType)
    {

        this.dnaiChgType = dnaiChgType;
        return this;
    }

    /**
     * Possible values are: - EARLY: Early notification of UP path reconfiguration.
     * - EARLY_LATE: Early and late notification of UP path reconfiguration. This
     * value shall only be present in the subscription to the DNAI change event. -
     * LATE: Late notification of UP path reconfiguration.
     * 
     * @return dnaiChgType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall   only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.  ")
    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnaiChgType()
    {
        return dnaiChgType;
    }

    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnaiChgType(String dnaiChgType)
    {
        this.dnaiChgType = dnaiChgType;
    }

    public EventSubscription dddTraDescriptors(List<DddTrafficDescriptor> dddTraDescriptors)
    {

        this.dddTraDescriptors = dddTraDescriptors;
        return this;
    }

    public EventSubscription addDddTraDescriptorsItem(DddTrafficDescriptor dddTraDescriptorsItem)
    {
        if (this.dddTraDescriptors == null)
        {
            this.dddTraDescriptors = new ArrayList<>();
        }
        this.dddTraDescriptors.add(dddTraDescriptorsItem);
        return this;
    }

    /**
     * Get dddTraDescriptors
     * 
     * @return dddTraDescriptors
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DDD_TRA_DESCRIPTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<DddTrafficDescriptor> getDddTraDescriptors()
    {
        return dddTraDescriptors;
    }

    @JsonProperty(JSON_PROPERTY_DDD_TRA_DESCRIPTORS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDddTraDescriptors(List<DddTrafficDescriptor> dddTraDescriptors)
    {
        this.dddTraDescriptors = dddTraDescriptors;
    }

    public EventSubscription dddStati(List<String> dddStati)
    {

        this.dddStati = dddStati;
        return this;
    }

    public EventSubscription addDddStatiItem(String dddStatiItem)
    {
        if (this.dddStati == null)
        {
            this.dddStati = new ArrayList<>();
        }
        this.dddStati.add(dddStatiItem);
        return this;
    }

    /**
     * Get dddStati
     * 
     * @return dddStati
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DDD_STATI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getDddStati()
    {
        return dddStati;
    }

    @JsonProperty(JSON_PROPERTY_DDD_STATI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDddStati(List<String> dddStati)
    {
        this.dddStati = dddStati;
    }

    public EventSubscription appIds(List<String> appIds)
    {

        this.appIds = appIds;
        return this;
    }

    public EventSubscription addAppIdsItem(String appIdsItem)
    {
        if (this.appIds == null)
        {
            this.appIds = new ArrayList<>();
        }
        this.appIds.add(appIdsItem);
        return this;
    }

    /**
     * Get appIds
     * 
     * @return appIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_APP_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getAppIds()
    {
        return appIds;
    }

    @JsonProperty(JSON_PROPERTY_APP_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppIds(List<String> appIds)
    {
        this.appIds = appIds;
    }

    public EventSubscription targetPeriod(TimeWindow targetPeriod)
    {

        this.targetPeriod = targetPeriod;
        return this;
    }

    /**
     * Get targetPeriod
     * 
     * @return targetPeriod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TARGET_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TimeWindow getTargetPeriod()
    {
        return targetPeriod;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetPeriod(TimeWindow targetPeriod)
    {
        this.targetPeriod = targetPeriod;
    }

    public EventSubscription transacDispInd(Boolean transacDispInd)
    {

        this.transacDispInd = transacDispInd;
        return this;
    }

    /**
     * Indicates the subscription for UE transaction dispersion collectionon, if it
     * is included and set to \&quot;true\&quot;. Default value is
     * \&quot;false\&quot;.
     * 
     * @return transacDispInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the subscription for UE transaction dispersion collectionon, if it is included and set to \"true\". Default value is \"false\". ")
    @JsonProperty(JSON_PROPERTY_TRANSAC_DISP_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getTransacDispInd()
    {
        return transacDispInd;
    }

    @JsonProperty(JSON_PROPERTY_TRANSAC_DISP_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTransacDispInd(Boolean transacDispInd)
    {
        this.transacDispInd = transacDispInd;
    }

    public EventSubscription transacMetrics(List<String> transacMetrics)
    {

        this.transacMetrics = transacMetrics;
        return this;
    }

    public EventSubscription addTransacMetricsItem(String transacMetricsItem)
    {
        if (this.transacMetrics == null)
        {
            this.transacMetrics = new ArrayList<>();
        }
        this.transacMetrics.add(transacMetricsItem);
        return this;
    }

    /**
     * Indicates Session Management Transaction metrics.
     * 
     * @return transacMetrics
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates Session Management Transaction metrics.")
    @JsonProperty(JSON_PROPERTY_TRANSAC_METRICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getTransacMetrics()
    {
        return transacMetrics;
    }

    @JsonProperty(JSON_PROPERTY_TRANSAC_METRICS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTransacMetrics(List<String> transacMetrics)
    {
        this.transacMetrics = transacMetrics;
    }

    public EventSubscription ueIpAddr(IpAddr ueIpAddr)
    {

        this.ueIpAddr = ueIpAddr;
        return this;
    }

    /**
     * Get ueIpAddr
     * 
     * @return ueIpAddr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UE_IP_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public IpAddr getUeIpAddr()
    {
        return ueIpAddr;
    }

    @JsonProperty(JSON_PROPERTY_UE_IP_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeIpAddr(IpAddr ueIpAddr)
    {
        this.ueIpAddr = ueIpAddr;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        EventSubscription eventSubscription = (EventSubscription) o;
        return Objects.equals(this.event, eventSubscription.event) && Objects.equals(this.dnaiChgType, eventSubscription.dnaiChgType)
               && Objects.equals(this.dddTraDescriptors, eventSubscription.dddTraDescriptors) && Objects.equals(this.dddStati, eventSubscription.dddStati)
               && Objects.equals(this.appIds, eventSubscription.appIds) && Objects.equals(this.targetPeriod, eventSubscription.targetPeriod)
               && Objects.equals(this.transacDispInd, eventSubscription.transacDispInd) && Objects.equals(this.transacMetrics, eventSubscription.transacMetrics)
               && Objects.equals(this.ueIpAddr, eventSubscription.ueIpAddr);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(event, dnaiChgType, dddTraDescriptors, dddStati, appIds, targetPeriod, transacDispInd, transacMetrics, ueIpAddr);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EventSubscription {\n");
        sb.append("    event: ").append(toIndentedString(event)).append("\n");
        sb.append("    dnaiChgType: ").append(toIndentedString(dnaiChgType)).append("\n");
        sb.append("    dddTraDescriptors: ").append(toIndentedString(dddTraDescriptors)).append("\n");
        sb.append("    dddStati: ").append(toIndentedString(dddStati)).append("\n");
        sb.append("    appIds: ").append(toIndentedString(appIds)).append("\n");
        sb.append("    targetPeriod: ").append(toIndentedString(targetPeriod)).append("\n");
        sb.append("    transacDispInd: ").append(toIndentedString(transacDispInd)).append("\n");
        sb.append("    transacMetrics: ").append(toIndentedString(transacMetrics)).append("\n");
        sb.append("    ueIpAddr: ").append(toIndentedString(ueIpAddr)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
