/*
 * Npcf_AMPolicyAuthorization Service API
 * PCF Access and Mobility Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29534.npcf.ampolicyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * It represents the AM Policy Events Subscription subresource and identifies
 * the events the application subscribes to.
 */
@ApiModel(description = "It represents the AM Policy Events Subscription subresource and identifies the events the application subscribes to.")
@JsonPropertyOrder({ AmEventsSubscData.JSON_PROPERTY_EVENT_NOTIF_URI, AmEventsSubscData.JSON_PROPERTY_EVENTS })
public class AmEventsSubscData
{
    public static final String JSON_PROPERTY_EVENT_NOTIF_URI = "eventNotifUri";
    private String eventNotifUri;

    public static final String JSON_PROPERTY_EVENTS = "events";
    private List<AmEventData> events = null;

    public AmEventsSubscData()
    {
    }

    public AmEventsSubscData eventNotifUri(String eventNotifUri)
    {

        this.eventNotifUri = eventNotifUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return eventNotifUri
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_EVENT_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getEventNotifUri()
    {
        return eventNotifUri;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEventNotifUri(String eventNotifUri)
    {
        this.eventNotifUri = eventNotifUri;
    }

    public AmEventsSubscData events(List<AmEventData> events)
    {

        this.events = events;
        return this;
    }

    public AmEventsSubscData addEventsItem(AmEventData eventsItem)
    {
        if (this.events == null)
        {
            this.events = new ArrayList<>();
        }
        this.events.add(eventsItem);
        return this;
    }

    /**
     * Get events
     * 
     * @return events
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EVENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<AmEventData> getEvents()
    {
        return events;
    }

    @JsonProperty(JSON_PROPERTY_EVENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEvents(List<AmEventData> events)
    {
        this.events = events;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AmEventsSubscData amEventsSubscData = (AmEventsSubscData) o;
        return Objects.equals(this.eventNotifUri, amEventsSubscData.eventNotifUri) && Objects.equals(this.events, amEventsSubscData.events);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(eventNotifUri, events);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AmEventsSubscData {\n");
        sb.append("    eventNotifUri: ").append(toIndentedString(eventNotifUri)).append("\n");
        sb.append("    events: ").append(toIndentedString(events)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
