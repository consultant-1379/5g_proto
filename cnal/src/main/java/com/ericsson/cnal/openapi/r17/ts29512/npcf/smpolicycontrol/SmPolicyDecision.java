/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.PresenceInfoRm;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the SM policies authorized by the PCF.
 */
@ApiModel(description = "Contains the SM policies authorized by the PCF.")
@JsonPropertyOrder({ SmPolicyDecision.JSON_PROPERTY_SESS_RULES,
                     SmPolicyDecision.JSON_PROPERTY_PCC_RULES,
                     SmPolicyDecision.JSON_PROPERTY_PCSCF_REST_INDICATION,
                     SmPolicyDecision.JSON_PROPERTY_QOS_DECS,
                     SmPolicyDecision.JSON_PROPERTY_CHG_DECS,
                     SmPolicyDecision.JSON_PROPERTY_CHARGING_INFO,
                     SmPolicyDecision.JSON_PROPERTY_TRAFF_CONT_DECS,
                     SmPolicyDecision.JSON_PROPERTY_UM_DECS,
                     SmPolicyDecision.JSON_PROPERTY_QOS_CHARS,
                     SmPolicyDecision.JSON_PROPERTY_QOS_MON_DECS,
                     SmPolicyDecision.JSON_PROPERTY_REFLECTIVE_QO_S_TIMER,
                     SmPolicyDecision.JSON_PROPERTY_CONDS,
                     SmPolicyDecision.JSON_PROPERTY_REVALIDATION_TIME,
                     SmPolicyDecision.JSON_PROPERTY_OFFLINE,
                     SmPolicyDecision.JSON_PROPERTY_ONLINE,
                     SmPolicyDecision.JSON_PROPERTY_OFFLINE_CH_ONLY,
                     SmPolicyDecision.JSON_PROPERTY_POLICY_CTRL_REQ_TRIGGERS,
                     SmPolicyDecision.JSON_PROPERTY_LAST_REQ_RULE_DATA,
                     SmPolicyDecision.JSON_PROPERTY_LAST_REQ_USAGE_DATA,
                     SmPolicyDecision.JSON_PROPERTY_PRA_INFOS,
                     SmPolicyDecision.JSON_PROPERTY_IPV4_INDEX,
                     SmPolicyDecision.JSON_PROPERTY_IPV6_INDEX,
                     SmPolicyDecision.JSON_PROPERTY_QOS_FLOW_USAGE,
                     SmPolicyDecision.JSON_PROPERTY_REL_CAUSE,
                     SmPolicyDecision.JSON_PROPERTY_SUPP_FEAT,
                     SmPolicyDecision.JSON_PROPERTY_TSN_BRIDGE_MAN_CONT,
                     SmPolicyDecision.JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT,
                     SmPolicyDecision.JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS,
                     SmPolicyDecision.JSON_PROPERTY_RED_SESS_INDICATION })
public class SmPolicyDecision
{
    public static final String JSON_PROPERTY_SESS_RULES = "sessRules";
    private Map<String, SessionRule> sessRules = null;

    public static final String JSON_PROPERTY_PCC_RULES = "pccRules";
    private JsonNullable<Map<String, PccRule>> pccRules = JsonNullable.<Map<String, PccRule>>undefined();

    public static final String JSON_PROPERTY_PCSCF_REST_INDICATION = "pcscfRestIndication";
    private Boolean pcscfRestIndication;

    public static final String JSON_PROPERTY_QOS_DECS = "qosDecs";
    private Map<String, QosData> qosDecs = null;

    public static final String JSON_PROPERTY_CHG_DECS = "chgDecs";
    private JsonNullable<Map<String, ChargingData>> chgDecs = JsonNullable.<Map<String, ChargingData>>undefined();

    public static final String JSON_PROPERTY_CHARGING_INFO = "chargingInfo";
    private ChargingInformation chargingInfo;

    public static final String JSON_PROPERTY_TRAFF_CONT_DECS = "traffContDecs";
    private Map<String, TrafficControlData> traffContDecs = null;

    public static final String JSON_PROPERTY_UM_DECS = "umDecs";
    private JsonNullable<Map<String, UsageMonitoringData>> umDecs = JsonNullable.<Map<String, UsageMonitoringData>>undefined();

    public static final String JSON_PROPERTY_QOS_CHARS = "qosChars";
    private Map<String, QosCharacteristics> qosChars = null;

    public static final String JSON_PROPERTY_QOS_MON_DECS = "qosMonDecs";
    private JsonNullable<Map<String, QosMonitoringData>> qosMonDecs = JsonNullable.<Map<String, QosMonitoringData>>undefined();

    public static final String JSON_PROPERTY_REFLECTIVE_QO_S_TIMER = "reflectiveQoSTimer";
    private Integer reflectiveQoSTimer;

    public static final String JSON_PROPERTY_CONDS = "conds";
    private JsonNullable<Map<String, ConditionData>> conds = JsonNullable.<Map<String, ConditionData>>undefined();

    public static final String JSON_PROPERTY_REVALIDATION_TIME = "revalidationTime";
    private OffsetDateTime revalidationTime;

    public static final String JSON_PROPERTY_OFFLINE = "offline";
    private Boolean offline;

    public static final String JSON_PROPERTY_ONLINE = "online";
    private Boolean online;

    public static final String JSON_PROPERTY_OFFLINE_CH_ONLY = "offlineChOnly";
    private Boolean offlineChOnly = false;

    public static final String JSON_PROPERTY_POLICY_CTRL_REQ_TRIGGERS = "policyCtrlReqTriggers";
    private JsonNullable<List<String>> policyCtrlReqTriggers = JsonNullable.<List<String>>undefined();

    public static final String JSON_PROPERTY_LAST_REQ_RULE_DATA = "lastReqRuleData";
    private List<RequestedRuleData> lastReqRuleData = null;

    public static final String JSON_PROPERTY_LAST_REQ_USAGE_DATA = "lastReqUsageData";
    private RequestedUsageData lastReqUsageData;

    public static final String JSON_PROPERTY_PRA_INFOS = "praInfos";
    private JsonNullable<Map<String, PresenceInfoRm>> praInfos = JsonNullable.<Map<String, PresenceInfoRm>>undefined();

    public static final String JSON_PROPERTY_IPV4_INDEX = "ipv4Index";
    private Integer ipv4Index;

    public static final String JSON_PROPERTY_IPV6_INDEX = "ipv6Index";
    private Integer ipv6Index;

    public static final String JSON_PROPERTY_QOS_FLOW_USAGE = "qosFlowUsage";
    private String qosFlowUsage;

    public static final String JSON_PROPERTY_REL_CAUSE = "relCause";
    private String relCause;

    public static final String JSON_PROPERTY_SUPP_FEAT = "suppFeat";
    private String suppFeat;

    public static final String JSON_PROPERTY_TSN_BRIDGE_MAN_CONT = "tsnBridgeManCont";
    private BridgeManagementContainer tsnBridgeManCont;

    public static final String JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT = "tsnPortManContDstt";
    private PortManagementContainer tsnPortManContDstt;

    public static final String JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS = "tsnPortManContNwtts";
    private List<PortManagementContainer> tsnPortManContNwtts = null;

    public static final String JSON_PROPERTY_RED_SESS_INDICATION = "redSessIndication";
    private Boolean redSessIndication;

    public SmPolicyDecision()
    {
    }

    public SmPolicyDecision sessRules(Map<String, SessionRule> sessRules)
    {

        this.sessRules = sessRules;
        return this;
    }

    public SmPolicyDecision putSessRulesItem(String key,
                                             SessionRule sessRulesItem)
    {
        if (this.sessRules == null)
        {
            this.sessRules = new HashMap<>();
        }
        this.sessRules.put(key, sessRulesItem);
        return this;
    }

    /**
     * A map of Sessionrules with the content being the SessionRule as described in
     * clause 5.6.2.7. The key used in this map for each entry is the sessRuleId
     * attribute of the corresponding SessionRule.
     * 
     * @return sessRules
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map of Sessionrules with the content being the SessionRule as described in clause 5.6.2.7. The key used in this map for each entry is the sessRuleId attribute of the corresponding SessionRule. ")
    @JsonProperty(JSON_PROPERTY_SESS_RULES)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, SessionRule> getSessRules()
    {
        return sessRules;
    }

    @JsonProperty(JSON_PROPERTY_SESS_RULES)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    public void setSessRules(Map<String, SessionRule> sessRules)
    {
        this.sessRules = sessRules;
    }

    public SmPolicyDecision pccRules(Map<String, PccRule> pccRules)
    {
        this.pccRules = JsonNullable.<Map<String, PccRule>>of(pccRules);

        return this;
    }

    public SmPolicyDecision putPccRulesItem(String key,
                                            PccRule pccRulesItem)
    {
        if (this.pccRules == null || !this.pccRules.isPresent())
        {
            this.pccRules = JsonNullable.<Map<String, PccRule>>of(new HashMap<>());
        }
        try
        {
            this.pccRules.get().put(key, pccRulesItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * A map of PCC rules with the content being the PCCRule as described in clause
     * 5.6.2.6. The key used in this map for each entry is the pccRuleId attribute
     * of the corresponding PccRule.
     * 
     * @return pccRules
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map of PCC rules with the content being the PCCRule as described in  clause 5.6.2.6. The key used in this map for each entry is the pccRuleId attribute of the corresponding PccRule. ")
    @JsonIgnore

    public Map<String, PccRule> getPccRules()
    {
        return pccRules.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_PCC_RULES)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, PccRule>> getPccRules_JsonNullable()
    {
        return pccRules;
    }

    @JsonProperty(JSON_PROPERTY_PCC_RULES)
    public void setPccRules_JsonNullable(JsonNullable<Map<String, PccRule>> pccRules)
    {
        this.pccRules = pccRules;
    }

    public void setPccRules(Map<String, PccRule> pccRules)
    {
        this.pccRules = JsonNullable.<Map<String, PccRule>>of(pccRules);
    }

    public SmPolicyDecision pcscfRestIndication(Boolean pcscfRestIndication)
    {

        this.pcscfRestIndication = pcscfRestIndication;
        return this;
    }

    /**
     * If it is included and set to true, it indicates the P-CSCF Restoration is
     * requested.
     * 
     * @return pcscfRestIndication
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "If it is included and set to true, it indicates the P-CSCF Restoration is requested.")
    @JsonProperty(JSON_PROPERTY_PCSCF_REST_INDICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getPcscfRestIndication()
    {
        return pcscfRestIndication;
    }

    @JsonProperty(JSON_PROPERTY_PCSCF_REST_INDICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPcscfRestIndication(Boolean pcscfRestIndication)
    {
        this.pcscfRestIndication = pcscfRestIndication;
    }

    public SmPolicyDecision qosDecs(Map<String, QosData> qosDecs)
    {

        this.qosDecs = qosDecs;
        return this;
    }

    public SmPolicyDecision putQosDecsItem(String key,
                                           QosData qosDecsItem)
    {
        if (this.qosDecs == null)
        {
            this.qosDecs = new HashMap<>();
        }
        this.qosDecs.put(key, qosDecsItem);
        return this;
    }

    /**
     * Map of QoS data policy decisions. The key used in this map for each entry is
     * the qosId attribute of the corresponding QosData.
     * 
     * @return qosDecs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Map of QoS data policy decisions. The key used in this map for each entry is the qosId attribute of the corresponding QosData. ")
    @JsonProperty(JSON_PROPERTY_QOS_DECS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, QosData> getQosDecs()
    {
        return qosDecs;
    }

    @JsonProperty(JSON_PROPERTY_QOS_DECS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    public void setQosDecs(Map<String, QosData> qosDecs)
    {
        this.qosDecs = qosDecs;
    }

    public SmPolicyDecision chgDecs(Map<String, ChargingData> chgDecs)
    {
        this.chgDecs = JsonNullable.<Map<String, ChargingData>>of(chgDecs);

        return this;
    }

    public SmPolicyDecision putChgDecsItem(String key,
                                           ChargingData chgDecsItem)
    {
        if (this.chgDecs == null || !this.chgDecs.isPresent())
        {
            this.chgDecs = JsonNullable.<Map<String, ChargingData>>of(new HashMap<>());
        }
        try
        {
            this.chgDecs.get().put(key, chgDecsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Map of Charging data policy decisions. The key used in this map for each
     * entry is the chgId attribute of the corresponding ChargingData.
     * 
     * @return chgDecs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Map of Charging data policy decisions. The key used in this map for each entry is the chgId attribute of the corresponding ChargingData. ")
    @JsonIgnore

    public Map<String, ChargingData> getChgDecs()
    {
        return chgDecs.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CHG_DECS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, ChargingData>> getChgDecs_JsonNullable()
    {
        return chgDecs;
    }

    @JsonProperty(JSON_PROPERTY_CHG_DECS)
    public void setChgDecs_JsonNullable(JsonNullable<Map<String, ChargingData>> chgDecs)
    {
        this.chgDecs = chgDecs;
    }

    public void setChgDecs(Map<String, ChargingData> chgDecs)
    {
        this.chgDecs = JsonNullable.<Map<String, ChargingData>>of(chgDecs);
    }

    public SmPolicyDecision chargingInfo(ChargingInformation chargingInfo)
    {

        this.chargingInfo = chargingInfo;
        return this;
    }

    /**
     * Get chargingInfo
     * 
     * @return chargingInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CHARGING_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ChargingInformation getChargingInfo()
    {
        return chargingInfo;
    }

    @JsonProperty(JSON_PROPERTY_CHARGING_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setChargingInfo(ChargingInformation chargingInfo)
    {
        this.chargingInfo = chargingInfo;
    }

    public SmPolicyDecision traffContDecs(Map<String, TrafficControlData> traffContDecs)
    {

        this.traffContDecs = traffContDecs;
        return this;
    }

    public SmPolicyDecision putTraffContDecsItem(String key,
                                                 TrafficControlData traffContDecsItem)
    {
        if (this.traffContDecs == null)
        {
            this.traffContDecs = new HashMap<>();
        }
        this.traffContDecs.put(key, traffContDecsItem);
        return this;
    }

    /**
     * Map of Traffic Control data policy decisions. The key used in this map for
     * each entry is the tcId attribute of the corresponding TrafficControlData.
     * 
     * @return traffContDecs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Map of Traffic Control data policy decisions. The key used in this map for each entry is the tcId attribute of the corresponding TrafficControlData. ")
    @JsonProperty(JSON_PROPERTY_TRAFF_CONT_DECS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, TrafficControlData> getTraffContDecs()
    {
        return traffContDecs;
    }

    @JsonProperty(JSON_PROPERTY_TRAFF_CONT_DECS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    public void setTraffContDecs(Map<String, TrafficControlData> traffContDecs)
    {
        this.traffContDecs = traffContDecs;
    }

    public SmPolicyDecision umDecs(Map<String, UsageMonitoringData> umDecs)
    {
        this.umDecs = JsonNullable.<Map<String, UsageMonitoringData>>of(umDecs);

        return this;
    }

    public SmPolicyDecision putUmDecsItem(String key,
                                          UsageMonitoringData umDecsItem)
    {
        if (this.umDecs == null || !this.umDecs.isPresent())
        {
            this.umDecs = JsonNullable.<Map<String, UsageMonitoringData>>of(new HashMap<>());
        }
        try
        {
            this.umDecs.get().put(key, umDecsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Map of Usage Monitoring data policy decisions. The key used in this map for
     * each entry is the umId attribute of the corresponding UsageMonitoringData.
     * 
     * @return umDecs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Map of Usage Monitoring data policy decisions. The key used in this map for each entry is the umId attribute of the corresponding UsageMonitoringData. ")
    @JsonIgnore

    public Map<String, UsageMonitoringData> getUmDecs()
    {
        return umDecs.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_UM_DECS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, UsageMonitoringData>> getUmDecs_JsonNullable()
    {
        return umDecs;
    }

    @JsonProperty(JSON_PROPERTY_UM_DECS)
    public void setUmDecs_JsonNullable(JsonNullable<Map<String, UsageMonitoringData>> umDecs)
    {
        this.umDecs = umDecs;
    }

    public void setUmDecs(Map<String, UsageMonitoringData> umDecs)
    {
        this.umDecs = JsonNullable.<Map<String, UsageMonitoringData>>of(umDecs);
    }

    public SmPolicyDecision qosChars(Map<String, QosCharacteristics> qosChars)
    {

        this.qosChars = qosChars;
        return this;
    }

    public SmPolicyDecision putQosCharsItem(String key,
                                            QosCharacteristics qosCharsItem)
    {
        if (this.qosChars == null)
        {
            this.qosChars = new HashMap<>();
        }
        this.qosChars.put(key, qosCharsItem);
        return this;
    }

    /**
     * Map of QoS characteristics for non standard 5QIs. This map uses the 5QI
     * values as keys.
     * 
     * @return qosChars
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Map of QoS characteristics for non standard 5QIs. This map uses the 5QI values as keys.")
    @JsonProperty(JSON_PROPERTY_QOS_CHARS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, QosCharacteristics> getQosChars()
    {
        return qosChars;
    }

    @JsonProperty(JSON_PROPERTY_QOS_CHARS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQosChars(Map<String, QosCharacteristics> qosChars)
    {
        this.qosChars = qosChars;
    }

    public SmPolicyDecision qosMonDecs(Map<String, QosMonitoringData> qosMonDecs)
    {
        this.qosMonDecs = JsonNullable.<Map<String, QosMonitoringData>>of(qosMonDecs);

        return this;
    }

    public SmPolicyDecision putQosMonDecsItem(String key,
                                              QosMonitoringData qosMonDecsItem)
    {
        if (this.qosMonDecs == null || !this.qosMonDecs.isPresent())
        {
            this.qosMonDecs = JsonNullable.<Map<String, QosMonitoringData>>of(new HashMap<>());
        }
        try
        {
            this.qosMonDecs.get().put(key, qosMonDecsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Map of QoS Monitoring data policy decisions. The key used in this map for
     * each entry is the qmId attribute of the corresponding QosMonitoringData.
     * 
     * @return qosMonDecs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Map of QoS Monitoring data policy decisions. The key used in this map for each entry is the qmId attribute of the corresponding QosMonitoringData. ")
    @JsonIgnore

    public Map<String, QosMonitoringData> getQosMonDecs()
    {
        return qosMonDecs.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_QOS_MON_DECS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, QosMonitoringData>> getQosMonDecs_JsonNullable()
    {
        return qosMonDecs;
    }

    @JsonProperty(JSON_PROPERTY_QOS_MON_DECS)
    public void setQosMonDecs_JsonNullable(JsonNullable<Map<String, QosMonitoringData>> qosMonDecs)
    {
        this.qosMonDecs = qosMonDecs;
    }

    public void setQosMonDecs(Map<String, QosMonitoringData> qosMonDecs)
    {
        this.qosMonDecs = JsonNullable.<Map<String, QosMonitoringData>>of(qosMonDecs);
    }

    public SmPolicyDecision reflectiveQoSTimer(Integer reflectiveQoSTimer)
    {

        this.reflectiveQoSTimer = reflectiveQoSTimer;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return reflectiveQoSTimer
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_REFLECTIVE_QO_S_TIMER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getReflectiveQoSTimer()
    {
        return reflectiveQoSTimer;
    }

    @JsonProperty(JSON_PROPERTY_REFLECTIVE_QO_S_TIMER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReflectiveQoSTimer(Integer reflectiveQoSTimer)
    {
        this.reflectiveQoSTimer = reflectiveQoSTimer;
    }

    public SmPolicyDecision conds(Map<String, ConditionData> conds)
    {
        this.conds = JsonNullable.<Map<String, ConditionData>>of(conds);

        return this;
    }

    public SmPolicyDecision putCondsItem(String key,
                                         ConditionData condsItem)
    {
        if (this.conds == null || !this.conds.isPresent())
        {
            this.conds = JsonNullable.<Map<String, ConditionData>>of(new HashMap<>());
        }
        try
        {
            this.conds.get().put(key, condsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * A map of condition data with the content being as described in clause
     * 5.6.2.9. The key used in this map for each entry is the condId attribute of
     * the corresponding ConditionData.
     * 
     * @return conds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map of condition data with the content being as described in clause 5.6.2.9. The key used in this map for each entry is the condId attribute of the corresponding ConditionData. ")
    @JsonIgnore

    public Map<String, ConditionData> getConds()
    {
        return conds.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CONDS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, ConditionData>> getConds_JsonNullable()
    {
        return conds;
    }

    @JsonProperty(JSON_PROPERTY_CONDS)
    public void setConds_JsonNullable(JsonNullable<Map<String, ConditionData>> conds)
    {
        this.conds = conds;
    }

    public void setConds(Map<String, ConditionData> conds)
    {
        this.conds = JsonNullable.<Map<String, ConditionData>>of(conds);
    }

    public SmPolicyDecision revalidationTime(OffsetDateTime revalidationTime)
    {

        this.revalidationTime = revalidationTime;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return revalidationTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_REVALIDATION_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getRevalidationTime()
    {
        return revalidationTime;
    }

    @JsonProperty(JSON_PROPERTY_REVALIDATION_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRevalidationTime(OffsetDateTime revalidationTime)
    {
        this.revalidationTime = revalidationTime;
    }

    public SmPolicyDecision offline(Boolean offline)
    {

        this.offline = offline;
        return this;
    }

    /**
     * Indicates the offline charging is applicable to the PDU session when it is
     * included and set to true.
     * 
     * @return offline
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the offline charging is applicable to the PDU session when it is included and set to true.")
    @JsonProperty(JSON_PROPERTY_OFFLINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getOffline()
    {
        return offline;
    }

    @JsonProperty(JSON_PROPERTY_OFFLINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOffline(Boolean offline)
    {
        this.offline = offline;
    }

    public SmPolicyDecision online(Boolean online)
    {

        this.online = online;
        return this;
    }

    /**
     * Indicates the online charging is applicable to the PDU session when it is
     * included and set to true.
     * 
     * @return online
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the online charging is applicable to the PDU session when it is included and set to true.")
    @JsonProperty(JSON_PROPERTY_ONLINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getOnline()
    {
        return online;
    }

    @JsonProperty(JSON_PROPERTY_ONLINE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOnline(Boolean online)
    {
        this.online = online;
    }

    public SmPolicyDecision offlineChOnly(Boolean offlineChOnly)
    {

        this.offlineChOnly = offlineChOnly;
        return this;
    }

    /**
     * Indicates that the online charging method shall never be used for any PCC
     * rule activated during the lifetime of the PDU session.
     * 
     * @return offlineChOnly
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates that the online charging method shall never be used for any PCC rule activated during the lifetime of the PDU session. ")
    @JsonProperty(JSON_PROPERTY_OFFLINE_CH_ONLY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getOfflineChOnly()
    {
        return offlineChOnly;
    }

    @JsonProperty(JSON_PROPERTY_OFFLINE_CH_ONLY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOfflineChOnly(Boolean offlineChOnly)
    {
        this.offlineChOnly = offlineChOnly;
    }

    public SmPolicyDecision policyCtrlReqTriggers(List<String> policyCtrlReqTriggers)
    {
        this.policyCtrlReqTriggers = JsonNullable.<List<String>>of(policyCtrlReqTriggers);

        return this;
    }

    public SmPolicyDecision addPolicyCtrlReqTriggersItem(String policyCtrlReqTriggersItem)
    {
        if (this.policyCtrlReqTriggers == null || !this.policyCtrlReqTriggers.isPresent())
        {
            this.policyCtrlReqTriggers = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try
        {
            this.policyCtrlReqTriggers.get().add(policyCtrlReqTriggersItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Defines the policy control request triggers subscribed by the PCF.
     * 
     * @return policyCtrlReqTriggers
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Defines the policy control request triggers subscribed by the PCF.")
    @JsonIgnore

    public List<String> getPolicyCtrlReqTriggers()
    {
        return policyCtrlReqTriggers.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_POLICY_CTRL_REQ_TRIGGERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<String>> getPolicyCtrlReqTriggers_JsonNullable()
    {
        return policyCtrlReqTriggers;
    }

    @JsonProperty(JSON_PROPERTY_POLICY_CTRL_REQ_TRIGGERS)
    public void setPolicyCtrlReqTriggers_JsonNullable(JsonNullable<List<String>> policyCtrlReqTriggers)
    {
        this.policyCtrlReqTriggers = policyCtrlReqTriggers;
    }

    public void setPolicyCtrlReqTriggers(List<String> policyCtrlReqTriggers)
    {
        this.policyCtrlReqTriggers = JsonNullable.<List<String>>of(policyCtrlReqTriggers);
    }

    public SmPolicyDecision lastReqRuleData(List<RequestedRuleData> lastReqRuleData)
    {

        this.lastReqRuleData = lastReqRuleData;
        return this;
    }

    public SmPolicyDecision addLastReqRuleDataItem(RequestedRuleData lastReqRuleDataItem)
    {
        if (this.lastReqRuleData == null)
        {
            this.lastReqRuleData = new ArrayList<>();
        }
        this.lastReqRuleData.add(lastReqRuleDataItem);
        return this;
    }

    /**
     * Defines the last list of rule control data requested by the PCF.
     * 
     * @return lastReqRuleData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Defines the last list of rule control data requested by the PCF.")
    @JsonProperty(JSON_PROPERTY_LAST_REQ_RULE_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<RequestedRuleData> getLastReqRuleData()
    {
        return lastReqRuleData;
    }

    @JsonProperty(JSON_PROPERTY_LAST_REQ_RULE_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLastReqRuleData(List<RequestedRuleData> lastReqRuleData)
    {
        this.lastReqRuleData = lastReqRuleData;
    }

    public SmPolicyDecision lastReqUsageData(RequestedUsageData lastReqUsageData)
    {

        this.lastReqUsageData = lastReqUsageData;
        return this;
    }

    /**
     * Get lastReqUsageData
     * 
     * @return lastReqUsageData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LAST_REQ_USAGE_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RequestedUsageData getLastReqUsageData()
    {
        return lastReqUsageData;
    }

    @JsonProperty(JSON_PROPERTY_LAST_REQ_USAGE_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLastReqUsageData(RequestedUsageData lastReqUsageData)
    {
        this.lastReqUsageData = lastReqUsageData;
    }

    public SmPolicyDecision praInfos(Map<String, PresenceInfoRm> praInfos)
    {
        this.praInfos = JsonNullable.<Map<String, PresenceInfoRm>>of(praInfos);

        return this;
    }

    public SmPolicyDecision putPraInfosItem(String key,
                                            PresenceInfoRm praInfosItem)
    {
        if (this.praInfos == null || !this.praInfos.isPresent())
        {
            this.praInfos = JsonNullable.<Map<String, PresenceInfoRm>>of(new HashMap<>());
        }
        try
        {
            this.praInfos.get().put(key, praInfosItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Map of PRA information. The praId attribute within the PresenceInfo data type
     * is the key of the map.
     * 
     * @return praInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Map of PRA information. The praId attribute within the PresenceInfo data type is the key of the map.")
    @JsonIgnore

    public Map<String, PresenceInfoRm> getPraInfos()
    {
        return praInfos.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_PRA_INFOS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, PresenceInfoRm>> getPraInfos_JsonNullable()
    {
        return praInfos;
    }

    @JsonProperty(JSON_PROPERTY_PRA_INFOS)
    public void setPraInfos_JsonNullable(JsonNullable<Map<String, PresenceInfoRm>> praInfos)
    {
        this.praInfos = praInfos;
    }

    public void setPraInfos(Map<String, PresenceInfoRm> praInfos)
    {
        this.praInfos = JsonNullable.<Map<String, PresenceInfoRm>>of(praInfos);
    }

    public SmPolicyDecision ipv4Index(Integer ipv4Index)
    {

        this.ipv4Index = ipv4Index;
        return this;
    }

    /**
     * Represents information that identifies which IP pool or external server is
     * used to allocate the IP address.
     * 
     * @return ipv4Index
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Represents information that identifies which IP pool or external server is used to allocate the IP address. ")
    @JsonProperty(JSON_PROPERTY_IPV4_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getIpv4Index()
    {
        return ipv4Index;
    }

    @JsonProperty(JSON_PROPERTY_IPV4_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv4Index(Integer ipv4Index)
    {
        this.ipv4Index = ipv4Index;
    }

    public SmPolicyDecision ipv6Index(Integer ipv6Index)
    {

        this.ipv6Index = ipv6Index;
        return this;
    }

    /**
     * Represents information that identifies which IP pool or external server is
     * used to allocate the IP address.
     * 
     * @return ipv6Index
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Represents information that identifies which IP pool or external server is used to allocate the IP address. ")
    @JsonProperty(JSON_PROPERTY_IPV6_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getIpv6Index()
    {
        return ipv6Index;
    }

    @JsonProperty(JSON_PROPERTY_IPV6_INDEX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv6Index(Integer ipv6Index)
    {
        this.ipv6Index = ipv6Index;
    }

    public SmPolicyDecision qosFlowUsage(String qosFlowUsage)
    {

        this.qosFlowUsage = qosFlowUsage;
        return this;
    }

    /**
     * Possible values are - GENERAL: Indicate no specific QoS flow usage
     * information is available. - IMS_SIG: Indicate that the QoS flow is used for
     * IMS signalling only.
     * 
     * @return qosFlowUsage
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are - GENERAL: Indicate no specific QoS flow usage information is available.  - IMS_SIG: Indicate that the QoS flow is used for IMS signalling only. ")
    @JsonProperty(JSON_PROPERTY_QOS_FLOW_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getQosFlowUsage()
    {
        return qosFlowUsage;
    }

    @JsonProperty(JSON_PROPERTY_QOS_FLOW_USAGE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQosFlowUsage(String qosFlowUsage)
    {
        this.qosFlowUsage = qosFlowUsage;
    }

    public SmPolicyDecision relCause(String relCause)
    {

        this.relCause = relCause;
        return this;
    }

    /**
     * Represents the cause due to which the PCF requests the termination of the SM
     * policy association.
     * 
     * @return relCause
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Represents the cause due to which the PCF requests the termination of the SM policy association.")
    @JsonProperty(JSON_PROPERTY_REL_CAUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRelCause()
    {
        return relCause;
    }

    @JsonProperty(JSON_PROPERTY_REL_CAUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRelCause(String relCause)
    {
        this.relCause = relCause;
    }

    public SmPolicyDecision suppFeat(String suppFeat)
    {

        this.suppFeat = suppFeat;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return suppFeat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSuppFeat()
    {
        return suppFeat;
    }

    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuppFeat(String suppFeat)
    {
        this.suppFeat = suppFeat;
    }

    public SmPolicyDecision tsnBridgeManCont(BridgeManagementContainer tsnBridgeManCont)
    {

        this.tsnBridgeManCont = tsnBridgeManCont;
        return this;
    }

    /**
     * Get tsnBridgeManCont
     * 
     * @return tsnBridgeManCont
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BridgeManagementContainer getTsnBridgeManCont()
    {
        return tsnBridgeManCont;
    }

    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnBridgeManCont(BridgeManagementContainer tsnBridgeManCont)
    {
        this.tsnBridgeManCont = tsnBridgeManCont;
    }

    public SmPolicyDecision tsnPortManContDstt(PortManagementContainer tsnPortManContDstt)
    {

        this.tsnPortManContDstt = tsnPortManContDstt;
        return this;
    }

    /**
     * Get tsnPortManContDstt
     * 
     * @return tsnPortManContDstt
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PortManagementContainer getTsnPortManContDstt()
    {
        return tsnPortManContDstt;
    }

    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnPortManContDstt(PortManagementContainer tsnPortManContDstt)
    {
        this.tsnPortManContDstt = tsnPortManContDstt;
    }

    public SmPolicyDecision tsnPortManContNwtts(List<PortManagementContainer> tsnPortManContNwtts)
    {

        this.tsnPortManContNwtts = tsnPortManContNwtts;
        return this;
    }

    public SmPolicyDecision addTsnPortManContNwttsItem(PortManagementContainer tsnPortManContNwttsItem)
    {
        if (this.tsnPortManContNwtts == null)
        {
            this.tsnPortManContNwtts = new ArrayList<>();
        }
        this.tsnPortManContNwtts.add(tsnPortManContNwttsItem);
        return this;
    }

    /**
     * Get tsnPortManContNwtts
     * 
     * @return tsnPortManContNwtts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PortManagementContainer> getTsnPortManContNwtts()
    {
        return tsnPortManContNwtts;
    }

    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnPortManContNwtts(List<PortManagementContainer> tsnPortManContNwtts)
    {
        this.tsnPortManContNwtts = tsnPortManContNwtts;
    }

    public SmPolicyDecision redSessIndication(Boolean redSessIndication)
    {

        this.redSessIndication = redSessIndication;
        return this;
    }

    /**
     * Indicates whether the PDU session is a redundant PDU session. If absent it
     * means the PDU session is not a redundant PDU session.
     * 
     * @return redSessIndication
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether the PDU session is a redundant PDU session. If absent it means the PDU session is not a redundant PDU session. ")
    @JsonProperty(JSON_PROPERTY_RED_SESS_INDICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRedSessIndication()
    {
        return redSessIndication;
    }

    @JsonProperty(JSON_PROPERTY_RED_SESS_INDICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRedSessIndication(Boolean redSessIndication)
    {
        this.redSessIndication = redSessIndication;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SmPolicyDecision smPolicyDecision = (SmPolicyDecision) o;
        return Objects.equals(this.sessRules, smPolicyDecision.sessRules) && equalsNullable(this.pccRules, smPolicyDecision.pccRules)
               && Objects.equals(this.pcscfRestIndication, smPolicyDecision.pcscfRestIndication) && Objects.equals(this.qosDecs, smPolicyDecision.qosDecs)
               && equalsNullable(this.chgDecs, smPolicyDecision.chgDecs) && Objects.equals(this.chargingInfo, smPolicyDecision.chargingInfo)
               && Objects.equals(this.traffContDecs, smPolicyDecision.traffContDecs) && equalsNullable(this.umDecs, smPolicyDecision.umDecs)
               && Objects.equals(this.qosChars, smPolicyDecision.qosChars) && equalsNullable(this.qosMonDecs, smPolicyDecision.qosMonDecs)
               && Objects.equals(this.reflectiveQoSTimer, smPolicyDecision.reflectiveQoSTimer) && equalsNullable(this.conds, smPolicyDecision.conds)
               && Objects.equals(this.revalidationTime, smPolicyDecision.revalidationTime) && Objects.equals(this.offline, smPolicyDecision.offline)
               && Objects.equals(this.online, smPolicyDecision.online) && Objects.equals(this.offlineChOnly, smPolicyDecision.offlineChOnly)
               && equalsNullable(this.policyCtrlReqTriggers, smPolicyDecision.policyCtrlReqTriggers)
               && Objects.equals(this.lastReqRuleData, smPolicyDecision.lastReqRuleData)
               && Objects.equals(this.lastReqUsageData, smPolicyDecision.lastReqUsageData) && equalsNullable(this.praInfos, smPolicyDecision.praInfos)
               && Objects.equals(this.ipv4Index, smPolicyDecision.ipv4Index) && Objects.equals(this.ipv6Index, smPolicyDecision.ipv6Index)
               && Objects.equals(this.qosFlowUsage, smPolicyDecision.qosFlowUsage) && Objects.equals(this.relCause, smPolicyDecision.relCause)
               && Objects.equals(this.suppFeat, smPolicyDecision.suppFeat) && Objects.equals(this.tsnBridgeManCont, smPolicyDecision.tsnBridgeManCont)
               && Objects.equals(this.tsnPortManContDstt, smPolicyDecision.tsnPortManContDstt)
               && Objects.equals(this.tsnPortManContNwtts, smPolicyDecision.tsnPortManContNwtts)
               && Objects.equals(this.redSessIndication, smPolicyDecision.redSessIndication);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(sessRules,
                            hashCodeNullable(pccRules),
                            pcscfRestIndication,
                            qosDecs,
                            hashCodeNullable(chgDecs),
                            chargingInfo,
                            traffContDecs,
                            hashCodeNullable(umDecs),
                            qosChars,
                            hashCodeNullable(qosMonDecs),
                            reflectiveQoSTimer,
                            hashCodeNullable(conds),
                            revalidationTime,
                            offline,
                            online,
                            offlineChOnly,
                            hashCodeNullable(policyCtrlReqTriggers),
                            lastReqRuleData,
                            lastReqUsageData,
                            hashCodeNullable(praInfos),
                            ipv4Index,
                            ipv6Index,
                            qosFlowUsage,
                            relCause,
                            suppFeat,
                            tsnBridgeManCont,
                            tsnPortManContDstt,
                            tsnPortManContNwtts,
                            redSessIndication);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmPolicyDecision {\n");
        sb.append("    sessRules: ").append(toIndentedString(sessRules)).append("\n");
        sb.append("    pccRules: ").append(toIndentedString(pccRules)).append("\n");
        sb.append("    pcscfRestIndication: ").append(toIndentedString(pcscfRestIndication)).append("\n");
        sb.append("    qosDecs: ").append(toIndentedString(qosDecs)).append("\n");
        sb.append("    chgDecs: ").append(toIndentedString(chgDecs)).append("\n");
        sb.append("    chargingInfo: ").append(toIndentedString(chargingInfo)).append("\n");
        sb.append("    traffContDecs: ").append(toIndentedString(traffContDecs)).append("\n");
        sb.append("    umDecs: ").append(toIndentedString(umDecs)).append("\n");
        sb.append("    qosChars: ").append(toIndentedString(qosChars)).append("\n");
        sb.append("    qosMonDecs: ").append(toIndentedString(qosMonDecs)).append("\n");
        sb.append("    reflectiveQoSTimer: ").append(toIndentedString(reflectiveQoSTimer)).append("\n");
        sb.append("    conds: ").append(toIndentedString(conds)).append("\n");
        sb.append("    revalidationTime: ").append(toIndentedString(revalidationTime)).append("\n");
        sb.append("    offline: ").append(toIndentedString(offline)).append("\n");
        sb.append("    online: ").append(toIndentedString(online)).append("\n");
        sb.append("    offlineChOnly: ").append(toIndentedString(offlineChOnly)).append("\n");
        sb.append("    policyCtrlReqTriggers: ").append(toIndentedString(policyCtrlReqTriggers)).append("\n");
        sb.append("    lastReqRuleData: ").append(toIndentedString(lastReqRuleData)).append("\n");
        sb.append("    lastReqUsageData: ").append(toIndentedString(lastReqUsageData)).append("\n");
        sb.append("    praInfos: ").append(toIndentedString(praInfos)).append("\n");
        sb.append("    ipv4Index: ").append(toIndentedString(ipv4Index)).append("\n");
        sb.append("    ipv6Index: ").append(toIndentedString(ipv6Index)).append("\n");
        sb.append("    qosFlowUsage: ").append(toIndentedString(qosFlowUsage)).append("\n");
        sb.append("    relCause: ").append(toIndentedString(relCause)).append("\n");
        sb.append("    suppFeat: ").append(toIndentedString(suppFeat)).append("\n");
        sb.append("    tsnBridgeManCont: ").append(toIndentedString(tsnBridgeManCont)).append("\n");
        sb.append("    tsnPortManContDstt: ").append(toIndentedString(tsnPortManContDstt)).append("\n");
        sb.append("    tsnPortManContNwtts: ").append(toIndentedString(tsnPortManContNwtts)).append("\n");
        sb.append("    redSessIndication: ").append(toIndentedString(redSessIndication)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
