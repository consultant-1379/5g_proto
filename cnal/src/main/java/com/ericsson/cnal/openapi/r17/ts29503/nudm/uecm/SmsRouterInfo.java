/*
 * Nudm_UECM
 * Nudm Context Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.uecm;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Addressing information of the SMS Router configured at the UDM
 */
@ApiModel(description = "Addressing information of the SMS Router configured at the UDM")
@JsonPropertyOrder({ SmsRouterInfo.JSON_PROPERTY_NF_INSTANCE_ID,
                     SmsRouterInfo.JSON_PROPERTY_DIAMETER_ADDRESS,
                     SmsRouterInfo.JSON_PROPERTY_MAP_ADDRESS,
                     SmsRouterInfo.JSON_PROPERTY_ROUTER_IPV4,
                     SmsRouterInfo.JSON_PROPERTY_ROUTER_IPV6,
                     SmsRouterInfo.JSON_PROPERTY_ROUTER_FQDN })
public class SmsRouterInfo
{
    public static final String JSON_PROPERTY_NF_INSTANCE_ID = "nfInstanceId";
    private UUID nfInstanceId;

    public static final String JSON_PROPERTY_DIAMETER_ADDRESS = "diameterAddress";
    private NetworkNodeDiameterAddress diameterAddress;

    public static final String JSON_PROPERTY_MAP_ADDRESS = "mapAddress";
    private String mapAddress;

    public static final String JSON_PROPERTY_ROUTER_IPV4 = "routerIpv4";
    private String routerIpv4;

    public static final String JSON_PROPERTY_ROUTER_IPV6 = "routerIpv6";
    private String routerIpv6;

    public static final String JSON_PROPERTY_ROUTER_FQDN = "routerFqdn";
    private String routerFqdn;

    public SmsRouterInfo()
    {
    }

    public SmsRouterInfo nfInstanceId(UUID nfInstanceId)
    {

        this.nfInstanceId = nfInstanceId;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return nfInstanceId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getNfInstanceId()
    {
        return nfInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_NF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNfInstanceId(UUID nfInstanceId)
    {
        this.nfInstanceId = nfInstanceId;
    }

    public SmsRouterInfo diameterAddress(NetworkNodeDiameterAddress diameterAddress)
    {

        this.diameterAddress = diameterAddress;
        return this;
    }

    /**
     * Get diameterAddress
     * 
     * @return diameterAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DIAMETER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NetworkNodeDiameterAddress getDiameterAddress()
    {
        return diameterAddress;
    }

    @JsonProperty(JSON_PROPERTY_DIAMETER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDiameterAddress(NetworkNodeDiameterAddress diameterAddress)
    {
        this.diameterAddress = diameterAddress;
    }

    public SmsRouterInfo mapAddress(String mapAddress)
    {

        this.mapAddress = mapAddress;
        return this;
    }

    /**
     * Get mapAddress
     * 
     * @return mapAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MAP_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMapAddress()
    {
        return mapAddress;
    }

    @JsonProperty(JSON_PROPERTY_MAP_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMapAddress(String mapAddress)
    {
        this.mapAddress = mapAddress;
    }

    public SmsRouterInfo routerIpv4(String routerIpv4)
    {

        this.routerIpv4 = routerIpv4;
        return this;
    }

    /**
     * String identifying a IPv4 address formatted in the &#39;dotted decimal&#39;
     * notation as defined in RFC 1166.
     * 
     * @return routerIpv4
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(example = "198.51.100.1", value = "String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. ")
    @JsonProperty(JSON_PROPERTY_ROUTER_IPV4)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRouterIpv4()
    {
        return routerIpv4;
    }

    @JsonProperty(JSON_PROPERTY_ROUTER_IPV4)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRouterIpv4(String routerIpv4)
    {
        this.routerIpv4 = routerIpv4;
    }

    public SmsRouterInfo routerIpv6(String routerIpv6)
    {

        this.routerIpv6 = routerIpv6;
        return this;
    }

    /**
     * Get routerIpv6
     * 
     * @return routerIpv6
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ROUTER_IPV6)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRouterIpv6()
    {
        return routerIpv6;
    }

    @JsonProperty(JSON_PROPERTY_ROUTER_IPV6)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRouterIpv6(String routerIpv6)
    {
        this.routerIpv6 = routerIpv6;
    }

    public SmsRouterInfo routerFqdn(String routerFqdn)
    {

        this.routerFqdn = routerFqdn;
        return this;
    }

    /**
     * Fully Qualified Domain Name
     * 
     * @return routerFqdn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Fully Qualified Domain Name")
    @JsonProperty(JSON_PROPERTY_ROUTER_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRouterFqdn()
    {
        return routerFqdn;
    }

    @JsonProperty(JSON_PROPERTY_ROUTER_FQDN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRouterFqdn(String routerFqdn)
    {
        this.routerFqdn = routerFqdn;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SmsRouterInfo smsRouterInfo = (SmsRouterInfo) o;
        return Objects.equals(this.nfInstanceId, smsRouterInfo.nfInstanceId) && Objects.equals(this.diameterAddress, smsRouterInfo.diameterAddress)
               && Objects.equals(this.mapAddress, smsRouterInfo.mapAddress) && Objects.equals(this.routerIpv4, smsRouterInfo.routerIpv4)
               && Objects.equals(this.routerIpv6, smsRouterInfo.routerIpv6) && Objects.equals(this.routerFqdn, smsRouterInfo.routerFqdn);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(nfInstanceId, diameterAddress, mapAddress, routerIpv4, routerIpv6, routerFqdn);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmsRouterInfo {\n");
        sb.append("    nfInstanceId: ").append(toIndentedString(nfInstanceId)).append("\n");
        sb.append("    diameterAddress: ").append(toIndentedString(diameterAddress)).append("\n");
        sb.append("    mapAddress: ").append(toIndentedString(mapAddress)).append("\n");
        sb.append("    routerIpv4: ").append(toIndentedString(routerIpv4)).append("\n");
        sb.append("    routerIpv6: ").append(toIndentedString(routerIpv6)).append("\n");
        sb.append("    routerFqdn: ").append(toIndentedString(routerFqdn)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
