/*
 * NRF NFManagement Service
 * NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Condition (list of attributes in the NF Profile) to determine whether a
 * notification must be sent by NRF
 */
@ApiModel(description = "Condition (list of attributes in the NF Profile) to determine whether a notification must be sent by NRF ")
@JsonPropertyOrder({ NotifCondition.JSON_PROPERTY_MONITORED_ATTRIBUTES, NotifCondition.JSON_PROPERTY_UNMONITORED_ATTRIBUTES })
public class NotifCondition
{
    public static final String JSON_PROPERTY_MONITORED_ATTRIBUTES = "monitoredAttributes";
    private List<String> monitoredAttributes = null;

    public static final String JSON_PROPERTY_UNMONITORED_ATTRIBUTES = "unmonitoredAttributes";
    private List<String> unmonitoredAttributes = null;

    public NotifCondition()
    {
    }

    public NotifCondition monitoredAttributes(List<String> monitoredAttributes)
    {

        this.monitoredAttributes = monitoredAttributes;
        return this;
    }

    public NotifCondition addMonitoredAttributesItem(String monitoredAttributesItem)
    {
        if (this.monitoredAttributes == null)
        {
            this.monitoredAttributes = new ArrayList<>();
        }
        this.monitoredAttributes.add(monitoredAttributesItem);
        return this;
    }

    /**
     * Get monitoredAttributes
     * 
     * @return monitoredAttributes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MONITORED_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getMonitoredAttributes()
    {
        return monitoredAttributes;
    }

    @JsonProperty(JSON_PROPERTY_MONITORED_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMonitoredAttributes(List<String> monitoredAttributes)
    {
        this.monitoredAttributes = monitoredAttributes;
    }

    public NotifCondition unmonitoredAttributes(List<String> unmonitoredAttributes)
    {

        this.unmonitoredAttributes = unmonitoredAttributes;
        return this;
    }

    public NotifCondition addUnmonitoredAttributesItem(String unmonitoredAttributesItem)
    {
        if (this.unmonitoredAttributes == null)
        {
            this.unmonitoredAttributes = new ArrayList<>();
        }
        this.unmonitoredAttributes.add(unmonitoredAttributesItem);
        return this;
    }

    /**
     * Get unmonitoredAttributes
     * 
     * @return unmonitoredAttributes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UNMONITORED_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getUnmonitoredAttributes()
    {
        return unmonitoredAttributes;
    }

    @JsonProperty(JSON_PROPERTY_UNMONITORED_ATTRIBUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnmonitoredAttributes(List<String> unmonitoredAttributes)
    {
        this.unmonitoredAttributes = unmonitoredAttributes;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NotifCondition notifCondition = (NotifCondition) o;
        return Objects.equals(this.monitoredAttributes, notifCondition.monitoredAttributes)
               && Objects.equals(this.unmonitoredAttributes, notifCondition.unmonitoredAttributes);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(monitoredAttributes, unmonitoredAttributes);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NotifCondition {\n");
        sb.append("    monitoredAttributes: ").append(toIndentedString(monitoredAttributes)).append("\n");
        sb.append("    unmonitoredAttributes: ").append(toIndentedString(unmonitoredAttributes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
