/*
 * Npcf_AMPolicyControl
 * Access and Mobility Policy Control Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29507.npcf.ampolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a list of candidate DNNs for replacement for an S-NSSAI.
 */
@ApiModel(description = "Represents a list of candidate DNNs for replacement for an S-NSSAI.")
@JsonPropertyOrder({ CandidateForReplacement.JSON_PROPERTY_SNSSAI, CandidateForReplacement.JSON_PROPERTY_DNNS })
public class CandidateForReplacement
{
    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_DNNS = "dnns";
    private JsonNullable<List<String>> dnns = JsonNullable.<List<String>>undefined();

    public CandidateForReplacement()
    {
    }

    public CandidateForReplacement snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public CandidateForReplacement dnns(List<String> dnns)
    {
        this.dnns = JsonNullable.<List<String>>of(dnns);

        return this;
    }

    public CandidateForReplacement addDnnsItem(String dnnsItem)
    {
        if (this.dnns == null || !this.dnns.isPresent())
        {
            this.dnns = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try
        {
            this.dnns.get().add(dnnsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Get dnns
     * 
     * @return dnns
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public List<String> getDnns()
    {
        return dnns.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_DNNS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<String>> getDnns_JsonNullable()
    {
        return dnns;
    }

    @JsonProperty(JSON_PROPERTY_DNNS)
    public void setDnns_JsonNullable(JsonNullable<List<String>> dnns)
    {
        this.dnns = dnns;
    }

    public void setDnns(List<String> dnns)
    {
        this.dnns = JsonNullable.<List<String>>of(dnns);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        CandidateForReplacement candidateForReplacement = (CandidateForReplacement) o;
        return Objects.equals(this.snssai, candidateForReplacement.snssai) && equalsNullable(this.dnns, candidateForReplacement.dnns);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(snssai, hashCodeNullable(dnns));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class CandidateForReplacement {\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    dnns: ").append(toIndentedString(dnns)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
