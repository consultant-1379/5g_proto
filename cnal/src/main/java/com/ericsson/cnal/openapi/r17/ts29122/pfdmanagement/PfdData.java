/*
 * 3gpp-pfd-management
 * API for PFD management.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29122.pfdmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a PFD request to add, update or remove PFD(s) for one external
 * application identifier.
 */
@ApiModel(description = "Represents a PFD request to add, update or remove PFD(s) for one external application identifier.")
@JsonPropertyOrder({ PfdData.JSON_PROPERTY_EXTERNAL_APP_ID,
                     PfdData.JSON_PROPERTY_SELF,
                     PfdData.JSON_PROPERTY_PFDS,
                     PfdData.JSON_PROPERTY_ALLOWED_DELAY,
                     PfdData.JSON_PROPERTY_CACHING_TIME })
public class PfdData
{
    public static final String JSON_PROPERTY_EXTERNAL_APP_ID = "externalAppId";
    private String externalAppId;

    public static final String JSON_PROPERTY_SELF = "self";
    private String self;

    public static final String JSON_PROPERTY_PFDS = "pfds";
    private Map<String, Pfd> pfds = new HashMap<>();

    public static final String JSON_PROPERTY_ALLOWED_DELAY = "allowedDelay";
    private JsonNullable<Integer> allowedDelay = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_CACHING_TIME = "cachingTime";
    private Integer cachingTime;

    public PfdData()
    {
    }

    @JsonCreator
    public PfdData(@JsonProperty(JSON_PROPERTY_CACHING_TIME) Integer cachingTime)
    {
        this();
        this.cachingTime = cachingTime;
    }

    public PfdData externalAppId(String externalAppId)
    {

        this.externalAppId = externalAppId;
        return this;
    }

    /**
     * Each element uniquely external application identifier
     * 
     * @return externalAppId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Each element uniquely external application identifier")
    @JsonProperty(JSON_PROPERTY_EXTERNAL_APP_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getExternalAppId()
    {
        return externalAppId;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_APP_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setExternalAppId(String externalAppId)
    {
        this.externalAppId = externalAppId;
    }

    public PfdData self(String self)
    {

        this.self = self;
        return this;
    }

    /**
     * string formatted according to IETF RFC 3986 identifying a referenced
     * resource.
     * 
     * @return self
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string formatted according to IETF RFC 3986 identifying a referenced resource.")
    @JsonProperty(JSON_PROPERTY_SELF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSelf()
    {
        return self;
    }

    @JsonProperty(JSON_PROPERTY_SELF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSelf(String self)
    {
        this.self = self;
    }

    public PfdData pfds(Map<String, Pfd> pfds)
    {

        this.pfds = pfds;
        return this;
    }

    public PfdData putPfdsItem(String key,
                               Pfd pfdsItem)
    {
        this.pfds.put(key, pfdsItem);
        return this;
    }

    /**
     * Contains the PFDs of the external application identifier. Each PFD is
     * identified in the map via a key containing the PFD identifier.
     * 
     * @return pfds
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Contains the PFDs of the external application identifier. Each PFD is identified in the map via a key containing the PFD identifier.")
    @JsonProperty(JSON_PROPERTY_PFDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Map<String, Pfd> getPfds()
    {
        return pfds;
    }

    @JsonProperty(JSON_PROPERTY_PFDS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPfds(Map<String, Pfd> pfds)
    {
        this.pfds = pfds;
    }

    public PfdData allowedDelay(Integer allowedDelay)
    {
        this.allowedDelay = JsonNullable.<Integer>of(allowedDelay);

        return this;
    }

    /**
     * Unsigned integer identifying a period of time in units of seconds with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return allowedDelay
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a period of time in units of seconds with \"nullable=true\" property.")
    @JsonIgnore

    public Integer getAllowedDelay()
    {
        return allowedDelay.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_ALLOWED_DELAY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getAllowedDelay_JsonNullable()
    {
        return allowedDelay;
    }

    @JsonProperty(JSON_PROPERTY_ALLOWED_DELAY)
    public void setAllowedDelay_JsonNullable(JsonNullable<Integer> allowedDelay)
    {
        this.allowedDelay = allowedDelay;
    }

    public void setAllowedDelay(Integer allowedDelay)
    {
        this.allowedDelay = JsonNullable.<Integer>of(allowedDelay);
    }

    /**
     * Unsigned integer identifying a period of time in units of seconds with
     * \&quot;readOnly&#x3D;true\&quot; property. minimum: 0
     * 
     * @return cachingTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a period of time in units of seconds with \"readOnly=true\" property.")
    @JsonProperty(JSON_PROPERTY_CACHING_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getCachingTime()
    {
        return cachingTime;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PfdData pfdData = (PfdData) o;
        return Objects.equals(this.externalAppId, pfdData.externalAppId) && Objects.equals(this.self, pfdData.self) && Objects.equals(this.pfds, pfdData.pfds)
               && equalsNullable(this.allowedDelay, pfdData.allowedDelay) && Objects.equals(this.cachingTime, pfdData.cachingTime);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(externalAppId, self, pfds, hashCodeNullable(allowedDelay), cachingTime);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PfdData {\n");
        sb.append("    externalAppId: ").append(toIndentedString(externalAppId)).append("\n");
        sb.append("    self: ").append(toIndentedString(self)).append("\n");
        sb.append("    pfds: ").append(toIndentedString(pfds)).append("\n");
        sb.append("    allowedDelay: ").append(toIndentedString(allowedDelay)).append("\n");
        sb.append("    cachingTime: ").append(toIndentedString(cachingTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
