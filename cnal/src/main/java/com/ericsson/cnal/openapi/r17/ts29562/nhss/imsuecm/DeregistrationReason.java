/*
 * Nhss_imsUECM
 * Nhss UE Context Management Service for IMS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29562.nhss.imsuecm;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the reason for the network initiated de-registration (including a
 * reason code, and a human-readable reason text)
 */
@ApiModel(description = "Contains the reason for the network initiated de-registration (including a reason code, and a human-readable reason text) ")
@JsonPropertyOrder({ DeregistrationReason.JSON_PROPERTY_REASON_CODE, DeregistrationReason.JSON_PROPERTY_REASON_TEXT })
public class DeregistrationReason
{
    public static final String JSON_PROPERTY_REASON_CODE = "reasonCode";
    private String reasonCode;

    public static final String JSON_PROPERTY_REASON_TEXT = "reasonText";
    private String reasonText;

    public DeregistrationReason()
    {
    }

    public DeregistrationReason reasonCode(String reasonCode)
    {

        this.reasonCode = reasonCode;
        return this;
    }

    /**
     * Indicates the reason for the network-initiated deregistration
     * 
     * @return reasonCode
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Indicates the reason for the network-initiated deregistration")
    @JsonProperty(JSON_PROPERTY_REASON_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getReasonCode()
    {
        return reasonCode;
    }

    @JsonProperty(JSON_PROPERTY_REASON_CODE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setReasonCode(String reasonCode)
    {
        this.reasonCode = reasonCode;
    }

    public DeregistrationReason reasonText(String reasonText)
    {

        this.reasonText = reasonText;
        return this;
    }

    /**
     * Get reasonText
     * 
     * @return reasonText
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_REASON_TEXT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getReasonText()
    {
        return reasonText;
    }

    @JsonProperty(JSON_PROPERTY_REASON_TEXT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setReasonText(String reasonText)
    {
        this.reasonText = reasonText;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        DeregistrationReason deregistrationReason = (DeregistrationReason) o;
        return Objects.equals(this.reasonCode, deregistrationReason.reasonCode) && Objects.equals(this.reasonText, deregistrationReason.reasonText);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(reasonCode, reasonText);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeregistrationReason {\n");
        sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
        sb.append("    reasonText: ").append(toIndentedString(reasonText)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
