/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 3.1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts32291.nchf.convergedcharging;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SDPTimeStamps
 */
@JsonPropertyOrder({ SDPTimeStamps.JSON_PROPERTY_S_D_P_OFFER_TIMESTAMP, SDPTimeStamps.JSON_PROPERTY_S_D_P_ANSWER_TIMESTAMP })
public class SDPTimeStamps
{
    public static final String JSON_PROPERTY_S_D_P_OFFER_TIMESTAMP = "sDPOfferTimestamp";
    private OffsetDateTime sDPOfferTimestamp;

    public static final String JSON_PROPERTY_S_D_P_ANSWER_TIMESTAMP = "sDPAnswerTimestamp";
    private OffsetDateTime sDPAnswerTimestamp;

    public SDPTimeStamps()
    {
    }

    public SDPTimeStamps sDPOfferTimestamp(OffsetDateTime sDPOfferTimestamp)
    {

        this.sDPOfferTimestamp = sDPOfferTimestamp;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return sDPOfferTimestamp
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_S_D_P_OFFER_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getsDPOfferTimestamp()
    {
        return sDPOfferTimestamp;
    }

    @JsonProperty(JSON_PROPERTY_S_D_P_OFFER_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setsDPOfferTimestamp(OffsetDateTime sDPOfferTimestamp)
    {
        this.sDPOfferTimestamp = sDPOfferTimestamp;
    }

    public SDPTimeStamps sDPAnswerTimestamp(OffsetDateTime sDPAnswerTimestamp)
    {

        this.sDPAnswerTimestamp = sDPAnswerTimestamp;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return sDPAnswerTimestamp
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_S_D_P_ANSWER_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getsDPAnswerTimestamp()
    {
        return sDPAnswerTimestamp;
    }

    @JsonProperty(JSON_PROPERTY_S_D_P_ANSWER_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setsDPAnswerTimestamp(OffsetDateTime sDPAnswerTimestamp)
    {
        this.sDPAnswerTimestamp = sDPAnswerTimestamp;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SDPTimeStamps sdPTimeStamps = (SDPTimeStamps) o;
        return Objects.equals(this.sDPOfferTimestamp, sdPTimeStamps.sDPOfferTimestamp)
               && Objects.equals(this.sDPAnswerTimestamp, sdPTimeStamps.sDPAnswerTimestamp);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(sDPOfferTimestamp, sDPAnswerTimestamp);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SDPTimeStamps {\n");
        sb.append("    sDPOfferTimestamp: ").append(toIndentedString(sDPOfferTimestamp)).append("\n");
        sb.append("    sDPAnswerTimestamp: ").append(toIndentedString(sDPAnswerTimestamp)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
