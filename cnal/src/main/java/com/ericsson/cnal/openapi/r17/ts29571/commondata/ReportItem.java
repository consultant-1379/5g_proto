/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * indicates performed modivications.
 */
@ApiModel(description = "indicates performed modivications.")
@JsonPropertyOrder({ ReportItem.JSON_PROPERTY_PATH, ReportItem.JSON_PROPERTY_REASON })
public class ReportItem
{
    public static final String JSON_PROPERTY_PATH = "path";
    private String path;

    public static final String JSON_PROPERTY_REASON = "reason";
    private String reason;

    public ReportItem()
    {
    }

    public ReportItem path(String path)
    {

        this.path = path;
        return this;
    }

    /**
     * Contains a JSON pointer value (as defined in IETF RFC 6901) that references a
     * location of a resource to which the modification is subject.
     * 
     * @return path
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Contains a JSON pointer value (as defined in IETF RFC 6901) that references a  location of a resource to which the modification is subject. ")
    @JsonProperty(JSON_PROPERTY_PATH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getPath()
    {
        return path;
    }

    @JsonProperty(JSON_PROPERTY_PATH)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPath(String path)
    {
        this.path = path;
    }

    public ReportItem reason(String reason)
    {

        this.reason = reason;
        return this;
    }

    /**
     * A human-readable reason providing details on the reported modification
     * failure. The reason string should identify the operation that failed using
     * the operation&#39;s array index to assist in correlation of the invalid
     * parameter with the failed operation, e.g. \&quot;Replacement value invalid
     * for attribute (failed operation index&#x3D; 4)\&quot;.
     * 
     * @return reason
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A human-readable reason providing details on the reported modification failure.  The reason string should identify the operation that failed using the operation's  array index to assist in correlation of the invalid parameter with the failed  operation, e.g. \"Replacement value invalid for attribute (failed operation index= 4)\". ")
    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReason()
    {
        return reason;
    }

    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReason(String reason)
    {
        this.reason = reason;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ReportItem reportItem = (ReportItem) o;
        return Objects.equals(this.path, reportItem.path) && Objects.equals(this.reason, reportItem.reason);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(path, reason);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReportItem {\n");
        sb.append("    path: ").append(toIndentedString(path)).append("\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
