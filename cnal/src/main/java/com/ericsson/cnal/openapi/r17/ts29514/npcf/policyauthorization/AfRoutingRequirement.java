/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.RouteToLocation;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.EasIpReplacementInfo;
import com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol.UpPathChgEvent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes the event information delivered in the subscription.
 */
@ApiModel(description = "Describes the event information delivered in the subscription.")
@JsonPropertyOrder({ AfRoutingRequirement.JSON_PROPERTY_APP_RELOC,
                     AfRoutingRequirement.JSON_PROPERTY_ROUTE_TO_LOCS,
                     AfRoutingRequirement.JSON_PROPERTY_SP_VAL,
                     AfRoutingRequirement.JSON_PROPERTY_TEMP_VALS,
                     AfRoutingRequirement.JSON_PROPERTY_UP_PATH_CHG_SUB,
                     AfRoutingRequirement.JSON_PROPERTY_ADDR_PRESER_IND,
                     AfRoutingRequirement.JSON_PROPERTY_SIM_CONN_IND,
                     AfRoutingRequirement.JSON_PROPERTY_SIM_CONN_TERM,
                     AfRoutingRequirement.JSON_PROPERTY_EAS_IP_REPLACE_INFOS,
                     AfRoutingRequirement.JSON_PROPERTY_EAS_REDIS_IND,
                     AfRoutingRequirement.JSON_PROPERTY_MAX_ALLOWED_UP_LAT })
public class AfRoutingRequirement
{
    public static final String JSON_PROPERTY_APP_RELOC = "appReloc";
    private Boolean appReloc;

    public static final String JSON_PROPERTY_ROUTE_TO_LOCS = "routeToLocs";
    private List<RouteToLocation> routeToLocs = null;

    public static final String JSON_PROPERTY_SP_VAL = "spVal";
    private SpatialValidity spVal;

    public static final String JSON_PROPERTY_TEMP_VALS = "tempVals";
    private List<TemporalValidity> tempVals = null;

    public static final String JSON_PROPERTY_UP_PATH_CHG_SUB = "upPathChgSub";
    private JsonNullable<UpPathChgEvent> upPathChgSub = JsonNullable.<UpPathChgEvent>undefined();

    public static final String JSON_PROPERTY_ADDR_PRESER_IND = "addrPreserInd";
    private Boolean addrPreserInd;

    public static final String JSON_PROPERTY_SIM_CONN_IND = "simConnInd";
    private Boolean simConnInd;

    public static final String JSON_PROPERTY_SIM_CONN_TERM = "simConnTerm";
    private Integer simConnTerm;

    public static final String JSON_PROPERTY_EAS_IP_REPLACE_INFOS = "easIpReplaceInfos";
    private List<EasIpReplacementInfo> easIpReplaceInfos = null;

    public static final String JSON_PROPERTY_EAS_REDIS_IND = "easRedisInd";
    private Boolean easRedisInd;

    public static final String JSON_PROPERTY_MAX_ALLOWED_UP_LAT = "maxAllowedUpLat";
    private Integer maxAllowedUpLat;

    public AfRoutingRequirement()
    {
    }

    public AfRoutingRequirement appReloc(Boolean appReloc)
    {

        this.appReloc = appReloc;
        return this;
    }

    /**
     * Get appReloc
     * 
     * @return appReloc
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_APP_RELOC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAppReloc()
    {
        return appReloc;
    }

    @JsonProperty(JSON_PROPERTY_APP_RELOC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppReloc(Boolean appReloc)
    {
        this.appReloc = appReloc;
    }

    public AfRoutingRequirement routeToLocs(List<RouteToLocation> routeToLocs)
    {

        this.routeToLocs = routeToLocs;
        return this;
    }

    public AfRoutingRequirement addRouteToLocsItem(RouteToLocation routeToLocsItem)
    {
        if (this.routeToLocs == null)
        {
            this.routeToLocs = new ArrayList<>();
        }
        this.routeToLocs.add(routeToLocsItem);
        return this;
    }

    /**
     * Get routeToLocs
     * 
     * @return routeToLocs
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ROUTE_TO_LOCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<RouteToLocation> getRouteToLocs()
    {
        return routeToLocs;
    }

    @JsonProperty(JSON_PROPERTY_ROUTE_TO_LOCS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRouteToLocs(List<RouteToLocation> routeToLocs)
    {
        this.routeToLocs = routeToLocs;
    }

    public AfRoutingRequirement spVal(SpatialValidity spVal)
    {

        this.spVal = spVal;
        return this;
    }

    /**
     * Get spVal
     * 
     * @return spVal
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SP_VAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SpatialValidity getSpVal()
    {
        return spVal;
    }

    @JsonProperty(JSON_PROPERTY_SP_VAL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSpVal(SpatialValidity spVal)
    {
        this.spVal = spVal;
    }

    public AfRoutingRequirement tempVals(List<TemporalValidity> tempVals)
    {

        this.tempVals = tempVals;
        return this;
    }

    public AfRoutingRequirement addTempValsItem(TemporalValidity tempValsItem)
    {
        if (this.tempVals == null)
        {
            this.tempVals = new ArrayList<>();
        }
        this.tempVals.add(tempValsItem);
        return this;
    }

    /**
     * Get tempVals
     * 
     * @return tempVals
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TEMP_VALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<TemporalValidity> getTempVals()
    {
        return tempVals;
    }

    @JsonProperty(JSON_PROPERTY_TEMP_VALS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTempVals(List<TemporalValidity> tempVals)
    {
        this.tempVals = tempVals;
    }

    public AfRoutingRequirement upPathChgSub(UpPathChgEvent upPathChgSub)
    {
        this.upPathChgSub = JsonNullable.<UpPathChgEvent>of(upPathChgSub);

        return this;
    }

    /**
     * Get upPathChgSub
     * 
     * @return upPathChgSub
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public UpPathChgEvent getUpPathChgSub()
    {
        return upPathChgSub.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_UP_PATH_CHG_SUB)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<UpPathChgEvent> getUpPathChgSub_JsonNullable()
    {
        return upPathChgSub;
    }

    @JsonProperty(JSON_PROPERTY_UP_PATH_CHG_SUB)
    public void setUpPathChgSub_JsonNullable(JsonNullable<UpPathChgEvent> upPathChgSub)
    {
        this.upPathChgSub = upPathChgSub;
    }

    public void setUpPathChgSub(UpPathChgEvent upPathChgSub)
    {
        this.upPathChgSub = JsonNullable.<UpPathChgEvent>of(upPathChgSub);
    }

    public AfRoutingRequirement addrPreserInd(Boolean addrPreserInd)
    {

        this.addrPreserInd = addrPreserInd;
        return this;
    }

    /**
     * Get addrPreserInd
     * 
     * @return addrPreserInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ADDR_PRESER_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAddrPreserInd()
    {
        return addrPreserInd;
    }

    @JsonProperty(JSON_PROPERTY_ADDR_PRESER_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddrPreserInd(Boolean addrPreserInd)
    {
        this.addrPreserInd = addrPreserInd;
    }

    public AfRoutingRequirement simConnInd(Boolean simConnInd)
    {

        this.simConnInd = simConnInd;
        return this;
    }

    /**
     * Indicates whether simultaneous connectivity should be temporarily maintained
     * for the source and target PSA.
     * 
     * @return simConnInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether simultaneous connectivity should be temporarily maintained for the source and target PSA.")
    @JsonProperty(JSON_PROPERTY_SIM_CONN_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getSimConnInd()
    {
        return simConnInd;
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSimConnInd(Boolean simConnInd)
    {
        this.simConnInd = simConnInd;
    }

    public AfRoutingRequirement simConnTerm(Integer simConnTerm)
    {

        this.simConnTerm = simConnTerm;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return simConnTerm
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_SIM_CONN_TERM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getSimConnTerm()
    {
        return simConnTerm;
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_TERM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSimConnTerm(Integer simConnTerm)
    {
        this.simConnTerm = simConnTerm;
    }

    public AfRoutingRequirement easIpReplaceInfos(List<EasIpReplacementInfo> easIpReplaceInfos)
    {

        this.easIpReplaceInfos = easIpReplaceInfos;
        return this;
    }

    public AfRoutingRequirement addEasIpReplaceInfosItem(EasIpReplacementInfo easIpReplaceInfosItem)
    {
        if (this.easIpReplaceInfos == null)
        {
            this.easIpReplaceInfos = new ArrayList<>();
        }
        this.easIpReplaceInfos.add(easIpReplaceInfosItem);
        return this;
    }

    /**
     * Contains EAS IP replacement information.
     * 
     * @return easIpReplaceInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains EAS IP replacement information.")
    @JsonProperty(JSON_PROPERTY_EAS_IP_REPLACE_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EasIpReplacementInfo> getEasIpReplaceInfos()
    {
        return easIpReplaceInfos;
    }

    @JsonProperty(JSON_PROPERTY_EAS_IP_REPLACE_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEasIpReplaceInfos(List<EasIpReplacementInfo> easIpReplaceInfos)
    {
        this.easIpReplaceInfos = easIpReplaceInfos;
    }

    public AfRoutingRequirement easRedisInd(Boolean easRedisInd)
    {

        this.easRedisInd = easRedisInd;
        return this;
    }

    /**
     * Indicates the EAS rediscovery is required.
     * 
     * @return easRedisInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the EAS rediscovery is required.")
    @JsonProperty(JSON_PROPERTY_EAS_REDIS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getEasRedisInd()
    {
        return easRedisInd;
    }

    @JsonProperty(JSON_PROPERTY_EAS_REDIS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEasRedisInd(Boolean easRedisInd)
    {
        this.easRedisInd = easRedisInd;
    }

    public AfRoutingRequirement maxAllowedUpLat(Integer maxAllowedUpLat)
    {

        this.maxAllowedUpLat = maxAllowedUpLat;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return maxAllowedUpLat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_MAX_ALLOWED_UP_LAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxAllowedUpLat()
    {
        return maxAllowedUpLat;
    }

    @JsonProperty(JSON_PROPERTY_MAX_ALLOWED_UP_LAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxAllowedUpLat(Integer maxAllowedUpLat)
    {
        this.maxAllowedUpLat = maxAllowedUpLat;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AfRoutingRequirement afRoutingRequirement = (AfRoutingRequirement) o;
        return Objects.equals(this.appReloc, afRoutingRequirement.appReloc) && Objects.equals(this.routeToLocs, afRoutingRequirement.routeToLocs)
               && Objects.equals(this.spVal, afRoutingRequirement.spVal) && Objects.equals(this.tempVals, afRoutingRequirement.tempVals)
               && equalsNullable(this.upPathChgSub, afRoutingRequirement.upPathChgSub) && Objects.equals(this.addrPreserInd, afRoutingRequirement.addrPreserInd)
               && Objects.equals(this.simConnInd, afRoutingRequirement.simConnInd) && Objects.equals(this.simConnTerm, afRoutingRequirement.simConnTerm)
               && Objects.equals(this.easIpReplaceInfos, afRoutingRequirement.easIpReplaceInfos)
               && Objects.equals(this.easRedisInd, afRoutingRequirement.easRedisInd)
               && Objects.equals(this.maxAllowedUpLat, afRoutingRequirement.maxAllowedUpLat);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(appReloc,
                            routeToLocs,
                            spVal,
                            tempVals,
                            hashCodeNullable(upPathChgSub),
                            addrPreserInd,
                            simConnInd,
                            simConnTerm,
                            easIpReplaceInfos,
                            easRedisInd,
                            maxAllowedUpLat);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AfRoutingRequirement {\n");
        sb.append("    appReloc: ").append(toIndentedString(appReloc)).append("\n");
        sb.append("    routeToLocs: ").append(toIndentedString(routeToLocs)).append("\n");
        sb.append("    spVal: ").append(toIndentedString(spVal)).append("\n");
        sb.append("    tempVals: ").append(toIndentedString(tempVals)).append("\n");
        sb.append("    upPathChgSub: ").append(toIndentedString(upPathChgSub)).append("\n");
        sb.append("    addrPreserInd: ").append(toIndentedString(addrPreserInd)).append("\n");
        sb.append("    simConnInd: ").append(toIndentedString(simConnInd)).append("\n");
        sb.append("    simConnTerm: ").append(toIndentedString(simConnTerm)).append("\n");
        sb.append("    easIpReplaceInfos: ").append(toIndentedString(easIpReplaceInfos)).append("\n");
        sb.append("    easRedisInd: ").append(toIndentedString(easRedisInd)).append("\n");
        sb.append("    maxAllowedUpLat: ").append(toIndentedString(maxAllowedUpLat)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
