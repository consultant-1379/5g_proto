/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains usage monitoring related control information.
 */
@ApiModel(description = "Contains usage monitoring related control information.")
@JsonPropertyOrder({ UsageMonitoringData.JSON_PROPERTY_UM_ID,
                     UsageMonitoringData.JSON_PROPERTY_VOLUME_THRESHOLD,
                     UsageMonitoringData.JSON_PROPERTY_VOLUME_THRESHOLD_UPLINK,
                     UsageMonitoringData.JSON_PROPERTY_VOLUME_THRESHOLD_DOWNLINK,
                     UsageMonitoringData.JSON_PROPERTY_TIME_THRESHOLD,
                     UsageMonitoringData.JSON_PROPERTY_MONITORING_TIME,
                     UsageMonitoringData.JSON_PROPERTY_NEXT_VOL_THRESHOLD,
                     UsageMonitoringData.JSON_PROPERTY_NEXT_VOL_THRESHOLD_UPLINK,
                     UsageMonitoringData.JSON_PROPERTY_NEXT_VOL_THRESHOLD_DOWNLINK,
                     UsageMonitoringData.JSON_PROPERTY_NEXT_TIME_THRESHOLD,
                     UsageMonitoringData.JSON_PROPERTY_INACTIVITY_TIME,
                     UsageMonitoringData.JSON_PROPERTY_EX_USAGE_PCC_RULE_IDS })
public class UsageMonitoringData
{
    public static final String JSON_PROPERTY_UM_ID = "umId";
    private String umId;

    public static final String JSON_PROPERTY_VOLUME_THRESHOLD = "volumeThreshold";
    private JsonNullable<Long> volumeThreshold = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_VOLUME_THRESHOLD_UPLINK = "volumeThresholdUplink";
    private JsonNullable<Long> volumeThresholdUplink = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_VOLUME_THRESHOLD_DOWNLINK = "volumeThresholdDownlink";
    private JsonNullable<Long> volumeThresholdDownlink = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_TIME_THRESHOLD = "timeThreshold";
    private JsonNullable<Integer> timeThreshold = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_MONITORING_TIME = "monitoringTime";
    private JsonNullable<OffsetDateTime> monitoringTime = JsonNullable.<OffsetDateTime>undefined();

    public static final String JSON_PROPERTY_NEXT_VOL_THRESHOLD = "nextVolThreshold";
    private JsonNullable<Long> nextVolThreshold = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_NEXT_VOL_THRESHOLD_UPLINK = "nextVolThresholdUplink";
    private JsonNullable<Long> nextVolThresholdUplink = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_NEXT_VOL_THRESHOLD_DOWNLINK = "nextVolThresholdDownlink";
    private JsonNullable<Long> nextVolThresholdDownlink = JsonNullable.<Long>undefined();

    public static final String JSON_PROPERTY_NEXT_TIME_THRESHOLD = "nextTimeThreshold";
    private JsonNullable<Integer> nextTimeThreshold = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_INACTIVITY_TIME = "inactivityTime";
    private JsonNullable<Integer> inactivityTime = JsonNullable.<Integer>undefined();

    public static final String JSON_PROPERTY_EX_USAGE_PCC_RULE_IDS = "exUsagePccRuleIds";
    private JsonNullable<List<String>> exUsagePccRuleIds = JsonNullable.<List<String>>undefined();

    public UsageMonitoringData()
    {
    }

    public UsageMonitoringData umId(String umId)
    {

        this.umId = umId;
        return this;
    }

    /**
     * Univocally identifies the usage monitoring policy data within a PDU session.
     * 
     * @return umId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Univocally identifies the usage monitoring policy data within a PDU session.")
    @JsonProperty(JSON_PROPERTY_UM_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getUmId()
    {
        return umId;
    }

    @JsonProperty(JSON_PROPERTY_UM_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setUmId(String umId)
    {
        this.umId = umId;
    }

    public UsageMonitoringData volumeThreshold(Long volumeThreshold)
    {
        this.volumeThreshold = JsonNullable.<Long>of(volumeThreshold);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return volumeThreshold
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getVolumeThreshold()
    {
        return volumeThreshold.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_VOLUME_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getVolumeThreshold_JsonNullable()
    {
        return volumeThreshold;
    }

    @JsonProperty(JSON_PROPERTY_VOLUME_THRESHOLD)
    public void setVolumeThreshold_JsonNullable(JsonNullable<Long> volumeThreshold)
    {
        this.volumeThreshold = volumeThreshold;
    }

    public void setVolumeThreshold(Long volumeThreshold)
    {
        this.volumeThreshold = JsonNullable.<Long>of(volumeThreshold);
    }

    public UsageMonitoringData volumeThresholdUplink(Long volumeThresholdUplink)
    {
        this.volumeThresholdUplink = JsonNullable.<Long>of(volumeThresholdUplink);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return volumeThresholdUplink
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getVolumeThresholdUplink()
    {
        return volumeThresholdUplink.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_VOLUME_THRESHOLD_UPLINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getVolumeThresholdUplink_JsonNullable()
    {
        return volumeThresholdUplink;
    }

    @JsonProperty(JSON_PROPERTY_VOLUME_THRESHOLD_UPLINK)
    public void setVolumeThresholdUplink_JsonNullable(JsonNullable<Long> volumeThresholdUplink)
    {
        this.volumeThresholdUplink = volumeThresholdUplink;
    }

    public void setVolumeThresholdUplink(Long volumeThresholdUplink)
    {
        this.volumeThresholdUplink = JsonNullable.<Long>of(volumeThresholdUplink);
    }

    public UsageMonitoringData volumeThresholdDownlink(Long volumeThresholdDownlink)
    {
        this.volumeThresholdDownlink = JsonNullable.<Long>of(volumeThresholdDownlink);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return volumeThresholdDownlink
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getVolumeThresholdDownlink()
    {
        return volumeThresholdDownlink.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_VOLUME_THRESHOLD_DOWNLINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getVolumeThresholdDownlink_JsonNullable()
    {
        return volumeThresholdDownlink;
    }

    @JsonProperty(JSON_PROPERTY_VOLUME_THRESHOLD_DOWNLINK)
    public void setVolumeThresholdDownlink_JsonNullable(JsonNullable<Long> volumeThresholdDownlink)
    {
        this.volumeThresholdDownlink = volumeThresholdDownlink;
    }

    public void setVolumeThresholdDownlink(Long volumeThresholdDownlink)
    {
        this.volumeThresholdDownlink = JsonNullable.<Long>of(volumeThresholdDownlink);
    }

    public UsageMonitoringData timeThreshold(Integer timeThreshold)
    {
        this.timeThreshold = JsonNullable.<Integer>of(timeThreshold);

        return this;
    }

    /**
     * indicating a time in seconds with OpenAPI defined &#39;nullable: true&#39;
     * property.
     * 
     * @return timeThreshold
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds with OpenAPI defined 'nullable: true' property.")
    @JsonIgnore

    public Integer getTimeThreshold()
    {
        return timeThreshold.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TIME_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getTimeThreshold_JsonNullable()
    {
        return timeThreshold;
    }

    @JsonProperty(JSON_PROPERTY_TIME_THRESHOLD)
    public void setTimeThreshold_JsonNullable(JsonNullable<Integer> timeThreshold)
    {
        this.timeThreshold = timeThreshold;
    }

    public void setTimeThreshold(Integer timeThreshold)
    {
        this.timeThreshold = JsonNullable.<Integer>of(timeThreshold);
    }

    public UsageMonitoringData monitoringTime(OffsetDateTime monitoringTime)
    {
        this.monitoringTime = JsonNullable.<OffsetDateTime>of(monitoringTime);

        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI with
     * &#39;nullable:true&#39; property.
     * 
     * @return monitoringTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI with 'nullable:true' property.  ")
    @JsonIgnore
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getMonitoringTime()
    {
        return monitoringTime.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_MONITORING_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<OffsetDateTime> getMonitoringTime_JsonNullable()
    {
        return monitoringTime;
    }

    @JsonProperty(JSON_PROPERTY_MONITORING_TIME)
    public void setMonitoringTime_JsonNullable(JsonNullable<OffsetDateTime> monitoringTime)
    {
        this.monitoringTime = monitoringTime;
    }

    public void setMonitoringTime(OffsetDateTime monitoringTime)
    {
        this.monitoringTime = JsonNullable.<OffsetDateTime>of(monitoringTime);
    }

    public UsageMonitoringData nextVolThreshold(Long nextVolThreshold)
    {
        this.nextVolThreshold = JsonNullable.<Long>of(nextVolThreshold);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return nextVolThreshold
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getNextVolThreshold()
    {
        return nextVolThreshold.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NEXT_VOL_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getNextVolThreshold_JsonNullable()
    {
        return nextVolThreshold;
    }

    @JsonProperty(JSON_PROPERTY_NEXT_VOL_THRESHOLD)
    public void setNextVolThreshold_JsonNullable(JsonNullable<Long> nextVolThreshold)
    {
        this.nextVolThreshold = nextVolThreshold;
    }

    public void setNextVolThreshold(Long nextVolThreshold)
    {
        this.nextVolThreshold = JsonNullable.<Long>of(nextVolThreshold);
    }

    public UsageMonitoringData nextVolThresholdUplink(Long nextVolThresholdUplink)
    {
        this.nextVolThresholdUplink = JsonNullable.<Long>of(nextVolThresholdUplink);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return nextVolThresholdUplink
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getNextVolThresholdUplink()
    {
        return nextVolThresholdUplink.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NEXT_VOL_THRESHOLD_UPLINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getNextVolThresholdUplink_JsonNullable()
    {
        return nextVolThresholdUplink;
    }

    @JsonProperty(JSON_PROPERTY_NEXT_VOL_THRESHOLD_UPLINK)
    public void setNextVolThresholdUplink_JsonNullable(JsonNullable<Long> nextVolThresholdUplink)
    {
        this.nextVolThresholdUplink = nextVolThresholdUplink;
    }

    public void setNextVolThresholdUplink(Long nextVolThresholdUplink)
    {
        this.nextVolThresholdUplink = JsonNullable.<Long>of(nextVolThresholdUplink);
    }

    public UsageMonitoringData nextVolThresholdDownlink(Long nextVolThresholdDownlink)
    {
        this.nextVolThresholdDownlink = JsonNullable.<Long>of(nextVolThresholdDownlink);

        return this;
    }

    /**
     * Unsigned integer identifying a volume in units of bytes with
     * \&quot;nullable&#x3D;true\&quot; property. minimum: 0
     * 
     * @return nextVolThresholdDownlink
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer identifying a volume in units of bytes with \"nullable=true\" property.")
    @JsonIgnore

    public Long getNextVolThresholdDownlink()
    {
        return nextVolThresholdDownlink.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NEXT_VOL_THRESHOLD_DOWNLINK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Long> getNextVolThresholdDownlink_JsonNullable()
    {
        return nextVolThresholdDownlink;
    }

    @JsonProperty(JSON_PROPERTY_NEXT_VOL_THRESHOLD_DOWNLINK)
    public void setNextVolThresholdDownlink_JsonNullable(JsonNullable<Long> nextVolThresholdDownlink)
    {
        this.nextVolThresholdDownlink = nextVolThresholdDownlink;
    }

    public void setNextVolThresholdDownlink(Long nextVolThresholdDownlink)
    {
        this.nextVolThresholdDownlink = JsonNullable.<Long>of(nextVolThresholdDownlink);
    }

    public UsageMonitoringData nextTimeThreshold(Integer nextTimeThreshold)
    {
        this.nextTimeThreshold = JsonNullable.<Integer>of(nextTimeThreshold);

        return this;
    }

    /**
     * indicating a time in seconds with OpenAPI defined &#39;nullable: true&#39;
     * property.
     * 
     * @return nextTimeThreshold
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds with OpenAPI defined 'nullable: true' property.")
    @JsonIgnore

    public Integer getNextTimeThreshold()
    {
        return nextTimeThreshold.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NEXT_TIME_THRESHOLD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getNextTimeThreshold_JsonNullable()
    {
        return nextTimeThreshold;
    }

    @JsonProperty(JSON_PROPERTY_NEXT_TIME_THRESHOLD)
    public void setNextTimeThreshold_JsonNullable(JsonNullable<Integer> nextTimeThreshold)
    {
        this.nextTimeThreshold = nextTimeThreshold;
    }

    public void setNextTimeThreshold(Integer nextTimeThreshold)
    {
        this.nextTimeThreshold = JsonNullable.<Integer>of(nextTimeThreshold);
    }

    public UsageMonitoringData inactivityTime(Integer inactivityTime)
    {
        this.inactivityTime = JsonNullable.<Integer>of(inactivityTime);

        return this;
    }

    /**
     * indicating a time in seconds with OpenAPI defined &#39;nullable: true&#39;
     * property.
     * 
     * @return inactivityTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds with OpenAPI defined 'nullable: true' property.")
    @JsonIgnore

    public Integer getInactivityTime()
    {
        return inactivityTime.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_INACTIVITY_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Integer> getInactivityTime_JsonNullable()
    {
        return inactivityTime;
    }

    @JsonProperty(JSON_PROPERTY_INACTIVITY_TIME)
    public void setInactivityTime_JsonNullable(JsonNullable<Integer> inactivityTime)
    {
        this.inactivityTime = inactivityTime;
    }

    public void setInactivityTime(Integer inactivityTime)
    {
        this.inactivityTime = JsonNullable.<Integer>of(inactivityTime);
    }

    public UsageMonitoringData exUsagePccRuleIds(List<String> exUsagePccRuleIds)
    {
        this.exUsagePccRuleIds = JsonNullable.<List<String>>of(exUsagePccRuleIds);

        return this;
    }

    public UsageMonitoringData addExUsagePccRuleIdsItem(String exUsagePccRuleIdsItem)
    {
        if (this.exUsagePccRuleIds == null || !this.exUsagePccRuleIds.isPresent())
        {
            this.exUsagePccRuleIds = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try
        {
            this.exUsagePccRuleIds.get().add(exUsagePccRuleIdsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Contains the PCC rule identifier(s) which corresponding service data flow(s)
     * shall be excluded from PDU Session usage monitoring. It is only included in
     * the UsageMonitoringData instance for session level usage monitoring.
     * 
     * @return exUsagePccRuleIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the PCC rule identifier(s) which corresponding service data flow(s) shall be excluded from PDU Session usage monitoring. It is only included in the UsageMonitoringData instance for session level usage monitoring. ")
    @JsonIgnore

    public List<String> getExUsagePccRuleIds()
    {
        return exUsagePccRuleIds.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_EX_USAGE_PCC_RULE_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<String>> getExUsagePccRuleIds_JsonNullable()
    {
        return exUsagePccRuleIds;
    }

    @JsonProperty(JSON_PROPERTY_EX_USAGE_PCC_RULE_IDS)
    public void setExUsagePccRuleIds_JsonNullable(JsonNullable<List<String>> exUsagePccRuleIds)
    {
        this.exUsagePccRuleIds = exUsagePccRuleIds;
    }

    public void setExUsagePccRuleIds(List<String> exUsagePccRuleIds)
    {
        this.exUsagePccRuleIds = JsonNullable.<List<String>>of(exUsagePccRuleIds);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UsageMonitoringData usageMonitoringData = (UsageMonitoringData) o;
        return Objects.equals(this.umId, usageMonitoringData.umId) && equalsNullable(this.volumeThreshold, usageMonitoringData.volumeThreshold)
               && equalsNullable(this.volumeThresholdUplink, usageMonitoringData.volumeThresholdUplink)
               && equalsNullable(this.volumeThresholdDownlink, usageMonitoringData.volumeThresholdDownlink)
               && equalsNullable(this.timeThreshold, usageMonitoringData.timeThreshold)
               && equalsNullable(this.monitoringTime, usageMonitoringData.monitoringTime)
               && equalsNullable(this.nextVolThreshold, usageMonitoringData.nextVolThreshold)
               && equalsNullable(this.nextVolThresholdUplink, usageMonitoringData.nextVolThresholdUplink)
               && equalsNullable(this.nextVolThresholdDownlink, usageMonitoringData.nextVolThresholdDownlink)
               && equalsNullable(this.nextTimeThreshold, usageMonitoringData.nextTimeThreshold)
               && equalsNullable(this.inactivityTime, usageMonitoringData.inactivityTime)
               && equalsNullable(this.exUsagePccRuleIds, usageMonitoringData.exUsagePccRuleIds);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(umId,
                            hashCodeNullable(volumeThreshold),
                            hashCodeNullable(volumeThresholdUplink),
                            hashCodeNullable(volumeThresholdDownlink),
                            hashCodeNullable(timeThreshold),
                            hashCodeNullable(monitoringTime),
                            hashCodeNullable(nextVolThreshold),
                            hashCodeNullable(nextVolThresholdUplink),
                            hashCodeNullable(nextVolThresholdDownlink),
                            hashCodeNullable(nextTimeThreshold),
                            hashCodeNullable(inactivityTime),
                            hashCodeNullable(exUsagePccRuleIds));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UsageMonitoringData {\n");
        sb.append("    umId: ").append(toIndentedString(umId)).append("\n");
        sb.append("    volumeThreshold: ").append(toIndentedString(volumeThreshold)).append("\n");
        sb.append("    volumeThresholdUplink: ").append(toIndentedString(volumeThresholdUplink)).append("\n");
        sb.append("    volumeThresholdDownlink: ").append(toIndentedString(volumeThresholdDownlink)).append("\n");
        sb.append("    timeThreshold: ").append(toIndentedString(timeThreshold)).append("\n");
        sb.append("    monitoringTime: ").append(toIndentedString(monitoringTime)).append("\n");
        sb.append("    nextVolThreshold: ").append(toIndentedString(nextVolThreshold)).append("\n");
        sb.append("    nextVolThresholdUplink: ").append(toIndentedString(nextVolThresholdUplink)).append("\n");
        sb.append("    nextVolThresholdDownlink: ").append(toIndentedString(nextVolThresholdDownlink)).append("\n");
        sb.append("    nextTimeThreshold: ").append(toIndentedString(nextTimeThreshold)).append("\n");
        sb.append("    inactivityTime: ").append(toIndentedString(inactivityTime)).append("\n");
        sb.append("    exUsagePccRuleIds: ").append(toIndentedString(exUsagePccRuleIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
