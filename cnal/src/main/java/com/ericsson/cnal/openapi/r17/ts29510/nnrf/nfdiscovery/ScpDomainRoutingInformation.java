/*
 * NRF NFDiscovery Service
 * NRF NFDiscovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfdiscovery;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SCP Domain Routing Information
 */
@ApiModel(description = "SCP Domain Routing Information")
@JsonPropertyOrder({ ScpDomainRoutingInformation.JSON_PROPERTY_SCP_DOMAIN_LIST })
public class ScpDomainRoutingInformation
{
    public static final String JSON_PROPERTY_SCP_DOMAIN_LIST = "scpDomainList";
    private Map<String, ScpDomainConnectivity> scpDomainList = new HashMap<>();

    public ScpDomainRoutingInformation()
    {
    }

    public ScpDomainRoutingInformation scpDomainList(Map<String, ScpDomainConnectivity> scpDomainList)
    {

        this.scpDomainList = scpDomainList;
        return this;
    }

    public ScpDomainRoutingInformation putScpDomainListItem(String key,
                                                            ScpDomainConnectivity scpDomainListItem)
    {
        this.scpDomainList.put(key, scpDomainListItem);
        return this;
    }

    /**
     * This IE shall contain a map of SCP domain interconnection information, where
     * the key of the map is a SCP domain. The value of each entry shall be the
     * interconnectivity information of the the SCP domain indicated by the key. An
     * empty map indicates that there is no SCP domain currently registered in the
     * NRF.
     * 
     * @return scpDomainList
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "This IE shall contain a map of SCP domain interconnection information, where the key of the map is a SCP domain. The value of each entry shall be the interconnectivity information of the the SCP domain indicated by the key. An empty map indicates that there is no SCP domain currently registered in the NRF. ")
    @JsonProperty(JSON_PROPERTY_SCP_DOMAIN_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Map<String, ScpDomainConnectivity> getScpDomainList()
    {
        return scpDomainList;
    }

    @JsonProperty(JSON_PROPERTY_SCP_DOMAIN_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setScpDomainList(Map<String, ScpDomainConnectivity> scpDomainList)
    {
        this.scpDomainList = scpDomainList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ScpDomainRoutingInformation scpDomainRoutingInformation = (ScpDomainRoutingInformation) o;
        return Objects.equals(this.scpDomainList, scpDomainRoutingInformation.scpDomainList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(scpDomainList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ScpDomainRoutingInformation {\n");
        sb.append("    scpDomainList: ").append(toIndentedString(scpDomainList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
