/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Exactly one of cgi, sai or lai shall be present.
 */
@ApiModel(description = "Exactly one of cgi, sai or lai shall be present.")
@JsonPropertyOrder({ UtraLocation.JSON_PROPERTY_CGI,
                     UtraLocation.JSON_PROPERTY_SAI,
                     UtraLocation.JSON_PROPERTY_LAI,
                     UtraLocation.JSON_PROPERTY_RAI,
                     UtraLocation.JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION,
                     UtraLocation.JSON_PROPERTY_UE_LOCATION_TIMESTAMP,
                     UtraLocation.JSON_PROPERTY_GEOGRAPHICAL_INFORMATION,
                     UtraLocation.JSON_PROPERTY_GEODETIC_INFORMATION })
public class UtraLocation
{
    public static final String JSON_PROPERTY_CGI = "cgi";
    private CellGlobalId cgi;

    public static final String JSON_PROPERTY_SAI = "sai";
    private ServiceAreaId sai;

    public static final String JSON_PROPERTY_LAI = "lai";
    private LocationAreaId lai;

    public static final String JSON_PROPERTY_RAI = "rai";
    private RoutingAreaId rai;

    public static final String JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION = "ageOfLocationInformation";
    private Integer ageOfLocationInformation;

    public static final String JSON_PROPERTY_UE_LOCATION_TIMESTAMP = "ueLocationTimestamp";
    private OffsetDateTime ueLocationTimestamp;

    public static final String JSON_PROPERTY_GEOGRAPHICAL_INFORMATION = "geographicalInformation";
    private String geographicalInformation;

    public static final String JSON_PROPERTY_GEODETIC_INFORMATION = "geodeticInformation";
    private String geodeticInformation;

    public UtraLocation()
    {
    }

    public UtraLocation cgi(CellGlobalId cgi)
    {

        this.cgi = cgi;
        return this;
    }

    /**
     * Get cgi
     * 
     * @return cgi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public CellGlobalId getCgi()
    {
        return cgi;
    }

    @JsonProperty(JSON_PROPERTY_CGI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCgi(CellGlobalId cgi)
    {
        this.cgi = cgi;
    }

    public UtraLocation sai(ServiceAreaId sai)
    {

        this.sai = sai;
        return this;
    }

    /**
     * Get sai
     * 
     * @return sai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ServiceAreaId getSai()
    {
        return sai;
    }

    @JsonProperty(JSON_PROPERTY_SAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSai(ServiceAreaId sai)
    {
        this.sai = sai;
    }

    public UtraLocation lai(LocationAreaId lai)
    {

        this.lai = lai;
        return this;
    }

    /**
     * Get lai
     * 
     * @return lai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_LAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public LocationAreaId getLai()
    {
        return lai;
    }

    @JsonProperty(JSON_PROPERTY_LAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLai(LocationAreaId lai)
    {
        this.lai = lai;
    }

    public UtraLocation rai(RoutingAreaId rai)
    {

        this.rai = rai;
        return this;
    }

    /**
     * Get rai
     * 
     * @return rai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RoutingAreaId getRai()
    {
        return rai;
    }

    @JsonProperty(JSON_PROPERTY_RAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRai(RoutingAreaId rai)
    {
        this.rai = rai;
    }

    public UtraLocation ageOfLocationInformation(Integer ageOfLocationInformation)
    {

        this.ageOfLocationInformation = ageOfLocationInformation;
        return this;
    }

    /**
     * The value represents the elapsed time in minutes since the last network
     * contact of the mobile station. Value \&quot;0\&quot; indicates that the
     * location information was obtained after a successful paging procedure for
     * Active Location Retrieval when the UE is in idle mode or after a successful
     * location reporting procedure the UE is in connected mode. Any other value
     * than \&quot;0\&quot; indicates that the location information is the last
     * known one. See 3GPP TS 29.002 clause 17.7.8. minimum: 0 maximum: 32767
     * 
     * @return ageOfLocationInformation
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "The value represents the elapsed time in minutes since the last network contact of the mobile station.  Value \"0\" indicates that the location information was obtained after a successful paging procedure for  Active Location Retrieval when the UE is in idle mode  or after a successful location reporting procedure  the UE is in connected mode. Any other value than \"0\" indicates that the location information is the last known one.  See 3GPP TS 29.002 clause 17.7.8. ")
    @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAgeOfLocationInformation()
    {
        return ageOfLocationInformation;
    }

    @JsonProperty(JSON_PROPERTY_AGE_OF_LOCATION_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAgeOfLocationInformation(Integer ageOfLocationInformation)
    {
        this.ageOfLocationInformation = ageOfLocationInformation;
    }

    public UtraLocation ueLocationTimestamp(OffsetDateTime ueLocationTimestamp)
    {

        this.ueLocationTimestamp = ueLocationTimestamp;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return ueLocationTimestamp
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_UE_LOCATION_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getUeLocationTimestamp()
    {
        return ueLocationTimestamp;
    }

    @JsonProperty(JSON_PROPERTY_UE_LOCATION_TIMESTAMP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUeLocationTimestamp(OffsetDateTime ueLocationTimestamp)
    {
        this.ueLocationTimestamp = ueLocationTimestamp;
    }

    public UtraLocation geographicalInformation(String geographicalInformation)
    {

        this.geographicalInformation = geographicalInformation;
        return this;
    }

    /**
     * Refer to geographical Information.See 3GPP TS 23.032 clause 7.3.2. Only the
     * description of an ellipsoid point with uncertainty circle is allowed to be
     * used.
     * 
     * @return geographicalInformation
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Refer to geographical Information.See 3GPP TS 23.032 clause 7.3.2. Only the description of an ellipsoid point with uncertainty circle is allowed to be used. ")
    @JsonProperty(JSON_PROPERTY_GEOGRAPHICAL_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGeographicalInformation()
    {
        return geographicalInformation;
    }

    @JsonProperty(JSON_PROPERTY_GEOGRAPHICAL_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeographicalInformation(String geographicalInformation)
    {
        this.geographicalInformation = geographicalInformation;
    }

    public UtraLocation geodeticInformation(String geodeticInformation)
    {

        this.geodeticInformation = geodeticInformation;
        return this;
    }

    /**
     * Refers to Calling Geodetic Location. See ITU-T Recommendation Q.763 (1999)
     * clause 3.88.2. Only the description of an ellipsoid point with uncertainty
     * circle is allowed to be used.
     * 
     * @return geodeticInformation
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Refers to Calling Geodetic Location. See ITU-T Recommendation Q.763 (1999) clause 3.88.2. Only the description of an ellipsoid point with uncertainty circle is allowed to be used. ")
    @JsonProperty(JSON_PROPERTY_GEODETIC_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGeodeticInformation()
    {
        return geodeticInformation;
    }

    @JsonProperty(JSON_PROPERTY_GEODETIC_INFORMATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeodeticInformation(String geodeticInformation)
    {
        this.geodeticInformation = geodeticInformation;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UtraLocation utraLocation = (UtraLocation) o;
        return Objects.equals(this.cgi, utraLocation.cgi) && Objects.equals(this.sai, utraLocation.sai) && Objects.equals(this.lai, utraLocation.lai)
               && Objects.equals(this.rai, utraLocation.rai) && Objects.equals(this.ageOfLocationInformation, utraLocation.ageOfLocationInformation)
               && Objects.equals(this.ueLocationTimestamp, utraLocation.ueLocationTimestamp)
               && Objects.equals(this.geographicalInformation, utraLocation.geographicalInformation)
               && Objects.equals(this.geodeticInformation, utraLocation.geodeticInformation);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(cgi, sai, lai, rai, ageOfLocationInformation, ueLocationTimestamp, geographicalInformation, geodeticInformation);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UtraLocation {\n");
        sb.append("    cgi: ").append(toIndentedString(cgi)).append("\n");
        sb.append("    sai: ").append(toIndentedString(sai)).append("\n");
        sb.append("    lai: ").append(toIndentedString(lai)).append("\n");
        sb.append("    rai: ").append(toIndentedString(rai)).append("\n");
        sb.append("    ageOfLocationInformation: ").append(toIndentedString(ageOfLocationInformation)).append("\n");
        sb.append("    ueLocationTimestamp: ").append(toIndentedString(ueLocationTimestamp)).append("\n");
        sb.append("    geographicalInformation: ").append(toIndentedString(geographicalInformation)).append("\n");
        sb.append("    geodeticInformation: ").append(toIndentedString(geodeticInformation)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
