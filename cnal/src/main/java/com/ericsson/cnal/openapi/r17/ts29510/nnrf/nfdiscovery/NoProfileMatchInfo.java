/*
 * NRF NFDiscovery Service
 * NRF NFDiscovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfdiscovery;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Provides the reason for not finding NF matching the search criteria
 */
@ApiModel(description = "Provides the reason for not finding NF matching the search criteria")
@JsonPropertyOrder({ NoProfileMatchInfo.JSON_PROPERTY_REASON, NoProfileMatchInfo.JSON_PROPERTY_QUERY_PARAM_COMBINATION_LIST })
public class NoProfileMatchInfo
{
    public static final String JSON_PROPERTY_REASON = "reason";
    private String reason;

    public static final String JSON_PROPERTY_QUERY_PARAM_COMBINATION_LIST = "queryParamCombinationList";
    private List<QueryParamCombination> queryParamCombinationList = null;

    public NoProfileMatchInfo()
    {
    }

    public NoProfileMatchInfo reason(String reason)
    {

        this.reason = reason;
        return this;
    }

    /**
     * No Profile Match Reason
     * 
     * @return reason
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "No Profile Match Reason")
    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getReason()
    {
        return reason;
    }

    @JsonProperty(JSON_PROPERTY_REASON)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setReason(String reason)
    {
        this.reason = reason;
    }

    public NoProfileMatchInfo queryParamCombinationList(List<QueryParamCombination> queryParamCombinationList)
    {

        this.queryParamCombinationList = queryParamCombinationList;
        return this;
    }

    public NoProfileMatchInfo addQueryParamCombinationListItem(QueryParamCombination queryParamCombinationListItem)
    {
        if (this.queryParamCombinationList == null)
        {
            this.queryParamCombinationList = new ArrayList<>();
        }
        this.queryParamCombinationList.add(queryParamCombinationListItem);
        return this;
    }

    /**
     * Get queryParamCombinationList
     * 
     * @return queryParamCombinationList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_QUERY_PARAM_COMBINATION_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<QueryParamCombination> getQueryParamCombinationList()
    {
        return queryParamCombinationList;
    }

    @JsonProperty(JSON_PROPERTY_QUERY_PARAM_COMBINATION_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setQueryParamCombinationList(List<QueryParamCombination> queryParamCombinationList)
    {
        this.queryParamCombinationList = queryParamCombinationList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NoProfileMatchInfo noProfileMatchInfo = (NoProfileMatchInfo) o;
        return Objects.equals(this.reason, noProfileMatchInfo.reason)
               && Objects.equals(this.queryParamCombinationList, noProfileMatchInfo.queryParamCombinationList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(reason, queryParamCombinationList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NoProfileMatchInfo {\n");
        sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
        sb.append("    queryParamCombinationList: ").append(toIndentedString(queryParamCombinationList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
