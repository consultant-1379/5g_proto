/*
 * Npcf_EventExposure
 * PCF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29523.npcf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the type of reporting that the subscription requires.
 */
@ApiModel(description = "Represents the type of reporting that the subscription requires.")
@JsonPropertyOrder({ ReportingInformation.JSON_PROPERTY_IMM_REP,
                     ReportingInformation.JSON_PROPERTY_NOTIF_METHOD,
                     ReportingInformation.JSON_PROPERTY_MAX_REPORT_NBR,
                     ReportingInformation.JSON_PROPERTY_MON_DUR,
                     ReportingInformation.JSON_PROPERTY_REP_PERIOD,
                     ReportingInformation.JSON_PROPERTY_SAMP_RATIO,
                     ReportingInformation.JSON_PROPERTY_PARTITION_CRITERIA,
                     ReportingInformation.JSON_PROPERTY_GRP_REP_TIME,
                     ReportingInformation.JSON_PROPERTY_NOTIF_FLAG })
public class ReportingInformation
{
    public static final String JSON_PROPERTY_IMM_REP = "immRep";
    private Boolean immRep;

    public static final String JSON_PROPERTY_NOTIF_METHOD = "notifMethod";
    private String notifMethod;

    public static final String JSON_PROPERTY_MAX_REPORT_NBR = "maxReportNbr";
    private Integer maxReportNbr;

    public static final String JSON_PROPERTY_MON_DUR = "monDur";
    private OffsetDateTime monDur;

    public static final String JSON_PROPERTY_REP_PERIOD = "repPeriod";
    private Integer repPeriod;

    public static final String JSON_PROPERTY_SAMP_RATIO = "sampRatio";
    private Integer sampRatio;

    public static final String JSON_PROPERTY_PARTITION_CRITERIA = "partitionCriteria";
    private List<String> partitionCriteria = null;

    public static final String JSON_PROPERTY_GRP_REP_TIME = "grpRepTime";
    private Integer grpRepTime;

    public static final String JSON_PROPERTY_NOTIF_FLAG = "notifFlag";
    private String notifFlag;

    public ReportingInformation()
    {
    }

    public ReportingInformation immRep(Boolean immRep)
    {

        this.immRep = immRep;
        return this;
    }

    /**
     * Get immRep
     * 
     * @return immRep
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IMM_REP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getImmRep()
    {
        return immRep;
    }

    @JsonProperty(JSON_PROPERTY_IMM_REP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setImmRep(Boolean immRep)
    {
        this.immRep = immRep;
    }

    public ReportingInformation notifMethod(String notifMethod)
    {

        this.notifMethod = notifMethod;
        return this;
    }

    /**
     * Possible values are: - PERIODIC - ONE_TIME - ON_EVENT_DETECTION
     * 
     * @return notifMethod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - PERIODIC - ONE_TIME - ON_EVENT_DETECTION ")
    @JsonProperty(JSON_PROPERTY_NOTIF_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNotifMethod()
    {
        return notifMethod;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotifMethod(String notifMethod)
    {
        this.notifMethod = notifMethod;
    }

    public ReportingInformation maxReportNbr(Integer maxReportNbr)
    {

        this.maxReportNbr = maxReportNbr;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return maxReportNbr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_MAX_REPORT_NBR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxReportNbr()
    {
        return maxReportNbr;
    }

    @JsonProperty(JSON_PROPERTY_MAX_REPORT_NBR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxReportNbr(Integer maxReportNbr)
    {
        this.maxReportNbr = maxReportNbr;
    }

    public ReportingInformation monDur(OffsetDateTime monDur)
    {

        this.monDur = monDur;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return monDur
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_MON_DUR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getMonDur()
    {
        return monDur;
    }

    @JsonProperty(JSON_PROPERTY_MON_DUR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMonDur(OffsetDateTime monDur)
    {
        this.monDur = monDur;
    }

    public ReportingInformation repPeriod(Integer repPeriod)
    {

        this.repPeriod = repPeriod;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return repPeriod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_REP_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getRepPeriod()
    {
        return repPeriod;
    }

    @JsonProperty(JSON_PROPERTY_REP_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRepPeriod(Integer repPeriod)
    {
        this.repPeriod = repPeriod;
    }

    public ReportingInformation sampRatio(Integer sampRatio)
    {

        this.sampRatio = sampRatio;
        return this;
    }

    /**
     * Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS
     * 23.502), expressed in percent. minimum: 1 maximum: 100
     * 
     * @return sampRatio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  ")
    @JsonProperty(JSON_PROPERTY_SAMP_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getSampRatio()
    {
        return sampRatio;
    }

    @JsonProperty(JSON_PROPERTY_SAMP_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSampRatio(Integer sampRatio)
    {
        this.sampRatio = sampRatio;
    }

    public ReportingInformation partitionCriteria(List<String> partitionCriteria)
    {

        this.partitionCriteria = partitionCriteria;
        return this;
    }

    public ReportingInformation addPartitionCriteriaItem(String partitionCriteriaItem)
    {
        if (this.partitionCriteria == null)
        {
            this.partitionCriteria = new ArrayList<>();
        }
        this.partitionCriteria.add(partitionCriteriaItem);
        return this;
    }

    /**
     * Criteria for partitioning the UEs before applying the sampling ratio.
     * 
     * @return partitionCriteria
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Criteria for partitioning the UEs before applying the sampling ratio.")
    @JsonProperty(JSON_PROPERTY_PARTITION_CRITERIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getPartitionCriteria()
    {
        return partitionCriteria;
    }

    @JsonProperty(JSON_PROPERTY_PARTITION_CRITERIA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPartitionCriteria(List<String> partitionCriteria)
    {
        this.partitionCriteria = partitionCriteria;
    }

    public ReportingInformation grpRepTime(Integer grpRepTime)
    {

        this.grpRepTime = grpRepTime;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return grpRepTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_GRP_REP_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getGrpRepTime()
    {
        return grpRepTime;
    }

    @JsonProperty(JSON_PROPERTY_GRP_REP_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGrpRepTime(Integer grpRepTime)
    {
        this.grpRepTime = grpRepTime;
    }

    public ReportingInformation notifFlag(String notifFlag)
    {

        this.notifFlag = notifFlag;
        return this;
    }

    /**
     * Possible values are: - ACTIVATE: The event notification is activated. -
     * DEACTIVATE: The event notification is deactivated and shall be muted. The
     * available event(s) shall be stored. - RETRIEVAL: The event notification shall
     * be sent to the NF service consumer(s), after that, is muted again.
     * 
     * @return notifFlag
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - ACTIVATE: The event notification is activated. - DEACTIVATE: The event notification is deactivated and shall be muted. The available    event(s) shall be stored. - RETRIEVAL: The event notification shall be sent to the NF service consumer(s),   after that, is muted again.  ")
    @JsonProperty(JSON_PROPERTY_NOTIF_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNotifFlag()
    {
        return notifFlag;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotifFlag(String notifFlag)
    {
        this.notifFlag = notifFlag;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ReportingInformation reportingInformation = (ReportingInformation) o;
        return Objects.equals(this.immRep, reportingInformation.immRep) && Objects.equals(this.notifMethod, reportingInformation.notifMethod)
               && Objects.equals(this.maxReportNbr, reportingInformation.maxReportNbr) && Objects.equals(this.monDur, reportingInformation.monDur)
               && Objects.equals(this.repPeriod, reportingInformation.repPeriod) && Objects.equals(this.sampRatio, reportingInformation.sampRatio)
               && Objects.equals(this.partitionCriteria, reportingInformation.partitionCriteria)
               && Objects.equals(this.grpRepTime, reportingInformation.grpRepTime) && Objects.equals(this.notifFlag, reportingInformation.notifFlag);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(immRep, notifMethod, maxReportNbr, monDur, repPeriod, sampRatio, partitionCriteria, grpRepTime, notifFlag);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReportingInformation {\n");
        sb.append("    immRep: ").append(toIndentedString(immRep)).append("\n");
        sb.append("    notifMethod: ").append(toIndentedString(notifMethod)).append("\n");
        sb.append("    maxReportNbr: ").append(toIndentedString(maxReportNbr)).append("\n");
        sb.append("    monDur: ").append(toIndentedString(monDur)).append("\n");
        sb.append("    repPeriod: ").append(toIndentedString(repPeriod)).append("\n");
        sb.append("    sampRatio: ").append(toIndentedString(sampRatio)).append("\n");
        sb.append("    partitionCriteria: ").append(toIndentedString(partitionCriteria)).append("\n");
        sb.append("    grpRepTime: ").append(toIndentedString(grpRepTime)).append("\n");
        sb.append("    notifFlag: ").append(toIndentedString(notifFlag)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
