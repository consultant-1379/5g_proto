/*
 * NRF NFManagement Service
 * NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Tai;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.AccessType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Information of an LMF NF Instance
 */
@ApiModel(description = "Information of an LMF NF Instance")
@JsonPropertyOrder({ LmfInfo.JSON_PROPERTY_SERVING_CLIENT_TYPES,
                     LmfInfo.JSON_PROPERTY_LMF_ID,
                     LmfInfo.JSON_PROPERTY_SERVING_ACCESS_TYPES,
                     LmfInfo.JSON_PROPERTY_SERVING_AN_NODE_TYPES,
                     LmfInfo.JSON_PROPERTY_SERVING_RAT_TYPES,
                     LmfInfo.JSON_PROPERTY_TAI_LIST,
                     LmfInfo.JSON_PROPERTY_TAI_RANGE_LIST,
                     LmfInfo.JSON_PROPERTY_SUPPORTED_G_A_D_SHAPES })
public class LmfInfo
{
    public static final String JSON_PROPERTY_SERVING_CLIENT_TYPES = "servingClientTypes";
    private List<String> servingClientTypes = null;

    public static final String JSON_PROPERTY_LMF_ID = "lmfId";
    private String lmfId;

    public static final String JSON_PROPERTY_SERVING_ACCESS_TYPES = "servingAccessTypes";
    private List<AccessType> servingAccessTypes = null;

    public static final String JSON_PROPERTY_SERVING_AN_NODE_TYPES = "servingAnNodeTypes";
    private List<String> servingAnNodeTypes = null;

    public static final String JSON_PROPERTY_SERVING_RAT_TYPES = "servingRatTypes";
    private List<String> servingRatTypes = null;

    public static final String JSON_PROPERTY_TAI_LIST = "taiList";
    private List<Tai> taiList = null;

    public static final String JSON_PROPERTY_TAI_RANGE_LIST = "taiRangeList";
    private List<TaiRange> taiRangeList = null;

    public static final String JSON_PROPERTY_SUPPORTED_G_A_D_SHAPES = "supportedGADShapes";
    private List<String> supportedGADShapes = null;

    public LmfInfo()
    {
    }

    public LmfInfo servingClientTypes(List<String> servingClientTypes)
    {

        this.servingClientTypes = servingClientTypes;
        return this;
    }

    public LmfInfo addServingClientTypesItem(String servingClientTypesItem)
    {
        if (this.servingClientTypes == null)
        {
            this.servingClientTypes = new ArrayList<>();
        }
        this.servingClientTypes.add(servingClientTypesItem);
        return this;
    }

    /**
     * Get servingClientTypes
     * 
     * @return servingClientTypes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SERVING_CLIENT_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getServingClientTypes()
    {
        return servingClientTypes;
    }

    @JsonProperty(JSON_PROPERTY_SERVING_CLIENT_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServingClientTypes(List<String> servingClientTypes)
    {
        this.servingClientTypes = servingClientTypes;
    }

    public LmfInfo lmfId(String lmfId)
    {

        this.lmfId = lmfId;
        return this;
    }

    /**
     * LMF identification.
     * 
     * @return lmfId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "LMF identification.")
    @JsonProperty(JSON_PROPERTY_LMF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getLmfId()
    {
        return lmfId;
    }

    @JsonProperty(JSON_PROPERTY_LMF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLmfId(String lmfId)
    {
        this.lmfId = lmfId;
    }

    public LmfInfo servingAccessTypes(List<AccessType> servingAccessTypes)
    {

        this.servingAccessTypes = servingAccessTypes;
        return this;
    }

    public LmfInfo addServingAccessTypesItem(AccessType servingAccessTypesItem)
    {
        if (this.servingAccessTypes == null)
        {
            this.servingAccessTypes = new ArrayList<>();
        }
        this.servingAccessTypes.add(servingAccessTypesItem);
        return this;
    }

    /**
     * Get servingAccessTypes
     * 
     * @return servingAccessTypes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SERVING_ACCESS_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<AccessType> getServingAccessTypes()
    {
        return servingAccessTypes;
    }

    @JsonProperty(JSON_PROPERTY_SERVING_ACCESS_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServingAccessTypes(List<AccessType> servingAccessTypes)
    {
        this.servingAccessTypes = servingAccessTypes;
    }

    public LmfInfo servingAnNodeTypes(List<String> servingAnNodeTypes)
    {

        this.servingAnNodeTypes = servingAnNodeTypes;
        return this;
    }

    public LmfInfo addServingAnNodeTypesItem(String servingAnNodeTypesItem)
    {
        if (this.servingAnNodeTypes == null)
        {
            this.servingAnNodeTypes = new ArrayList<>();
        }
        this.servingAnNodeTypes.add(servingAnNodeTypesItem);
        return this;
    }

    /**
     * Get servingAnNodeTypes
     * 
     * @return servingAnNodeTypes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SERVING_AN_NODE_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getServingAnNodeTypes()
    {
        return servingAnNodeTypes;
    }

    @JsonProperty(JSON_PROPERTY_SERVING_AN_NODE_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServingAnNodeTypes(List<String> servingAnNodeTypes)
    {
        this.servingAnNodeTypes = servingAnNodeTypes;
    }

    public LmfInfo servingRatTypes(List<String> servingRatTypes)
    {

        this.servingRatTypes = servingRatTypes;
        return this;
    }

    public LmfInfo addServingRatTypesItem(String servingRatTypesItem)
    {
        if (this.servingRatTypes == null)
        {
            this.servingRatTypes = new ArrayList<>();
        }
        this.servingRatTypes.add(servingRatTypesItem);
        return this;
    }

    /**
     * Get servingRatTypes
     * 
     * @return servingRatTypes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SERVING_RAT_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getServingRatTypes()
    {
        return servingRatTypes;
    }

    @JsonProperty(JSON_PROPERTY_SERVING_RAT_TYPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServingRatTypes(List<String> servingRatTypes)
    {
        this.servingRatTypes = servingRatTypes;
    }

    public LmfInfo taiList(List<Tai> taiList)
    {

        this.taiList = taiList;
        return this;
    }

    public LmfInfo addTaiListItem(Tai taiListItem)
    {
        if (this.taiList == null)
        {
            this.taiList = new ArrayList<>();
        }
        this.taiList.add(taiListItem);
        return this;
    }

    /**
     * Get taiList
     * 
     * @return taiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TAI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Tai> getTaiList()
    {
        return taiList;
    }

    @JsonProperty(JSON_PROPERTY_TAI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTaiList(List<Tai> taiList)
    {
        this.taiList = taiList;
    }

    public LmfInfo taiRangeList(List<TaiRange> taiRangeList)
    {

        this.taiRangeList = taiRangeList;
        return this;
    }

    public LmfInfo addTaiRangeListItem(TaiRange taiRangeListItem)
    {
        if (this.taiRangeList == null)
        {
            this.taiRangeList = new ArrayList<>();
        }
        this.taiRangeList.add(taiRangeListItem);
        return this;
    }

    /**
     * Get taiRangeList
     * 
     * @return taiRangeList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TAI_RANGE_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<TaiRange> getTaiRangeList()
    {
        return taiRangeList;
    }

    @JsonProperty(JSON_PROPERTY_TAI_RANGE_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTaiRangeList(List<TaiRange> taiRangeList)
    {
        this.taiRangeList = taiRangeList;
    }

    public LmfInfo supportedGADShapes(List<String> supportedGADShapes)
    {

        this.supportedGADShapes = supportedGADShapes;
        return this;
    }

    public LmfInfo addSupportedGADShapesItem(String supportedGADShapesItem)
    {
        if (this.supportedGADShapes == null)
        {
            this.supportedGADShapes = new ArrayList<>();
        }
        this.supportedGADShapes.add(supportedGADShapesItem);
        return this;
    }

    /**
     * Get supportedGADShapes
     * 
     * @return supportedGADShapes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SUPPORTED_G_A_D_SHAPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getSupportedGADShapes()
    {
        return supportedGADShapes;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_G_A_D_SHAPES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupportedGADShapes(List<String> supportedGADShapes)
    {
        this.supportedGADShapes = supportedGADShapes;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        LmfInfo lmfInfo = (LmfInfo) o;
        return Objects.equals(this.servingClientTypes, lmfInfo.servingClientTypes) && Objects.equals(this.lmfId, lmfInfo.lmfId)
               && Objects.equals(this.servingAccessTypes, lmfInfo.servingAccessTypes) && Objects.equals(this.servingAnNodeTypes, lmfInfo.servingAnNodeTypes)
               && Objects.equals(this.servingRatTypes, lmfInfo.servingRatTypes) && Objects.equals(this.taiList, lmfInfo.taiList)
               && Objects.equals(this.taiRangeList, lmfInfo.taiRangeList) && Objects.equals(this.supportedGADShapes, lmfInfo.supportedGADShapes);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(servingClientTypes, lmfId, servingAccessTypes, servingAnNodeTypes, servingRatTypes, taiList, taiRangeList, supportedGADShapes);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class LmfInfo {\n");
        sb.append("    servingClientTypes: ").append(toIndentedString(servingClientTypes)).append("\n");
        sb.append("    lmfId: ").append(toIndentedString(lmfId)).append("\n");
        sb.append("    servingAccessTypes: ").append(toIndentedString(servingAccessTypes)).append("\n");
        sb.append("    servingAnNodeTypes: ").append(toIndentedString(servingAnNodeTypes)).append("\n");
        sb.append("    servingRatTypes: ").append(toIndentedString(servingRatTypes)).append("\n");
        sb.append("    taiList: ").append(toIndentedString(taiList)).append("\n");
        sb.append("    taiRangeList: ").append(toIndentedString(taiRangeList)).append("\n");
        sb.append("    supportedGADShapes: ").append(toIndentedString(supportedGADShapes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
