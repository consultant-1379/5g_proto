/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains parameters that describe and identify the TSC user plane node.
 */
@ApiModel(description = "Contains parameters that describe and identify the TSC user plane node.")
@JsonPropertyOrder({ TsnBridgeInfo.JSON_PROPERTY_BRIDGE_ID,
                     TsnBridgeInfo.JSON_PROPERTY_DSTT_ADDR,
                     TsnBridgeInfo.JSON_PROPERTY_DSTT_PORT_NUM,
                     TsnBridgeInfo.JSON_PROPERTY_DSTT_RESID_TIME })
public class TsnBridgeInfo
{
    public static final String JSON_PROPERTY_BRIDGE_ID = "bridgeId";
    private Integer bridgeId;

    public static final String JSON_PROPERTY_DSTT_ADDR = "dsttAddr";
    private String dsttAddr;

    public static final String JSON_PROPERTY_DSTT_PORT_NUM = "dsttPortNum";
    private Integer dsttPortNum;

    public static final String JSON_PROPERTY_DSTT_RESID_TIME = "dsttResidTime";
    private Integer dsttResidTime;

    public TsnBridgeInfo()
    {
    }

    public TsnBridgeInfo bridgeId(Integer bridgeId)
    {

        this.bridgeId = bridgeId;
        return this;
    }

    /**
     * Integer where the allowed values correspond to the value range of an unsigned
     * 64-bit integer. minimum: 0 maximum: -1
     * 
     * @return bridgeId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Integer where the allowed values correspond to the value range of an unsigned 64-bit integer. ")
    @JsonProperty(JSON_PROPERTY_BRIDGE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getBridgeId()
    {
        return bridgeId;
    }

    @JsonProperty(JSON_PROPERTY_BRIDGE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBridgeId(Integer bridgeId)
    {
        this.bridgeId = bridgeId;
    }

    public TsnBridgeInfo dsttAddr(String dsttAddr)
    {

        this.dsttAddr = dsttAddr;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return dsttAddr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_DSTT_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDsttAddr()
    {
        return dsttAddr;
    }

    @JsonProperty(JSON_PROPERTY_DSTT_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDsttAddr(String dsttAddr)
    {
        this.dsttAddr = dsttAddr;
    }

    public TsnBridgeInfo dsttPortNum(Integer dsttPortNum)
    {

        this.dsttPortNum = dsttPortNum;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return dsttPortNum
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_DSTT_PORT_NUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getDsttPortNum()
    {
        return dsttPortNum;
    }

    @JsonProperty(JSON_PROPERTY_DSTT_PORT_NUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDsttPortNum(Integer dsttPortNum)
    {
        this.dsttPortNum = dsttPortNum;
    }

    public TsnBridgeInfo dsttResidTime(Integer dsttResidTime)
    {

        this.dsttResidTime = dsttResidTime;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return dsttResidTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_DSTT_RESID_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getDsttResidTime()
    {
        return dsttResidTime;
    }

    @JsonProperty(JSON_PROPERTY_DSTT_RESID_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDsttResidTime(Integer dsttResidTime)
    {
        this.dsttResidTime = dsttResidTime;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TsnBridgeInfo tsnBridgeInfo = (TsnBridgeInfo) o;
        return Objects.equals(this.bridgeId, tsnBridgeInfo.bridgeId) && Objects.equals(this.dsttAddr, tsnBridgeInfo.dsttAddr)
               && Objects.equals(this.dsttPortNum, tsnBridgeInfo.dsttPortNum) && Objects.equals(this.dsttResidTime, tsnBridgeInfo.dsttResidTime);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(bridgeId, dsttAddr, dsttPortNum, dsttResidTime);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TsnBridgeInfo {\n");
        sb.append("    bridgeId: ").append(toIndentedString(bridgeId)).append("\n");
        sb.append("    dsttAddr: ").append(toIndentedString(dsttAddr)).append("\n");
        sb.append("    dsttPortNum: ").append(toIndentedString(dsttPortNum)).append("\n");
        sb.append("    dsttResidTime: ").append(toIndentedString(dsttResidTime)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
