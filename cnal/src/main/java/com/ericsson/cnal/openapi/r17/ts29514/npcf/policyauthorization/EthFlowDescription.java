/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Identifies an Ethernet flow.
 */
@ApiModel(description = "Identifies an Ethernet flow.")
@JsonPropertyOrder({ EthFlowDescription.JSON_PROPERTY_DEST_MAC_ADDR,
                     EthFlowDescription.JSON_PROPERTY_ETH_TYPE,
                     EthFlowDescription.JSON_PROPERTY_F_DESC,
                     EthFlowDescription.JSON_PROPERTY_F_DIR,
                     EthFlowDescription.JSON_PROPERTY_SOURCE_MAC_ADDR,
                     EthFlowDescription.JSON_PROPERTY_VLAN_TAGS,
                     EthFlowDescription.JSON_PROPERTY_SRC_MAC_ADDR_END,
                     EthFlowDescription.JSON_PROPERTY_DEST_MAC_ADDR_END })
public class EthFlowDescription
{
    public static final String JSON_PROPERTY_DEST_MAC_ADDR = "destMacAddr";
    private String destMacAddr;

    public static final String JSON_PROPERTY_ETH_TYPE = "ethType";
    private String ethType;

    public static final String JSON_PROPERTY_F_DESC = "fDesc";
    private String fDesc;

    public static final String JSON_PROPERTY_F_DIR = "fDir";
    private String fDir;

    public static final String JSON_PROPERTY_SOURCE_MAC_ADDR = "sourceMacAddr";
    private String sourceMacAddr;

    public static final String JSON_PROPERTY_VLAN_TAGS = "vlanTags";
    private List<String> vlanTags = null;

    public static final String JSON_PROPERTY_SRC_MAC_ADDR_END = "srcMacAddrEnd";
    private String srcMacAddrEnd;

    public static final String JSON_PROPERTY_DEST_MAC_ADDR_END = "destMacAddrEnd";
    private String destMacAddrEnd;

    public EthFlowDescription()
    {
    }

    public EthFlowDescription destMacAddr(String destMacAddr)
    {

        this.destMacAddr = destMacAddr;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return destMacAddr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_DEST_MAC_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDestMacAddr()
    {
        return destMacAddr;
    }

    @JsonProperty(JSON_PROPERTY_DEST_MAC_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDestMacAddr(String destMacAddr)
    {
        this.destMacAddr = destMacAddr;
    }

    public EthFlowDescription ethType(String ethType)
    {

        this.ethType = ethType;
        return this;
    }

    /**
     * Get ethType
     * 
     * @return ethType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_ETH_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getEthType()
    {
        return ethType;
    }

    @JsonProperty(JSON_PROPERTY_ETH_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEthType(String ethType)
    {
        this.ethType = ethType;
    }

    public EthFlowDescription fDesc(String fDesc)
    {

        this.fDesc = fDesc;
        return this;
    }

    /**
     * Defines a packet filter of an IP flow.
     * 
     * @return fDesc
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Defines a packet filter of an IP flow.")
    @JsonProperty(JSON_PROPERTY_F_DESC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getfDesc()
    {
        return fDesc;
    }

    @JsonProperty(JSON_PROPERTY_F_DESC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setfDesc(String fDesc)
    {
        this.fDesc = fDesc;
    }

    public EthFlowDescription fDir(String fDir)
    {

        this.fDir = fDir;
        return this;
    }

    /**
     * Possible values are - DOWNLINK: The corresponding filter applies for traffic
     * to the UE. - UPLINK: The corresponding filter applies for traffic from the
     * UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and
     * from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to
     * the UE (downlink), but has no specific direction declared. The service data
     * flow detection shall apply the filter for uplink traffic as if the filter was
     * bidirectional. The PCF shall not use the value UNSPECIFIED in filters created
     * by the network in NW-initiated procedures. The PCF shall only include the
     * value UNSPECIFIED in filters in UE-initiated procedures if the same value is
     * received from the SMF.
     * 
     * @return fDir
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are - DOWNLINK: The corresponding filter applies for traffic to the UE. - UPLINK: The corresponding filter applies for traffic from the UE. - BIDIRECTIONAL: The corresponding filter applies for traffic both to and from the UE. - UNSPECIFIED: The corresponding filter applies for traffic to the UE (downlink), but has no specific direction declared. The service data flow detection shall apply the filter for uplink traffic as if the filter was bidirectional. The PCF shall not use the value UNSPECIFIED in filters created by the network in NW-initiated procedures. The PCF shall only include the value UNSPECIFIED in filters in UE-initiated procedures if the same value is received from the SMF. ")
    @JsonProperty(JSON_PROPERTY_F_DIR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getfDir()
    {
        return fDir;
    }

    @JsonProperty(JSON_PROPERTY_F_DIR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setfDir(String fDir)
    {
        this.fDir = fDir;
    }

    public EthFlowDescription sourceMacAddr(String sourceMacAddr)
    {

        this.sourceMacAddr = sourceMacAddr;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return sourceMacAddr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_SOURCE_MAC_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSourceMacAddr()
    {
        return sourceMacAddr;
    }

    @JsonProperty(JSON_PROPERTY_SOURCE_MAC_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSourceMacAddr(String sourceMacAddr)
    {
        this.sourceMacAddr = sourceMacAddr;
    }

    public EthFlowDescription vlanTags(List<String> vlanTags)
    {

        this.vlanTags = vlanTags;
        return this;
    }

    public EthFlowDescription addVlanTagsItem(String vlanTagsItem)
    {
        if (this.vlanTags == null)
        {
            this.vlanTags = new ArrayList<>();
        }
        this.vlanTags.add(vlanTagsItem);
        return this;
    }

    /**
     * Get vlanTags
     * 
     * @return vlanTags
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_VLAN_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getVlanTags()
    {
        return vlanTags;
    }

    @JsonProperty(JSON_PROPERTY_VLAN_TAGS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVlanTags(List<String> vlanTags)
    {
        this.vlanTags = vlanTags;
    }

    public EthFlowDescription srcMacAddrEnd(String srcMacAddrEnd)
    {

        this.srcMacAddrEnd = srcMacAddrEnd;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return srcMacAddrEnd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_SRC_MAC_ADDR_END)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSrcMacAddrEnd()
    {
        return srcMacAddrEnd;
    }

    @JsonProperty(JSON_PROPERTY_SRC_MAC_ADDR_END)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSrcMacAddrEnd(String srcMacAddrEnd)
    {
        this.srcMacAddrEnd = srcMacAddrEnd;
    }

    public EthFlowDescription destMacAddrEnd(String destMacAddrEnd)
    {

        this.destMacAddrEnd = destMacAddrEnd;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return destMacAddrEnd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_DEST_MAC_ADDR_END)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDestMacAddrEnd()
    {
        return destMacAddrEnd;
    }

    @JsonProperty(JSON_PROPERTY_DEST_MAC_ADDR_END)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDestMacAddrEnd(String destMacAddrEnd)
    {
        this.destMacAddrEnd = destMacAddrEnd;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        EthFlowDescription ethFlowDescription = (EthFlowDescription) o;
        return Objects.equals(this.destMacAddr, ethFlowDescription.destMacAddr) && Objects.equals(this.ethType, ethFlowDescription.ethType)
               && Objects.equals(this.fDesc, ethFlowDescription.fDesc) && Objects.equals(this.fDir, ethFlowDescription.fDir)
               && Objects.equals(this.sourceMacAddr, ethFlowDescription.sourceMacAddr) && Objects.equals(this.vlanTags, ethFlowDescription.vlanTags)
               && Objects.equals(this.srcMacAddrEnd, ethFlowDescription.srcMacAddrEnd)
               && Objects.equals(this.destMacAddrEnd, ethFlowDescription.destMacAddrEnd);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(destMacAddr, ethType, fDesc, fDir, sourceMacAddr, vlanTags, srcMacAddrEnd, destMacAddrEnd);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class EthFlowDescription {\n");
        sb.append("    destMacAddr: ").append(toIndentedString(destMacAddr)).append("\n");
        sb.append("    ethType: ").append(toIndentedString(ethType)).append("\n");
        sb.append("    fDesc: ").append(toIndentedString(fDesc)).append("\n");
        sb.append("    fDir: ").append(toIndentedString(fDir)).append("\n");
        sb.append("    sourceMacAddr: ").append(toIndentedString(sourceMacAddr)).append("\n");
        sb.append("    vlanTags: ").append(toIndentedString(vlanTags)).append("\n");
        sb.append("    srcMacAddrEnd: ").append(toIndentedString(srcMacAddrEnd)).append("\n");
        sb.append("    destMacAddrEnd: ").append(toIndentedString(destMacAddrEnd)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
