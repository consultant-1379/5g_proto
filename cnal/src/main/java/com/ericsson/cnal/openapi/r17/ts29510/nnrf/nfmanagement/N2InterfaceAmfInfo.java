/*
 * NRF NFManagement Service
 * NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AMF N2 interface information
 */
@ApiModel(description = "AMF N2 interface information")
@JsonPropertyOrder({ N2InterfaceAmfInfo.JSON_PROPERTY_IPV4_ENDPOINT_ADDRESS,
                     N2InterfaceAmfInfo.JSON_PROPERTY_IPV6_ENDPOINT_ADDRESS,
                     N2InterfaceAmfInfo.JSON_PROPERTY_AMF_NAME })
public class N2InterfaceAmfInfo
{
    public static final String JSON_PROPERTY_IPV4_ENDPOINT_ADDRESS = "ipv4EndpointAddress";
    private List<String> ipv4EndpointAddress = null;

    public static final String JSON_PROPERTY_IPV6_ENDPOINT_ADDRESS = "ipv6EndpointAddress";
    private List<String> ipv6EndpointAddress = null;

    public static final String JSON_PROPERTY_AMF_NAME = "amfName";
    private String amfName;

    public N2InterfaceAmfInfo()
    {
    }

    public N2InterfaceAmfInfo ipv4EndpointAddress(List<String> ipv4EndpointAddress)
    {

        this.ipv4EndpointAddress = ipv4EndpointAddress;
        return this;
    }

    public N2InterfaceAmfInfo addIpv4EndpointAddressItem(String ipv4EndpointAddressItem)
    {
        if (this.ipv4EndpointAddress == null)
        {
            this.ipv4EndpointAddress = new ArrayList<>();
        }
        this.ipv4EndpointAddress.add(ipv4EndpointAddressItem);
        return this;
    }

    /**
     * Get ipv4EndpointAddress
     * 
     * @return ipv4EndpointAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IPV4_ENDPOINT_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getIpv4EndpointAddress()
    {
        return ipv4EndpointAddress;
    }

    @JsonProperty(JSON_PROPERTY_IPV4_ENDPOINT_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv4EndpointAddress(List<String> ipv4EndpointAddress)
    {
        this.ipv4EndpointAddress = ipv4EndpointAddress;
    }

    public N2InterfaceAmfInfo ipv6EndpointAddress(List<String> ipv6EndpointAddress)
    {

        this.ipv6EndpointAddress = ipv6EndpointAddress;
        return this;
    }

    public N2InterfaceAmfInfo addIpv6EndpointAddressItem(String ipv6EndpointAddressItem)
    {
        if (this.ipv6EndpointAddress == null)
        {
            this.ipv6EndpointAddress = new ArrayList<>();
        }
        this.ipv6EndpointAddress.add(ipv6EndpointAddressItem);
        return this;
    }

    /**
     * Get ipv6EndpointAddress
     * 
     * @return ipv6EndpointAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IPV6_ENDPOINT_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getIpv6EndpointAddress()
    {
        return ipv6EndpointAddress;
    }

    @JsonProperty(JSON_PROPERTY_IPV6_ENDPOINT_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv6EndpointAddress(List<String> ipv6EndpointAddress)
    {
        this.ipv6EndpointAddress = ipv6EndpointAddress;
    }

    public N2InterfaceAmfInfo amfName(String amfName)
    {

        this.amfName = amfName;
        return this;
    }

    /**
     * Fully Qualified Domain Name
     * 
     * @return amfName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Fully Qualified Domain Name")
    @JsonProperty(JSON_PROPERTY_AMF_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAmfName()
    {
        return amfName;
    }

    @JsonProperty(JSON_PROPERTY_AMF_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmfName(String amfName)
    {
        this.amfName = amfName;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        N2InterfaceAmfInfo n2InterfaceAmfInfo = (N2InterfaceAmfInfo) o;
        return Objects.equals(this.ipv4EndpointAddress, n2InterfaceAmfInfo.ipv4EndpointAddress)
               && Objects.equals(this.ipv6EndpointAddress, n2InterfaceAmfInfo.ipv6EndpointAddress) && Objects.equals(this.amfName, n2InterfaceAmfInfo.amfName);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ipv4EndpointAddress, ipv6EndpointAddress, amfName);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class N2InterfaceAmfInfo {\n");
        sb.append("    ipv4EndpointAddress: ").append(toIndentedString(ipv4EndpointAddress)).append("\n");
        sb.append("    ipv6EndpointAddress: ").append(toIndentedString(ipv6EndpointAddress)).append("\n");
        sb.append("    amfName: ").append(toIndentedString(amfName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
