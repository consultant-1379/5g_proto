/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol.BridgeManagementContainer;
import com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol.PortManagementContainer;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Identifies the modifications to the \&quot;ascReqData\&quot; property of an
 * Individual Application Session Context which may include the modifications to
 * the sub-resource Events Subscription.
 */
@ApiModel(description = "Identifies the modifications to the \"ascReqData\" property of an Individual Application Session Context which may include the modifications to the sub-resource Events Subscription. ")
@JsonPropertyOrder({ AppSessionContextUpdateData.JSON_PROPERTY_AF_APP_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_AF_ROUT_REQ,
                     AppSessionContextUpdateData.JSON_PROPERTY_ASP_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_BDT_REF_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_EV_SUBSC,
                     AppSessionContextUpdateData.JSON_PROPERTY_MCPTT_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_MC_VIDEO_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_MED_COMPONENTS,
                     AppSessionContextUpdateData.JSON_PROPERTY_MPS_ACTION,
                     AppSessionContextUpdateData.JSON_PROPERTY_MPS_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_MCS_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_PREEMPT_CONTROL_INFO,
                     AppSessionContextUpdateData.JSON_PROPERTY_RES_PRIO,
                     AppSessionContextUpdateData.JSON_PROPERTY_SERV_INF_STATUS,
                     AppSessionContextUpdateData.JSON_PROPERTY_SIP_FORK_IND,
                     AppSessionContextUpdateData.JSON_PROPERTY_SPON_ID,
                     AppSessionContextUpdateData.JSON_PROPERTY_SPON_STATUS,
                     AppSessionContextUpdateData.JSON_PROPERTY_TSN_BRIDGE_MAN_CONT,
                     AppSessionContextUpdateData.JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT,
                     AppSessionContextUpdateData.JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS })
public class AppSessionContextUpdateData
{
    public static final String JSON_PROPERTY_AF_APP_ID = "afAppId";
    private String afAppId;

    public static final String JSON_PROPERTY_AF_ROUT_REQ = "afRoutReq";
    private JsonNullable<AfRoutingRequirementRm> afRoutReq = JsonNullable.<AfRoutingRequirementRm>undefined();

    public static final String JSON_PROPERTY_ASP_ID = "aspId";
    private String aspId;

    public static final String JSON_PROPERTY_BDT_REF_ID = "bdtRefId";
    private String bdtRefId;

    public static final String JSON_PROPERTY_EV_SUBSC = "evSubsc";
    private JsonNullable<EventsSubscReqDataRm> evSubsc = JsonNullable.<EventsSubscReqDataRm>undefined();

    public static final String JSON_PROPERTY_MCPTT_ID = "mcpttId";
    private String mcpttId;

    public static final String JSON_PROPERTY_MC_VIDEO_ID = "mcVideoId";
    private String mcVideoId;

    public static final String JSON_PROPERTY_MED_COMPONENTS = "medComponents";
    private Map<String, MediaComponentRm> medComponents = null;

    public static final String JSON_PROPERTY_MPS_ACTION = "mpsAction";
    private String mpsAction;

    public static final String JSON_PROPERTY_MPS_ID = "mpsId";
    private String mpsId;

    public static final String JSON_PROPERTY_MCS_ID = "mcsId";
    private String mcsId;

    public static final String JSON_PROPERTY_PREEMPT_CONTROL_INFO = "preemptControlInfo";
    private Object preemptControlInfo;

    public static final String JSON_PROPERTY_RES_PRIO = "resPrio";
    private String resPrio;

    public static final String JSON_PROPERTY_SERV_INF_STATUS = "servInfStatus";
    private String servInfStatus;

    public static final String JSON_PROPERTY_SIP_FORK_IND = "sipForkInd";
    private String sipForkInd;

    public static final String JSON_PROPERTY_SPON_ID = "sponId";
    private String sponId;

    public static final String JSON_PROPERTY_SPON_STATUS = "sponStatus";
    private String sponStatus;

    public static final String JSON_PROPERTY_TSN_BRIDGE_MAN_CONT = "tsnBridgeManCont";
    private BridgeManagementContainer tsnBridgeManCont;

    public static final String JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT = "tsnPortManContDstt";
    private PortManagementContainer tsnPortManContDstt;

    public static final String JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS = "tsnPortManContNwtts";
    private List<PortManagementContainer> tsnPortManContNwtts = null;

    public AppSessionContextUpdateData()
    {
    }

    public AppSessionContextUpdateData afAppId(String afAppId)
    {

        this.afAppId = afAppId;
        return this;
    }

    /**
     * Contains an AF application identifier.
     * 
     * @return afAppId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains an AF application identifier.")
    @JsonProperty(JSON_PROPERTY_AF_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAfAppId()
    {
        return afAppId;
    }

    @JsonProperty(JSON_PROPERTY_AF_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAfAppId(String afAppId)
    {
        this.afAppId = afAppId;
    }

    public AppSessionContextUpdateData afRoutReq(AfRoutingRequirementRm afRoutReq)
    {
        this.afRoutReq = JsonNullable.<AfRoutingRequirementRm>of(afRoutReq);

        return this;
    }

    /**
     * Get afRoutReq
     * 
     * @return afRoutReq
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public AfRoutingRequirementRm getAfRoutReq()
    {
        return afRoutReq.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_AF_ROUT_REQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<AfRoutingRequirementRm> getAfRoutReq_JsonNullable()
    {
        return afRoutReq;
    }

    @JsonProperty(JSON_PROPERTY_AF_ROUT_REQ)
    public void setAfRoutReq_JsonNullable(JsonNullable<AfRoutingRequirementRm> afRoutReq)
    {
        this.afRoutReq = afRoutReq;
    }

    public void setAfRoutReq(AfRoutingRequirementRm afRoutReq)
    {
        this.afRoutReq = JsonNullable.<AfRoutingRequirementRm>of(afRoutReq);
    }

    public AppSessionContextUpdateData aspId(String aspId)
    {

        this.aspId = aspId;
        return this;
    }

    /**
     * Contains an identity of an application service provider.
     * 
     * @return aspId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains an identity of an application service provider.")
    @JsonProperty(JSON_PROPERTY_ASP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAspId()
    {
        return aspId;
    }

    @JsonProperty(JSON_PROPERTY_ASP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAspId(String aspId)
    {
        this.aspId = aspId;
    }

    public AppSessionContextUpdateData bdtRefId(String bdtRefId)
    {

        this.bdtRefId = bdtRefId;
        return this;
    }

    /**
     * string identifying a BDT Reference ID as defined in clause 5.3.3 of 3GPP TS
     * 29.154.
     * 
     * @return bdtRefId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string identifying a BDT Reference ID as defined in clause 5.3.3 of 3GPP TS 29.154.")
    @JsonProperty(JSON_PROPERTY_BDT_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getBdtRefId()
    {
        return bdtRefId;
    }

    @JsonProperty(JSON_PROPERTY_BDT_REF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBdtRefId(String bdtRefId)
    {
        this.bdtRefId = bdtRefId;
    }

    public AppSessionContextUpdateData evSubsc(EventsSubscReqDataRm evSubsc)
    {
        this.evSubsc = JsonNullable.<EventsSubscReqDataRm>of(evSubsc);

        return this;
    }

    /**
     * Get evSubsc
     * 
     * @return evSubsc
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public EventsSubscReqDataRm getEvSubsc()
    {
        return evSubsc.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_EV_SUBSC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<EventsSubscReqDataRm> getEvSubsc_JsonNullable()
    {
        return evSubsc;
    }

    @JsonProperty(JSON_PROPERTY_EV_SUBSC)
    public void setEvSubsc_JsonNullable(JsonNullable<EventsSubscReqDataRm> evSubsc)
    {
        this.evSubsc = evSubsc;
    }

    public void setEvSubsc(EventsSubscReqDataRm evSubsc)
    {
        this.evSubsc = JsonNullable.<EventsSubscReqDataRm>of(evSubsc);
    }

    public AppSessionContextUpdateData mcpttId(String mcpttId)
    {

        this.mcpttId = mcpttId;
        return this;
    }

    /**
     * Indication of MCPTT service request.
     * 
     * @return mcpttId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indication of MCPTT service request.")
    @JsonProperty(JSON_PROPERTY_MCPTT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMcpttId()
    {
        return mcpttId;
    }

    @JsonProperty(JSON_PROPERTY_MCPTT_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMcpttId(String mcpttId)
    {
        this.mcpttId = mcpttId;
    }

    public AppSessionContextUpdateData mcVideoId(String mcVideoId)
    {

        this.mcVideoId = mcVideoId;
        return this;
    }

    /**
     * Indication of modification of MCVideo service.
     * 
     * @return mcVideoId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indication of modification of MCVideo service.")
    @JsonProperty(JSON_PROPERTY_MC_VIDEO_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMcVideoId()
    {
        return mcVideoId;
    }

    @JsonProperty(JSON_PROPERTY_MC_VIDEO_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMcVideoId(String mcVideoId)
    {
        this.mcVideoId = mcVideoId;
    }

    public AppSessionContextUpdateData medComponents(Map<String, MediaComponentRm> medComponents)
    {

        this.medComponents = medComponents;
        return this;
    }

    public AppSessionContextUpdateData putMedComponentsItem(String key,
                                                            MediaComponentRm medComponentsItem)
    {
        if (this.medComponents == null)
        {
            this.medComponents = new HashMap<>();
        }
        this.medComponents.put(key, medComponentsItem);
        return this;
    }

    /**
     * Contains media component information. The key of the map is the medCompN
     * attribute.
     * 
     * @return medComponents
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains media component information. The key of the map is the medCompN attribute.")
    @JsonProperty(JSON_PROPERTY_MED_COMPONENTS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, MediaComponentRm> getMedComponents()
    {
        return medComponents;
    }

    @JsonProperty(JSON_PROPERTY_MED_COMPONENTS)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
    public void setMedComponents(Map<String, MediaComponentRm> medComponents)
    {
        this.medComponents = medComponents;
    }

    public AppSessionContextUpdateData mpsAction(String mpsAction)
    {

        this.mpsAction = mpsAction;
        return this;
    }

    /**
     * Indicates whether it is an invocation, a revocation or an invocation with
     * authorization of the MPS for DTS service.
     * 
     * @return mpsAction
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether it is an invocation, a revocation or an invocation with authorization of the MPS for DTS service.")
    @JsonProperty(JSON_PROPERTY_MPS_ACTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMpsAction()
    {
        return mpsAction;
    }

    @JsonProperty(JSON_PROPERTY_MPS_ACTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMpsAction(String mpsAction)
    {
        this.mpsAction = mpsAction;
    }

    public AppSessionContextUpdateData mpsId(String mpsId)
    {

        this.mpsId = mpsId;
        return this;
    }

    /**
     * Indication of MPS service request.
     * 
     * @return mpsId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indication of MPS service request.")
    @JsonProperty(JSON_PROPERTY_MPS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMpsId()
    {
        return mpsId;
    }

    @JsonProperty(JSON_PROPERTY_MPS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMpsId(String mpsId)
    {
        this.mpsId = mpsId;
    }

    public AppSessionContextUpdateData mcsId(String mcsId)
    {

        this.mcsId = mcsId;
        return this;
    }

    /**
     * Indication of MCS service request.
     * 
     * @return mcsId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indication of MCS service request.")
    @JsonProperty(JSON_PROPERTY_MCS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMcsId()
    {
        return mcsId;
    }

    @JsonProperty(JSON_PROPERTY_MCS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMcsId(String mcsId)
    {
        this.mcsId = mcsId;
    }

    public AppSessionContextUpdateData preemptControlInfo(Object preemptControlInfo)
    {

        this.preemptControlInfo = preemptControlInfo;
        return this;
    }

    /**
     * Get preemptControlInfo
     * 
     * @return preemptControlInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_PREEMPT_CONTROL_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getPreemptControlInfo()
    {
        return preemptControlInfo;
    }

    @JsonProperty(JSON_PROPERTY_PREEMPT_CONTROL_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPreemptControlInfo(Object preemptControlInfo)
    {
        this.preemptControlInfo = preemptControlInfo;
    }

    public AppSessionContextUpdateData resPrio(String resPrio)
    {

        this.resPrio = resPrio;
        return this;
    }

    /**
     * Indicates the reservation priority.
     * 
     * @return resPrio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the reservation priority.")
    @JsonProperty(JSON_PROPERTY_RES_PRIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getResPrio()
    {
        return resPrio;
    }

    @JsonProperty(JSON_PROPERTY_RES_PRIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResPrio(String resPrio)
    {
        this.resPrio = resPrio;
    }

    public AppSessionContextUpdateData servInfStatus(String servInfStatus)
    {

        this.servInfStatus = servInfStatus;
        return this;
    }

    /**
     * Represents the preliminary or final service information status.
     * 
     * @return servInfStatus
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Represents the preliminary or final service information status.")
    @JsonProperty(JSON_PROPERTY_SERV_INF_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getServInfStatus()
    {
        return servInfStatus;
    }

    @JsonProperty(JSON_PROPERTY_SERV_INF_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServInfStatus(String servInfStatus)
    {
        this.servInfStatus = servInfStatus;
    }

    public AppSessionContextUpdateData sipForkInd(String sipForkInd)
    {

        this.sipForkInd = sipForkInd;
        return this;
    }

    /**
     * Indicates whether several SIP dialogues are related to an \&quot;Individual
     * Application Session Context\&quot; resource.
     * 
     * @return sipForkInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether several SIP dialogues are related to an \"Individual Application Session Context\" resource.")
    @JsonProperty(JSON_PROPERTY_SIP_FORK_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSipForkInd()
    {
        return sipForkInd;
    }

    @JsonProperty(JSON_PROPERTY_SIP_FORK_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSipForkInd(String sipForkInd)
    {
        this.sipForkInd = sipForkInd;
    }

    public AppSessionContextUpdateData sponId(String sponId)
    {

        this.sponId = sponId;
        return this;
    }

    /**
     * Contains an identity of a sponsor.
     * 
     * @return sponId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains an identity of a sponsor.")
    @JsonProperty(JSON_PROPERTY_SPON_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSponId()
    {
        return sponId;
    }

    @JsonProperty(JSON_PROPERTY_SPON_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSponId(String sponId)
    {
        this.sponId = sponId;
    }

    public AppSessionContextUpdateData sponStatus(String sponStatus)
    {

        this.sponStatus = sponStatus;
        return this;
    }

    /**
     * Indicates whether sponsored data connectivity is enabled or disabled/not
     * enabled.
     * 
     * @return sponStatus
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether sponsored data connectivity is enabled or disabled/not enabled.")
    @JsonProperty(JSON_PROPERTY_SPON_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSponStatus()
    {
        return sponStatus;
    }

    @JsonProperty(JSON_PROPERTY_SPON_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSponStatus(String sponStatus)
    {
        this.sponStatus = sponStatus;
    }

    public AppSessionContextUpdateData tsnBridgeManCont(BridgeManagementContainer tsnBridgeManCont)
    {

        this.tsnBridgeManCont = tsnBridgeManCont;
        return this;
    }

    /**
     * Get tsnBridgeManCont
     * 
     * @return tsnBridgeManCont
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BridgeManagementContainer getTsnBridgeManCont()
    {
        return tsnBridgeManCont;
    }

    @JsonProperty(JSON_PROPERTY_TSN_BRIDGE_MAN_CONT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnBridgeManCont(BridgeManagementContainer tsnBridgeManCont)
    {
        this.tsnBridgeManCont = tsnBridgeManCont;
    }

    public AppSessionContextUpdateData tsnPortManContDstt(PortManagementContainer tsnPortManContDstt)
    {

        this.tsnPortManContDstt = tsnPortManContDstt;
        return this;
    }

    /**
     * Get tsnPortManContDstt
     * 
     * @return tsnPortManContDstt
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public PortManagementContainer getTsnPortManContDstt()
    {
        return tsnPortManContDstt;
    }

    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_DSTT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnPortManContDstt(PortManagementContainer tsnPortManContDstt)
    {
        this.tsnPortManContDstt = tsnPortManContDstt;
    }

    public AppSessionContextUpdateData tsnPortManContNwtts(List<PortManagementContainer> tsnPortManContNwtts)
    {

        this.tsnPortManContNwtts = tsnPortManContNwtts;
        return this;
    }

    public AppSessionContextUpdateData addTsnPortManContNwttsItem(PortManagementContainer tsnPortManContNwttsItem)
    {
        if (this.tsnPortManContNwtts == null)
        {
            this.tsnPortManContNwtts = new ArrayList<>();
        }
        this.tsnPortManContNwtts.add(tsnPortManContNwttsItem);
        return this;
    }

    /**
     * Get tsnPortManContNwtts
     * 
     * @return tsnPortManContNwtts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PortManagementContainer> getTsnPortManContNwtts()
    {
        return tsnPortManContNwtts;
    }

    @JsonProperty(JSON_PROPERTY_TSN_PORT_MAN_CONT_NWTTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTsnPortManContNwtts(List<PortManagementContainer> tsnPortManContNwtts)
    {
        this.tsnPortManContNwtts = tsnPortManContNwtts;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AppSessionContextUpdateData appSessionContextUpdateData = (AppSessionContextUpdateData) o;
        return Objects.equals(this.afAppId, appSessionContextUpdateData.afAppId) && equalsNullable(this.afRoutReq, appSessionContextUpdateData.afRoutReq)
               && Objects.equals(this.aspId, appSessionContextUpdateData.aspId) && Objects.equals(this.bdtRefId, appSessionContextUpdateData.bdtRefId)
               && equalsNullable(this.evSubsc, appSessionContextUpdateData.evSubsc) && Objects.equals(this.mcpttId, appSessionContextUpdateData.mcpttId)
               && Objects.equals(this.mcVideoId, appSessionContextUpdateData.mcVideoId)
               && Objects.equals(this.medComponents, appSessionContextUpdateData.medComponents)
               && Objects.equals(this.mpsAction, appSessionContextUpdateData.mpsAction) && Objects.equals(this.mpsId, appSessionContextUpdateData.mpsId)
               && Objects.equals(this.mcsId, appSessionContextUpdateData.mcsId)
               && Objects.equals(this.preemptControlInfo, appSessionContextUpdateData.preemptControlInfo)
               && Objects.equals(this.resPrio, appSessionContextUpdateData.resPrio)
               && Objects.equals(this.servInfStatus, appSessionContextUpdateData.servInfStatus)
               && Objects.equals(this.sipForkInd, appSessionContextUpdateData.sipForkInd) && Objects.equals(this.sponId, appSessionContextUpdateData.sponId)
               && Objects.equals(this.sponStatus, appSessionContextUpdateData.sponStatus)
               && Objects.equals(this.tsnBridgeManCont, appSessionContextUpdateData.tsnBridgeManCont)
               && Objects.equals(this.tsnPortManContDstt, appSessionContextUpdateData.tsnPortManContDstt)
               && Objects.equals(this.tsnPortManContNwtts, appSessionContextUpdateData.tsnPortManContNwtts);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(afAppId,
                            hashCodeNullable(afRoutReq),
                            aspId,
                            bdtRefId,
                            hashCodeNullable(evSubsc),
                            mcpttId,
                            mcVideoId,
                            medComponents,
                            mpsAction,
                            mpsId,
                            mcsId,
                            preemptControlInfo,
                            resPrio,
                            servInfStatus,
                            sipForkInd,
                            sponId,
                            sponStatus,
                            tsnBridgeManCont,
                            tsnPortManContDstt,
                            tsnPortManContNwtts);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AppSessionContextUpdateData {\n");
        sb.append("    afAppId: ").append(toIndentedString(afAppId)).append("\n");
        sb.append("    afRoutReq: ").append(toIndentedString(afRoutReq)).append("\n");
        sb.append("    aspId: ").append(toIndentedString(aspId)).append("\n");
        sb.append("    bdtRefId: ").append(toIndentedString(bdtRefId)).append("\n");
        sb.append("    evSubsc: ").append(toIndentedString(evSubsc)).append("\n");
        sb.append("    mcpttId: ").append(toIndentedString(mcpttId)).append("\n");
        sb.append("    mcVideoId: ").append(toIndentedString(mcVideoId)).append("\n");
        sb.append("    medComponents: ").append(toIndentedString(medComponents)).append("\n");
        sb.append("    mpsAction: ").append(toIndentedString(mpsAction)).append("\n");
        sb.append("    mpsId: ").append(toIndentedString(mpsId)).append("\n");
        sb.append("    mcsId: ").append(toIndentedString(mcsId)).append("\n");
        sb.append("    preemptControlInfo: ").append(toIndentedString(preemptControlInfo)).append("\n");
        sb.append("    resPrio: ").append(toIndentedString(resPrio)).append("\n");
        sb.append("    servInfStatus: ").append(toIndentedString(servInfStatus)).append("\n");
        sb.append("    sipForkInd: ").append(toIndentedString(sipForkInd)).append("\n");
        sb.append("    sponId: ").append(toIndentedString(sponId)).append("\n");
        sb.append("    sponStatus: ").append(toIndentedString(sponStatus)).append("\n");
        sb.append("    tsnBridgeManCont: ").append(toIndentedString(tsnBridgeManCont)).append("\n");
        sb.append("    tsnPortManContDstt: ").append(toIndentedString(tsnPortManContDstt)).append("\n");
        sb.append("    tsnPortManContNwtts: ").append(toIndentedString(tsnPortManContNwtts)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
