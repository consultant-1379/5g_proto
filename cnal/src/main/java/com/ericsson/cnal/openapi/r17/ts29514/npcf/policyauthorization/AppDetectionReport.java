/*
 * Npcf_PolicyAuthorization Service API
 * PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates the start or stop of the detected application traffic and the
 * application identifier of the detected application traffic.
 */
@ApiModel(description = "Indicates the start or stop of the detected application traffic and the application identifier of the detected application traffic.")
@JsonPropertyOrder({ AppDetectionReport.JSON_PROPERTY_AD_NOTIF_TYPE, AppDetectionReport.JSON_PROPERTY_AF_APP_ID })
public class AppDetectionReport
{
    public static final String JSON_PROPERTY_AD_NOTIF_TYPE = "adNotifType";
    private String adNotifType;

    public static final String JSON_PROPERTY_AF_APP_ID = "afAppId";
    private String afAppId;

    public AppDetectionReport()
    {
    }

    public AppDetectionReport adNotifType(String adNotifType)
    {

        this.adNotifType = adNotifType;
        return this;
    }

    /**
     * Indicates the notification type for Application Detection Control.
     * 
     * @return adNotifType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Indicates the notification type for Application Detection Control.")
    @JsonProperty(JSON_PROPERTY_AD_NOTIF_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAdNotifType()
    {
        return adNotifType;
    }

    @JsonProperty(JSON_PROPERTY_AD_NOTIF_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAdNotifType(String adNotifType)
    {
        this.adNotifType = adNotifType;
    }

    public AppDetectionReport afAppId(String afAppId)
    {

        this.afAppId = afAppId;
        return this;
    }

    /**
     * Contains an AF application identifier.
     * 
     * @return afAppId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Contains an AF application identifier.")
    @JsonProperty(JSON_PROPERTY_AF_APP_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getAfAppId()
    {
        return afAppId;
    }

    @JsonProperty(JSON_PROPERTY_AF_APP_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setAfAppId(String afAppId)
    {
        this.afAppId = afAppId;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AppDetectionReport appDetectionReport = (AppDetectionReport) o;
        return Objects.equals(this.adNotifType, appDetectionReport.adNotifType) && Objects.equals(this.afAppId, appDetectionReport.afAppId);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(adNotifType, afAppId);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AppDetectionReport {\n");
        sb.append("    adNotifType: ").append(toIndentedString(adNotifType)).append("\n");
        sb.append("    afAppId: ").append(toIndentedString(afAppId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
