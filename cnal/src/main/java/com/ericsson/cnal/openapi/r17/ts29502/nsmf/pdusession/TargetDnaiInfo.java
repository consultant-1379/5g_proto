/*
 * Nsmf_PDUSession
 * SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29502.nsmf.pdusession;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Target DNAI Information
 */
@ApiModel(description = "Target DNAI Information")
@JsonPropertyOrder({ TargetDnaiInfo.JSON_PROPERTY_TARGET_DNAI, TargetDnaiInfo.JSON_PROPERTY_SMF_SELECTION_TYPE })
public class TargetDnaiInfo
{
    public static final String JSON_PROPERTY_TARGET_DNAI = "targetDnai";
    private String targetDnai;

    public static final String JSON_PROPERTY_SMF_SELECTION_TYPE = "smfSelectionType";
    private String smfSelectionType;

    public TargetDnaiInfo()
    {
    }

    public TargetDnaiInfo targetDnai(String targetDnai)
    {

        this.targetDnai = targetDnai;
        return this;
    }

    /**
     * DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
     * 
     * @return targetDnai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.")
    @JsonProperty(JSON_PROPERTY_TARGET_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTargetDnai()
    {
        return targetDnai;
    }

    @JsonProperty(JSON_PROPERTY_TARGET_DNAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTargetDnai(String targetDnai)
    {
        this.targetDnai = targetDnai;
    }

    public TargetDnaiInfo smfSelectionType(String smfSelectionType)
    {

        this.smfSelectionType = smfSelectionType;
        return this;
    }

    /**
     * Smf Selection Type. Possible values are - CURRENT_PDU_SESSION -
     * NEXT_PDU_SESSION
     * 
     * @return smfSelectionType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Smf Selection Type. Possible values are   - CURRENT_PDU_SESSION   - NEXT_PDU_SESSION ")
    @JsonProperty(JSON_PROPERTY_SMF_SELECTION_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getSmfSelectionType()
    {
        return smfSelectionType;
    }

    @JsonProperty(JSON_PROPERTY_SMF_SELECTION_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSmfSelectionType(String smfSelectionType)
    {
        this.smfSelectionType = smfSelectionType;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TargetDnaiInfo targetDnaiInfo = (TargetDnaiInfo) o;
        return Objects.equals(this.targetDnai, targetDnaiInfo.targetDnai) && Objects.equals(this.smfSelectionType, targetDnaiInfo.smfSelectionType);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(targetDnai, smfSelectionType);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TargetDnaiInfo {\n");
        sb.append("    targetDnai: ").append(toIndentedString(targetDnai)).append("\n");
        sb.append("    smfSelectionType: ").append(toIndentedString(smfSelectionType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
