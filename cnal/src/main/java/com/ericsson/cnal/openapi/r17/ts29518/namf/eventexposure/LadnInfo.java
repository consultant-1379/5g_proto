/*
 * Namf_EventExposure
 * AMF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29518.namf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LADN Information
 */
@ApiModel(description = "LADN Information")
@JsonPropertyOrder({ LadnInfo.JSON_PROPERTY_LADN, LadnInfo.JSON_PROPERTY_PRESENCE })
public class LadnInfo
{
    public static final String JSON_PROPERTY_LADN = "ladn";
    private String ladn;

    public static final String JSON_PROPERTY_PRESENCE = "presence";
    private String presence;

    public LadnInfo()
    {
    }

    public LadnInfo ladn(String ladn)
    {

        this.ladn = ladn;
        return this;
    }

    /**
     * Get ladn
     * 
     * @return ladn
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_LADN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getLadn()
    {
        return ladn;
    }

    @JsonProperty(JSON_PROPERTY_LADN)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLadn(String ladn)
    {
        this.ladn = ladn;
    }

    public LadnInfo presence(String presence)
    {

        this.presence = presence;
        return this;
    }

    /**
     * Possible values are: -IN_AREA: Indicates that the UE is inside or enters the
     * presence reporting area. -OUT_OF_AREA: Indicates that the UE is outside or
     * leaves the presence reporting area -UNKNOW: Indicates it is unknown whether
     * the UE is in the presence reporting area or not -INACTIVE: Indicates that the
     * presence reporting area is inactive in the serving node.
     * 
     * @return presence
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: -IN_AREA: Indicates that the UE is inside or enters the presence reporting area. -OUT_OF_AREA: Indicates that the UE is outside or leaves the presence reporting area -UNKNOW: Indicates it is unknown whether the UE is in the presence reporting area or not -INACTIVE: Indicates that the presence reporting area is inactive in the serving node.  ")
    @JsonProperty(JSON_PROPERTY_PRESENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPresence()
    {
        return presence;
    }

    @JsonProperty(JSON_PROPERTY_PRESENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPresence(String presence)
    {
        this.presence = presence;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        LadnInfo ladnInfo = (LadnInfo) o;
        return Objects.equals(this.ladn, ladnInfo.ladn) && Objects.equals(this.presence, ladnInfo.presence);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ladn, presence);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class LadnInfo {\n");
        sb.append("    ladn: ").append(toIndentedString(ladn)).append("\n");
        sb.append("    presence: ").append(toIndentedString(presence)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
