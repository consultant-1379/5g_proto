/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains LTE V2X services authorized information.
 */
@ApiModel(description = "Contains LTE V2X services authorized information.")
@JsonPropertyOrder({ LteV2xAuth.JSON_PROPERTY_VEHICLE_UE_AUTH, LteV2xAuth.JSON_PROPERTY_PEDESTRIAN_UE_AUTH })
public class LteV2xAuth
{
    public static final String JSON_PROPERTY_VEHICLE_UE_AUTH = "vehicleUeAuth";
    private String vehicleUeAuth;

    public static final String JSON_PROPERTY_PEDESTRIAN_UE_AUTH = "pedestrianUeAuth";
    private String pedestrianUeAuth;

    public LteV2xAuth()
    {
    }

    public LteV2xAuth vehicleUeAuth(String vehicleUeAuth)
    {

        this.vehicleUeAuth = vehicleUeAuth;
        return this;
    }

    /**
     * Possible values are: - AUTHORIZED: Indicates that the UE is authorized. -
     * NOT_AUTHORIZED: Indicates that the UE is not authorized.
     * 
     * @return vehicleUeAuth
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - AUTHORIZED: Indicates that the UE is authorized. - NOT_AUTHORIZED: Indicates that the UE is not authorized. ")
    @JsonProperty(JSON_PROPERTY_VEHICLE_UE_AUTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getVehicleUeAuth()
    {
        return vehicleUeAuth;
    }

    @JsonProperty(JSON_PROPERTY_VEHICLE_UE_AUTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVehicleUeAuth(String vehicleUeAuth)
    {
        this.vehicleUeAuth = vehicleUeAuth;
    }

    public LteV2xAuth pedestrianUeAuth(String pedestrianUeAuth)
    {

        this.pedestrianUeAuth = pedestrianUeAuth;
        return this;
    }

    /**
     * Possible values are: - AUTHORIZED: Indicates that the UE is authorized. -
     * NOT_AUTHORIZED: Indicates that the UE is not authorized.
     * 
     * @return pedestrianUeAuth
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - AUTHORIZED: Indicates that the UE is authorized. - NOT_AUTHORIZED: Indicates that the UE is not authorized. ")
    @JsonProperty(JSON_PROPERTY_PEDESTRIAN_UE_AUTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getPedestrianUeAuth()
    {
        return pedestrianUeAuth;
    }

    @JsonProperty(JSON_PROPERTY_PEDESTRIAN_UE_AUTH)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPedestrianUeAuth(String pedestrianUeAuth)
    {
        this.pedestrianUeAuth = pedestrianUeAuth;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        LteV2xAuth lteV2xAuth = (LteV2xAuth) o;
        return Objects.equals(this.vehicleUeAuth, lteV2xAuth.vehicleUeAuth) && Objects.equals(this.pedestrianUeAuth, lteV2xAuth.pedestrianUeAuth);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(vehicleUeAuth, pedestrianUeAuth);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class LteV2xAuth {\n");
        sb.append("    vehicleUeAuth: ").append(toIndentedString(vehicleUeAuth)).append("\n");
        sb.append("    pedestrianUeAuth: ").append(toIndentedString(pedestrianUeAuth)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
