/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 3.1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts32291.nchf.convergedcharging;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SIPEventType
 */
@JsonPropertyOrder({ SIPEventType.JSON_PROPERTY_S_I_P_METHOD, SIPEventType.JSON_PROPERTY_EVENT_HEADER, SIPEventType.JSON_PROPERTY_EXPIRES_HEADER })
public class SIPEventType
{
    public static final String JSON_PROPERTY_S_I_P_METHOD = "sIPMethod";
    private String sIPMethod;

    public static final String JSON_PROPERTY_EVENT_HEADER = "eventHeader";
    private String eventHeader;

    public static final String JSON_PROPERTY_EXPIRES_HEADER = "expiresHeader";
    private Integer expiresHeader;

    public SIPEventType()
    {
    }

    public SIPEventType sIPMethod(String sIPMethod)
    {

        this.sIPMethod = sIPMethod;
        return this;
    }

    /**
     * Get sIPMethod
     * 
     * @return sIPMethod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_S_I_P_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getsIPMethod()
    {
        return sIPMethod;
    }

    @JsonProperty(JSON_PROPERTY_S_I_P_METHOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setsIPMethod(String sIPMethod)
    {
        this.sIPMethod = sIPMethod;
    }

    public SIPEventType eventHeader(String eventHeader)
    {

        this.eventHeader = eventHeader;
        return this;
    }

    /**
     * Get eventHeader
     * 
     * @return eventHeader
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EVENT_HEADER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getEventHeader()
    {
        return eventHeader;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_HEADER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventHeader(String eventHeader)
    {
        this.eventHeader = eventHeader;
    }

    public SIPEventType expiresHeader(Integer expiresHeader)
    {

        this.expiresHeader = expiresHeader;
        return this;
    }

    /**
     * Integer where the allowed values correspond to the value range of an unsigned
     * 32-bit integer. minimum: 0 maximum: 4294967295
     * 
     * @return expiresHeader
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. ")
    @JsonProperty(JSON_PROPERTY_EXPIRES_HEADER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getExpiresHeader()
    {
        return expiresHeader;
    }

    @JsonProperty(JSON_PROPERTY_EXPIRES_HEADER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExpiresHeader(Integer expiresHeader)
    {
        this.expiresHeader = expiresHeader;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SIPEventType siPEventType = (SIPEventType) o;
        return Objects.equals(this.sIPMethod, siPEventType.sIPMethod) && Objects.equals(this.eventHeader, siPEventType.eventHeader)
               && Objects.equals(this.expiresHeader, siPEventType.expiresHeader);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(sIPMethod, eventHeader, expiresHeader);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SIPEventType {\n");
        sb.append("    sIPMethod: ").append(toIndentedString(sIPMethod)).append("\n");
        sb.append("    eventHeader: ").append(toIndentedString(eventHeader)).append("\n");
        sb.append("    expiresHeader: ").append(toIndentedString(expiresHeader)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
