/*
 * Nudm_EE
 * Nudm Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.ee;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ReportingOptions
 */
@JsonPropertyOrder({ ReportingOptions.JSON_PROPERTY_REPORT_MODE,
                     ReportingOptions.JSON_PROPERTY_MAX_NUM_OF_REPORTS,
                     ReportingOptions.JSON_PROPERTY_EXPIRY,
                     ReportingOptions.JSON_PROPERTY_SAMPLING_RATIO,
                     ReportingOptions.JSON_PROPERTY_GUARD_TIME,
                     ReportingOptions.JSON_PROPERTY_REPORT_PERIOD,
                     ReportingOptions.JSON_PROPERTY_NOTIF_FLAG })
public class ReportingOptions
{
    public static final String JSON_PROPERTY_REPORT_MODE = "reportMode";
    private String reportMode;

    public static final String JSON_PROPERTY_MAX_NUM_OF_REPORTS = "maxNumOfReports";
    private Integer maxNumOfReports;

    public static final String JSON_PROPERTY_EXPIRY = "expiry";
    private OffsetDateTime expiry;

    public static final String JSON_PROPERTY_SAMPLING_RATIO = "samplingRatio";
    private Integer samplingRatio;

    public static final String JSON_PROPERTY_GUARD_TIME = "guardTime";
    private Integer guardTime;

    public static final String JSON_PROPERTY_REPORT_PERIOD = "reportPeriod";
    private Integer reportPeriod;

    public static final String JSON_PROPERTY_NOTIF_FLAG = "notifFlag";
    private String notifFlag;

    public ReportingOptions()
    {
    }

    public ReportingOptions reportMode(String reportMode)
    {

        this.reportMode = reportMode;
        return this;
    }

    /**
     * Get reportMode
     * 
     * @return reportMode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_REPORT_MODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReportMode()
    {
        return reportMode;
    }

    @JsonProperty(JSON_PROPERTY_REPORT_MODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReportMode(String reportMode)
    {
        this.reportMode = reportMode;
    }

    public ReportingOptions maxNumOfReports(Integer maxNumOfReports)
    {

        this.maxNumOfReports = maxNumOfReports;
        return this;
    }

    /**
     * Get maxNumOfReports
     * 
     * @return maxNumOfReports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MAX_NUM_OF_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxNumOfReports()
    {
        return maxNumOfReports;
    }

    @JsonProperty(JSON_PROPERTY_MAX_NUM_OF_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxNumOfReports(Integer maxNumOfReports)
    {
        this.maxNumOfReports = maxNumOfReports;
    }

    public ReportingOptions expiry(OffsetDateTime expiry)
    {

        this.expiry = expiry;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return expiry
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_EXPIRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getExpiry()
    {
        return expiry;
    }

    @JsonProperty(JSON_PROPERTY_EXPIRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExpiry(OffsetDateTime expiry)
    {
        this.expiry = expiry;
    }

    public ReportingOptions samplingRatio(Integer samplingRatio)
    {

        this.samplingRatio = samplingRatio;
        return this;
    }

    /**
     * Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS
     * 23.502), expressed in percent. minimum: 1 maximum: 100
     * 
     * @return samplingRatio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  ")
    @JsonProperty(JSON_PROPERTY_SAMPLING_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getSamplingRatio()
    {
        return samplingRatio;
    }

    @JsonProperty(JSON_PROPERTY_SAMPLING_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSamplingRatio(Integer samplingRatio)
    {
        this.samplingRatio = samplingRatio;
    }

    public ReportingOptions guardTime(Integer guardTime)
    {

        this.guardTime = guardTime;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return guardTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_GUARD_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getGuardTime()
    {
        return guardTime;
    }

    @JsonProperty(JSON_PROPERTY_GUARD_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGuardTime(Integer guardTime)
    {
        this.guardTime = guardTime;
    }

    public ReportingOptions reportPeriod(Integer reportPeriod)
    {

        this.reportPeriod = reportPeriod;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return reportPeriod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_REPORT_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getReportPeriod()
    {
        return reportPeriod;
    }

    @JsonProperty(JSON_PROPERTY_REPORT_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReportPeriod(Integer reportPeriod)
    {
        this.reportPeriod = reportPeriod;
    }

    public ReportingOptions notifFlag(String notifFlag)
    {

        this.notifFlag = notifFlag;
        return this;
    }

    /**
     * Possible values are: - ACTIVATE: The event notification is activated. -
     * DEACTIVATE: The event notification is deactivated and shall be muted. The
     * available event(s) shall be stored. - RETRIEVAL: The event notification shall
     * be sent to the NF service consumer(s), after that, is muted again.
     * 
     * @return notifFlag
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - ACTIVATE: The event notification is activated. - DEACTIVATE: The event notification is deactivated and shall be muted. The available    event(s) shall be stored. - RETRIEVAL: The event notification shall be sent to the NF service consumer(s),   after that, is muted again.  ")
    @JsonProperty(JSON_PROPERTY_NOTIF_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNotifFlag()
    {
        return notifFlag;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_FLAG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotifFlag(String notifFlag)
    {
        this.notifFlag = notifFlag;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ReportingOptions reportingOptions = (ReportingOptions) o;
        return Objects.equals(this.reportMode, reportingOptions.reportMode) && Objects.equals(this.maxNumOfReports, reportingOptions.maxNumOfReports)
               && Objects.equals(this.expiry, reportingOptions.expiry) && Objects.equals(this.samplingRatio, reportingOptions.samplingRatio)
               && Objects.equals(this.guardTime, reportingOptions.guardTime) && Objects.equals(this.reportPeriod, reportingOptions.reportPeriod)
               && Objects.equals(this.notifFlag, reportingOptions.notifFlag);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(reportMode, maxNumOfReports, expiry, samplingRatio, guardTime, reportPeriod, notifFlag);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReportingOptions {\n");
        sb.append("    reportMode: ").append(toIndentedString(reportMode)).append("\n");
        sb.append("    maxNumOfReports: ").append(toIndentedString(maxNumOfReports)).append("\n");
        sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
        sb.append("    samplingRatio: ").append(toIndentedString(samplingRatio)).append("\n");
        sb.append("    guardTime: ").append(toIndentedString(guardTime)).append("\n");
        sb.append("    reportPeriod: ").append(toIndentedString(reportPeriod)).append("\n");
        sb.append("    notifFlag: ").append(toIndentedString(notifFlag)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
