/*
 * LMF Location
 * LMF Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29572.nlmf.location;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Indicates area (country, area in a country or international area) where UE is
 * located
 */
@ApiModel(description = "Indicates area (country, area in a country or international area) where UE is located")
@JsonPropertyOrder({ UeAreaIndication.JSON_PROPERTY_COUNTRY, UeAreaIndication.JSON_PROPERTY_INTERNATIONAL_AREA_IND })
public class UeAreaIndication
{
    public static final String JSON_PROPERTY_COUNTRY = "country";
    private String country;

    public static final String JSON_PROPERTY_INTERNATIONAL_AREA_IND = "internationalAreaInd";
    private Boolean internationalAreaInd = false;

    public UeAreaIndication()
    {
    }

    public UeAreaIndication country(String country)
    {

        this.country = country;
        return this;
    }

    /**
     * Indicates country or area in a country where UE is located
     * 
     * @return country
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates country or area in a country where UE is located")
    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCountry()
    {
        return country;
    }

    @JsonProperty(JSON_PROPERTY_COUNTRY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCountry(String country)
    {
        this.country = country;
    }

    public UeAreaIndication internationalAreaInd(Boolean internationalAreaInd)
    {

        this.internationalAreaInd = internationalAreaInd;
        return this;
    }

    /**
     * Indicates international area indication if UE is located in international
     * area
     * 
     * @return internationalAreaInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates international area indication if UE is located in international area")
    @JsonProperty(JSON_PROPERTY_INTERNATIONAL_AREA_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getInternationalAreaInd()
    {
        return internationalAreaInd;
    }

    @JsonProperty(JSON_PROPERTY_INTERNATIONAL_AREA_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInternationalAreaInd(Boolean internationalAreaInd)
    {
        this.internationalAreaInd = internationalAreaInd;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UeAreaIndication ueAreaIndication = (UeAreaIndication) o;
        return Objects.equals(this.country, ueAreaIndication.country) && Objects.equals(this.internationalAreaInd, ueAreaIndication.internationalAreaInd);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(country, internationalAreaInd);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UeAreaIndication {\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    internationalAreaInd: ").append(toIndentedString(internationalAreaInd)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
