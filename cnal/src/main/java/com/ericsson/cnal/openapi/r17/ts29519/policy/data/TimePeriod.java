/*
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29519.policy.data;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the periodicity for the defined usage monitoring data limits.
 */
@ApiModel(description = "Contains the periodicity for the defined usage monitoring data limits.")
@JsonPropertyOrder({ TimePeriod.JSON_PROPERTY_PERIOD, TimePeriod.JSON_PROPERTY_MAX_NUM_PERIOD })
public class TimePeriod
{
    public static final String JSON_PROPERTY_PERIOD = "period";
    private String period;

    public static final String JSON_PROPERTY_MAX_NUM_PERIOD = "maxNumPeriod";
    private Integer maxNumPeriod;

    public TimePeriod()
    {
    }

    public TimePeriod period(String period)
    {

        this.period = period;
        return this;
    }

    /**
     * Represents the time period.
     * 
     * @return period
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Represents the time period.")
    @JsonProperty(JSON_PROPERTY_PERIOD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getPeriod()
    {
        return period;
    }

    @JsonProperty(JSON_PROPERTY_PERIOD)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPeriod(String period)
    {
        this.period = period;
    }

    public TimePeriod maxNumPeriod(Integer maxNumPeriod)
    {

        this.maxNumPeriod = maxNumPeriod;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return maxNumPeriod
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_MAX_NUM_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxNumPeriod()
    {
        return maxNumPeriod;
    }

    @JsonProperty(JSON_PROPERTY_MAX_NUM_PERIOD)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxNumPeriod(Integer maxNumPeriod)
    {
        this.maxNumPeriod = maxNumPeriod;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TimePeriod timePeriod = (TimePeriod) o;
        return Objects.equals(this.period, timePeriod.period) && Objects.equals(this.maxNumPeriod, timePeriod.maxNumPeriod);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(period, maxNumPeriod);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TimePeriod {\n");
        sb.append("    period: ").append(toIndentedString(period)).append("\n");
        sb.append("    maxNumPeriod: ").append(toIndentedString(maxNumPeriod)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
