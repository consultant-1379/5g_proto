/*
 * LMF Location
 * LMF Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29572.nlmf.location;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Relative Cartesian Location
 */
@ApiModel(description = "Relative Cartesian Location")
@JsonPropertyOrder({ RelativeCartesianLocation.JSON_PROPERTY_X, RelativeCartesianLocation.JSON_PROPERTY_Y, RelativeCartesianLocation.JSON_PROPERTY_Z })
public class RelativeCartesianLocation
{
    public static final String JSON_PROPERTY_X = "x";
    private Float x;

    public static final String JSON_PROPERTY_Y = "y";
    private Float y;

    public static final String JSON_PROPERTY_Z = "z";
    private Float z;

    public RelativeCartesianLocation()
    {
    }

    public RelativeCartesianLocation x(Float x)
    {

        this.x = x;
        return this;
    }

    /**
     * string with format &#39;float&#39; as defined in OpenAPI.
     * 
     * @return x
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'float' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_X)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Float getX()
    {
        return x;
    }

    @JsonProperty(JSON_PROPERTY_X)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setX(Float x)
    {
        this.x = x;
    }

    public RelativeCartesianLocation y(Float y)
    {

        this.y = y;
        return this;
    }

    /**
     * string with format &#39;float&#39; as defined in OpenAPI.
     * 
     * @return y
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'float' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_Y)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Float getY()
    {
        return y;
    }

    @JsonProperty(JSON_PROPERTY_Y)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setY(Float y)
    {
        this.y = y;
    }

    public RelativeCartesianLocation z(Float z)
    {

        this.z = z;
        return this;
    }

    /**
     * string with format &#39;float&#39; as defined in OpenAPI.
     * 
     * @return z
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'float' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_Z)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Float getZ()
    {
        return z;
    }

    @JsonProperty(JSON_PROPERTY_Z)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setZ(Float z)
    {
        this.z = z;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RelativeCartesianLocation relativeCartesianLocation = (RelativeCartesianLocation) o;
        return Objects.equals(this.x, relativeCartesianLocation.x) && Objects.equals(this.y, relativeCartesianLocation.y)
               && Objects.equals(this.z, relativeCartesianLocation.z);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(x, y, z);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RelativeCartesianLocation {\n");
        sb.append("    x: ").append(toIndentedString(x)).append("\n");
        sb.append("    y: ").append(toIndentedString(y)).append("\n");
        sb.append("    z: ").append(toIndentedString(z)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
