/*
 * Nchf_ConvergedCharging
 * ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 3.1.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts32291.nchf.convergedcharging;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ServerCapabilities
 */
@JsonPropertyOrder({ ServerCapabilities.JSON_PROPERTY_MANDATORY_CAPABILITY,
                     ServerCapabilities.JSON_PROPERTY_OPTIONAL_CAPABILITY,
                     ServerCapabilities.JSON_PROPERTY_SERVER_NAME })
public class ServerCapabilities
{
    public static final String JSON_PROPERTY_MANDATORY_CAPABILITY = "mandatoryCapability";
    private List<Integer> mandatoryCapability = null;

    public static final String JSON_PROPERTY_OPTIONAL_CAPABILITY = "optionalCapability";
    private List<Integer> optionalCapability = null;

    public static final String JSON_PROPERTY_SERVER_NAME = "serverName";
    private List<String> serverName = null;

    public ServerCapabilities()
    {
    }

    public ServerCapabilities mandatoryCapability(List<Integer> mandatoryCapability)
    {

        this.mandatoryCapability = mandatoryCapability;
        return this;
    }

    public ServerCapabilities addMandatoryCapabilityItem(Integer mandatoryCapabilityItem)
    {
        if (this.mandatoryCapability == null)
        {
            this.mandatoryCapability = new ArrayList<>();
        }
        this.mandatoryCapability.add(mandatoryCapabilityItem);
        return this;
    }

    /**
     * Get mandatoryCapability
     * 
     * @return mandatoryCapability
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MANDATORY_CAPABILITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Integer> getMandatoryCapability()
    {
        return mandatoryCapability;
    }

    @JsonProperty(JSON_PROPERTY_MANDATORY_CAPABILITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMandatoryCapability(List<Integer> mandatoryCapability)
    {
        this.mandatoryCapability = mandatoryCapability;
    }

    public ServerCapabilities optionalCapability(List<Integer> optionalCapability)
    {

        this.optionalCapability = optionalCapability;
        return this;
    }

    public ServerCapabilities addOptionalCapabilityItem(Integer optionalCapabilityItem)
    {
        if (this.optionalCapability == null)
        {
            this.optionalCapability = new ArrayList<>();
        }
        this.optionalCapability.add(optionalCapabilityItem);
        return this;
    }

    /**
     * Get optionalCapability
     * 
     * @return optionalCapability
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_OPTIONAL_CAPABILITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Integer> getOptionalCapability()
    {
        return optionalCapability;
    }

    @JsonProperty(JSON_PROPERTY_OPTIONAL_CAPABILITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOptionalCapability(List<Integer> optionalCapability)
    {
        this.optionalCapability = optionalCapability;
    }

    public ServerCapabilities serverName(List<String> serverName)
    {

        this.serverName = serverName;
        return this;
    }

    public ServerCapabilities addServerNameItem(String serverNameItem)
    {
        if (this.serverName == null)
        {
            this.serverName = new ArrayList<>();
        }
        this.serverName.add(serverNameItem);
        return this;
    }

    /**
     * Get serverName
     * 
     * @return serverName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SERVER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getServerName()
    {
        return serverName;
    }

    @JsonProperty(JSON_PROPERTY_SERVER_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServerName(List<String> serverName)
    {
        this.serverName = serverName;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ServerCapabilities serverCapabilities = (ServerCapabilities) o;
        return Objects.equals(this.mandatoryCapability, serverCapabilities.mandatoryCapability)
               && Objects.equals(this.optionalCapability, serverCapabilities.optionalCapability)
               && Objects.equals(this.serverName, serverCapabilities.serverName);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(mandatoryCapability, optionalCapability, serverName);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ServerCapabilities {\n");
        sb.append("    mandatoryCapability: ").append(toIndentedString(mandatoryCapability)).append("\n");
        sb.append("    optionalCapability: ").append(toIndentedString(optionalCapability)).append("\n");
        sb.append("    serverName: ").append(toIndentedString(serverName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
