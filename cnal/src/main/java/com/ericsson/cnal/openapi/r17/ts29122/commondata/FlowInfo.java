/*
 * TS 29.122 Common Data Types
 * Data types applicable to several APIs.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29122.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents IP flow information.
 */
@ApiModel(description = "Represents IP flow information.")
@JsonPropertyOrder({ FlowInfo.JSON_PROPERTY_FLOW_ID, FlowInfo.JSON_PROPERTY_FLOW_DESCRIPTIONS })
public class FlowInfo
{
    public static final String JSON_PROPERTY_FLOW_ID = "flowId";
    private Integer flowId;

    public static final String JSON_PROPERTY_FLOW_DESCRIPTIONS = "flowDescriptions";
    private List<String> flowDescriptions = null;

    public FlowInfo()
    {
    }

    public FlowInfo flowId(Integer flowId)
    {

        this.flowId = flowId;
        return this;
    }

    /**
     * Indicates the IP flow identifier.
     * 
     * @return flowId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Indicates the IP flow identifier.")
    @JsonProperty(JSON_PROPERTY_FLOW_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Integer getFlowId()
    {
        return flowId;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setFlowId(Integer flowId)
    {
        this.flowId = flowId;
    }

    public FlowInfo flowDescriptions(List<String> flowDescriptions)
    {

        this.flowDescriptions = flowDescriptions;
        return this;
    }

    public FlowInfo addFlowDescriptionsItem(String flowDescriptionsItem)
    {
        if (this.flowDescriptions == null)
        {
            this.flowDescriptions = new ArrayList<>();
        }
        this.flowDescriptions.add(flowDescriptionsItem);
        return this;
    }

    /**
     * Indicates the packet filters of the IP flow. Refer to clause 5.3.8 of 3GPP TS
     * 29.214 for encoding. It shall contain UL and/or DL IP flow description.
     * 
     * @return flowDescriptions
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the packet filters of the IP flow. Refer to clause 5.3.8 of 3GPP TS 29.214 for encoding. It shall contain UL and/or DL IP flow description. ")
    @JsonProperty(JSON_PROPERTY_FLOW_DESCRIPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getFlowDescriptions()
    {
        return flowDescriptions;
    }

    @JsonProperty(JSON_PROPERTY_FLOW_DESCRIPTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFlowDescriptions(List<String> flowDescriptions)
    {
        this.flowDescriptions = flowDescriptions;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        FlowInfo flowInfo = (FlowInfo) o;
        return Objects.equals(this.flowId, flowInfo.flowId) && Objects.equals(this.flowDescriptions, flowInfo.flowDescriptions);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(flowId, flowDescriptions);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class FlowInfo {\n");
        sb.append("    flowId: ").append(toIndentedString(flowId)).append("\n");
        sb.append("    flowDescriptions: ").append(toIndentedString(flowDescriptions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
