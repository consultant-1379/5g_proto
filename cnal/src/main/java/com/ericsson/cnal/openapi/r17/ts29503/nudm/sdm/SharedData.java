/*
 * Nudm_SDM
 * Nudm Subscriber Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 2.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.sdm;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.TraceData;
import com.ericsson.cnal.openapi.r17.ts29503.nudm.pp.EcsAddrConfigInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SharedData
 */
@JsonPropertyOrder({ SharedData.JSON_PROPERTY_SHARED_DATA_ID,
                     SharedData.JSON_PROPERTY_SHARED_AM_DATA,
                     SharedData.JSON_PROPERTY_SHARED_SMS_SUBS_DATA,
                     SharedData.JSON_PROPERTY_SHARED_SMS_MNG_SUBS_DATA,
                     SharedData.JSON_PROPERTY_SHARED_DNN_CONFIGURATIONS,
                     SharedData.JSON_PROPERTY_SHARED_TRACE_DATA,
                     SharedData.JSON_PROPERTY_SHARED_SNSSAI_INFOS,
                     SharedData.JSON_PROPERTY_SHARED_VN_GROUP_DATAS,
                     SharedData.JSON_PROPERTY_TREATMENT_INSTRUCTIONS,
                     SharedData.JSON_PROPERTY_SHARED_SM_SUBS_DATA,
                     SharedData.JSON_PROPERTY_SHARED_ECS_ADDR_CONFIG_INFO })
public class SharedData
{
    public static final String JSON_PROPERTY_SHARED_DATA_ID = "sharedDataId";
    private String sharedDataId;

    public static final String JSON_PROPERTY_SHARED_AM_DATA = "sharedAmData";
    private AccessAndMobilitySubscriptionData sharedAmData;

    public static final String JSON_PROPERTY_SHARED_SMS_SUBS_DATA = "sharedSmsSubsData";
    private SmsSubscriptionData sharedSmsSubsData;

    public static final String JSON_PROPERTY_SHARED_SMS_MNG_SUBS_DATA = "sharedSmsMngSubsData";
    private SmsManagementSubscriptionData sharedSmsMngSubsData;

    public static final String JSON_PROPERTY_SHARED_DNN_CONFIGURATIONS = "sharedDnnConfigurations";
    private Map<String, DnnConfiguration> sharedDnnConfigurations = null;

    public static final String JSON_PROPERTY_SHARED_TRACE_DATA = "sharedTraceData";
    private JsonNullable<TraceData> sharedTraceData = JsonNullable.<TraceData>undefined();

    public static final String JSON_PROPERTY_SHARED_SNSSAI_INFOS = "sharedSnssaiInfos";
    private Map<String, SnssaiInfo> sharedSnssaiInfos = null;

    public static final String JSON_PROPERTY_SHARED_VN_GROUP_DATAS = "sharedVnGroupDatas";
    private Map<String, VnGroupData> sharedVnGroupDatas = null;

    public static final String JSON_PROPERTY_TREATMENT_INSTRUCTIONS = "treatmentInstructions";
    private Map<String, String> treatmentInstructions = null;

    public static final String JSON_PROPERTY_SHARED_SM_SUBS_DATA = "sharedSmSubsData";
    private SessionManagementSubscriptionData sharedSmSubsData;

    public static final String JSON_PROPERTY_SHARED_ECS_ADDR_CONFIG_INFO = "sharedEcsAddrConfigInfo";
    private JsonNullable<EcsAddrConfigInfo> sharedEcsAddrConfigInfo = JsonNullable.<EcsAddrConfigInfo>undefined();

    public SharedData()
    {
    }

    public SharedData sharedDataId(String sharedDataId)
    {

        this.sharedDataId = sharedDataId;
        return this;
    }

    /**
     * Get sharedDataId
     * 
     * @return sharedDataId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_SHARED_DATA_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getSharedDataId()
    {
        return sharedDataId;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_DATA_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSharedDataId(String sharedDataId)
    {
        this.sharedDataId = sharedDataId;
    }

    public SharedData sharedAmData(AccessAndMobilitySubscriptionData sharedAmData)
    {

        this.sharedAmData = sharedAmData;
        return this;
    }

    /**
     * Get sharedAmData
     * 
     * @return sharedAmData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SHARED_AM_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AccessAndMobilitySubscriptionData getSharedAmData()
    {
        return sharedAmData;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_AM_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedAmData(AccessAndMobilitySubscriptionData sharedAmData)
    {
        this.sharedAmData = sharedAmData;
    }

    public SharedData sharedSmsSubsData(SmsSubscriptionData sharedSmsSubsData)
    {

        this.sharedSmsSubsData = sharedSmsSubsData;
        return this;
    }

    /**
     * Get sharedSmsSubsData
     * 
     * @return sharedSmsSubsData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SHARED_SMS_SUBS_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SmsSubscriptionData getSharedSmsSubsData()
    {
        return sharedSmsSubsData;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_SMS_SUBS_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedSmsSubsData(SmsSubscriptionData sharedSmsSubsData)
    {
        this.sharedSmsSubsData = sharedSmsSubsData;
    }

    public SharedData sharedSmsMngSubsData(SmsManagementSubscriptionData sharedSmsMngSubsData)
    {

        this.sharedSmsMngSubsData = sharedSmsMngSubsData;
        return this;
    }

    /**
     * Get sharedSmsMngSubsData
     * 
     * @return sharedSmsMngSubsData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SHARED_SMS_MNG_SUBS_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SmsManagementSubscriptionData getSharedSmsMngSubsData()
    {
        return sharedSmsMngSubsData;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_SMS_MNG_SUBS_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedSmsMngSubsData(SmsManagementSubscriptionData sharedSmsMngSubsData)
    {
        this.sharedSmsMngSubsData = sharedSmsMngSubsData;
    }

    public SharedData sharedDnnConfigurations(Map<String, DnnConfiguration> sharedDnnConfigurations)
    {

        this.sharedDnnConfigurations = sharedDnnConfigurations;
        return this;
    }

    public SharedData putSharedDnnConfigurationsItem(String key,
                                                     DnnConfiguration sharedDnnConfigurationsItem)
    {
        if (this.sharedDnnConfigurations == null)
        {
            this.sharedDnnConfigurations = new HashMap<>();
        }
        this.sharedDnnConfigurations.put(key, sharedDnnConfigurationsItem);
        return this;
    }

    /**
     * A map(list of key-value pairs) where Dnn, or optionally the Wildcard DNN,
     * serves as key of DnnConfiguration
     * 
     * @return sharedDnnConfigurations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map(list of key-value pairs) where Dnn, or optionally the Wildcard DNN, serves as key of DnnConfiguration")
    @JsonProperty(JSON_PROPERTY_SHARED_DNN_CONFIGURATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, DnnConfiguration> getSharedDnnConfigurations()
    {
        return sharedDnnConfigurations;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_DNN_CONFIGURATIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedDnnConfigurations(Map<String, DnnConfiguration> sharedDnnConfigurations)
    {
        this.sharedDnnConfigurations = sharedDnnConfigurations;
    }

    public SharedData sharedTraceData(TraceData sharedTraceData)
    {
        this.sharedTraceData = JsonNullable.<TraceData>of(sharedTraceData);

        return this;
    }

    /**
     * Get sharedTraceData
     * 
     * @return sharedTraceData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public TraceData getSharedTraceData()
    {
        return sharedTraceData.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SHARED_TRACE_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<TraceData> getSharedTraceData_JsonNullable()
    {
        return sharedTraceData;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_TRACE_DATA)
    public void setSharedTraceData_JsonNullable(JsonNullable<TraceData> sharedTraceData)
    {
        this.sharedTraceData = sharedTraceData;
    }

    public void setSharedTraceData(TraceData sharedTraceData)
    {
        this.sharedTraceData = JsonNullable.<TraceData>of(sharedTraceData);
    }

    public SharedData sharedSnssaiInfos(Map<String, SnssaiInfo> sharedSnssaiInfos)
    {

        this.sharedSnssaiInfos = sharedSnssaiInfos;
        return this;
    }

    public SharedData putSharedSnssaiInfosItem(String key,
                                               SnssaiInfo sharedSnssaiInfosItem)
    {
        if (this.sharedSnssaiInfos == null)
        {
            this.sharedSnssaiInfos = new HashMap<>();
        }
        this.sharedSnssaiInfos.put(key, sharedSnssaiInfosItem);
        return this;
    }

    /**
     * A map(list of key-value pairs) where singleNssai serves as key of SnssaiInfo
     * 
     * @return sharedSnssaiInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map(list of key-value pairs) where singleNssai serves as key of SnssaiInfo")
    @JsonProperty(JSON_PROPERTY_SHARED_SNSSAI_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, SnssaiInfo> getSharedSnssaiInfos()
    {
        return sharedSnssaiInfos;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_SNSSAI_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedSnssaiInfos(Map<String, SnssaiInfo> sharedSnssaiInfos)
    {
        this.sharedSnssaiInfos = sharedSnssaiInfos;
    }

    public SharedData sharedVnGroupDatas(Map<String, VnGroupData> sharedVnGroupDatas)
    {

        this.sharedVnGroupDatas = sharedVnGroupDatas;
        return this;
    }

    public SharedData putSharedVnGroupDatasItem(String key,
                                                VnGroupData sharedVnGroupDatasItem)
    {
        if (this.sharedVnGroupDatas == null)
        {
            this.sharedVnGroupDatas = new HashMap<>();
        }
        this.sharedVnGroupDatas.put(key, sharedVnGroupDatasItem);
        return this;
    }

    /**
     * A map(list of key-value pairs) where GroupId serves as key of VnGroupData
     * 
     * @return sharedVnGroupDatas
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map(list of key-value pairs) where GroupId serves as key of VnGroupData")
    @JsonProperty(JSON_PROPERTY_SHARED_VN_GROUP_DATAS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, VnGroupData> getSharedVnGroupDatas()
    {
        return sharedVnGroupDatas;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_VN_GROUP_DATAS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedVnGroupDatas(Map<String, VnGroupData> sharedVnGroupDatas)
    {
        this.sharedVnGroupDatas = sharedVnGroupDatas;
    }

    public SharedData treatmentInstructions(Map<String, String> treatmentInstructions)
    {

        this.treatmentInstructions = treatmentInstructions;
        return this;
    }

    public SharedData putTreatmentInstructionsItem(String key,
                                                   String treatmentInstructionsItem)
    {
        if (this.treatmentInstructions == null)
        {
            this.treatmentInstructions = new HashMap<>();
        }
        this.treatmentInstructions.put(key, treatmentInstructionsItem);
        return this;
    }

    /**
     * A map(list of key-value pairs) where JSON pointer pointing to an attribute
     * within the SharedData serves as key of SharedDataTreatmentInstruction
     * 
     * @return treatmentInstructions
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map(list of key-value pairs) where JSON pointer pointing to an attribute within the SharedData serves as key of SharedDataTreatmentInstruction")
    @JsonProperty(JSON_PROPERTY_TREATMENT_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, String> getTreatmentInstructions()
    {
        return treatmentInstructions;
    }

    @JsonProperty(JSON_PROPERTY_TREATMENT_INSTRUCTIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTreatmentInstructions(Map<String, String> treatmentInstructions)
    {
        this.treatmentInstructions = treatmentInstructions;
    }

    public SharedData sharedSmSubsData(SessionManagementSubscriptionData sharedSmSubsData)
    {

        this.sharedSmSubsData = sharedSmSubsData;
        return this;
    }

    /**
     * Get sharedSmSubsData
     * 
     * @return sharedSmSubsData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SHARED_SM_SUBS_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SessionManagementSubscriptionData getSharedSmSubsData()
    {
        return sharedSmSubsData;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_SM_SUBS_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedSmSubsData(SessionManagementSubscriptionData sharedSmSubsData)
    {
        this.sharedSmSubsData = sharedSmSubsData;
    }

    public SharedData sharedEcsAddrConfigInfo(EcsAddrConfigInfo sharedEcsAddrConfigInfo)
    {
        this.sharedEcsAddrConfigInfo = JsonNullable.<EcsAddrConfigInfo>of(sharedEcsAddrConfigInfo);

        return this;
    }

    /**
     * Get sharedEcsAddrConfigInfo
     * 
     * @return sharedEcsAddrConfigInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public EcsAddrConfigInfo getSharedEcsAddrConfigInfo()
    {
        return sharedEcsAddrConfigInfo.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_SHARED_ECS_ADDR_CONFIG_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<EcsAddrConfigInfo> getSharedEcsAddrConfigInfo_JsonNullable()
    {
        return sharedEcsAddrConfigInfo;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_ECS_ADDR_CONFIG_INFO)
    public void setSharedEcsAddrConfigInfo_JsonNullable(JsonNullable<EcsAddrConfigInfo> sharedEcsAddrConfigInfo)
    {
        this.sharedEcsAddrConfigInfo = sharedEcsAddrConfigInfo;
    }

    public void setSharedEcsAddrConfigInfo(EcsAddrConfigInfo sharedEcsAddrConfigInfo)
    {
        this.sharedEcsAddrConfigInfo = JsonNullable.<EcsAddrConfigInfo>of(sharedEcsAddrConfigInfo);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SharedData sharedData = (SharedData) o;
        return Objects.equals(this.sharedDataId, sharedData.sharedDataId) && Objects.equals(this.sharedAmData, sharedData.sharedAmData)
               && Objects.equals(this.sharedSmsSubsData, sharedData.sharedSmsSubsData)
               && Objects.equals(this.sharedSmsMngSubsData, sharedData.sharedSmsMngSubsData)
               && Objects.equals(this.sharedDnnConfigurations, sharedData.sharedDnnConfigurations)
               && equalsNullable(this.sharedTraceData, sharedData.sharedTraceData) && Objects.equals(this.sharedSnssaiInfos, sharedData.sharedSnssaiInfos)
               && Objects.equals(this.sharedVnGroupDatas, sharedData.sharedVnGroupDatas)
               && Objects.equals(this.treatmentInstructions, sharedData.treatmentInstructions)
               && Objects.equals(this.sharedSmSubsData, sharedData.sharedSmSubsData)
               && equalsNullable(this.sharedEcsAddrConfigInfo, sharedData.sharedEcsAddrConfigInfo);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(sharedDataId,
                            sharedAmData,
                            sharedSmsSubsData,
                            sharedSmsMngSubsData,
                            sharedDnnConfigurations,
                            hashCodeNullable(sharedTraceData),
                            sharedSnssaiInfos,
                            sharedVnGroupDatas,
                            treatmentInstructions,
                            sharedSmSubsData,
                            hashCodeNullable(sharedEcsAddrConfigInfo));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SharedData {\n");
        sb.append("    sharedDataId: ").append(toIndentedString(sharedDataId)).append("\n");
        sb.append("    sharedAmData: ").append(toIndentedString(sharedAmData)).append("\n");
        sb.append("    sharedSmsSubsData: ").append(toIndentedString(sharedSmsSubsData)).append("\n");
        sb.append("    sharedSmsMngSubsData: ").append(toIndentedString(sharedSmsMngSubsData)).append("\n");
        sb.append("    sharedDnnConfigurations: ").append(toIndentedString(sharedDnnConfigurations)).append("\n");
        sb.append("    sharedTraceData: ").append(toIndentedString(sharedTraceData)).append("\n");
        sb.append("    sharedSnssaiInfos: ").append(toIndentedString(sharedSnssaiInfos)).append("\n");
        sb.append("    sharedVnGroupDatas: ").append(toIndentedString(sharedVnGroupDatas)).append("\n");
        sb.append("    treatmentInstructions: ").append(toIndentedString(treatmentInstructions)).append("\n");
        sb.append("    sharedSmSubsData: ").append(toIndentedString(sharedSmSubsData)).append("\n");
        sb.append("    sharedEcsAddrConfigInfo: ").append(toIndentedString(sharedEcsAddrConfigInfo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
