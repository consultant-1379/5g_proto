/*
 * Naf_EventExposure
 * AF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29517.naf.eventexposure;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.LocationArea5G;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains UE trajectory information associated with an application.
 */
@ApiModel(description = "Contains UE trajectory information associated with an application.")
@JsonPropertyOrder({ UeTrajectoryCollection.JSON_PROPERTY_TS, UeTrajectoryCollection.JSON_PROPERTY_LOC_AREA })
public class UeTrajectoryCollection
{
    public static final String JSON_PROPERTY_TS = "ts";
    private OffsetDateTime ts;

    public static final String JSON_PROPERTY_LOC_AREA = "locArea";
    private LocationArea5G locArea;

    public UeTrajectoryCollection()
    {
    }

    public UeTrajectoryCollection ts(OffsetDateTime ts)
    {

        this.ts = ts;
        return this;
    }

    /**
     * string with format &#39;date-time&#39; as defined in OpenAPI.
     * 
     * @return ts
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'date-time' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_TS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    @JsonFormat(shape = JsonFormat.Shape.STRING)

    public OffsetDateTime getTs()
    {
        return ts;
    }

    @JsonProperty(JSON_PROPERTY_TS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTs(OffsetDateTime ts)
    {
        this.ts = ts;
    }

    public UeTrajectoryCollection locArea(LocationArea5G locArea)
    {

        this.locArea = locArea;
        return this;
    }

    /**
     * Get locArea
     * 
     * @return locArea
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_LOC_AREA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public LocationArea5G getLocArea()
    {
        return locArea;
    }

    @JsonProperty(JSON_PROPERTY_LOC_AREA)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setLocArea(LocationArea5G locArea)
    {
        this.locArea = locArea;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UeTrajectoryCollection ueTrajectoryCollection = (UeTrajectoryCollection) o;
        return Objects.equals(this.ts, ueTrajectoryCollection.ts) && Objects.equals(this.locArea, ueTrajectoryCollection.locArea);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(ts, locArea);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UeTrajectoryCollection {\n");
        sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
        sb.append("    locArea: ").append(toIndentedString(locArea)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
