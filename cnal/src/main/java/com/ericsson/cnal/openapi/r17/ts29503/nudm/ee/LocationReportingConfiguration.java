/*
 * Nudm_EE
 * Nudm Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.ee;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * LocationReportingConfiguration
 */
@JsonPropertyOrder({ LocationReportingConfiguration.JSON_PROPERTY_CURRENT_LOCATION,
                     LocationReportingConfiguration.JSON_PROPERTY_ONE_TIME,
                     LocationReportingConfiguration.JSON_PROPERTY_ACCURACY,
                     LocationReportingConfiguration.JSON_PROPERTY_N3GPP_ACCURACY })
public class LocationReportingConfiguration
{
    public static final String JSON_PROPERTY_CURRENT_LOCATION = "currentLocation";
    private Boolean currentLocation;

    public static final String JSON_PROPERTY_ONE_TIME = "oneTime";
    private Boolean oneTime;

    public static final String JSON_PROPERTY_ACCURACY = "accuracy";
    private String accuracy;

    public static final String JSON_PROPERTY_N3GPP_ACCURACY = "n3gppAccuracy";
    private String n3gppAccuracy;

    public LocationReportingConfiguration()
    {
    }

    public LocationReportingConfiguration currentLocation(Boolean currentLocation)
    {

        this.currentLocation = currentLocation;
        return this;
    }

    /**
     * Get currentLocation
     * 
     * @return currentLocation
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_CURRENT_LOCATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Boolean getCurrentLocation()
    {
        return currentLocation;
    }

    @JsonProperty(JSON_PROPERTY_CURRENT_LOCATION)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCurrentLocation(Boolean currentLocation)
    {
        this.currentLocation = currentLocation;
    }

    public LocationReportingConfiguration oneTime(Boolean oneTime)
    {

        this.oneTime = oneTime;
        return this;
    }

    /**
     * Get oneTime
     * 
     * @return oneTime
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ONE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getOneTime()
    {
        return oneTime;
    }

    @JsonProperty(JSON_PROPERTY_ONE_TIME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOneTime(Boolean oneTime)
    {
        this.oneTime = oneTime;
    }

    public LocationReportingConfiguration accuracy(String accuracy)
    {

        this.accuracy = accuracy;
        return this;
    }

    /**
     * Get accuracy
     * 
     * @return accuracy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ACCURACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAccuracy()
    {
        return accuracy;
    }

    @JsonProperty(JSON_PROPERTY_ACCURACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAccuracy(String accuracy)
    {
        this.accuracy = accuracy;
    }

    public LocationReportingConfiguration n3gppAccuracy(String n3gppAccuracy)
    {

        this.n3gppAccuracy = n3gppAccuracy;
        return this;
    }

    /**
     * Get n3gppAccuracy
     * 
     * @return n3gppAccuracy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_N3GPP_ACCURACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getN3gppAccuracy()
    {
        return n3gppAccuracy;
    }

    @JsonProperty(JSON_PROPERTY_N3GPP_ACCURACY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN3gppAccuracy(String n3gppAccuracy)
    {
        this.n3gppAccuracy = n3gppAccuracy;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        LocationReportingConfiguration locationReportingConfiguration = (LocationReportingConfiguration) o;
        return Objects.equals(this.currentLocation, locationReportingConfiguration.currentLocation)
               && Objects.equals(this.oneTime, locationReportingConfiguration.oneTime) && Objects.equals(this.accuracy, locationReportingConfiguration.accuracy)
               && Objects.equals(this.n3gppAccuracy, locationReportingConfiguration.n3gppAccuracy);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(currentLocation, oneTime, accuracy, n3gppAccuracy);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class LocationReportingConfiguration {\n");
        sb.append("    currentLocation: ").append(toIndentedString(currentLocation)).append("\n");
        sb.append("    oneTime: ").append(toIndentedString(oneTime)).append("\n");
        sb.append("    accuracy: ").append(toIndentedString(accuracy)).append("\n");
        sb.append("    n3gppAccuracy: ").append(toIndentedString(n3gppAccuracy)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
