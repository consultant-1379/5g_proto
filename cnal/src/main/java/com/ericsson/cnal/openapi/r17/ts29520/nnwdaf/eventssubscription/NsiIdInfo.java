/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the S-NSSAI and the optionally associated Network Slice
 * Instance(s).
 */
@ApiModel(description = "Represents the S-NSSAI and the optionally associated Network Slice Instance(s).")
@JsonPropertyOrder({ NsiIdInfo.JSON_PROPERTY_SNSSAI, NsiIdInfo.JSON_PROPERTY_NSI_IDS })
public class NsiIdInfo
{
    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_NSI_IDS = "nsiIds";
    private List<String> nsiIds = null;

    public NsiIdInfo()
    {
    }

    public NsiIdInfo snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public NsiIdInfo nsiIds(List<String> nsiIds)
    {

        this.nsiIds = nsiIds;
        return this;
    }

    public NsiIdInfo addNsiIdsItem(String nsiIdsItem)
    {
        if (this.nsiIds == null)
        {
            this.nsiIds = new ArrayList<>();
        }
        this.nsiIds.add(nsiIdsItem);
        return this;
    }

    /**
     * Get nsiIds
     * 
     * @return nsiIds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NSI_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getNsiIds()
    {
        return nsiIds;
    }

    @JsonProperty(JSON_PROPERTY_NSI_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNsiIds(List<String> nsiIds)
    {
        this.nsiIds = nsiIds;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NsiIdInfo nsiIdInfo = (NsiIdInfo) o;
        return Objects.equals(this.snssai, nsiIdInfo.snssai) && Objects.equals(this.nsiIds, nsiIdInfo.nsiIds);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(snssai, nsiIds);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NsiIdInfo {\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    nsiIds: ").append(toIndentedString(nsiIds)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
