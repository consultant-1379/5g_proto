/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * List of NR cell ids, with their pertaining TAIs
 */
@ApiModel(description = "List of NR cell ids, with their pertaining TAIs")
@JsonPropertyOrder({ NcgiTai.JSON_PROPERTY_TAI, NcgiTai.JSON_PROPERTY_CELL_LIST })
public class NcgiTai
{
    public static final String JSON_PROPERTY_TAI = "tai";
    private Tai tai;

    public static final String JSON_PROPERTY_CELL_LIST = "cellList";
    private List<Ncgi> cellList = new ArrayList<>();

    public NcgiTai()
    {
    }

    public NcgiTai tai(Tai tai)
    {

        this.tai = tai;
        return this;
    }

    /**
     * Get tai
     * 
     * @return tai
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_TAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Tai getTai()
    {
        return tai;
    }

    @JsonProperty(JSON_PROPERTY_TAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTai(Tai tai)
    {
        this.tai = tai;
    }

    public NcgiTai cellList(List<Ncgi> cellList)
    {

        this.cellList = cellList;
        return this;
    }

    public NcgiTai addCellListItem(Ncgi cellListItem)
    {
        this.cellList.add(cellListItem);
        return this;
    }

    /**
     * List of List of NR cell ids
     * 
     * @return cellList
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "List of List of NR cell ids")
    @JsonProperty(JSON_PROPERTY_CELL_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public List<Ncgi> getCellList()
    {
        return cellList;
    }

    @JsonProperty(JSON_PROPERTY_CELL_LIST)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCellList(List<Ncgi> cellList)
    {
        this.cellList = cellList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NcgiTai ncgiTai = (NcgiTai) o;
        return Objects.equals(this.tai, ncgiTai.tai) && Objects.equals(this.cellList, ncgiTai.cellList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(tai, cellList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NcgiTai {\n");
        sb.append("    tai: ").append(toIndentedString(tai)).append("\n");
        sb.append("    cellList: ").append(toIndentedString(cellList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
