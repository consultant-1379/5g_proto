/*
 * Common Data Types
 * Common Data Types for Service Based Interfaces.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.   
 *
 * The version of the OpenAPI document: 1.4.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29571.commondata;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the PCF for the UE information necessary for the PCF for the PDU
 * session to send SM Policy Association Establishment and Termination events.
 */
@ApiModel(description = "Contains the PCF for the UE information necessary for the PCF for the PDU session to send  SM Policy Association Establishment and Termination events. ")
@JsonPropertyOrder({ PcfUeCallbackInfo.JSON_PROPERTY_CALLBACK_URI, PcfUeCallbackInfo.JSON_PROPERTY_BINDING_INFO })
public class PcfUeCallbackInfo
{
    public static final String JSON_PROPERTY_CALLBACK_URI = "callbackUri";
    private String callbackUri;

    public static final String JSON_PROPERTY_BINDING_INFO = "bindingInfo";
    private String bindingInfo;

    public PcfUeCallbackInfo()
    {
    }

    public PcfUeCallbackInfo callbackUri(String callbackUri)
    {

        this.callbackUri = callbackUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return callbackUri
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_CALLBACK_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getCallbackUri()
    {
        return callbackUri;
    }

    @JsonProperty(JSON_PROPERTY_CALLBACK_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCallbackUri(String callbackUri)
    {
        this.callbackUri = callbackUri;
    }

    public PcfUeCallbackInfo bindingInfo(String bindingInfo)
    {

        this.bindingInfo = bindingInfo;
        return this;
    }

    /**
     * Get bindingInfo
     * 
     * @return bindingInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_BINDING_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getBindingInfo()
    {
        return bindingInfo;
    }

    @JsonProperty(JSON_PROPERTY_BINDING_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBindingInfo(String bindingInfo)
    {
        this.bindingInfo = bindingInfo;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PcfUeCallbackInfo pcfUeCallbackInfo = (PcfUeCallbackInfo) o;
        return Objects.equals(this.callbackUri, pcfUeCallbackInfo.callbackUri) && Objects.equals(this.bindingInfo, pcfUeCallbackInfo.bindingInfo);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(callbackUri, bindingInfo);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PcfUeCallbackInfo {\n");
        sb.append("    callbackUri: ").append(toIndentedString(callbackUri)).append("\n");
        sb.append("    bindingInfo: ").append(toIndentedString(bindingInfo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
