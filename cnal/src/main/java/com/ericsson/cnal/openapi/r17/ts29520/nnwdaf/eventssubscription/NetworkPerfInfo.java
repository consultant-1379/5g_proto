/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29554.npcf.bdtpolicycontrol.NetworkAreaInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the network performance information.
 */
@ApiModel(description = "Represents the network performance information.")
@JsonPropertyOrder({ NetworkPerfInfo.JSON_PROPERTY_NETWORK_AREA,
                     NetworkPerfInfo.JSON_PROPERTY_NW_PERF_TYPE,
                     NetworkPerfInfo.JSON_PROPERTY_RELATIVE_RATIO,
                     NetworkPerfInfo.JSON_PROPERTY_ABSOLUTE_NUM,
                     NetworkPerfInfo.JSON_PROPERTY_CONFIDENCE })
public class NetworkPerfInfo
{
    public static final String JSON_PROPERTY_NETWORK_AREA = "networkArea";
    private NetworkAreaInfo networkArea;

    public static final String JSON_PROPERTY_NW_PERF_TYPE = "nwPerfType";
    private String nwPerfType;

    public static final String JSON_PROPERTY_RELATIVE_RATIO = "relativeRatio";
    private Integer relativeRatio;

    public static final String JSON_PROPERTY_ABSOLUTE_NUM = "absoluteNum";
    private Integer absoluteNum;

    public static final String JSON_PROPERTY_CONFIDENCE = "confidence";
    private Integer confidence;

    public NetworkPerfInfo()
    {
    }

    public NetworkPerfInfo networkArea(NetworkAreaInfo networkArea)
    {

        this.networkArea = networkArea;
        return this;
    }

    /**
     * Get networkArea
     * 
     * @return networkArea
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_NETWORK_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NetworkAreaInfo getNetworkArea()
    {
        return networkArea;
    }

    @JsonProperty(JSON_PROPERTY_NETWORK_AREA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNetworkArea(NetworkAreaInfo networkArea)
    {
        this.networkArea = networkArea;
    }

    public NetworkPerfInfo nwPerfType(String nwPerfType)
    {

        this.nwPerfType = nwPerfType;
        return this;
    }

    /**
     * Possible values are: - GNB_ACTIVE_RATIO: Indicates that the network
     * performance requirement is gNodeB active (i.e. up and running) rate.
     * Indicates the ratio of gNB active (i.e. up and running) number to the total
     * number of gNB - GNB_COMPUTING_USAGE: Indicates gNodeB computing resource
     * usage. - GNB_MEMORY_USAGE: Indicates gNodeB memory usage. - GNB_DISK_USAGE:
     * Indicates gNodeB disk usage. - NUM_OF_UE: Indicates number of UEs. -
     * SESS_SUCC_RATIO: Indicates ratio of successful setup of PDU sessions to total
     * PDU session setup attempts. - HO_SUCC_RATIO: Indicates Ratio of successful
     * handovers to the total handover attempts.
     * 
     * @return nwPerfType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - GNB_ACTIVE_RATIO: Indicates that the network performance requirement is gNodeB active (i.e. up and running) rate. Indicates the ratio of gNB active (i.e. up and running) number to the total number of gNB - GNB_COMPUTING_USAGE: Indicates gNodeB computing resource usage. - GNB_MEMORY_USAGE: Indicates gNodeB memory usage. - GNB_DISK_USAGE: Indicates gNodeB disk usage. - NUM_OF_UE: Indicates number of UEs. - SESS_SUCC_RATIO: Indicates ratio of successful setup of PDU sessions to total PDU session setup attempts. - HO_SUCC_RATIO: Indicates Ratio of successful handovers to the total handover attempts.  ")
    @JsonProperty(JSON_PROPERTY_NW_PERF_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNwPerfType()
    {
        return nwPerfType;
    }

    @JsonProperty(JSON_PROPERTY_NW_PERF_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNwPerfType(String nwPerfType)
    {
        this.nwPerfType = nwPerfType;
    }

    public NetworkPerfInfo relativeRatio(Integer relativeRatio)
    {

        this.relativeRatio = relativeRatio;
        return this;
    }

    /**
     * Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS
     * 23.502), expressed in percent. minimum: 1 maximum: 100
     * 
     * @return relativeRatio
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  ")
    @JsonProperty(JSON_PROPERTY_RELATIVE_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getRelativeRatio()
    {
        return relativeRatio;
    }

    @JsonProperty(JSON_PROPERTY_RELATIVE_RATIO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRelativeRatio(Integer relativeRatio)
    {
        this.relativeRatio = relativeRatio;
    }

    public NetworkPerfInfo absoluteNum(Integer absoluteNum)
    {

        this.absoluteNum = absoluteNum;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return absoluteNum
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_ABSOLUTE_NUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getAbsoluteNum()
    {
        return absoluteNum;
    }

    @JsonProperty(JSON_PROPERTY_ABSOLUTE_NUM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAbsoluteNum(Integer absoluteNum)
    {
        this.absoluteNum = absoluteNum;
    }

    public NetworkPerfInfo confidence(Integer confidence)
    {

        this.confidence = confidence;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return confidence
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_CONFIDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getConfidence()
    {
        return confidence;
    }

    @JsonProperty(JSON_PROPERTY_CONFIDENCE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConfidence(Integer confidence)
    {
        this.confidence = confidence;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NetworkPerfInfo networkPerfInfo = (NetworkPerfInfo) o;
        return Objects.equals(this.networkArea, networkPerfInfo.networkArea) && Objects.equals(this.nwPerfType, networkPerfInfo.nwPerfType)
               && Objects.equals(this.relativeRatio, networkPerfInfo.relativeRatio) && Objects.equals(this.absoluteNum, networkPerfInfo.absoluteNum)
               && Objects.equals(this.confidence, networkPerfInfo.confidence);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(networkArea, nwPerfType, relativeRatio, absoluteNum, confidence);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NetworkPerfInfo {\n");
        sb.append("    networkArea: ").append(toIndentedString(networkArea)).append("\n");
        sb.append("    nwPerfType: ").append(toIndentedString(nwPerfType)).append("\n");
        sb.append("    relativeRatio: ").append(toIndentedString(relativeRatio)).append("\n");
        sb.append("    absoluteNum: ").append(toIndentedString(absoluteNum)).append("\n");
        sb.append("    confidence: ").append(toIndentedString(confidence)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
