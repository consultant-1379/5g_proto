/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the redirect information.
 */
@ApiModel(description = "Contains the redirect information.")
@JsonPropertyOrder({ RedirectInformation.JSON_PROPERTY_REDIRECT_ENABLED,
                     RedirectInformation.JSON_PROPERTY_REDIRECT_ADDRESS_TYPE,
                     RedirectInformation.JSON_PROPERTY_REDIRECT_SERVER_ADDRESS })
public class RedirectInformation
{
    public static final String JSON_PROPERTY_REDIRECT_ENABLED = "redirectEnabled";
    private Boolean redirectEnabled;

    public static final String JSON_PROPERTY_REDIRECT_ADDRESS_TYPE = "redirectAddressType";
    private String redirectAddressType;

    public static final String JSON_PROPERTY_REDIRECT_SERVER_ADDRESS = "redirectServerAddress";
    private String redirectServerAddress;

    public RedirectInformation()
    {
    }

    public RedirectInformation redirectEnabled(Boolean redirectEnabled)
    {

        this.redirectEnabled = redirectEnabled;
        return this;
    }

    /**
     * Indicates the redirect is enable.
     * 
     * @return redirectEnabled
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the redirect is enable.")
    @JsonProperty(JSON_PROPERTY_REDIRECT_ENABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRedirectEnabled()
    {
        return redirectEnabled;
    }

    @JsonProperty(JSON_PROPERTY_REDIRECT_ENABLED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRedirectEnabled(Boolean redirectEnabled)
    {
        this.redirectEnabled = redirectEnabled;
    }

    public RedirectInformation redirectAddressType(String redirectAddressType)
    {

        this.redirectAddressType = redirectAddressType;
        return this;
    }

    /**
     * Possible values are - IPV4_ADDR: Indicates that the address type is in the
     * form of \&quot;dotted-decimal\&quot; IPv4 address. - IPV6_ADDR: Indicates
     * that the address type is in the form of IPv6 address. - URL: Indicates that
     * the address type is in the form of Uniform Resource Locator. - SIP_URI:
     * Indicates that the address type is in the form of SIP Uniform Resource
     * Identifier.
     * 
     * @return redirectAddressType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are - IPV4_ADDR: Indicates that the address type is in the form of \"dotted-decimal\" IPv4 address. - IPV6_ADDR: Indicates that the address type is in the form of IPv6 address. - URL: Indicates that the address type is in the form of Uniform Resource Locator. - SIP_URI: Indicates that the address type is in the form of SIP Uniform Resource Identifier. ")
    @JsonProperty(JSON_PROPERTY_REDIRECT_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRedirectAddressType()
    {
        return redirectAddressType;
    }

    @JsonProperty(JSON_PROPERTY_REDIRECT_ADDRESS_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRedirectAddressType(String redirectAddressType)
    {
        this.redirectAddressType = redirectAddressType;
    }

    public RedirectInformation redirectServerAddress(String redirectServerAddress)
    {

        this.redirectServerAddress = redirectServerAddress;
        return this;
    }

    /**
     * Indicates the address of the redirect server. If
     * \&quot;redirectAddressType\&quot; attribute indicates the IPV4_ADDR, the
     * encoding is the same as the Ipv4Addr data type defined in 3GPP TS 29.571.If
     * \&quot;redirectAddressType\&quot; attribute indicates the IPV6_ADDR, the
     * encoding is the same as the String data type defined in 3GPP TS 29.571.If
     * \&quot;redirectAddressType\&quot; attribute indicates the URL or SIP_URI, the
     * encoding is the same as the Uri data type defined in 3GPP TS 29.571.
     * 
     * @return redirectServerAddress
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the address of the redirect server. If \"redirectAddressType\" attribute indicates the IPV4_ADDR, the encoding is the same as the Ipv4Addr data type defined in 3GPP TS 29.571.If \"redirectAddressType\" attribute indicates the IPV6_ADDR, the encoding is the same as the String data type defined in 3GPP TS 29.571.If \"redirectAddressType\" attribute indicates the URL or SIP_URI, the encoding is the same as the Uri data type defined in 3GPP TS 29.571. ")
    @JsonProperty(JSON_PROPERTY_REDIRECT_SERVER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRedirectServerAddress()
    {
        return redirectServerAddress;
    }

    @JsonProperty(JSON_PROPERTY_REDIRECT_SERVER_ADDRESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRedirectServerAddress(String redirectServerAddress)
    {
        this.redirectServerAddress = redirectServerAddress;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RedirectInformation redirectInformation = (RedirectInformation) o;
        return Objects.equals(this.redirectEnabled, redirectInformation.redirectEnabled)
               && Objects.equals(this.redirectAddressType, redirectInformation.redirectAddressType)
               && Objects.equals(this.redirectServerAddress, redirectInformation.redirectServerAddress);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(redirectEnabled, redirectAddressType, redirectServerAddress);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RedirectInformation {\n");
        sb.append("    redirectEnabled: ").append(toIndentedString(redirectEnabled)).append("\n");
        sb.append("    redirectAddressType: ").append(toIndentedString(redirectAddressType)).append("\n");
        sb.append("    redirectServerAddress: ").append(toIndentedString(redirectServerAddress)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
