/*
 * Nchf_SpendingLimitControl
 * Nchf Spending Limit Control Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29594.nchf.spendinglimitcontrol;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the data structure presenting the policy counter status.
 */
@ApiModel(description = "Represents the data structure presenting the policy counter status.")
@JsonPropertyOrder({ PolicyCounterInfo.JSON_PROPERTY_POLICY_COUNTER_ID,
                     PolicyCounterInfo.JSON_PROPERTY_CURRENT_STATUS,
                     PolicyCounterInfo.JSON_PROPERTY_PEN_POL_COUNTER_STATUSES })
public class PolicyCounterInfo
{
    public static final String JSON_PROPERTY_POLICY_COUNTER_ID = "policyCounterId";
    private String policyCounterId;

    public static final String JSON_PROPERTY_CURRENT_STATUS = "currentStatus";
    private String currentStatus;

    public static final String JSON_PROPERTY_PEN_POL_COUNTER_STATUSES = "penPolCounterStatuses";
    private List<PendingPolicyCounterStatus> penPolCounterStatuses = null;

    public PolicyCounterInfo()
    {
    }

    public PolicyCounterInfo policyCounterId(String policyCounterId)
    {

        this.policyCounterId = policyCounterId;
        return this;
    }

    /**
     * Identifies a policy counter.
     * 
     * @return policyCounterId
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Identifies a policy counter.")
    @JsonProperty(JSON_PROPERTY_POLICY_COUNTER_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getPolicyCounterId()
    {
        return policyCounterId;
    }

    @JsonProperty(JSON_PROPERTY_POLICY_COUNTER_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPolicyCounterId(String policyCounterId)
    {
        this.policyCounterId = policyCounterId;
    }

    public PolicyCounterInfo currentStatus(String currentStatus)
    {

        this.currentStatus = currentStatus;
        return this;
    }

    /**
     * Identifies the policy counter status applicable for a specific policy counter
     * identified by the policyCounterId. The values (e.g. valid, invalid or any
     * other status) are not specified. The interpretation and actions related to
     * the defined values are out of scope of 3GPP.
     * 
     * @return currentStatus
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "Identifies the policy counter status applicable for a specific policy counter identified by the policyCounterId. The values (e.g. valid, invalid or any other status) are not specified. The interpretation and actions related to the defined values are out of scope of 3GPP. ")
    @JsonProperty(JSON_PROPERTY_CURRENT_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getCurrentStatus()
    {
        return currentStatus;
    }

    @JsonProperty(JSON_PROPERTY_CURRENT_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCurrentStatus(String currentStatus)
    {
        this.currentStatus = currentStatus;
    }

    public PolicyCounterInfo penPolCounterStatuses(List<PendingPolicyCounterStatus> penPolCounterStatuses)
    {

        this.penPolCounterStatuses = penPolCounterStatuses;
        return this;
    }

    public PolicyCounterInfo addPenPolCounterStatusesItem(PendingPolicyCounterStatus penPolCounterStatusesItem)
    {
        if (this.penPolCounterStatuses == null)
        {
            this.penPolCounterStatuses = new ArrayList<>();
        }
        this.penPolCounterStatuses.add(penPolCounterStatusesItem);
        return this;
    }

    /**
     * Provides the pending policy counter status.
     * 
     * @return penPolCounterStatuses
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Provides the pending policy counter status.")
    @JsonProperty(JSON_PROPERTY_PEN_POL_COUNTER_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<PendingPolicyCounterStatus> getPenPolCounterStatuses()
    {
        return penPolCounterStatuses;
    }

    @JsonProperty(JSON_PROPERTY_PEN_POL_COUNTER_STATUSES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setPenPolCounterStatuses(List<PendingPolicyCounterStatus> penPolCounterStatuses)
    {
        this.penPolCounterStatuses = penPolCounterStatuses;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PolicyCounterInfo policyCounterInfo = (PolicyCounterInfo) o;
        return Objects.equals(this.policyCounterId, policyCounterInfo.policyCounterId) && Objects.equals(this.currentStatus, policyCounterInfo.currentStatus)
               && Objects.equals(this.penPolCounterStatuses, policyCounterInfo.penPolCounterStatuses);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(policyCounterId, currentStatus, penPolCounterStatuses);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PolicyCounterInfo {\n");
        sb.append("    policyCounterId: ").append(toIndentedString(policyCounterId)).append("\n");
        sb.append("    currentStatus: ").append(toIndentedString(currentStatus)).append("\n");
        sb.append("    penPolCounterStatuses: ").append(toIndentedString(penPolCounterStatuses)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
