/*
 * Nsmf_PDUSession
 * SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29502.nsmf.pdusession;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.RefToBinaryData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Data within Update SM Context Response
 */
@ApiModel(description = "Data within Update SM Context Response")
@JsonPropertyOrder({ SmContextUpdatedData.JSON_PROPERTY_UP_CNX_STATE,
                     SmContextUpdatedData.JSON_PROPERTY_HO_STATE,
                     SmContextUpdatedData.JSON_PROPERTY_RELEASE_EBI_LIST,
                     SmContextUpdatedData.JSON_PROPERTY_ALLOCATED_EBI_LIST,
                     SmContextUpdatedData.JSON_PROPERTY_MODIFIED_EBI_LIST,
                     SmContextUpdatedData.JSON_PROPERTY_N1_SM_MSG,
                     SmContextUpdatedData.JSON_PROPERTY_N2_SM_INFO,
                     SmContextUpdatedData.JSON_PROPERTY_N2_SM_INFO_TYPE,
                     SmContextUpdatedData.JSON_PROPERTY_EPS_BEARER_SETUP,
                     SmContextUpdatedData.JSON_PROPERTY_DATA_FORWARDING,
                     SmContextUpdatedData.JSON_PROPERTY_N3_DL_FORWARDING_TNL_LIST,
                     SmContextUpdatedData.JSON_PROPERTY_N3_UL_FORWARDING_TNL_LIST,
                     SmContextUpdatedData.JSON_PROPERTY_N9_UL_FORWARDING_TUNNEL,
                     SmContextUpdatedData.JSON_PROPERTY_CAUSE,
                     SmContextUpdatedData.JSON_PROPERTY_MA_ACCEPTED_IND,
                     SmContextUpdatedData.JSON_PROPERTY_SUPPORTED_FEATURES,
                     SmContextUpdatedData.JSON_PROPERTY_FORWARDING_F_TEID,
                     SmContextUpdatedData.JSON_PROPERTY_FORWARDING_BEARER_CONTEXTS,
                     SmContextUpdatedData.JSON_PROPERTY_SELECTED_SMF_ID,
                     SmContextUpdatedData.JSON_PROPERTY_SELECTED_OLD_SMF_ID,
                     SmContextUpdatedData.JSON_PROPERTY_INTER_PLMN_API_ROOT,
                     SmContextUpdatedData.JSON_PROPERTY_ANCHOR_SMF_FEATURES })
public class SmContextUpdatedData
{
    public static final String JSON_PROPERTY_UP_CNX_STATE = "upCnxState";
    private String upCnxState;

    public static final String JSON_PROPERTY_HO_STATE = "hoState";
    private String hoState;

    public static final String JSON_PROPERTY_RELEASE_EBI_LIST = "releaseEbiList";
    private List<Integer> releaseEbiList = null;

    public static final String JSON_PROPERTY_ALLOCATED_EBI_LIST = "allocatedEbiList";
    private List<EbiArpMapping> allocatedEbiList = null;

    public static final String JSON_PROPERTY_MODIFIED_EBI_LIST = "modifiedEbiList";
    private List<EbiArpMapping> modifiedEbiList = null;

    public static final String JSON_PROPERTY_N1_SM_MSG = "n1SmMsg";
    private RefToBinaryData n1SmMsg;

    public static final String JSON_PROPERTY_N2_SM_INFO = "n2SmInfo";
    private RefToBinaryData n2SmInfo;

    public static final String JSON_PROPERTY_N2_SM_INFO_TYPE = "n2SmInfoType";
    private String n2SmInfoType;

    public static final String JSON_PROPERTY_EPS_BEARER_SETUP = "epsBearerSetup";
    private List<String> epsBearerSetup = null;

    public static final String JSON_PROPERTY_DATA_FORWARDING = "dataForwarding";
    private Boolean dataForwarding;

    public static final String JSON_PROPERTY_N3_DL_FORWARDING_TNL_LIST = "n3DlForwardingTnlList";
    private List<IndirectDataForwardingTunnelInfo> n3DlForwardingTnlList = null;

    public static final String JSON_PROPERTY_N3_UL_FORWARDING_TNL_LIST = "n3UlForwardingTnlList";
    private List<IndirectDataForwardingTunnelInfo> n3UlForwardingTnlList = null;

    public static final String JSON_PROPERTY_N9_UL_FORWARDING_TUNNEL = "n9UlForwardingTunnel";
    private TunnelInfo n9UlForwardingTunnel;

    public static final String JSON_PROPERTY_CAUSE = "cause";
    private String cause;

    public static final String JSON_PROPERTY_MA_ACCEPTED_IND = "maAcceptedInd";
    private Boolean maAcceptedInd = false;

    public static final String JSON_PROPERTY_SUPPORTED_FEATURES = "supportedFeatures";
    private String supportedFeatures;

    public static final String JSON_PROPERTY_FORWARDING_F_TEID = "forwardingFTeid";
    private byte[] forwardingFTeid;

    public static final String JSON_PROPERTY_FORWARDING_BEARER_CONTEXTS = "forwardingBearerContexts";
    private List<String> forwardingBearerContexts = null;

    public static final String JSON_PROPERTY_SELECTED_SMF_ID = "selectedSmfId";
    private UUID selectedSmfId;

    public static final String JSON_PROPERTY_SELECTED_OLD_SMF_ID = "selectedOldSmfId";
    private UUID selectedOldSmfId;

    public static final String JSON_PROPERTY_INTER_PLMN_API_ROOT = "interPlmnApiRoot";
    private String interPlmnApiRoot;

    public static final String JSON_PROPERTY_ANCHOR_SMF_FEATURES = "anchorSmfFeatures";
    private AnchorSmfFeatures anchorSmfFeatures;

    public SmContextUpdatedData()
    {
    }

    public SmContextUpdatedData upCnxState(String upCnxState)
    {

        this.upCnxState = upCnxState;
        return this;
    }

    /**
     * User Plane Connection State. Possible values are - ACTIVATED - DEACTIVATED -
     * ACTIVATING - SUSPENDED
     * 
     * @return upCnxState
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "User Plane Connection State. Possible values are - ACTIVATED - DEACTIVATED - ACTIVATING - SUSPENDED ")
    @JsonProperty(JSON_PROPERTY_UP_CNX_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUpCnxState()
    {
        return upCnxState;
    }

    @JsonProperty(JSON_PROPERTY_UP_CNX_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUpCnxState(String upCnxState)
    {
        this.upCnxState = upCnxState;
    }

    public SmContextUpdatedData hoState(String hoState)
    {

        this.hoState = hoState;
        return this;
    }

    /**
     * Handover state. Possible values are - NONE - PREPARING - PREPARED - COMPLETED
     * - CANCELLED
     * 
     * @return hoState
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Handover state. Possible values are - NONE - PREPARING - PREPARED - COMPLETED - CANCELLED ")
    @JsonProperty(JSON_PROPERTY_HO_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getHoState()
    {
        return hoState;
    }

    @JsonProperty(JSON_PROPERTY_HO_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setHoState(String hoState)
    {
        this.hoState = hoState;
    }

    public SmContextUpdatedData releaseEbiList(List<Integer> releaseEbiList)
    {

        this.releaseEbiList = releaseEbiList;
        return this;
    }

    public SmContextUpdatedData addReleaseEbiListItem(Integer releaseEbiListItem)
    {
        if (this.releaseEbiList == null)
        {
            this.releaseEbiList = new ArrayList<>();
        }
        this.releaseEbiList.add(releaseEbiListItem);
        return this;
    }

    /**
     * Get releaseEbiList
     * 
     * @return releaseEbiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_RELEASE_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Integer> getReleaseEbiList()
    {
        return releaseEbiList;
    }

    @JsonProperty(JSON_PROPERTY_RELEASE_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReleaseEbiList(List<Integer> releaseEbiList)
    {
        this.releaseEbiList = releaseEbiList;
    }

    public SmContextUpdatedData allocatedEbiList(List<EbiArpMapping> allocatedEbiList)
    {

        this.allocatedEbiList = allocatedEbiList;
        return this;
    }

    public SmContextUpdatedData addAllocatedEbiListItem(EbiArpMapping allocatedEbiListItem)
    {
        if (this.allocatedEbiList == null)
        {
            this.allocatedEbiList = new ArrayList<>();
        }
        this.allocatedEbiList.add(allocatedEbiListItem);
        return this;
    }

    /**
     * Get allocatedEbiList
     * 
     * @return allocatedEbiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ALLOCATED_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EbiArpMapping> getAllocatedEbiList()
    {
        return allocatedEbiList;
    }

    @JsonProperty(JSON_PROPERTY_ALLOCATED_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAllocatedEbiList(List<EbiArpMapping> allocatedEbiList)
    {
        this.allocatedEbiList = allocatedEbiList;
    }

    public SmContextUpdatedData modifiedEbiList(List<EbiArpMapping> modifiedEbiList)
    {

        this.modifiedEbiList = modifiedEbiList;
        return this;
    }

    public SmContextUpdatedData addModifiedEbiListItem(EbiArpMapping modifiedEbiListItem)
    {
        if (this.modifiedEbiList == null)
        {
            this.modifiedEbiList = new ArrayList<>();
        }
        this.modifiedEbiList.add(modifiedEbiListItem);
        return this;
    }

    /**
     * Get modifiedEbiList
     * 
     * @return modifiedEbiList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MODIFIED_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EbiArpMapping> getModifiedEbiList()
    {
        return modifiedEbiList;
    }

    @JsonProperty(JSON_PROPERTY_MODIFIED_EBI_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setModifiedEbiList(List<EbiArpMapping> modifiedEbiList)
    {
        this.modifiedEbiList = modifiedEbiList;
    }

    public SmContextUpdatedData n1SmMsg(RefToBinaryData n1SmMsg)
    {

        this.n1SmMsg = n1SmMsg;
        return this;
    }

    /**
     * Get n1SmMsg
     * 
     * @return n1SmMsg
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_N1_SM_MSG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RefToBinaryData getN1SmMsg()
    {
        return n1SmMsg;
    }

    @JsonProperty(JSON_PROPERTY_N1_SM_MSG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN1SmMsg(RefToBinaryData n1SmMsg)
    {
        this.n1SmMsg = n1SmMsg;
    }

    public SmContextUpdatedData n2SmInfo(RefToBinaryData n2SmInfo)
    {

        this.n2SmInfo = n2SmInfo;
        return this;
    }

    /**
     * Get n2SmInfo
     * 
     * @return n2SmInfo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_N2_SM_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public RefToBinaryData getN2SmInfo()
    {
        return n2SmInfo;
    }

    @JsonProperty(JSON_PROPERTY_N2_SM_INFO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN2SmInfo(RefToBinaryData n2SmInfo)
    {
        this.n2SmInfo = n2SmInfo;
    }

    public SmContextUpdatedData n2SmInfoType(String n2SmInfoType)
    {

        this.n2SmInfoType = n2SmInfoType;
        return this;
    }

    /**
     * N2 SM Information Type. Possible values are - PDU_RES_SETUP_REQ -
     * PDU_RES_SETUP_RSP - PDU_RES_SETUP_FAIL - PDU_RES_REL_CMD - PDU_RES_REL_RSP -
     * PDU_RES_MOD_REQ - PDU_RES_MOD_RSP - PDU_RES_MOD_FAIL - PDU_RES_NTY -
     * PDU_RES_NTY_REL - PDU_RES_MOD_IND - PDU_RES_MOD_CFM - PATH_SWITCH_REQ -
     * PATH_SWITCH_SETUP_FAIL - PATH_SWITCH_REQ_ACK - PATH_SWITCH_REQ_FAIL -
     * HANDOVER_REQUIRED - HANDOVER_CMD - HANDOVER_PREP_FAIL - HANDOVER_REQ_ACK -
     * HANDOVER_RES_ALLOC_FAIL - SECONDARY_RAT_USAGE - PDU_RES_MOD_IND_FAIL -
     * UE_CONTEXT_RESUME_REQ - UE_CONTEXT_RESUME_RSP - UE_CONTEXT_SUSPEND_REQ
     * 
     * @return n2SmInfoType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "N2 SM Information Type. Possible values are - PDU_RES_SETUP_REQ - PDU_RES_SETUP_RSP - PDU_RES_SETUP_FAIL - PDU_RES_REL_CMD - PDU_RES_REL_RSP - PDU_RES_MOD_REQ - PDU_RES_MOD_RSP - PDU_RES_MOD_FAIL - PDU_RES_NTY - PDU_RES_NTY_REL - PDU_RES_MOD_IND - PDU_RES_MOD_CFM - PATH_SWITCH_REQ - PATH_SWITCH_SETUP_FAIL - PATH_SWITCH_REQ_ACK - PATH_SWITCH_REQ_FAIL - HANDOVER_REQUIRED - HANDOVER_CMD - HANDOVER_PREP_FAIL - HANDOVER_REQ_ACK - HANDOVER_RES_ALLOC_FAIL - SECONDARY_RAT_USAGE - PDU_RES_MOD_IND_FAIL - UE_CONTEXT_RESUME_REQ - UE_CONTEXT_RESUME_RSP - UE_CONTEXT_SUSPEND_REQ ")
    @JsonProperty(JSON_PROPERTY_N2_SM_INFO_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getN2SmInfoType()
    {
        return n2SmInfoType;
    }

    @JsonProperty(JSON_PROPERTY_N2_SM_INFO_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN2SmInfoType(String n2SmInfoType)
    {
        this.n2SmInfoType = n2SmInfoType;
    }

    public SmContextUpdatedData epsBearerSetup(List<String> epsBearerSetup)
    {

        this.epsBearerSetup = epsBearerSetup;
        return this;
    }

    public SmContextUpdatedData addEpsBearerSetupItem(String epsBearerSetupItem)
    {
        if (this.epsBearerSetup == null)
        {
            this.epsBearerSetup = new ArrayList<>();
        }
        this.epsBearerSetup.add(epsBearerSetupItem);
        return this;
    }

    /**
     * Get epsBearerSetup
     * 
     * @return epsBearerSetup
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EPS_BEARER_SETUP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getEpsBearerSetup()
    {
        return epsBearerSetup;
    }

    @JsonProperty(JSON_PROPERTY_EPS_BEARER_SETUP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEpsBearerSetup(List<String> epsBearerSetup)
    {
        this.epsBearerSetup = epsBearerSetup;
    }

    public SmContextUpdatedData dataForwarding(Boolean dataForwarding)
    {

        this.dataForwarding = dataForwarding;
        return this;
    }

    /**
     * Get dataForwarding
     * 
     * @return dataForwarding
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DATA_FORWARDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getDataForwarding()
    {
        return dataForwarding;
    }

    @JsonProperty(JSON_PROPERTY_DATA_FORWARDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDataForwarding(Boolean dataForwarding)
    {
        this.dataForwarding = dataForwarding;
    }

    public SmContextUpdatedData n3DlForwardingTnlList(List<IndirectDataForwardingTunnelInfo> n3DlForwardingTnlList)
    {

        this.n3DlForwardingTnlList = n3DlForwardingTnlList;
        return this;
    }

    public SmContextUpdatedData addN3DlForwardingTnlListItem(IndirectDataForwardingTunnelInfo n3DlForwardingTnlListItem)
    {
        if (this.n3DlForwardingTnlList == null)
        {
            this.n3DlForwardingTnlList = new ArrayList<>();
        }
        this.n3DlForwardingTnlList.add(n3DlForwardingTnlListItem);
        return this;
    }

    /**
     * Get n3DlForwardingTnlList
     * 
     * @return n3DlForwardingTnlList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_N3_DL_FORWARDING_TNL_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<IndirectDataForwardingTunnelInfo> getN3DlForwardingTnlList()
    {
        return n3DlForwardingTnlList;
    }

    @JsonProperty(JSON_PROPERTY_N3_DL_FORWARDING_TNL_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN3DlForwardingTnlList(List<IndirectDataForwardingTunnelInfo> n3DlForwardingTnlList)
    {
        this.n3DlForwardingTnlList = n3DlForwardingTnlList;
    }

    public SmContextUpdatedData n3UlForwardingTnlList(List<IndirectDataForwardingTunnelInfo> n3UlForwardingTnlList)
    {

        this.n3UlForwardingTnlList = n3UlForwardingTnlList;
        return this;
    }

    public SmContextUpdatedData addN3UlForwardingTnlListItem(IndirectDataForwardingTunnelInfo n3UlForwardingTnlListItem)
    {
        if (this.n3UlForwardingTnlList == null)
        {
            this.n3UlForwardingTnlList = new ArrayList<>();
        }
        this.n3UlForwardingTnlList.add(n3UlForwardingTnlListItem);
        return this;
    }

    /**
     * Get n3UlForwardingTnlList
     * 
     * @return n3UlForwardingTnlList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_N3_UL_FORWARDING_TNL_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<IndirectDataForwardingTunnelInfo> getN3UlForwardingTnlList()
    {
        return n3UlForwardingTnlList;
    }

    @JsonProperty(JSON_PROPERTY_N3_UL_FORWARDING_TNL_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN3UlForwardingTnlList(List<IndirectDataForwardingTunnelInfo> n3UlForwardingTnlList)
    {
        this.n3UlForwardingTnlList = n3UlForwardingTnlList;
    }

    public SmContextUpdatedData n9UlForwardingTunnel(TunnelInfo n9UlForwardingTunnel)
    {

        this.n9UlForwardingTunnel = n9UlForwardingTunnel;
        return this;
    }

    /**
     * Get n9UlForwardingTunnel
     * 
     * @return n9UlForwardingTunnel
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_N9_UL_FORWARDING_TUNNEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TunnelInfo getN9UlForwardingTunnel()
    {
        return n9UlForwardingTunnel;
    }

    @JsonProperty(JSON_PROPERTY_N9_UL_FORWARDING_TUNNEL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN9UlForwardingTunnel(TunnelInfo n9UlForwardingTunnel)
    {
        this.n9UlForwardingTunnel = n9UlForwardingTunnel;
    }

    public SmContextUpdatedData cause(String cause)
    {

        this.cause = cause;
        return this;
    }

    /**
     * Cause information. Possible values are - REL_DUE_TO_HO - EPS_FALLBACK -
     * REL_DUE_TO_UP_SEC - DNN_CONGESTION - S_NSSAI_CONGESTION -
     * REL_DUE_TO_REACTIVATION - 5G_AN_NOT_RESPONDING -
     * REL_DUE_TO_SLICE_NOT_AVAILABLE - REL_DUE_TO_DUPLICATE_SESSION_ID -
     * PDU_SESSION_STATUS_MISMATCH - HO_FAILURE - INSUFFICIENT_UP_RESOURCES -
     * PDU_SESSION_HANDED_OVER - PDU_SESSION_RESUMED -
     * CN_ASSISTED_RAN_PARAMETER_TUNING - ISMF_CONTEXT_TRANSFER -
     * SMF_CONTEXT_TRANSFER - REL_DUE_TO_PS_TO_CS_HO -
     * REL_DUE_TO_SUBSCRIPTION_CHANGE - HO_CANCEL - REL_DUE_TO_SLICE_NOT_AUTHORIZED
     * - PDU_SESSION_HAND_OVER_FAILURE - DDN_FAILURE_STATUS -
     * REL_DUE_TO_CP_ONLY_NOT_APPLICABLE - NOT_SUPPORTED_WITH_ISMF -
     * CHANGED_ANCHOR_SMF - CHANGED_INTERMEDIATE_SMF - TARGET_DNAI_NOTIFICATION -
     * REL_DUE_TO_VPLMN_QOS_FAILURE - REL_DUE_TO_SMF_NOT_SUPPORT_PSETR -
     * REL_DUE_TO_SNPN_SNPN_MOBILITY - REL_DUE_TO_NO_HR_AGREEMENT -
     * REL_DUE_TO_UNSPECIFIED_REASON
     * 
     * @return cause
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Cause information. Possible values are - REL_DUE_TO_HO - EPS_FALLBACK - REL_DUE_TO_UP_SEC - DNN_CONGESTION - S_NSSAI_CONGESTION - REL_DUE_TO_REACTIVATION - 5G_AN_NOT_RESPONDING - REL_DUE_TO_SLICE_NOT_AVAILABLE - REL_DUE_TO_DUPLICATE_SESSION_ID - PDU_SESSION_STATUS_MISMATCH - HO_FAILURE - INSUFFICIENT_UP_RESOURCES - PDU_SESSION_HANDED_OVER - PDU_SESSION_RESUMED - CN_ASSISTED_RAN_PARAMETER_TUNING - ISMF_CONTEXT_TRANSFER - SMF_CONTEXT_TRANSFER - REL_DUE_TO_PS_TO_CS_HO - REL_DUE_TO_SUBSCRIPTION_CHANGE - HO_CANCEL - REL_DUE_TO_SLICE_NOT_AUTHORIZED - PDU_SESSION_HAND_OVER_FAILURE - DDN_FAILURE_STATUS - REL_DUE_TO_CP_ONLY_NOT_APPLICABLE - NOT_SUPPORTED_WITH_ISMF - CHANGED_ANCHOR_SMF - CHANGED_INTERMEDIATE_SMF - TARGET_DNAI_NOTIFICATION - REL_DUE_TO_VPLMN_QOS_FAILURE - REL_DUE_TO_SMF_NOT_SUPPORT_PSETR - REL_DUE_TO_SNPN_SNPN_MOBILITY - REL_DUE_TO_NO_HR_AGREEMENT - REL_DUE_TO_UNSPECIFIED_REASON ")
    @JsonProperty(JSON_PROPERTY_CAUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCause()
    {
        return cause;
    }

    @JsonProperty(JSON_PROPERTY_CAUSE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCause(String cause)
    {
        this.cause = cause;
    }

    public SmContextUpdatedData maAcceptedInd(Boolean maAcceptedInd)
    {

        this.maAcceptedInd = maAcceptedInd;
        return this;
    }

    /**
     * Get maAcceptedInd
     * 
     * @return maAcceptedInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MA_ACCEPTED_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getMaAcceptedInd()
    {
        return maAcceptedInd;
    }

    @JsonProperty(JSON_PROPERTY_MA_ACCEPTED_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaAcceptedInd(Boolean maAcceptedInd)
    {
        this.maAcceptedInd = maAcceptedInd;
    }

    public SmContextUpdatedData supportedFeatures(String supportedFeatures)
    {

        this.supportedFeatures = supportedFeatures;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return supportedFeatures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSupportedFeatures()
    {
        return supportedFeatures;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupportedFeatures(String supportedFeatures)
    {
        this.supportedFeatures = supportedFeatures;
    }

    public SmContextUpdatedData forwardingFTeid(byte[] forwardingFTeid)
    {

        this.forwardingFTeid = forwardingFTeid;
        return this;
    }

    /**
     * string with format &#39;bytes&#39; as defined in OpenAPI
     * 
     * @return forwardingFTeid
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'bytes' as defined in OpenAPI")
    @JsonProperty(JSON_PROPERTY_FORWARDING_F_TEID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public byte[] getForwardingFTeid()
    {
        return forwardingFTeid;
    }

    @JsonProperty(JSON_PROPERTY_FORWARDING_F_TEID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setForwardingFTeid(byte[] forwardingFTeid)
    {
        this.forwardingFTeid = forwardingFTeid;
    }

    public SmContextUpdatedData forwardingBearerContexts(List<String> forwardingBearerContexts)
    {

        this.forwardingBearerContexts = forwardingBearerContexts;
        return this;
    }

    public SmContextUpdatedData addForwardingBearerContextsItem(String forwardingBearerContextsItem)
    {
        if (this.forwardingBearerContexts == null)
        {
            this.forwardingBearerContexts = new ArrayList<>();
        }
        this.forwardingBearerContexts.add(forwardingBearerContextsItem);
        return this;
    }

    /**
     * Get forwardingBearerContexts
     * 
     * @return forwardingBearerContexts
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_FORWARDING_BEARER_CONTEXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getForwardingBearerContexts()
    {
        return forwardingBearerContexts;
    }

    @JsonProperty(JSON_PROPERTY_FORWARDING_BEARER_CONTEXTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setForwardingBearerContexts(List<String> forwardingBearerContexts)
    {
        this.forwardingBearerContexts = forwardingBearerContexts;
    }

    public SmContextUpdatedData selectedSmfId(UUID selectedSmfId)
    {

        this.selectedSmfId = selectedSmfId;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return selectedSmfId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_SELECTED_SMF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getSelectedSmfId()
    {
        return selectedSmfId;
    }

    @JsonProperty(JSON_PROPERTY_SELECTED_SMF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSelectedSmfId(UUID selectedSmfId)
    {
        this.selectedSmfId = selectedSmfId;
    }

    public SmContextUpdatedData selectedOldSmfId(UUID selectedOldSmfId)
    {

        this.selectedOldSmfId = selectedOldSmfId;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return selectedOldSmfId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_SELECTED_OLD_SMF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getSelectedOldSmfId()
    {
        return selectedOldSmfId;
    }

    @JsonProperty(JSON_PROPERTY_SELECTED_OLD_SMF_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSelectedOldSmfId(UUID selectedOldSmfId)
    {
        this.selectedOldSmfId = selectedOldSmfId;
    }

    public SmContextUpdatedData interPlmnApiRoot(String interPlmnApiRoot)
    {

        this.interPlmnApiRoot = interPlmnApiRoot;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return interPlmnApiRoot
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_INTER_PLMN_API_ROOT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getInterPlmnApiRoot()
    {
        return interPlmnApiRoot;
    }

    @JsonProperty(JSON_PROPERTY_INTER_PLMN_API_ROOT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setInterPlmnApiRoot(String interPlmnApiRoot)
    {
        this.interPlmnApiRoot = interPlmnApiRoot;
    }

    public SmContextUpdatedData anchorSmfFeatures(AnchorSmfFeatures anchorSmfFeatures)
    {

        this.anchorSmfFeatures = anchorSmfFeatures;
        return this;
    }

    /**
     * Get anchorSmfFeatures
     * 
     * @return anchorSmfFeatures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ANCHOR_SMF_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AnchorSmfFeatures getAnchorSmfFeatures()
    {
        return anchorSmfFeatures;
    }

    @JsonProperty(JSON_PROPERTY_ANCHOR_SMF_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnchorSmfFeatures(AnchorSmfFeatures anchorSmfFeatures)
    {
        this.anchorSmfFeatures = anchorSmfFeatures;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SmContextUpdatedData smContextUpdatedData = (SmContextUpdatedData) o;
        return Objects.equals(this.upCnxState, smContextUpdatedData.upCnxState) && Objects.equals(this.hoState, smContextUpdatedData.hoState)
               && Objects.equals(this.releaseEbiList, smContextUpdatedData.releaseEbiList)
               && Objects.equals(this.allocatedEbiList, smContextUpdatedData.allocatedEbiList)
               && Objects.equals(this.modifiedEbiList, smContextUpdatedData.modifiedEbiList) && Objects.equals(this.n1SmMsg, smContextUpdatedData.n1SmMsg)
               && Objects.equals(this.n2SmInfo, smContextUpdatedData.n2SmInfo) && Objects.equals(this.n2SmInfoType, smContextUpdatedData.n2SmInfoType)
               && Objects.equals(this.epsBearerSetup, smContextUpdatedData.epsBearerSetup)
               && Objects.equals(this.dataForwarding, smContextUpdatedData.dataForwarding)
               && Objects.equals(this.n3DlForwardingTnlList, smContextUpdatedData.n3DlForwardingTnlList)
               && Objects.equals(this.n3UlForwardingTnlList, smContextUpdatedData.n3UlForwardingTnlList)
               && Objects.equals(this.n9UlForwardingTunnel, smContextUpdatedData.n9UlForwardingTunnel) && Objects.equals(this.cause, smContextUpdatedData.cause)
               && Objects.equals(this.maAcceptedInd, smContextUpdatedData.maAcceptedInd)
               && Objects.equals(this.supportedFeatures, smContextUpdatedData.supportedFeatures)
               && Arrays.equals(this.forwardingFTeid, smContextUpdatedData.forwardingFTeid)
               && Objects.equals(this.forwardingBearerContexts, smContextUpdatedData.forwardingBearerContexts)
               && Objects.equals(this.selectedSmfId, smContextUpdatedData.selectedSmfId)
               && Objects.equals(this.selectedOldSmfId, smContextUpdatedData.selectedOldSmfId)
               && Objects.equals(this.interPlmnApiRoot, smContextUpdatedData.interPlmnApiRoot)
               && Objects.equals(this.anchorSmfFeatures, smContextUpdatedData.anchorSmfFeatures);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(upCnxState,
                            hoState,
                            releaseEbiList,
                            allocatedEbiList,
                            modifiedEbiList,
                            n1SmMsg,
                            n2SmInfo,
                            n2SmInfoType,
                            epsBearerSetup,
                            dataForwarding,
                            n3DlForwardingTnlList,
                            n3UlForwardingTnlList,
                            n9UlForwardingTunnel,
                            cause,
                            maAcceptedInd,
                            supportedFeatures,
                            Arrays.hashCode(forwardingFTeid),
                            forwardingBearerContexts,
                            selectedSmfId,
                            selectedOldSmfId,
                            interPlmnApiRoot,
                            anchorSmfFeatures);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmContextUpdatedData {\n");
        sb.append("    upCnxState: ").append(toIndentedString(upCnxState)).append("\n");
        sb.append("    hoState: ").append(toIndentedString(hoState)).append("\n");
        sb.append("    releaseEbiList: ").append(toIndentedString(releaseEbiList)).append("\n");
        sb.append("    allocatedEbiList: ").append(toIndentedString(allocatedEbiList)).append("\n");
        sb.append("    modifiedEbiList: ").append(toIndentedString(modifiedEbiList)).append("\n");
        sb.append("    n1SmMsg: ").append(toIndentedString(n1SmMsg)).append("\n");
        sb.append("    n2SmInfo: ").append(toIndentedString(n2SmInfo)).append("\n");
        sb.append("    n2SmInfoType: ").append(toIndentedString(n2SmInfoType)).append("\n");
        sb.append("    epsBearerSetup: ").append(toIndentedString(epsBearerSetup)).append("\n");
        sb.append("    dataForwarding: ").append(toIndentedString(dataForwarding)).append("\n");
        sb.append("    n3DlForwardingTnlList: ").append(toIndentedString(n3DlForwardingTnlList)).append("\n");
        sb.append("    n3UlForwardingTnlList: ").append(toIndentedString(n3UlForwardingTnlList)).append("\n");
        sb.append("    n9UlForwardingTunnel: ").append(toIndentedString(n9UlForwardingTunnel)).append("\n");
        sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
        sb.append("    maAcceptedInd: ").append(toIndentedString(maAcceptedInd)).append("\n");
        sb.append("    supportedFeatures: ").append(toIndentedString(supportedFeatures)).append("\n");
        sb.append("    forwardingFTeid: ").append(toIndentedString(forwardingFTeid)).append("\n");
        sb.append("    forwardingBearerContexts: ").append(toIndentedString(forwardingBearerContexts)).append("\n");
        sb.append("    selectedSmfId: ").append(toIndentedString(selectedSmfId)).append("\n");
        sb.append("    selectedOldSmfId: ").append(toIndentedString(selectedOldSmfId)).append("\n");
        sb.append("    interPlmnApiRoot: ").append(toIndentedString(interPlmnApiRoot)).append("\n");
        sb.append("    anchorSmfFeatures: ").append(toIndentedString(anchorSmfFeatures)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
