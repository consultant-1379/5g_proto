/*
 * Nudm_PP
 * Nudm Parameter Provision Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.pp;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UmtTime
 */
@JsonPropertyOrder({ UmtTime.JSON_PROPERTY_TIME_OF_DAY, UmtTime.JSON_PROPERTY_DAY_OF_WEEK })
public class UmtTime
{
    public static final String JSON_PROPERTY_TIME_OF_DAY = "timeOfDay";
    private String timeOfDay;

    public static final String JSON_PROPERTY_DAY_OF_WEEK = "dayOfWeek";
    private Integer dayOfWeek;

    public UmtTime()
    {
    }

    public UmtTime timeOfDay(String timeOfDay)
    {

        this.timeOfDay = timeOfDay;
        return this;
    }

    /**
     * String with format partial-time or full-time as defined in clause 5.6 of IETF
     * RFC 3339. Examples, 20:15:00, 20:15:00-08:00 (for 8 hours behind UTC).
     * 
     * @return timeOfDay
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "String with format partial-time or full-time as defined in clause 5.6 of IETF RFC 3339. Examples, 20:15:00, 20:15:00-08:00 (for 8 hours behind UTC).  ")
    @JsonProperty(JSON_PROPERTY_TIME_OF_DAY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getTimeOfDay()
    {
        return timeOfDay;
    }

    @JsonProperty(JSON_PROPERTY_TIME_OF_DAY)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTimeOfDay(String timeOfDay)
    {
        this.timeOfDay = timeOfDay;
    }

    public UmtTime dayOfWeek(Integer dayOfWeek)
    {

        this.dayOfWeek = dayOfWeek;
        return this;
    }

    /**
     * integer between and including 1 and 7 denoting a weekday. 1 shall indicate
     * Monday, and the subsequent weekdays shall be indicated with the next higher
     * numbers. 7 shall indicate Sunday. minimum: 1 maximum: 7
     * 
     * @return dayOfWeek
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "integer between and including 1 and 7 denoting a weekday. 1 shall indicate Monday, and the subsequent weekdays  shall be indicated with the next higher numbers. 7 shall indicate Sunday. ")
    @JsonProperty(JSON_PROPERTY_DAY_OF_WEEK)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Integer getDayOfWeek()
    {
        return dayOfWeek;
    }

    @JsonProperty(JSON_PROPERTY_DAY_OF_WEEK)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDayOfWeek(Integer dayOfWeek)
    {
        this.dayOfWeek = dayOfWeek;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UmtTime umtTime = (UmtTime) o;
        return Objects.equals(this.timeOfDay, umtTime.timeOfDay) && Objects.equals(this.dayOfWeek, umtTime.dayOfWeek);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(timeOfDay, dayOfWeek);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UmtTime {\n");
        sb.append("    timeOfDay: ").append(toIndentedString(timeOfDay)).append("\n");
        sb.append("    dayOfWeek: ").append(toIndentedString(dayOfWeek)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
