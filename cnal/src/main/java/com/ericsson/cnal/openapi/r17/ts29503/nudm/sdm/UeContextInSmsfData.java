/*
 * Nudm_SDM
 * Nudm Subscriber Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 2.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.sdm;

import java.util.Objects;
import java.util.Arrays;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UeContextInSmsfData
 */
@JsonPropertyOrder({ UeContextInSmsfData.JSON_PROPERTY_SMSF_INFO3_GPP_ACCESS, UeContextInSmsfData.JSON_PROPERTY_SMSF_INFO_NON3_GPP_ACCESS })
public class UeContextInSmsfData
{
    public static final String JSON_PROPERTY_SMSF_INFO3_GPP_ACCESS = "smsfInfo3GppAccess";
    private SmsfInfo smsfInfo3GppAccess;

    public static final String JSON_PROPERTY_SMSF_INFO_NON3_GPP_ACCESS = "smsfInfoNon3GppAccess";
    private SmsfInfo smsfInfoNon3GppAccess;

    public UeContextInSmsfData()
    {
    }

    public UeContextInSmsfData smsfInfo3GppAccess(SmsfInfo smsfInfo3GppAccess)
    {

        this.smsfInfo3GppAccess = smsfInfo3GppAccess;
        return this;
    }

    /**
     * Get smsfInfo3GppAccess
     * 
     * @return smsfInfo3GppAccess
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SMSF_INFO3_GPP_ACCESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SmsfInfo getSmsfInfo3GppAccess()
    {
        return smsfInfo3GppAccess;
    }

    @JsonProperty(JSON_PROPERTY_SMSF_INFO3_GPP_ACCESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmsfInfo3GppAccess(SmsfInfo smsfInfo3GppAccess)
    {
        this.smsfInfo3GppAccess = smsfInfo3GppAccess;
    }

    public UeContextInSmsfData smsfInfoNon3GppAccess(SmsfInfo smsfInfoNon3GppAccess)
    {

        this.smsfInfoNon3GppAccess = smsfInfoNon3GppAccess;
        return this;
    }

    /**
     * Get smsfInfoNon3GppAccess
     * 
     * @return smsfInfoNon3GppAccess
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SMSF_INFO_NON3_GPP_ACCESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public SmsfInfo getSmsfInfoNon3GppAccess()
    {
        return smsfInfoNon3GppAccess;
    }

    @JsonProperty(JSON_PROPERTY_SMSF_INFO_NON3_GPP_ACCESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSmsfInfoNon3GppAccess(SmsfInfo smsfInfoNon3GppAccess)
    {
        this.smsfInfoNon3GppAccess = smsfInfoNon3GppAccess;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        UeContextInSmsfData ueContextInSmsfData = (UeContextInSmsfData) o;
        return Objects.equals(this.smsfInfo3GppAccess, ueContextInSmsfData.smsfInfo3GppAccess)
               && Objects.equals(this.smsfInfoNon3GppAccess, ueContextInSmsfData.smsfInfoNon3GppAccess);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(smsfInfo3GppAccess, smsfInfoNon3GppAccess);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class UeContextInSmsfData {\n");
        sb.append("    smsfInfo3GppAccess: ").append(toIndentedString(smsfInfo3GppAccess)).append("\n");
        sb.append("    smsfInfoNon3GppAccess: ").append(toIndentedString(smsfInfoNon3GppAccess)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
