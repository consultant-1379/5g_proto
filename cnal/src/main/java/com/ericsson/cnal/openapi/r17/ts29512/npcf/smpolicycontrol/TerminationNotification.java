/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a Termination Notification.
 */
@ApiModel(description = "Represents a Termination Notification.")
@JsonPropertyOrder({ TerminationNotification.JSON_PROPERTY_RESOURCE_URI, TerminationNotification.JSON_PROPERTY_CAUSE })
public class TerminationNotification
{
    public static final String JSON_PROPERTY_RESOURCE_URI = "resourceUri";
    private String resourceUri;

    public static final String JSON_PROPERTY_CAUSE = "cause";
    private String cause;

    public TerminationNotification()
    {
    }

    public TerminationNotification resourceUri(String resourceUri)
    {

        this.resourceUri = resourceUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return resourceUri
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_RESOURCE_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getResourceUri()
    {
        return resourceUri;
    }

    @JsonProperty(JSON_PROPERTY_RESOURCE_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setResourceUri(String resourceUri)
    {
        this.resourceUri = resourceUri;
    }

    public TerminationNotification cause(String cause)
    {

        this.cause = cause;
        return this;
    }

    /**
     * Represents the cause due to which the PCF requests the termination of the SM
     * policy association.
     * 
     * @return cause
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Represents the cause due to which the PCF requests the termination of the SM policy association.")
    @JsonProperty(JSON_PROPERTY_CAUSE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getCause()
    {
        return cause;
    }

    @JsonProperty(JSON_PROPERTY_CAUSE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCause(String cause)
    {
        this.cause = cause;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TerminationNotification terminationNotification = (TerminationNotification) o;
        return Objects.equals(this.resourceUri, terminationNotification.resourceUri) && Objects.equals(this.cause, terminationNotification.cause);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(resourceUri, cause);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TerminationNotification {\n");
        sb.append("    resourceUri: ").append(toIndentedString(resourceUri)).append("\n");
        sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
