/*
 * Npcf_AMPolicyControl
 * Access and Mobility Policy Control Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29507.npcf.ampolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents the SMF Selection information that may be replaced by the PCF.
 */
@ApiModel(description = "Represents the SMF Selection information that may be replaced by the PCF.")
@JsonPropertyOrder({ SmfSelectionData.JSON_PROPERTY_UNSUPP_DNN,
                     SmfSelectionData.JSON_PROPERTY_CANDIDATES,
                     SmfSelectionData.JSON_PROPERTY_SNSSAI,
                     SmfSelectionData.JSON_PROPERTY_MAPPING_SNSSAI,
                     SmfSelectionData.JSON_PROPERTY_DNN })
public class SmfSelectionData
{
    public static final String JSON_PROPERTY_UNSUPP_DNN = "unsuppDnn";
    private Boolean unsuppDnn;

    public static final String JSON_PROPERTY_CANDIDATES = "candidates";
    private JsonNullable<Map<String, CandidateForReplacement>> candidates = JsonNullable.<Map<String, CandidateForReplacement>>undefined();

    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_MAPPING_SNSSAI = "mappingSnssai";
    private Snssai mappingSnssai;

    public static final String JSON_PROPERTY_DNN = "dnn";
    private String dnn;

    public SmfSelectionData()
    {
    }

    public SmfSelectionData unsuppDnn(Boolean unsuppDnn)
    {

        this.unsuppDnn = unsuppDnn;
        return this;
    }

    /**
     * Get unsuppDnn
     * 
     * @return unsuppDnn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UNSUPP_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getUnsuppDnn()
    {
        return unsuppDnn;
    }

    @JsonProperty(JSON_PROPERTY_UNSUPP_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnsuppDnn(Boolean unsuppDnn)
    {
        this.unsuppDnn = unsuppDnn;
    }

    public SmfSelectionData candidates(Map<String, CandidateForReplacement> candidates)
    {
        this.candidates = JsonNullable.<Map<String, CandidateForReplacement>>of(candidates);

        return this;
    }

    public SmfSelectionData putCandidatesItem(String key,
                                              CandidateForReplacement candidatesItem)
    {
        if (this.candidates == null || !this.candidates.isPresent())
        {
            this.candidates = JsonNullable.<Map<String, CandidateForReplacement>>of(new HashMap<>());
        }
        try
        {
            this.candidates.get().put(key, candidatesItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Contains the list of DNNs per S-NSSAI that are candidates for replacement.
     * The snssai attribute within the CandidateForReplacement data type is the key
     * of the map.
     * 
     * @return candidates
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains the list of DNNs per S-NSSAI that are candidates for replacement. The snssai attribute within the CandidateForReplacement data type is the key of the map. ")
    @JsonIgnore

    public Map<String, CandidateForReplacement> getCandidates()
    {
        return candidates.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_CANDIDATES)
    @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<Map<String, CandidateForReplacement>> getCandidates_JsonNullable()
    {
        return candidates;
    }

    @JsonProperty(JSON_PROPERTY_CANDIDATES)
    public void setCandidates_JsonNullable(JsonNullable<Map<String, CandidateForReplacement>> candidates)
    {
        this.candidates = candidates;
    }

    public void setCandidates(Map<String, CandidateForReplacement> candidates)
    {
        this.candidates = JsonNullable.<Map<String, CandidateForReplacement>>of(candidates);
    }

    public SmfSelectionData snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public SmfSelectionData mappingSnssai(Snssai mappingSnssai)
    {

        this.mappingSnssai = mappingSnssai;
        return this;
    }

    /**
     * Get mappingSnssai
     * 
     * @return mappingSnssai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_MAPPING_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Snssai getMappingSnssai()
    {
        return mappingSnssai;
    }

    @JsonProperty(JSON_PROPERTY_MAPPING_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMappingSnssai(Snssai mappingSnssai)
    {
        this.mappingSnssai = mappingSnssai;
    }

    public SmfSelectionData dnn(String dnn)
    {

        this.dnn = dnn;
        return this;
    }

    /**
     * String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;
     * it shall contain either a DNN Network Identifier, or a full DNN with both the
     * Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003
     * clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are
     * separated by dots (e.g. \&quot;Label1.Label2.Label3\&quot;).
     * 
     * @return dnn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). ")
    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnn()
    {
        return dnn;
    }

    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnn(String dnn)
    {
        this.dnn = dnn;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SmfSelectionData smfSelectionData = (SmfSelectionData) o;
        return Objects.equals(this.unsuppDnn, smfSelectionData.unsuppDnn) && equalsNullable(this.candidates, smfSelectionData.candidates)
               && Objects.equals(this.snssai, smfSelectionData.snssai) && Objects.equals(this.mappingSnssai, smfSelectionData.mappingSnssai)
               && Objects.equals(this.dnn, smfSelectionData.dnn);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(unsuppDnn, hashCodeNullable(candidates), snssai, mappingSnssai, dnn);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SmfSelectionData {\n");
        sb.append("    unsuppDnn: ").append(toIndentedString(unsuppDnn)).append("\n");
        sb.append("    candidates: ").append(toIndentedString(candidates)).append("\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    mappingSnssai: ").append(toIndentedString(mappingSnssai)).append("\n");
        sb.append("    dnn: ").append(toIndentedString(dnn)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
