/*
 * 3gpp-traffic-influence
 * API for AF traffic influence   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29522.trafficinfluence;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.RouteToLocation;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.EasIpReplacementInfo;
import com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization.TemporalValidity;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.FlowInfo;
import com.ericsson.cnal.openapi.r17.ts29523.npcf.eventexposure.ReportingInformation;
import com.ericsson.cnal.openapi.r17.ts29122.commondata.WebsockNotifConfig;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.ericsson.cnal.openapi.r17.ts29514.npcf.policyauthorization.EthFlowDescription;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a traffic influence subscription.
 */
@ApiModel(description = "Represents a traffic influence subscription.")
@JsonPropertyOrder({ TrafficInfluSub.JSON_PROPERTY_AF_SERVICE_ID,
                     TrafficInfluSub.JSON_PROPERTY_AF_APP_ID,
                     TrafficInfluSub.JSON_PROPERTY_AF_TRANS_ID,
                     TrafficInfluSub.JSON_PROPERTY_APP_RELO_IND,
                     TrafficInfluSub.JSON_PROPERTY_DNN,
                     TrafficInfluSub.JSON_PROPERTY_SNSSAI,
                     TrafficInfluSub.JSON_PROPERTY_EXTERNAL_GROUP_ID,
                     TrafficInfluSub.JSON_PROPERTY_ANY_UE_IND,
                     TrafficInfluSub.JSON_PROPERTY_SUBSCRIBED_EVENTS,
                     TrafficInfluSub.JSON_PROPERTY_GPSI,
                     TrafficInfluSub.JSON_PROPERTY_IPV4_ADDR,
                     TrafficInfluSub.JSON_PROPERTY_IP_DOMAIN,
                     TrafficInfluSub.JSON_PROPERTY_IPV6_ADDR,
                     TrafficInfluSub.JSON_PROPERTY_MAC_ADDR,
                     TrafficInfluSub.JSON_PROPERTY_DNAI_CHG_TYPE,
                     TrafficInfluSub.JSON_PROPERTY_NOTIFICATION_DESTINATION,
                     TrafficInfluSub.JSON_PROPERTY_REQUEST_TEST_NOTIFICATION,
                     TrafficInfluSub.JSON_PROPERTY_WEBSOCK_NOTIF_CONFIG,
                     TrafficInfluSub.JSON_PROPERTY_SELF,
                     TrafficInfluSub.JSON_PROPERTY_TRAFFIC_FILTERS,
                     TrafficInfluSub.JSON_PROPERTY_ETH_TRAFFIC_FILTERS,
                     TrafficInfluSub.JSON_PROPERTY_TRAFFIC_ROUTES,
                     TrafficInfluSub.JSON_PROPERTY_TFC_CORR_IND,
                     TrafficInfluSub.JSON_PROPERTY_TEMP_VALIDITIES,
                     TrafficInfluSub.JSON_PROPERTY_VALID_GEO_ZONE_IDS,
                     TrafficInfluSub.JSON_PROPERTY_GEO_AREAS,
                     TrafficInfluSub.JSON_PROPERTY_AF_ACK_IND,
                     TrafficInfluSub.JSON_PROPERTY_ADDR_PRESER_IND,
                     TrafficInfluSub.JSON_PROPERTY_SIM_CONN_IND,
                     TrafficInfluSub.JSON_PROPERTY_SIM_CONN_TERM,
                     TrafficInfluSub.JSON_PROPERTY_MAX_ALLOWED_UP_LAT,
                     TrafficInfluSub.JSON_PROPERTY_EAS_IP_REPLACE_INFOS,
                     TrafficInfluSub.JSON_PROPERTY_EAS_REDIS_IND,
                     TrafficInfluSub.JSON_PROPERTY_EVENT_REQ,
                     TrafficInfluSub.JSON_PROPERTY_EVENT_REPORTS,
                     TrafficInfluSub.JSON_PROPERTY_SUPP_FEAT })
public class TrafficInfluSub
{
    public static final String JSON_PROPERTY_AF_SERVICE_ID = "afServiceId";
    private String afServiceId;

    public static final String JSON_PROPERTY_AF_APP_ID = "afAppId";
    private String afAppId;

    public static final String JSON_PROPERTY_AF_TRANS_ID = "afTransId";
    private String afTransId;

    public static final String JSON_PROPERTY_APP_RELO_IND = "appReloInd";
    private Boolean appReloInd;

    public static final String JSON_PROPERTY_DNN = "dnn";
    private String dnn;

    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_EXTERNAL_GROUP_ID = "externalGroupId";
    private String externalGroupId;

    public static final String JSON_PROPERTY_ANY_UE_IND = "anyUeInd";
    private Boolean anyUeInd;

    public static final String JSON_PROPERTY_SUBSCRIBED_EVENTS = "subscribedEvents";
    private List<String> subscribedEvents = null;

    public static final String JSON_PROPERTY_GPSI = "gpsi";
    private String gpsi;

    public static final String JSON_PROPERTY_IPV4_ADDR = "ipv4Addr";
    private String ipv4Addr;

    public static final String JSON_PROPERTY_IP_DOMAIN = "ipDomain";
    private String ipDomain;

    public static final String JSON_PROPERTY_IPV6_ADDR = "ipv6Addr";
    private String ipv6Addr;

    public static final String JSON_PROPERTY_MAC_ADDR = "macAddr";
    private String macAddr;

    public static final String JSON_PROPERTY_DNAI_CHG_TYPE = "dnaiChgType";
    private String dnaiChgType;

    public static final String JSON_PROPERTY_NOTIFICATION_DESTINATION = "notificationDestination";
    private String notificationDestination;

    public static final String JSON_PROPERTY_REQUEST_TEST_NOTIFICATION = "requestTestNotification";
    private Boolean requestTestNotification;

    public static final String JSON_PROPERTY_WEBSOCK_NOTIF_CONFIG = "websockNotifConfig";
    private WebsockNotifConfig websockNotifConfig;

    public static final String JSON_PROPERTY_SELF = "self";
    private String self;

    public static final String JSON_PROPERTY_TRAFFIC_FILTERS = "trafficFilters";
    private List<FlowInfo> trafficFilters = null;

    public static final String JSON_PROPERTY_ETH_TRAFFIC_FILTERS = "ethTrafficFilters";
    private List<EthFlowDescription> ethTrafficFilters = null;

    public static final String JSON_PROPERTY_TRAFFIC_ROUTES = "trafficRoutes";
    private List<RouteToLocation> trafficRoutes = null;

    public static final String JSON_PROPERTY_TFC_CORR_IND = "tfcCorrInd";
    private Boolean tfcCorrInd;

    public static final String JSON_PROPERTY_TEMP_VALIDITIES = "tempValidities";
    private List<TemporalValidity> tempValidities = null;

    public static final String JSON_PROPERTY_VALID_GEO_ZONE_IDS = "validGeoZoneIds";
    private List<String> validGeoZoneIds = null;

    public static final String JSON_PROPERTY_GEO_AREAS = "geoAreas";
    private List<Object> geoAreas = null;

    public static final String JSON_PROPERTY_AF_ACK_IND = "afAckInd";
    private Boolean afAckInd;

    public static final String JSON_PROPERTY_ADDR_PRESER_IND = "addrPreserInd";
    private Boolean addrPreserInd;

    public static final String JSON_PROPERTY_SIM_CONN_IND = "simConnInd";
    private Boolean simConnInd;

    public static final String JSON_PROPERTY_SIM_CONN_TERM = "simConnTerm";
    private Integer simConnTerm;

    public static final String JSON_PROPERTY_MAX_ALLOWED_UP_LAT = "maxAllowedUpLat";
    private Integer maxAllowedUpLat;

    public static final String JSON_PROPERTY_EAS_IP_REPLACE_INFOS = "easIpReplaceInfos";
    private List<EasIpReplacementInfo> easIpReplaceInfos = null;

    public static final String JSON_PROPERTY_EAS_REDIS_IND = "easRedisInd";
    private Boolean easRedisInd;

    public static final String JSON_PROPERTY_EVENT_REQ = "eventReq";
    private ReportingInformation eventReq;

    public static final String JSON_PROPERTY_EVENT_REPORTS = "eventReports";
    private List<EventNotification> eventReports = null;

    public static final String JSON_PROPERTY_SUPP_FEAT = "suppFeat";
    private String suppFeat;

    public TrafficInfluSub()
    {
    }

    public TrafficInfluSub afServiceId(String afServiceId)
    {

        this.afServiceId = afServiceId;
        return this;
    }

    /**
     * Identifies a service on behalf of which the AF is issuing the request.
     * 
     * @return afServiceId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies a service on behalf of which the AF is issuing the request.")
    @JsonProperty(JSON_PROPERTY_AF_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAfServiceId()
    {
        return afServiceId;
    }

    @JsonProperty(JSON_PROPERTY_AF_SERVICE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAfServiceId(String afServiceId)
    {
        this.afServiceId = afServiceId;
    }

    public TrafficInfluSub afAppId(String afAppId)
    {

        this.afAppId = afAppId;
        return this;
    }

    /**
     * Identifies an application.
     * 
     * @return afAppId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies an application.")
    @JsonProperty(JSON_PROPERTY_AF_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAfAppId()
    {
        return afAppId;
    }

    @JsonProperty(JSON_PROPERTY_AF_APP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAfAppId(String afAppId)
    {
        this.afAppId = afAppId;
    }

    public TrafficInfluSub afTransId(String afTransId)
    {

        this.afTransId = afTransId;
        return this;
    }

    /**
     * Identifies an NEF Northbound interface transaction, generated by the AF.
     * 
     * @return afTransId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies an NEF Northbound interface transaction, generated by the AF.")
    @JsonProperty(JSON_PROPERTY_AF_TRANS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAfTransId()
    {
        return afTransId;
    }

    @JsonProperty(JSON_PROPERTY_AF_TRANS_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAfTransId(String afTransId)
    {
        this.afTransId = afTransId;
    }

    public TrafficInfluSub appReloInd(Boolean appReloInd)
    {

        this.appReloInd = appReloInd;
        return this;
    }

    /**
     * Identifies whether an application can be relocated once a location of the
     * application has been selected.
     * 
     * @return appReloInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies whether an application can be relocated once a location of the application has been selected. ")
    @JsonProperty(JSON_PROPERTY_APP_RELO_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAppReloInd()
    {
        return appReloInd;
    }

    @JsonProperty(JSON_PROPERTY_APP_RELO_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAppReloInd(Boolean appReloInd)
    {
        this.appReloInd = appReloInd;
    }

    public TrafficInfluSub dnn(String dnn)
    {

        this.dnn = dnn;
        return this;
    }

    /**
     * String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;
     * it shall contain either a DNN Network Identifier, or a full DNN with both the
     * Network Identifier and Operator Identifier, as specified in 3GPP TS 23.003
     * clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are
     * separated by dots (e.g. \&quot;Label1.Label2.Label3\&quot;).
     * 
     * @return dnn
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). ")
    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnn()
    {
        return dnn;
    }

    @JsonProperty(JSON_PROPERTY_DNN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnn(String dnn)
    {
        this.dnn = dnn;
    }

    public TrafficInfluSub snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public TrafficInfluSub externalGroupId(String externalGroupId)
    {

        this.externalGroupId = externalGroupId;
        return this;
    }

    /**
     * string containing a local identifier followed by \&quot;@\&quot; and a domain
     * identifier. Both the local identifier and the domain identifier shall be
     * encoded as strings that do not contain any \&quot;@\&quot; characters. See
     * Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more information.
     * 
     * @return externalGroupId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string containing a local identifier followed by \"@\" and a domain identifier. Both the local identifier and the domain identifier shall be encoded as strings that do not contain any \"@\" characters. See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more information.")
    @JsonProperty(JSON_PROPERTY_EXTERNAL_GROUP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getExternalGroupId()
    {
        return externalGroupId;
    }

    @JsonProperty(JSON_PROPERTY_EXTERNAL_GROUP_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setExternalGroupId(String externalGroupId)
    {
        this.externalGroupId = externalGroupId;
    }

    public TrafficInfluSub anyUeInd(Boolean anyUeInd)
    {

        this.anyUeInd = anyUeInd;
        return this;
    }

    /**
     * Identifies whether the AF request applies to any UE. This attribute shall set
     * to \&quot;true\&quot; if applicable for any UE, otherwise, set to
     * \&quot;false\&quot;.
     * 
     * @return anyUeInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies whether the AF request applies to any UE. This attribute shall set to \"true\" if applicable for any UE, otherwise, set to \"false\". ")
    @JsonProperty(JSON_PROPERTY_ANY_UE_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAnyUeInd()
    {
        return anyUeInd;
    }

    @JsonProperty(JSON_PROPERTY_ANY_UE_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAnyUeInd(Boolean anyUeInd)
    {
        this.anyUeInd = anyUeInd;
    }

    public TrafficInfluSub subscribedEvents(List<String> subscribedEvents)
    {

        this.subscribedEvents = subscribedEvents;
        return this;
    }

    public TrafficInfluSub addSubscribedEventsItem(String subscribedEventsItem)
    {
        if (this.subscribedEvents == null)
        {
            this.subscribedEvents = new ArrayList<>();
        }
        this.subscribedEvents.add(subscribedEventsItem);
        return this;
    }

    /**
     * Identifies the requirement to be notified of the event(s).
     * 
     * @return subscribedEvents
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies the requirement to be notified of the event(s).")
    @JsonProperty(JSON_PROPERTY_SUBSCRIBED_EVENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getSubscribedEvents()
    {
        return subscribedEvents;
    }

    @JsonProperty(JSON_PROPERTY_SUBSCRIBED_EVENTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSubscribedEvents(List<String> subscribedEvents)
    {
        this.subscribedEvents = subscribedEvents;
    }

    public TrafficInfluSub gpsi(String gpsi)
    {

        this.gpsi = gpsi;
        return this;
    }

    /**
     * String identifying a Gpsi shall contain either an External Id or an MSISDN.
     * It shall be formatted as follows -External Identifier&#x3D;
     * \&quot;extid-&#39;extid&#39;, where &#39;extid&#39; shall be formatted
     * according to clause 19.7.2 of 3GPP TS 23.003 that describes an External
     * Identifier.
     * 
     * @return gpsi
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  ")
    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getGpsi()
    {
        return gpsi;
    }

    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGpsi(String gpsi)
    {
        this.gpsi = gpsi;
    }

    public TrafficInfluSub ipv4Addr(String ipv4Addr)
    {

        this.ipv4Addr = ipv4Addr;
        return this;
    }

    /**
     * string identifying a Ipv4 address formatted in the \&quot;dotted
     * decimal\&quot; notation as defined in IETF RFC 1166.
     * 
     * @return ipv4Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string identifying a Ipv4 address formatted in the \"dotted decimal\" notation as defined in IETF RFC 1166.")
    @JsonProperty(JSON_PROPERTY_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getIpv4Addr()
    {
        return ipv4Addr;
    }

    @JsonProperty(JSON_PROPERTY_IPV4_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv4Addr(String ipv4Addr)
    {
        this.ipv4Addr = ipv4Addr;
    }

    public TrafficInfluSub ipDomain(String ipDomain)
    {

        this.ipDomain = ipDomain;
        return this;
    }

    /**
     * Get ipDomain
     * 
     * @return ipDomain
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_IP_DOMAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getIpDomain()
    {
        return ipDomain;
    }

    @JsonProperty(JSON_PROPERTY_IP_DOMAIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpDomain(String ipDomain)
    {
        this.ipDomain = ipDomain;
    }

    public TrafficInfluSub ipv6Addr(String ipv6Addr)
    {

        this.ipv6Addr = ipv6Addr;
        return this;
    }

    /**
     * string identifying a Ipv6 address formatted according to clause 4 in IETF RFC
     * 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of IETF RFC 5952
     * shall not be used.
     * 
     * @return ipv6Addr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string identifying a Ipv6 address formatted according to clause 4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of IETF RFC 5952 shall not be used.")
    @JsonProperty(JSON_PROPERTY_IPV6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getIpv6Addr()
    {
        return ipv6Addr;
    }

    @JsonProperty(JSON_PROPERTY_IPV6_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setIpv6Addr(String ipv6Addr)
    {
        this.ipv6Addr = ipv6Addr;
    }

    public TrafficInfluSub macAddr(String macAddr)
    {

        this.macAddr = macAddr;
        return this;
    }

    /**
     * String identifying a MAC address formatted in the hexadecimal notation
     * according to clause 1.1 and clause 2.1 of RFC 7042.
     * 
     * @return macAddr
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042. ")
    @JsonProperty(JSON_PROPERTY_MAC_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getMacAddr()
    {
        return macAddr;
    }

    @JsonProperty(JSON_PROPERTY_MAC_ADDR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMacAddr(String macAddr)
    {
        this.macAddr = macAddr;
    }

    public TrafficInfluSub dnaiChgType(String dnaiChgType)
    {

        this.dnaiChgType = dnaiChgType;
        return this;
    }

    /**
     * Possible values are: - EARLY: Early notification of UP path reconfiguration.
     * - EARLY_LATE: Early and late notification of UP path reconfiguration. This
     * value shall only be present in the subscription to the DNAI change event. -
     * LATE: Late notification of UP path reconfiguration.
     * 
     * @return dnaiChgType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Possible values are: - EARLY: Early notification of UP path reconfiguration. - EARLY_LATE: Early and late notification of UP path reconfiguration. This value shall   only be present in the subscription to the DNAI change event. - LATE: Late notification of UP path reconfiguration.  ")
    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDnaiChgType()
    {
        return dnaiChgType;
    }

    @JsonProperty(JSON_PROPERTY_DNAI_CHG_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDnaiChgType(String dnaiChgType)
    {
        this.dnaiChgType = dnaiChgType;
    }

    public TrafficInfluSub notificationDestination(String notificationDestination)
    {

        this.notificationDestination = notificationDestination;
        return this;
    }

    /**
     * string formatted according to IETF RFC 3986 identifying a referenced
     * resource.
     * 
     * @return notificationDestination
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string formatted according to IETF RFC 3986 identifying a referenced resource.")
    @JsonProperty(JSON_PROPERTY_NOTIFICATION_DESTINATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getNotificationDestination()
    {
        return notificationDestination;
    }

    @JsonProperty(JSON_PROPERTY_NOTIFICATION_DESTINATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setNotificationDestination(String notificationDestination)
    {
        this.notificationDestination = notificationDestination;
    }

    public TrafficInfluSub requestTestNotification(Boolean requestTestNotification)
    {

        this.requestTestNotification = requestTestNotification;
        return this;
    }

    /**
     * Set to true by the SCS/AS to request the NEF to send a test notification as
     * defined in clause 5.2.5.3. Set to false or omitted otherwise.
     * 
     * @return requestTestNotification
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Set to true by the SCS/AS to request the NEF to send a test notification as defined in clause 5.2.5.3. Set to false or omitted otherwise. ")
    @JsonProperty(JSON_PROPERTY_REQUEST_TEST_NOTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getRequestTestNotification()
    {
        return requestTestNotification;
    }

    @JsonProperty(JSON_PROPERTY_REQUEST_TEST_NOTIFICATION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRequestTestNotification(Boolean requestTestNotification)
    {
        this.requestTestNotification = requestTestNotification;
    }

    public TrafficInfluSub websockNotifConfig(WebsockNotifConfig websockNotifConfig)
    {

        this.websockNotifConfig = websockNotifConfig;
        return this;
    }

    /**
     * Get websockNotifConfig
     * 
     * @return websockNotifConfig
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_WEBSOCK_NOTIF_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public WebsockNotifConfig getWebsockNotifConfig()
    {
        return websockNotifConfig;
    }

    @JsonProperty(JSON_PROPERTY_WEBSOCK_NOTIF_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWebsockNotifConfig(WebsockNotifConfig websockNotifConfig)
    {
        this.websockNotifConfig = websockNotifConfig;
    }

    public TrafficInfluSub self(String self)
    {

        this.self = self;
        return this;
    }

    /**
     * string formatted according to IETF RFC 3986 identifying a referenced
     * resource.
     * 
     * @return self
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string formatted according to IETF RFC 3986 identifying a referenced resource.")
    @JsonProperty(JSON_PROPERTY_SELF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSelf()
    {
        return self;
    }

    @JsonProperty(JSON_PROPERTY_SELF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSelf(String self)
    {
        this.self = self;
    }

    public TrafficInfluSub trafficFilters(List<FlowInfo> trafficFilters)
    {

        this.trafficFilters = trafficFilters;
        return this;
    }

    public TrafficInfluSub addTrafficFiltersItem(FlowInfo trafficFiltersItem)
    {
        if (this.trafficFilters == null)
        {
            this.trafficFilters = new ArrayList<>();
        }
        this.trafficFilters.add(trafficFiltersItem);
        return this;
    }

    /**
     * Identifies IP packet filters.
     * 
     * @return trafficFilters
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies IP packet filters.")
    @JsonProperty(JSON_PROPERTY_TRAFFIC_FILTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<FlowInfo> getTrafficFilters()
    {
        return trafficFilters;
    }

    @JsonProperty(JSON_PROPERTY_TRAFFIC_FILTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTrafficFilters(List<FlowInfo> trafficFilters)
    {
        this.trafficFilters = trafficFilters;
    }

    public TrafficInfluSub ethTrafficFilters(List<EthFlowDescription> ethTrafficFilters)
    {

        this.ethTrafficFilters = ethTrafficFilters;
        return this;
    }

    public TrafficInfluSub addEthTrafficFiltersItem(EthFlowDescription ethTrafficFiltersItem)
    {
        if (this.ethTrafficFilters == null)
        {
            this.ethTrafficFilters = new ArrayList<>();
        }
        this.ethTrafficFilters.add(ethTrafficFiltersItem);
        return this;
    }

    /**
     * Identifies Ethernet packet filters.
     * 
     * @return ethTrafficFilters
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies Ethernet packet filters.")
    @JsonProperty(JSON_PROPERTY_ETH_TRAFFIC_FILTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EthFlowDescription> getEthTrafficFilters()
    {
        return ethTrafficFilters;
    }

    @JsonProperty(JSON_PROPERTY_ETH_TRAFFIC_FILTERS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEthTrafficFilters(List<EthFlowDescription> ethTrafficFilters)
    {
        this.ethTrafficFilters = ethTrafficFilters;
    }

    public TrafficInfluSub trafficRoutes(List<RouteToLocation> trafficRoutes)
    {

        this.trafficRoutes = trafficRoutes;
        return this;
    }

    public TrafficInfluSub addTrafficRoutesItem(RouteToLocation trafficRoutesItem)
    {
        if (this.trafficRoutes == null)
        {
            this.trafficRoutes = new ArrayList<>();
        }
        this.trafficRoutes.add(trafficRoutesItem);
        return this;
    }

    /**
     * Identifies the N6 traffic routing requirement.
     * 
     * @return trafficRoutes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies the N6 traffic routing requirement.")
    @JsonProperty(JSON_PROPERTY_TRAFFIC_ROUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<RouteToLocation> getTrafficRoutes()
    {
        return trafficRoutes;
    }

    @JsonProperty(JSON_PROPERTY_TRAFFIC_ROUTES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTrafficRoutes(List<RouteToLocation> trafficRoutes)
    {
        this.trafficRoutes = trafficRoutes;
    }

    public TrafficInfluSub tfcCorrInd(Boolean tfcCorrInd)
    {

        this.tfcCorrInd = tfcCorrInd;
        return this;
    }

    /**
     * Get tfcCorrInd
     * 
     * @return tfcCorrInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TFC_CORR_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getTfcCorrInd()
    {
        return tfcCorrInd;
    }

    @JsonProperty(JSON_PROPERTY_TFC_CORR_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTfcCorrInd(Boolean tfcCorrInd)
    {
        this.tfcCorrInd = tfcCorrInd;
    }

    public TrafficInfluSub tempValidities(List<TemporalValidity> tempValidities)
    {

        this.tempValidities = tempValidities;
        return this;
    }

    public TrafficInfluSub addTempValiditiesItem(TemporalValidity tempValiditiesItem)
    {
        if (this.tempValidities == null)
        {
            this.tempValidities = new ArrayList<>();
        }
        this.tempValidities.add(tempValiditiesItem);
        return this;
    }

    /**
     * Get tempValidities
     * 
     * @return tempValidities
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TEMP_VALIDITIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<TemporalValidity> getTempValidities()
    {
        return tempValidities;
    }

    @JsonProperty(JSON_PROPERTY_TEMP_VALIDITIES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTempValidities(List<TemporalValidity> tempValidities)
    {
        this.tempValidities = tempValidities;
    }

    public TrafficInfluSub validGeoZoneIds(List<String> validGeoZoneIds)
    {

        this.validGeoZoneIds = validGeoZoneIds;
        return this;
    }

    public TrafficInfluSub addValidGeoZoneIdsItem(String validGeoZoneIdsItem)
    {
        if (this.validGeoZoneIds == null)
        {
            this.validGeoZoneIds = new ArrayList<>();
        }
        this.validGeoZoneIds.add(validGeoZoneIdsItem);
        return this;
    }

    /**
     * Identifies a geographic zone that the AF request applies only to the traffic
     * of UE(s) located in this specific zone.
     * 
     * @return validGeoZoneIds
     * @deprecated
     **/
    @Deprecated
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies a geographic zone that the AF request applies only to the traffic of UE(s) located in this specific zone. ")
    @JsonProperty(JSON_PROPERTY_VALID_GEO_ZONE_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getValidGeoZoneIds()
    {
        return validGeoZoneIds;
    }

    @JsonProperty(JSON_PROPERTY_VALID_GEO_ZONE_IDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setValidGeoZoneIds(List<String> validGeoZoneIds)
    {
        this.validGeoZoneIds = validGeoZoneIds;
    }

    public TrafficInfluSub geoAreas(List<Object> geoAreas)
    {

        this.geoAreas = geoAreas;
        return this;
    }

    public TrafficInfluSub addGeoAreasItem(Object geoAreasItem)
    {
        if (this.geoAreas == null)
        {
            this.geoAreas = new ArrayList<>();
        }
        this.geoAreas.add(geoAreasItem);
        return this;
    }

    /**
     * Identifies geographical areas within which the AF request applies.
     * 
     * @return geoAreas
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Identifies geographical areas within which the AF request applies.")
    @JsonProperty(JSON_PROPERTY_GEO_AREAS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<Object> getGeoAreas()
    {
        return geoAreas;
    }

    @JsonProperty(JSON_PROPERTY_GEO_AREAS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setGeoAreas(List<Object> geoAreas)
    {
        this.geoAreas = geoAreas;
    }

    public TrafficInfluSub afAckInd(Boolean afAckInd)
    {

        this.afAckInd = afAckInd;
        return this;
    }

    /**
     * Get afAckInd
     * 
     * @return afAckInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_AF_ACK_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAfAckInd()
    {
        return afAckInd;
    }

    @JsonProperty(JSON_PROPERTY_AF_ACK_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAfAckInd(Boolean afAckInd)
    {
        this.afAckInd = afAckInd;
    }

    public TrafficInfluSub addrPreserInd(Boolean addrPreserInd)
    {

        this.addrPreserInd = addrPreserInd;
        return this;
    }

    /**
     * Get addrPreserInd
     * 
     * @return addrPreserInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ADDR_PRESER_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getAddrPreserInd()
    {
        return addrPreserInd;
    }

    @JsonProperty(JSON_PROPERTY_ADDR_PRESER_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAddrPreserInd(Boolean addrPreserInd)
    {
        this.addrPreserInd = addrPreserInd;
    }

    public TrafficInfluSub simConnInd(Boolean simConnInd)
    {

        this.simConnInd = simConnInd;
        return this;
    }

    /**
     * Indicates whether simultaneous connectivity should be temporarily maintained
     * for the source and target PSA.
     * 
     * @return simConnInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates whether simultaneous connectivity should be temporarily maintained for the source and target PSA. ")
    @JsonProperty(JSON_PROPERTY_SIM_CONN_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getSimConnInd()
    {
        return simConnInd;
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSimConnInd(Boolean simConnInd)
    {
        this.simConnInd = simConnInd;
    }

    public TrafficInfluSub simConnTerm(Integer simConnTerm)
    {

        this.simConnTerm = simConnTerm;
        return this;
    }

    /**
     * indicating a time in seconds.
     * 
     * @return simConnTerm
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "indicating a time in seconds.")
    @JsonProperty(JSON_PROPERTY_SIM_CONN_TERM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getSimConnTerm()
    {
        return simConnTerm;
    }

    @JsonProperty(JSON_PROPERTY_SIM_CONN_TERM)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSimConnTerm(Integer simConnTerm)
    {
        this.simConnTerm = simConnTerm;
    }

    public TrafficInfluSub maxAllowedUpLat(Integer maxAllowedUpLat)
    {

        this.maxAllowedUpLat = maxAllowedUpLat;
        return this;
    }

    /**
     * Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
     * minimum: 0
     * 
     * @return maxAllowedUpLat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.")
    @JsonProperty(JSON_PROPERTY_MAX_ALLOWED_UP_LAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getMaxAllowedUpLat()
    {
        return maxAllowedUpLat;
    }

    @JsonProperty(JSON_PROPERTY_MAX_ALLOWED_UP_LAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMaxAllowedUpLat(Integer maxAllowedUpLat)
    {
        this.maxAllowedUpLat = maxAllowedUpLat;
    }

    public TrafficInfluSub easIpReplaceInfos(List<EasIpReplacementInfo> easIpReplaceInfos)
    {

        this.easIpReplaceInfos = easIpReplaceInfos;
        return this;
    }

    public TrafficInfluSub addEasIpReplaceInfosItem(EasIpReplacementInfo easIpReplaceInfosItem)
    {
        if (this.easIpReplaceInfos == null)
        {
            this.easIpReplaceInfos = new ArrayList<>();
        }
        this.easIpReplaceInfos.add(easIpReplaceInfosItem);
        return this;
    }

    /**
     * Contains EAS IP replacement information.
     * 
     * @return easIpReplaceInfos
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Contains EAS IP replacement information.")
    @JsonProperty(JSON_PROPERTY_EAS_IP_REPLACE_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EasIpReplacementInfo> getEasIpReplaceInfos()
    {
        return easIpReplaceInfos;
    }

    @JsonProperty(JSON_PROPERTY_EAS_IP_REPLACE_INFOS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEasIpReplaceInfos(List<EasIpReplacementInfo> easIpReplaceInfos)
    {
        this.easIpReplaceInfos = easIpReplaceInfos;
    }

    public TrafficInfluSub easRedisInd(Boolean easRedisInd)
    {

        this.easRedisInd = easRedisInd;
        return this;
    }

    /**
     * Indicates the EAS rediscovery is required for the application if it is
     * included and set to \&quot;true\&quot;.
     * 
     * @return easRedisInd
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the EAS rediscovery is required for the application if it is included and set to \"true\".")
    @JsonProperty(JSON_PROPERTY_EAS_REDIS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getEasRedisInd()
    {
        return easRedisInd;
    }

    @JsonProperty(JSON_PROPERTY_EAS_REDIS_IND)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEasRedisInd(Boolean easRedisInd)
    {
        this.easRedisInd = easRedisInd;
    }

    public TrafficInfluSub eventReq(ReportingInformation eventReq)
    {

        this.eventReq = eventReq;
        return this;
    }

    /**
     * Get eventReq
     * 
     * @return eventReq
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EVENT_REQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public ReportingInformation getEventReq()
    {
        return eventReq;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_REQ)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventReq(ReportingInformation eventReq)
    {
        this.eventReq = eventReq;
    }

    public TrafficInfluSub eventReports(List<EventNotification> eventReports)
    {

        this.eventReports = eventReports;
        return this;
    }

    public TrafficInfluSub addEventReportsItem(EventNotification eventReportsItem)
    {
        if (this.eventReports == null)
        {
            this.eventReports = new ArrayList<>();
        }
        this.eventReports.add(eventReportsItem);
        return this;
    }

    /**
     * Get eventReports
     * 
     * @return eventReports
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_EVENT_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<EventNotification> getEventReports()
    {
        return eventReports;
    }

    @JsonProperty(JSON_PROPERTY_EVENT_REPORTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEventReports(List<EventNotification> eventReports)
    {
        this.eventReports = eventReports;
    }

    public TrafficInfluSub suppFeat(String suppFeat)
    {

        this.suppFeat = suppFeat;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return suppFeat
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSuppFeat()
    {
        return suppFeat;
    }

    @JsonProperty(JSON_PROPERTY_SUPP_FEAT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuppFeat(String suppFeat)
    {
        this.suppFeat = suppFeat;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TrafficInfluSub trafficInfluSub = (TrafficInfluSub) o;
        return Objects.equals(this.afServiceId, trafficInfluSub.afServiceId) && Objects.equals(this.afAppId, trafficInfluSub.afAppId)
               && Objects.equals(this.afTransId, trafficInfluSub.afTransId) && Objects.equals(this.appReloInd, trafficInfluSub.appReloInd)
               && Objects.equals(this.dnn, trafficInfluSub.dnn) && Objects.equals(this.snssai, trafficInfluSub.snssai)
               && Objects.equals(this.externalGroupId, trafficInfluSub.externalGroupId) && Objects.equals(this.anyUeInd, trafficInfluSub.anyUeInd)
               && Objects.equals(this.subscribedEvents, trafficInfluSub.subscribedEvents) && Objects.equals(this.gpsi, trafficInfluSub.gpsi)
               && Objects.equals(this.ipv4Addr, trafficInfluSub.ipv4Addr) && Objects.equals(this.ipDomain, trafficInfluSub.ipDomain)
               && Objects.equals(this.ipv6Addr, trafficInfluSub.ipv6Addr) && Objects.equals(this.macAddr, trafficInfluSub.macAddr)
               && Objects.equals(this.dnaiChgType, trafficInfluSub.dnaiChgType)
               && Objects.equals(this.notificationDestination, trafficInfluSub.notificationDestination)
               && Objects.equals(this.requestTestNotification, trafficInfluSub.requestTestNotification)
               && Objects.equals(this.websockNotifConfig, trafficInfluSub.websockNotifConfig) && Objects.equals(this.self, trafficInfluSub.self)
               && Objects.equals(this.trafficFilters, trafficInfluSub.trafficFilters)
               && Objects.equals(this.ethTrafficFilters, trafficInfluSub.ethTrafficFilters) && Objects.equals(this.trafficRoutes, trafficInfluSub.trafficRoutes)
               && Objects.equals(this.tfcCorrInd, trafficInfluSub.tfcCorrInd) && Objects.equals(this.tempValidities, trafficInfluSub.tempValidities)
               && Objects.equals(this.validGeoZoneIds, trafficInfluSub.validGeoZoneIds) && Objects.equals(this.geoAreas, trafficInfluSub.geoAreas)
               && Objects.equals(this.afAckInd, trafficInfluSub.afAckInd) && Objects.equals(this.addrPreserInd, trafficInfluSub.addrPreserInd)
               && Objects.equals(this.simConnInd, trafficInfluSub.simConnInd) && Objects.equals(this.simConnTerm, trafficInfluSub.simConnTerm)
               && Objects.equals(this.maxAllowedUpLat, trafficInfluSub.maxAllowedUpLat)
               && Objects.equals(this.easIpReplaceInfos, trafficInfluSub.easIpReplaceInfos) && Objects.equals(this.easRedisInd, trafficInfluSub.easRedisInd)
               && Objects.equals(this.eventReq, trafficInfluSub.eventReq) && Objects.equals(this.eventReports, trafficInfluSub.eventReports)
               && Objects.equals(this.suppFeat, trafficInfluSub.suppFeat);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(afServiceId,
                            afAppId,
                            afTransId,
                            appReloInd,
                            dnn,
                            snssai,
                            externalGroupId,
                            anyUeInd,
                            subscribedEvents,
                            gpsi,
                            ipv4Addr,
                            ipDomain,
                            ipv6Addr,
                            macAddr,
                            dnaiChgType,
                            notificationDestination,
                            requestTestNotification,
                            websockNotifConfig,
                            self,
                            trafficFilters,
                            ethTrafficFilters,
                            trafficRoutes,
                            tfcCorrInd,
                            tempValidities,
                            validGeoZoneIds,
                            geoAreas,
                            afAckInd,
                            addrPreserInd,
                            simConnInd,
                            simConnTerm,
                            maxAllowedUpLat,
                            easIpReplaceInfos,
                            easRedisInd,
                            eventReq,
                            eventReports,
                            suppFeat);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TrafficInfluSub {\n");
        sb.append("    afServiceId: ").append(toIndentedString(afServiceId)).append("\n");
        sb.append("    afAppId: ").append(toIndentedString(afAppId)).append("\n");
        sb.append("    afTransId: ").append(toIndentedString(afTransId)).append("\n");
        sb.append("    appReloInd: ").append(toIndentedString(appReloInd)).append("\n");
        sb.append("    dnn: ").append(toIndentedString(dnn)).append("\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    externalGroupId: ").append(toIndentedString(externalGroupId)).append("\n");
        sb.append("    anyUeInd: ").append(toIndentedString(anyUeInd)).append("\n");
        sb.append("    subscribedEvents: ").append(toIndentedString(subscribedEvents)).append("\n");
        sb.append("    gpsi: ").append(toIndentedString(gpsi)).append("\n");
        sb.append("    ipv4Addr: ").append(toIndentedString(ipv4Addr)).append("\n");
        sb.append("    ipDomain: ").append(toIndentedString(ipDomain)).append("\n");
        sb.append("    ipv6Addr: ").append(toIndentedString(ipv6Addr)).append("\n");
        sb.append("    macAddr: ").append(toIndentedString(macAddr)).append("\n");
        sb.append("    dnaiChgType: ").append(toIndentedString(dnaiChgType)).append("\n");
        sb.append("    notificationDestination: ").append(toIndentedString(notificationDestination)).append("\n");
        sb.append("    requestTestNotification: ").append(toIndentedString(requestTestNotification)).append("\n");
        sb.append("    websockNotifConfig: ").append(toIndentedString(websockNotifConfig)).append("\n");
        sb.append("    self: ").append(toIndentedString(self)).append("\n");
        sb.append("    trafficFilters: ").append(toIndentedString(trafficFilters)).append("\n");
        sb.append("    ethTrafficFilters: ").append(toIndentedString(ethTrafficFilters)).append("\n");
        sb.append("    trafficRoutes: ").append(toIndentedString(trafficRoutes)).append("\n");
        sb.append("    tfcCorrInd: ").append(toIndentedString(tfcCorrInd)).append("\n");
        sb.append("    tempValidities: ").append(toIndentedString(tempValidities)).append("\n");
        sb.append("    validGeoZoneIds: ").append(toIndentedString(validGeoZoneIds)).append("\n");
        sb.append("    geoAreas: ").append(toIndentedString(geoAreas)).append("\n");
        sb.append("    afAckInd: ").append(toIndentedString(afAckInd)).append("\n");
        sb.append("    addrPreserInd: ").append(toIndentedString(addrPreserInd)).append("\n");
        sb.append("    simConnInd: ").append(toIndentedString(simConnInd)).append("\n");
        sb.append("    simConnTerm: ").append(toIndentedString(simConnTerm)).append("\n");
        sb.append("    maxAllowedUpLat: ").append(toIndentedString(maxAllowedUpLat)).append("\n");
        sb.append("    easIpReplaceInfos: ").append(toIndentedString(easIpReplaceInfos)).append("\n");
        sb.append("    easRedisInd: ").append(toIndentedString(easRedisInd)).append("\n");
        sb.append("    eventReq: ").append(toIndentedString(eventReq)).append("\n");
        sb.append("    eventReports: ").append(toIndentedString(eventReports)).append("\n");
        sb.append("    suppFeat: ").append(toIndentedString(suppFeat)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
