/*
 * Nnssaaf_NSSAA
 * Network Slice-Specific Authentication and Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29526.nnssaaf.nssaa;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.Snssai;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SliceAuthInfo
 */
@JsonPropertyOrder({ SliceAuthInfo.JSON_PROPERTY_GPSI,
                     SliceAuthInfo.JSON_PROPERTY_SNSSAI,
                     SliceAuthInfo.JSON_PROPERTY_EAP_ID_RSP,
                     SliceAuthInfo.JSON_PROPERTY_AMF_INSTANCE_ID,
                     SliceAuthInfo.JSON_PROPERTY_REAUTH_NOTIF_URI,
                     SliceAuthInfo.JSON_PROPERTY_REVOC_NOTIF_URI })
public class SliceAuthInfo
{
    public static final String JSON_PROPERTY_GPSI = "gpsi";
    private String gpsi;

    public static final String JSON_PROPERTY_SNSSAI = "snssai";
    private Snssai snssai;

    public static final String JSON_PROPERTY_EAP_ID_RSP = "eapIdRsp";
    private byte[] eapIdRsp;

    public static final String JSON_PROPERTY_AMF_INSTANCE_ID = "amfInstanceId";
    private UUID amfInstanceId;

    public static final String JSON_PROPERTY_REAUTH_NOTIF_URI = "reauthNotifUri";
    private String reauthNotifUri;

    public static final String JSON_PROPERTY_REVOC_NOTIF_URI = "revocNotifUri";
    private String revocNotifUri;

    public SliceAuthInfo()
    {
    }

    public SliceAuthInfo gpsi(String gpsi)
    {

        this.gpsi = gpsi;
        return this;
    }

    /**
     * String identifying a Gpsi shall contain either an External Id or an MSISDN.
     * It shall be formatted as follows -External Identifier&#x3D;
     * \&quot;extid-&#39;extid&#39;, where &#39;extid&#39; shall be formatted
     * according to clause 19.7.2 of 3GPP TS 23.003 that describes an External
     * Identifier.
     * 
     * @return gpsi
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true,
                      value = "String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  ")
    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getGpsi()
    {
        return gpsi;
    }

    @JsonProperty(JSON_PROPERTY_GPSI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setGpsi(String gpsi)
    {
        this.gpsi = gpsi;
    }

    public SliceAuthInfo snssai(Snssai snssai)
    {

        this.snssai = snssai;
        return this;
    }

    /**
     * Get snssai
     * 
     * @return snssai
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "")
    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Snssai getSnssai()
    {
        return snssai;
    }

    @JsonProperty(JSON_PROPERTY_SNSSAI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setSnssai(Snssai snssai)
    {
        this.snssai = snssai;
    }

    public SliceAuthInfo eapIdRsp(byte[] eapIdRsp)
    {

        this.eapIdRsp = eapIdRsp;
        return this;
    }

    /**
     * contains an EAP packet
     * 
     * @return eapIdRsp
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(required = true, value = "contains an EAP packet")
    @JsonProperty(JSON_PROPERTY_EAP_ID_RSP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public byte[] getEapIdRsp()
    {
        return eapIdRsp;
    }

    @JsonProperty(JSON_PROPERTY_EAP_ID_RSP)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setEapIdRsp(byte[] eapIdRsp)
    {
        this.eapIdRsp = eapIdRsp;
    }

    public SliceAuthInfo amfInstanceId(UUID amfInstanceId)
    {

        this.amfInstanceId = amfInstanceId;
        return this;
    }

    /**
     * String uniquely identifying a NF instance. The format of the NF Instance ID
     * shall be a Universally Unique Identifier (UUID) version 4, as described in
     * IETF RFC 4122.
     * 
     * @return amfInstanceId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  ")
    @JsonProperty(JSON_PROPERTY_AMF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public UUID getAmfInstanceId()
    {
        return amfInstanceId;
    }

    @JsonProperty(JSON_PROPERTY_AMF_INSTANCE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAmfInstanceId(UUID amfInstanceId)
    {
        this.amfInstanceId = amfInstanceId;
    }

    public SliceAuthInfo reauthNotifUri(String reauthNotifUri)
    {

        this.reauthNotifUri = reauthNotifUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return reauthNotifUri
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_REAUTH_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getReauthNotifUri()
    {
        return reauthNotifUri;
    }

    @JsonProperty(JSON_PROPERTY_REAUTH_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setReauthNotifUri(String reauthNotifUri)
    {
        this.reauthNotifUri = reauthNotifUri;
    }

    public SliceAuthInfo revocNotifUri(String revocNotifUri)
    {

        this.revocNotifUri = revocNotifUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return revocNotifUri
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_REVOC_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getRevocNotifUri()
    {
        return revocNotifUri;
    }

    @JsonProperty(JSON_PROPERTY_REVOC_NOTIF_URI)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setRevocNotifUri(String revocNotifUri)
    {
        this.revocNotifUri = revocNotifUri;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        SliceAuthInfo sliceAuthInfo = (SliceAuthInfo) o;
        return Objects.equals(this.gpsi, sliceAuthInfo.gpsi) && Objects.equals(this.snssai, sliceAuthInfo.snssai)
               && Arrays.equals(this.eapIdRsp, sliceAuthInfo.eapIdRsp) && Objects.equals(this.amfInstanceId, sliceAuthInfo.amfInstanceId)
               && Objects.equals(this.reauthNotifUri, sliceAuthInfo.reauthNotifUri) && Objects.equals(this.revocNotifUri, sliceAuthInfo.revocNotifUri);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(gpsi, snssai, Arrays.hashCode(eapIdRsp), amfInstanceId, reauthNotifUri, revocNotifUri);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class SliceAuthInfo {\n");
        sb.append("    gpsi: ").append(toIndentedString(gpsi)).append("\n");
        sb.append("    snssai: ").append(toIndentedString(snssai)).append("\n");
        sb.append("    eapIdRsp: ").append(toIndentedString(eapIdRsp)).append("\n");
        sb.append("    amfInstanceId: ").append(toIndentedString(amfInstanceId)).append("\n");
        sb.append("    reauthNotifUri: ").append(toIndentedString(reauthNotifUri)).append("\n");
        sb.append("    revocNotifUri: ").append(toIndentedString(revocNotifUri)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
