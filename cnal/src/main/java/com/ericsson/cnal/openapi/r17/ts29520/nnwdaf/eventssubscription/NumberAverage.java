/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents average and variance information.
 */
@ApiModel(description = "Represents average and variance information.")
@JsonPropertyOrder({ NumberAverage.JSON_PROPERTY_NUMBER, NumberAverage.JSON_PROPERTY_VARIANCE, NumberAverage.JSON_PROPERTY_SKEWNESS })
public class NumberAverage
{
    public static final String JSON_PROPERTY_NUMBER = "number";
    private Float number;

    public static final String JSON_PROPERTY_VARIANCE = "variance";
    private Float variance;

    public static final String JSON_PROPERTY_SKEWNESS = "skewness";
    private Float skewness;

    public NumberAverage()
    {
    }

    public NumberAverage number(Float number)
    {

        this.number = number;
        return this;
    }

    /**
     * string with format &#39;float&#39; as defined in OpenAPI.
     * 
     * @return number
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'float' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Float getNumber()
    {
        return number;
    }

    @JsonProperty(JSON_PROPERTY_NUMBER)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNumber(Float number)
    {
        this.number = number;
    }

    public NumberAverage variance(Float variance)
    {

        this.variance = variance;
        return this;
    }

    /**
     * string with format &#39;float&#39; as defined in OpenAPI.
     * 
     * @return variance
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "string with format 'float' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_VARIANCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Float getVariance()
    {
        return variance;
    }

    @JsonProperty(JSON_PROPERTY_VARIANCE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setVariance(Float variance)
    {
        this.variance = variance;
    }

    public NumberAverage skewness(Float skewness)
    {

        this.skewness = skewness;
        return this;
    }

    /**
     * string with format &#39;float&#39; as defined in OpenAPI.
     * 
     * @return skewness
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "string with format 'float' as defined in OpenAPI.")
    @JsonProperty(JSON_PROPERTY_SKEWNESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Float getSkewness()
    {
        return skewness;
    }

    @JsonProperty(JSON_PROPERTY_SKEWNESS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSkewness(Float skewness)
    {
        this.skewness = skewness;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        NumberAverage numberAverage = (NumberAverage) o;
        return Objects.equals(this.number, numberAverage.number) && Objects.equals(this.variance, numberAverage.variance)
               && Objects.equals(this.skewness, numberAverage.skewness);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(number, variance, skewness);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class NumberAverage {\n");
        sb.append("    number: ").append(toIndentedString(number)).append("\n");
        sb.append("    variance: ").append(toIndentedString(variance)).append("\n");
        sb.append("    skewness: ").append(toIndentedString(skewness)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
