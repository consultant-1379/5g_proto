/*
 * NRF NFManagement Service
 * NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29510.nnrf.nfmanagement;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Data structure for specifying the notifications the NF service subscribes by
 * default, along with callback URI
 */
@ApiModel(description = "Data structure for specifying the notifications the NF service subscribes by default, along with callback URI ")
@JsonPropertyOrder({ DefaultNotificationSubscription.JSON_PROPERTY_NOTIFICATION_TYPE,
                     DefaultNotificationSubscription.JSON_PROPERTY_CALLBACK_URI,
                     DefaultNotificationSubscription.JSON_PROPERTY_N1_MESSAGE_CLASS,
                     DefaultNotificationSubscription.JSON_PROPERTY_N2_INFORMATION_CLASS,
                     DefaultNotificationSubscription.JSON_PROPERTY_VERSIONS,
                     DefaultNotificationSubscription.JSON_PROPERTY_BINDING,
                     DefaultNotificationSubscription.JSON_PROPERTY_ACCEPTED_ENCODING,
                     DefaultNotificationSubscription.JSON_PROPERTY_SUPPORTED_FEATURES,
                     DefaultNotificationSubscription.JSON_PROPERTY_SERVICE_INFO_LIST })
public class DefaultNotificationSubscription
{
    public static final String JSON_PROPERTY_NOTIFICATION_TYPE = "notificationType";
    private String notificationType;

    public static final String JSON_PROPERTY_CALLBACK_URI = "callbackUri";
    private String callbackUri;

    public static final String JSON_PROPERTY_N1_MESSAGE_CLASS = "n1MessageClass";
    private String n1MessageClass;

    public static final String JSON_PROPERTY_N2_INFORMATION_CLASS = "n2InformationClass";
    private String n2InformationClass;

    public static final String JSON_PROPERTY_VERSIONS = "versions";
    private List<String> versions = null;

    public static final String JSON_PROPERTY_BINDING = "binding";
    private String binding;

    public static final String JSON_PROPERTY_ACCEPTED_ENCODING = "acceptedEncoding";
    private String acceptedEncoding;

    public static final String JSON_PROPERTY_SUPPORTED_FEATURES = "supportedFeatures";
    private String supportedFeatures;

    public static final String JSON_PROPERTY_SERVICE_INFO_LIST = "serviceInfoList";
    private Map<String, DefSubServiceInfo> serviceInfoList = null;

    public DefaultNotificationSubscription()
    {
    }

    public DefaultNotificationSubscription notificationType(String notificationType)
    {

        this.notificationType = notificationType;
        return this;
    }

    /**
     * Types of notifications used in Default Notification URIs in the NF Profile of
     * an NF Instance
     * 
     * @return notificationType
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "Types of notifications used in Default Notification URIs in the NF Profile of an NF Instance ")
    @JsonProperty(JSON_PROPERTY_NOTIFICATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getNotificationType()
    {
        return notificationType;
    }

    @JsonProperty(JSON_PROPERTY_NOTIFICATION_TYPE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNotificationType(String notificationType)
    {
        this.notificationType = notificationType;
    }

    public DefaultNotificationSubscription callbackUri(String callbackUri)
    {

        this.callbackUri = callbackUri;
        return this;
    }

    /**
     * String providing an URI formatted according to RFC 3986.
     * 
     * @return callbackUri
     **/
    @javax.annotation.Nonnull
    @ApiModelProperty(required = true, value = "String providing an URI formatted according to RFC 3986.")
    @JsonProperty(JSON_PROPERTY_CALLBACK_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getCallbackUri()
    {
        return callbackUri;
    }

    @JsonProperty(JSON_PROPERTY_CALLBACK_URI)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setCallbackUri(String callbackUri)
    {
        this.callbackUri = callbackUri;
    }

    public DefaultNotificationSubscription n1MessageClass(String n1MessageClass)
    {

        this.n1MessageClass = n1MessageClass;
        return this;
    }

    /**
     * Enumeration for N1 Message Class
     * 
     * @return n1MessageClass
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Enumeration for N1 Message Class")
    @JsonProperty(JSON_PROPERTY_N1_MESSAGE_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getN1MessageClass()
    {
        return n1MessageClass;
    }

    @JsonProperty(JSON_PROPERTY_N1_MESSAGE_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN1MessageClass(String n1MessageClass)
    {
        this.n1MessageClass = n1MessageClass;
    }

    public DefaultNotificationSubscription n2InformationClass(String n2InformationClass)
    {

        this.n2InformationClass = n2InformationClass;
        return this;
    }

    /**
     * Enumeration for N2 Information Class
     * 
     * @return n2InformationClass
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Enumeration for N2 Information Class")
    @JsonProperty(JSON_PROPERTY_N2_INFORMATION_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getN2InformationClass()
    {
        return n2InformationClass;
    }

    @JsonProperty(JSON_PROPERTY_N2_INFORMATION_CLASS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setN2InformationClass(String n2InformationClass)
    {
        this.n2InformationClass = n2InformationClass;
    }

    public DefaultNotificationSubscription versions(List<String> versions)
    {

        this.versions = versions;
        return this;
    }

    public DefaultNotificationSubscription addVersionsItem(String versionsItem)
    {
        if (this.versions == null)
        {
            this.versions = new ArrayList<>();
        }
        this.versions.add(versionsItem);
        return this;
    }

    /**
     * Get versions
     * 
     * @return versions
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_VERSIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getVersions()
    {
        return versions;
    }

    @JsonProperty(JSON_PROPERTY_VERSIONS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setVersions(List<String> versions)
    {
        this.versions = versions;
    }

    public DefaultNotificationSubscription binding(String binding)
    {

        this.binding = binding;
        return this;
    }

    /**
     * Get binding
     * 
     * @return binding
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_BINDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getBinding()
    {
        return binding;
    }

    @JsonProperty(JSON_PROPERTY_BINDING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBinding(String binding)
    {
        this.binding = binding;
    }

    public DefaultNotificationSubscription acceptedEncoding(String acceptedEncoding)
    {

        this.acceptedEncoding = acceptedEncoding;
        return this;
    }

    /**
     * Get acceptedEncoding
     * 
     * @return acceptedEncoding
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_ACCEPTED_ENCODING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getAcceptedEncoding()
    {
        return acceptedEncoding;
    }

    @JsonProperty(JSON_PROPERTY_ACCEPTED_ENCODING)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setAcceptedEncoding(String acceptedEncoding)
    {
        this.acceptedEncoding = acceptedEncoding;
    }

    public DefaultNotificationSubscription supportedFeatures(String supportedFeatures)
    {

        this.supportedFeatures = supportedFeatures;
        return this;
    }

    /**
     * A string used to indicate the features supported by an API that is used as
     * defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask
     * indicating supported features in hexadecimal representation Each character in
     * the string shall take a value of \&quot;0\&quot; to \&quot;9\&quot;,
     * \&quot;a\&quot; to \&quot;f\&quot; or \&quot;A\&quot; to \&quot;F\&quot; and
     * shall represent the support of 4 features as described in table 5.2.2-3. The
     * most significant character representing the highest-numbered features shall
     * appear first in the string, and the character representing features 1 to 4
     * shall appear last in the string. The list of features and their numbering
     * (starting with 1) are defined separately for each API. If the string contains
     * a lower number of characters than there are defined features for an API, all
     * features that would be represented by characters that are not present in the
     * string are not supported.
     * 
     * @return supportedFeatures
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. ")
    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSupportedFeatures()
    {
        return supportedFeatures;
    }

    @JsonProperty(JSON_PROPERTY_SUPPORTED_FEATURES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSupportedFeatures(String supportedFeatures)
    {
        this.supportedFeatures = supportedFeatures;
    }

    public DefaultNotificationSubscription serviceInfoList(Map<String, DefSubServiceInfo> serviceInfoList)
    {

        this.serviceInfoList = serviceInfoList;
        return this;
    }

    public DefaultNotificationSubscription putServiceInfoListItem(String key,
                                                                  DefSubServiceInfo serviceInfoListItem)
    {
        if (this.serviceInfoList == null)
        {
            this.serviceInfoList = new HashMap<>();
        }
        this.serviceInfoList.put(key, serviceInfoListItem);
        return this;
    }

    /**
     * A map of service specific information. The name of the corresponding service
     * (as specified in ServiceName data type) is the key.
     * 
     * @return serviceInfoList
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A map of service specific information. The name of the corresponding service (as specified in ServiceName data type) is the key. ")
    @JsonProperty(JSON_PROPERTY_SERVICE_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Map<String, DefSubServiceInfo> getServiceInfoList()
    {
        return serviceInfoList;
    }

    @JsonProperty(JSON_PROPERTY_SERVICE_INFO_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setServiceInfoList(Map<String, DefSubServiceInfo> serviceInfoList)
    {
        this.serviceInfoList = serviceInfoList;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        DefaultNotificationSubscription defaultNotificationSubscription = (DefaultNotificationSubscription) o;
        return Objects.equals(this.notificationType, defaultNotificationSubscription.notificationType)
               && Objects.equals(this.callbackUri, defaultNotificationSubscription.callbackUri)
               && Objects.equals(this.n1MessageClass, defaultNotificationSubscription.n1MessageClass)
               && Objects.equals(this.n2InformationClass, defaultNotificationSubscription.n2InformationClass)
               && Objects.equals(this.versions, defaultNotificationSubscription.versions)
               && Objects.equals(this.binding, defaultNotificationSubscription.binding)
               && Objects.equals(this.acceptedEncoding, defaultNotificationSubscription.acceptedEncoding)
               && Objects.equals(this.supportedFeatures, defaultNotificationSubscription.supportedFeatures)
               && Objects.equals(this.serviceInfoList, defaultNotificationSubscription.serviceInfoList);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(notificationType,
                            callbackUri,
                            n1MessageClass,
                            n2InformationClass,
                            versions,
                            binding,
                            acceptedEncoding,
                            supportedFeatures,
                            serviceInfoList);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class DefaultNotificationSubscription {\n");
        sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
        sb.append("    callbackUri: ").append(toIndentedString(callbackUri)).append("\n");
        sb.append("    n1MessageClass: ").append(toIndentedString(n1MessageClass)).append("\n");
        sb.append("    n2InformationClass: ").append(toIndentedString(n2InformationClass)).append("\n");
        sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
        sb.append("    binding: ").append(toIndentedString(binding)).append("\n");
        sb.append("    acceptedEncoding: ").append(toIndentedString(acceptedEncoding)).append("\n");
        sb.append("    supportedFeatures: ").append(toIndentedString(supportedFeatures)).append("\n");
        sb.append("    serviceInfoList: ").append(toIndentedString(serviceInfoList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
