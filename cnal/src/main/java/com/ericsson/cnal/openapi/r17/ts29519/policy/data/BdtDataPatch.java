/*
 * Unified Data Repository Service API file for policy data
 * The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: -
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29519.policy.data;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29554.npcf.bdtpolicycontrol.TransferPolicy;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Contains the modified background data transfer data.
 */
@ApiModel(description = "Contains the modified background data transfer data.")
@JsonPropertyOrder({ BdtDataPatch.JSON_PROPERTY_TRANS_POLICY, BdtDataPatch.JSON_PROPERTY_BDTP_STATUS })
public class BdtDataPatch
{
    public static final String JSON_PROPERTY_TRANS_POLICY = "transPolicy";
    private TransferPolicy transPolicy;

    public static final String JSON_PROPERTY_BDTP_STATUS = "bdtpStatus";
    private String bdtpStatus;

    public BdtDataPatch()
    {
    }

    public BdtDataPatch transPolicy(TransferPolicy transPolicy)
    {

        this.transPolicy = transPolicy;
        return this;
    }

    /**
     * Get transPolicy
     * 
     * @return transPolicy
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_TRANS_POLICY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public TransferPolicy getTransPolicy()
    {
        return transPolicy;
    }

    @JsonProperty(JSON_PROPERTY_TRANS_POLICY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTransPolicy(TransferPolicy transPolicy)
    {
        this.transPolicy = transPolicy;
    }

    public BdtDataPatch bdtpStatus(String bdtpStatus)
    {

        this.bdtpStatus = bdtpStatus;
        return this;
    }

    /**
     * Indicates the validation status of a negotiated BDT policy.
     * 
     * @return bdtpStatus
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Indicates the validation status of a negotiated BDT policy.")
    @JsonProperty(JSON_PROPERTY_BDTP_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getBdtpStatus()
    {
        return bdtpStatus;
    }

    @JsonProperty(JSON_PROPERTY_BDTP_STATUS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setBdtpStatus(String bdtpStatus)
    {
        this.bdtpStatus = bdtpStatus;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        BdtDataPatch bdtDataPatch = (BdtDataPatch) o;
        return Objects.equals(this.transPolicy, bdtDataPatch.transPolicy) && Objects.equals(this.bdtpStatus, bdtDataPatch.bdtpStatus);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(transPolicy, bdtpStatus);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class BdtDataPatch {\n");
        sb.append("    transPolicy: ").append(toIndentedString(transPolicy)).append("\n");
        sb.append("    bdtpStatus: ").append(toIndentedString(bdtpStatus)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
