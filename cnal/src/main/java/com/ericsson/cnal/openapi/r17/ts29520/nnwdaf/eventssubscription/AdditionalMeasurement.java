/*
 * Nnwdaf_EventsSubscription
 * Nnwdaf_EventsSubscription Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29520.nnwdaf.eventssubscription;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29554.npcf.bdtpolicycontrol.NetworkAreaInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents additional measurement information.
 */
@ApiModel(description = "Represents additional measurement information.")
@JsonPropertyOrder({ AdditionalMeasurement.JSON_PROPERTY_UNEXP_LOC,
                     AdditionalMeasurement.JSON_PROPERTY_UNEXP_FLOW_TEPS,
                     AdditionalMeasurement.JSON_PROPERTY_UNEXP_WAKES,
                     AdditionalMeasurement.JSON_PROPERTY_DDOS_ATTACK,
                     AdditionalMeasurement.JSON_PROPERTY_WRG_DEST,
                     AdditionalMeasurement.JSON_PROPERTY_CIRCUMS })
public class AdditionalMeasurement
{
    public static final String JSON_PROPERTY_UNEXP_LOC = "unexpLoc";
    private NetworkAreaInfo unexpLoc;

    public static final String JSON_PROPERTY_UNEXP_FLOW_TEPS = "unexpFlowTeps";
    private List<IpEthFlowDescription> unexpFlowTeps = null;

    public static final String JSON_PROPERTY_UNEXP_WAKES = "unexpWakes";
    private List<OffsetDateTime> unexpWakes = null;

    public static final String JSON_PROPERTY_DDOS_ATTACK = "ddosAttack";
    private AddressList ddosAttack;

    public static final String JSON_PROPERTY_WRG_DEST = "wrgDest";
    private AddressList wrgDest;

    public static final String JSON_PROPERTY_CIRCUMS = "circums";
    private List<CircumstanceDescription> circums = null;

    public AdditionalMeasurement()
    {
    }

    public AdditionalMeasurement unexpLoc(NetworkAreaInfo unexpLoc)
    {

        this.unexpLoc = unexpLoc;
        return this;
    }

    /**
     * Get unexpLoc
     * 
     * @return unexpLoc
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UNEXP_LOC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public NetworkAreaInfo getUnexpLoc()
    {
        return unexpLoc;
    }

    @JsonProperty(JSON_PROPERTY_UNEXP_LOC)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnexpLoc(NetworkAreaInfo unexpLoc)
    {
        this.unexpLoc = unexpLoc;
    }

    public AdditionalMeasurement unexpFlowTeps(List<IpEthFlowDescription> unexpFlowTeps)
    {

        this.unexpFlowTeps = unexpFlowTeps;
        return this;
    }

    public AdditionalMeasurement addUnexpFlowTepsItem(IpEthFlowDescription unexpFlowTepsItem)
    {
        if (this.unexpFlowTeps == null)
        {
            this.unexpFlowTeps = new ArrayList<>();
        }
        this.unexpFlowTeps.add(unexpFlowTepsItem);
        return this;
    }

    /**
     * Get unexpFlowTeps
     * 
     * @return unexpFlowTeps
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UNEXP_FLOW_TEPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<IpEthFlowDescription> getUnexpFlowTeps()
    {
        return unexpFlowTeps;
    }

    @JsonProperty(JSON_PROPERTY_UNEXP_FLOW_TEPS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnexpFlowTeps(List<IpEthFlowDescription> unexpFlowTeps)
    {
        this.unexpFlowTeps = unexpFlowTeps;
    }

    public AdditionalMeasurement unexpWakes(List<OffsetDateTime> unexpWakes)
    {

        this.unexpWakes = unexpWakes;
        return this;
    }

    public AdditionalMeasurement addUnexpWakesItem(OffsetDateTime unexpWakesItem)
    {
        if (this.unexpWakes == null)
        {
            this.unexpWakes = new ArrayList<>();
        }
        this.unexpWakes.add(unexpWakesItem);
        return this;
    }

    /**
     * Get unexpWakes
     * 
     * @return unexpWakes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_UNEXP_WAKES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<OffsetDateTime> getUnexpWakes()
    {
        return unexpWakes;
    }

    @JsonProperty(JSON_PROPERTY_UNEXP_WAKES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUnexpWakes(List<OffsetDateTime> unexpWakes)
    {
        this.unexpWakes = unexpWakes;
    }

    public AdditionalMeasurement ddosAttack(AddressList ddosAttack)
    {

        this.ddosAttack = ddosAttack;
        return this;
    }

    /**
     * Get ddosAttack
     * 
     * @return ddosAttack
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_DDOS_ATTACK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AddressList getDdosAttack()
    {
        return ddosAttack;
    }

    @JsonProperty(JSON_PROPERTY_DDOS_ATTACK)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDdosAttack(AddressList ddosAttack)
    {
        this.ddosAttack = ddosAttack;
    }

    public AdditionalMeasurement wrgDest(AddressList wrgDest)
    {

        this.wrgDest = wrgDest;
        return this;
    }

    /**
     * Get wrgDest
     * 
     * @return wrgDest
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_WRG_DEST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AddressList getWrgDest()
    {
        return wrgDest;
    }

    @JsonProperty(JSON_PROPERTY_WRG_DEST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWrgDest(AddressList wrgDest)
    {
        this.wrgDest = wrgDest;
    }

    public AdditionalMeasurement circums(List<CircumstanceDescription> circums)
    {

        this.circums = circums;
        return this;
    }

    public AdditionalMeasurement addCircumsItem(CircumstanceDescription circumsItem)
    {
        if (this.circums == null)
        {
            this.circums = new ArrayList<>();
        }
        this.circums.add(circumsItem);
        return this;
    }

    /**
     * Get circums
     * 
     * @return circums
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_CIRCUMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<CircumstanceDescription> getCircums()
    {
        return circums;
    }

    @JsonProperty(JSON_PROPERTY_CIRCUMS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCircums(List<CircumstanceDescription> circums)
    {
        this.circums = circums;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        AdditionalMeasurement additionalMeasurement = (AdditionalMeasurement) o;
        return Objects.equals(this.unexpLoc, additionalMeasurement.unexpLoc) && Objects.equals(this.unexpFlowTeps, additionalMeasurement.unexpFlowTeps)
               && Objects.equals(this.unexpWakes, additionalMeasurement.unexpWakes) && Objects.equals(this.ddosAttack, additionalMeasurement.ddosAttack)
               && Objects.equals(this.wrgDest, additionalMeasurement.wrgDest) && Objects.equals(this.circums, additionalMeasurement.circums);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(unexpLoc, unexpFlowTeps, unexpWakes, ddosAttack, wrgDest, circums);
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class AdditionalMeasurement {\n");
        sb.append("    unexpLoc: ").append(toIndentedString(unexpLoc)).append("\n");
        sb.append("    unexpFlowTeps: ").append(toIndentedString(unexpFlowTeps)).append("\n");
        sb.append("    unexpWakes: ").append(toIndentedString(unexpWakes)).append("\n");
        sb.append("    ddosAttack: ").append(toIndentedString(ddosAttack)).append("\n");
        sb.append("    wrgDest: ").append(toIndentedString(wrgDest)).append("\n");
        sb.append("    circums: ").append(toIndentedString(circums)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
