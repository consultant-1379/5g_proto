/*
 * Nudm_SDM
 * Nudm Subscriber Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 2.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29503.nudm.sdm;

import java.util.Objects;
import java.util.Arrays;
import com.ericsson.cnal.openapi.r17.ts29571.commondata.TraceData;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TraceDataResponse
 */
@JsonPropertyOrder({ TraceDataResponse.JSON_PROPERTY_TRACE_DATA, TraceDataResponse.JSON_PROPERTY_SHARED_TRACE_DATA_ID })
public class TraceDataResponse
{
    public static final String JSON_PROPERTY_TRACE_DATA = "traceData";
    private JsonNullable<TraceData> traceData = JsonNullable.<TraceData>undefined();

    public static final String JSON_PROPERTY_SHARED_TRACE_DATA_ID = "sharedTraceDataId";
    private String sharedTraceDataId;

    public TraceDataResponse()
    {
    }

    public TraceDataResponse traceData(TraceData traceData)
    {
        this.traceData = JsonNullable.<TraceData>of(traceData);

        return this;
    }

    /**
     * Get traceData
     * 
     * @return traceData
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public TraceData getTraceData()
    {
        return traceData.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TRACE_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<TraceData> getTraceData_JsonNullable()
    {
        return traceData;
    }

    @JsonProperty(JSON_PROPERTY_TRACE_DATA)
    public void setTraceData_JsonNullable(JsonNullable<TraceData> traceData)
    {
        this.traceData = traceData;
    }

    public void setTraceData(TraceData traceData)
    {
        this.traceData = JsonNullable.<TraceData>of(traceData);
    }

    public TraceDataResponse sharedTraceDataId(String sharedTraceDataId)
    {

        this.sharedTraceDataId = sharedTraceDataId;
        return this;
    }

    /**
     * Get sharedTraceDataId
     * 
     * @return sharedTraceDataId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_SHARED_TRACE_DATA_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSharedTraceDataId()
    {
        return sharedTraceDataId;
    }

    @JsonProperty(JSON_PROPERTY_SHARED_TRACE_DATA_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSharedTraceDataId(String sharedTraceDataId)
    {
        this.sharedTraceDataId = sharedTraceDataId;
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        TraceDataResponse traceDataResponse = (TraceDataResponse) o;
        return equalsNullable(this.traceData, traceDataResponse.traceData) && Objects.equals(this.sharedTraceDataId, traceDataResponse.sharedTraceDataId);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(hashCodeNullable(traceData), sharedTraceDataId);
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class TraceDataResponse {\n");
        sb.append("    traceData: ").append(toIndentedString(traceData)).append("\n");
        sb.append("    sharedTraceDataId: ").append(toIndentedString(sharedTraceDataId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
