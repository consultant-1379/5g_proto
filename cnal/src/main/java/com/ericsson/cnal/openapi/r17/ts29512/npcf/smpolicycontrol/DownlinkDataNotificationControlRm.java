/*
 * Npcf_SMPolicyControl API
 * Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 
 *
 * The version of the OpenAPI document: 1.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ericsson.cnal.openapi.r17.ts29512.npcf.smpolicycontrol;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * This data type is defined in the same way as the
 * DownlinkDataNotificationControl data type, but with the nullable:true
 * property.
 */
@ApiModel(description = "This data type is defined in the same way as the DownlinkDataNotificationControl data type, but with the nullable:true property.")
@JsonPropertyOrder({ DownlinkDataNotificationControlRm.JSON_PROPERTY_NOTIF_CTRL_INDS, DownlinkDataNotificationControlRm.JSON_PROPERTY_TYPES_OF_NOTIF })
public class DownlinkDataNotificationControlRm
{
    public static final String JSON_PROPERTY_NOTIF_CTRL_INDS = "notifCtrlInds";
    private JsonNullable<List<String>> notifCtrlInds = JsonNullable.<List<String>>undefined();

    public static final String JSON_PROPERTY_TYPES_OF_NOTIF = "typesOfNotif";
    private JsonNullable<List<String>> typesOfNotif = JsonNullable.<List<String>>undefined();

    public DownlinkDataNotificationControlRm()
    {
    }

    public DownlinkDataNotificationControlRm notifCtrlInds(List<String> notifCtrlInds)
    {
        this.notifCtrlInds = JsonNullable.<List<String>>of(notifCtrlInds);

        return this;
    }

    public DownlinkDataNotificationControlRm addNotifCtrlIndsItem(String notifCtrlIndsItem)
    {
        if (this.notifCtrlInds == null || !this.notifCtrlInds.isPresent())
        {
            this.notifCtrlInds = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try
        {
            this.notifCtrlInds.get().add(notifCtrlIndsItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Get notifCtrlInds
     * 
     * @return notifCtrlInds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public List<String> getNotifCtrlInds()
    {
        return notifCtrlInds.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_CTRL_INDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<String>> getNotifCtrlInds_JsonNullable()
    {
        return notifCtrlInds;
    }

    @JsonProperty(JSON_PROPERTY_NOTIF_CTRL_INDS)
    public void setNotifCtrlInds_JsonNullable(JsonNullable<List<String>> notifCtrlInds)
    {
        this.notifCtrlInds = notifCtrlInds;
    }

    public void setNotifCtrlInds(List<String> notifCtrlInds)
    {
        this.notifCtrlInds = JsonNullable.<List<String>>of(notifCtrlInds);
    }

    public DownlinkDataNotificationControlRm typesOfNotif(List<String> typesOfNotif)
    {
        this.typesOfNotif = JsonNullable.<List<String>>of(typesOfNotif);

        return this;
    }

    public DownlinkDataNotificationControlRm addTypesOfNotifItem(String typesOfNotifItem)
    {
        if (this.typesOfNotif == null || !this.typesOfNotif.isPresent())
        {
            this.typesOfNotif = JsonNullable.<List<String>>of(new ArrayList<>());
        }
        try
        {
            this.typesOfNotif.get().add(typesOfNotifItem);
        }
        catch (java.util.NoSuchElementException e)
        {
            // this can never happen, as we make sure above that the value is present
        }
        return this;
    }

    /**
     * Get typesOfNotif
     * 
     * @return typesOfNotif
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonIgnore

    public List<String> getTypesOfNotif()
    {
        return typesOfNotif.orElse(null);
    }

    @JsonProperty(JSON_PROPERTY_TYPES_OF_NOTIF)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public JsonNullable<List<String>> getTypesOfNotif_JsonNullable()
    {
        return typesOfNotif;
    }

    @JsonProperty(JSON_PROPERTY_TYPES_OF_NOTIF)
    public void setTypesOfNotif_JsonNullable(JsonNullable<List<String>> typesOfNotif)
    {
        this.typesOfNotif = typesOfNotif;
    }

    public void setTypesOfNotif(List<String> typesOfNotif)
    {
        this.typesOfNotif = JsonNullable.<List<String>>of(typesOfNotif);
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        DownlinkDataNotificationControlRm downlinkDataNotificationControlRm = (DownlinkDataNotificationControlRm) o;
        return equalsNullable(this.notifCtrlInds, downlinkDataNotificationControlRm.notifCtrlInds)
               && equalsNullable(this.typesOfNotif, downlinkDataNotificationControlRm.typesOfNotif);
    }

    private static <T> boolean equalsNullable(JsonNullable<T> a,
                                              JsonNullable<T> b)
    {
        return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(hashCodeNullable(notifCtrlInds), hashCodeNullable(typesOfNotif));
    }

    private static <T> int hashCodeNullable(JsonNullable<T> a)
    {
        if (a == null)
        {
            return 1;
        }
        return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class DownlinkDataNotificationControlRm {\n");
        sb.append("    notifCtrlInds: ").append(toIndentedString(notifCtrlInds)).append("\n");
        sb.append("    typesOfNotif: ").append(toIndentedString(typesOfNotif)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
